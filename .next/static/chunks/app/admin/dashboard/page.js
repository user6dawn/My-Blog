/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/admin/dashboard/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDELL%5CDownloads%5Cblog%20next%20router%5Csrc%5Capp%5Cadmin%5Cdashboard%5Cpage.tsx&server=false!":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDELL%5CDownloads%5Cblog%20next%20router%5Csrc%5Capp%5Cadmin%5Cdashboard%5Cpage.tsx&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/admin/dashboard/page.tsx */ \"(app-pages-browser)/./src/app/admin/dashboard/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNERUxMJTVDRG93bmxvYWRzJTVDYmxvZyUyMG5leHQlMjByb3V0ZXIlNUNzcmMlNUNhcHAlNUNhZG1pbiU1Q2Rhc2hib2FyZCU1Q3BhZ2UudHN4JnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz9jOGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiQzpcXFxcVXNlcnNcXFxcREVMTFxcXFxEb3dubG9hZHNcXFxcYmxvZyBuZXh0IHJvdXRlclxcXFxzcmNcXFxcYXBwXFxcXGFkbWluXFxcXGRhc2hib2FyZFxcXFxwYWdlLnRzeFwiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDELL%5CDownloads%5Cblog%20next%20router%5Csrc%5Capp%5Cadmin%5Cdashboard%5Cpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n\nconst AuthAdminApi = _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (AuthAdminApi); //# sourceMappingURL=AuthAdminApi.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQWRtaW5BcGkuanMiLCJtYXBwaW5ncyI6Ijs7QUFBOEM7QUFDOUMsTUFBTUMsZUFBZUQsdURBQWNBO0FBQ25DLCtEQUFlQyxZQUFZQSxFQUFDLENBQzVCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvQXV0aEFkbWluQXBpLmpzPzIwNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdvVHJ1ZUFkbWluQXBpIGZyb20gJy4vR29UcnVlQWRtaW5BcGknO1xuY29uc3QgQXV0aEFkbWluQXBpID0gR29UcnVlQWRtaW5BcGk7XG5leHBvcnQgZGVmYXVsdCBBdXRoQWRtaW5BcGk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoQWRtaW5BcGkuanMubWFwIl0sIm5hbWVzIjpbIkdvVHJ1ZUFkbWluQXBpIiwiQXV0aEFkbWluQXBpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/AuthClient.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n\nconst AuthClient = _GoTrueClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (AuthClient); //# sourceMappingURL=AuthClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9BdXRoQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7O0FBQTBDO0FBQzFDLE1BQU1DLGFBQWFELHFEQUFZQTtBQUMvQiwrREFBZUMsVUFBVUEsRUFBQyxDQUMxQixzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9hdXRoLWpzL2Rpc3QvbW9kdWxlL0F1dGhDbGllbnQuanM/NGY4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29UcnVlQ2xpZW50IGZyb20gJy4vR29UcnVlQ2xpZW50JztcbmNvbnN0IEF1dGhDbGllbnQgPSBHb1RydWVDbGllbnQ7XG5leHBvcnQgZGVmYXVsdCBBdXRoQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aENsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiR29UcnVlQ2xpZW50IiwiQXV0aENsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueAdminApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\n\n\n\nclass GoTrueAdminApi {\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     * @param scope The logout sope.\n     */ async signOut(jwt) {\n        let scope = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"global\";\n        try {\n            await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/logout?scope=\").concat(scope), {\n                headers: this.headers,\n                jwt,\n                noResolveJson: true\n            });\n            return {\n                data: null,\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */ async inviteUserByEmail(email) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/invite\"), {\n                body: {\n                    email,\n                    data: options.data\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */ async generateLink(params) {\n        try {\n            const { options } = params, rest = __rest(params, [\n                \"options\"\n            ]);\n            const body = Object.assign(Object.assign({}, rest), options);\n            if (\"newEmail\" in rest) {\n                // replace newEmail with new_email in request body\n                body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                delete body[\"newEmail\"];\n            }\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/admin/generate_link\"), {\n                body: body,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._generateLinkResponse,\n                redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        properties: null,\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */ async createUser(attributes) {\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/admin/users\"), {\n                body: attributes,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */ async listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            const pagination = {\n                nextPage: null,\n                lastPage: 0,\n                total: 0\n            };\n            const response = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/admin/users\"), {\n                headers: this.headers,\n                noResolveJson: true,\n                query: {\n                    page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : \"\",\n                    per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : \"\"\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._noResolveJsonResponse\n            });\n            if (response.error) throw response.error;\n            const users = await response.json();\n            const total = (_e = response.headers.get(\"x-total-count\")) !== null && _e !== void 0 ? _e : 0;\n            const links = (_g = (_f = response.headers.get(\"link\")) === null || _f === void 0 ? void 0 : _f.split(\",\")) !== null && _g !== void 0 ? _g : [];\n            if (links.length > 0) {\n                links.forEach((link)=>{\n                    const page = parseInt(link.split(\";\")[0].split(\"=\")[1].substring(0, 1));\n                    const rel = JSON.parse(link.split(\";\")[1].split(\"=\")[1]);\n                    pagination[\"\".concat(rel, \"Page\")] = page;\n                });\n                pagination.total = parseInt(total);\n            }\n            return {\n                data: Object.assign(Object.assign({}, users), pagination),\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        users: []\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */ async getUserById(uid) {\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */ async updateUserById(uid, attributes) {\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"PUT\", \"\".concat(this.url, \"/admin/users/\").concat(uid), {\n                body: attributes,\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema. Soft deletion allows user identification from the hashed user ID but is not reversible.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */ async deleteUser(id) {\n        let shouldSoftDelete = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"DELETE\", \"\".concat(this.url, \"/admin/users/\").concat(id), {\n                headers: this.headers,\n                body: {\n                    should_soft_delete: shouldSoftDelete\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_0__._userResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    async _listFactors(params) {\n        try {\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors\"), {\n                headers: this.headers,\n                xform: (factors)=>{\n                    return {\n                        data: {\n                            factors\n                        },\n                        error: null\n                    };\n                }\n            });\n            return {\n                data,\n                error\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    async _deleteFactor(params) {\n        try {\n            const data = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__._request)(this.fetch, \"DELETE\", \"\".concat(this.url, \"/admin/users/\").concat(params.userId, \"/factors/\").concat(params.id), {\n                headers: this.headers\n            });\n            return {\n                data,\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    constructor({ url = \"\", headers = {}, fetch }){\n        this.url = url;\n        this.headers = headers;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this)\n        };\n    }\n} //# sourceMappingURL=GoTrueAdminApi.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ GoTrueClient; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/local-storage */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\");\n/* harmony import */ var _lib_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/polyfills */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\");\n/* harmony import */ var _lib_version__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n/* harmony import */ var _lib_base64url__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\n\n\n\n\n\n\n\n\n\n(0,_lib_polyfills__WEBPACK_IMPORTED_MODULE_6__.polyfillGlobalThis)(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.GOTRUE_URL,\n    storageKey: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: _lib_constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HEADERS,\n    flowType: \"implicit\",\n    debug: false,\n    hasCustomAuthorizationHeader: false\n};\nasync function lockNoOp(name, acquireTimeout, fn) {\n    return await fn();\n}\nclass GoTrueClient {\n    _debug() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (this.logDebugMessages) {\n            this.logger(\"GoTrueClient@\".concat(this.instanceID, \" (\").concat(_lib_version__WEBPACK_IMPORTED_MODULE_7__.version, \") \").concat(new Date().toISOString()), ...args);\n        }\n        return this;\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */ async initialize() {\n        if (this.initializePromise) {\n            return await this.initializePromise;\n        }\n        this.initializePromise = (async ()=>{\n            return await this._acquireLock(-1, async ()=>{\n                return await this._initialize();\n            });\n        })();\n        return await this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */ async _initialize() {\n        var _a;\n        try {\n            const params = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.parseParametersFromURL)(window.location.href);\n            let callbackUrlType = \"none\";\n            if (this._isImplicitGrantCallback(params)) {\n                callbackUrlType = \"implicit\";\n            } else if (await this._isPKCECallback(params)) {\n                callbackUrlType = \"pkce\";\n            }\n            /**\n             * Attempt to get the session from the URL only if these conditions are fulfilled\n             *\n             * Note: If the URL isn't one of the callback url types (implicit or pkce),\n             * then there could be an existing session so we don't want to prematurely remove it\n             */ if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && this.detectSessionInUrl && callbackUrlType !== \"none\") {\n                const { data, error } = await this._getSessionFromURL(params, callbackUrlType);\n                if (error) {\n                    this._debug(\"#_initialize()\", \"error detecting session from URL\", error);\n                    if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthImplicitGrantRedirectError)(error)) {\n                        const errorCode = (_a = error.details) === null || _a === void 0 ? void 0 : _a.code;\n                        if (errorCode === \"identity_already_exists\" || errorCode === \"identity_not_found\" || errorCode === \"single_identity_not_deletable\") {\n                            return {\n                                error\n                            };\n                        }\n                    }\n                    // failed login attempt via url,\n                    // remove old session as in verifyOtp, signUp and signInWith*\n                    await this._removeSession();\n                    return {\n                        error\n                    };\n                }\n                const { session, redirectType } = data;\n                this._debug(\"#_initialize()\", \"detected session in URL\", session, \"redirect type\", redirectType);\n                await this._saveSession(session);\n                setTimeout(async ()=>{\n                    if (redirectType === \"recovery\") {\n                        await this._notifyAllSubscribers(\"PASSWORD_RECOVERY\", session);\n                    } else {\n                        await this._notifyAllSubscribers(\"SIGNED_IN\", session);\n                    }\n                }, 0);\n                return {\n                    error: null\n                };\n            }\n            // no login attempt via callback url try to recover session from storage\n            await this._recoverAndRefresh();\n            return {\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    error\n                };\n            }\n            return {\n                error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError(\"Unexpected error during initialization\", error)\n            };\n        } finally{\n            await this._handleVisibilityChange();\n            this._debug(\"#_initialize()\", \"end\");\n        }\n    }\n    /**\n     * Creates a new anonymous user.\n     *\n     * @returns A session where the is_anonymous claim in the access token JWT set to true\n     */ async signInAnonymously(credentials) {\n        var _a, _b, _c;\n        try {\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/signup\"), {\n                headers: this.headers,\n                body: {\n                    data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},\n                    gotrue_meta_security: {\n                        captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken\n                    }\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n            });\n            const { data, error } = res;\n            if (error || !data) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error: error\n                };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", session);\n            }\n            return {\n                data: {\n                    user,\n                    session\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */ async signUp(credentials) {\n        var _a, _b, _c;\n        try {\n            let res;\n            if (\"email\" in credentials) {\n                const { email, password, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === \"pkce\") {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/signup\"), {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: {\n                        email,\n                        password,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n                });\n            } else if (\"phone\" in credentials) {\n                const { phone, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/signup\"), {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                        channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : \"sms\",\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        }\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n                });\n            } else {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError(\"You must provide either an email or phone number and a password\");\n            }\n            const { data, error } = res;\n            if (error || !data) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error: error\n                };\n            }\n            const session = data.session;\n            const user = data.user;\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", session);\n            }\n            return {\n                data: {\n                    user,\n                    session\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */ async signInWithPassword(credentials) {\n        try {\n            let res;\n            if (\"email\" in credentials) {\n                const { email, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/token?grant_type=password\"), {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        password,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        }\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword\n                });\n            } else if (\"phone\" in credentials) {\n                const { phone, password, options } = credentials;\n                res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/token?grant_type=password\"), {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        password,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        }\n                    },\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponsePassword\n                });\n            } else {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError(\"You must provide either an email or phone number and a password\");\n            }\n            const { data, error } = res;\n            if (error) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            } else if (!data || !data.session || !data.user) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError()\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", data.session);\n            }\n            return {\n                data: Object.assign({\n                    user: data.user,\n                    session: data.session\n                }, data.weak_password ? {\n                    weakPassword: data.weak_password\n                } : null),\n                error\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */ async signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return await this._handleProviderSignIn(credentials.provider, {\n            redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */ async exchangeCodeForSession(authCode) {\n        await this.initializePromise;\n        return this._acquireLock(-1, async ()=>{\n            return this._exchangeCodeForSession(authCode);\n        });\n    }\n    async _exchangeCodeForSession(authCode) {\n        const storageItem = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n        const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : \"\").split(\"/\");\n        try {\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/token?grant_type=pkce\"), {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n            });\n            await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            if (error) {\n                throw error;\n            }\n            if (!data || !data.session || !data.user) {\n                return {\n                    data: {\n                        user: null,\n                        session: null,\n                        redirectType: null\n                    },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError()\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", data.session);\n            }\n            return {\n                data: Object.assign(Object.assign({}, data), {\n                    redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null\n                }),\n                error\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null,\n                        redirectType: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Allows signing in with an OIDC ID token. The authentication provider used\n     * should be enabled and configured.\n     */ async signInWithIdToken(credentials) {\n        try {\n            const { options, provider, token, access_token, nonce } = credentials;\n            const res = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/token?grant_type=id_token\"), {\n                headers: this.headers,\n                body: {\n                    provider,\n                    id_token: token,\n                    access_token,\n                    nonce,\n                    gotrue_meta_security: {\n                        captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                    }\n                },\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n            });\n            const { data, error } = res;\n            if (error) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            } else if (!data || !data.session || !data.user) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidTokenResponseError()\n                };\n            }\n            if (data.session) {\n                await this._saveSession(data.session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", data.session);\n            }\n            return {\n                data,\n                error\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */ async signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        try {\n            if (\"email\" in credentials) {\n                const { email, options } = credentials;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === \"pkce\") {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/otp\"), {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                        create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        },\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                });\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            if (\"phone\" in credentials) {\n                const { phone, options } = credentials;\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/otp\"), {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                        create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        },\n                        channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : \"sms\"\n                    }\n                });\n                return {\n                    data: {\n                        user: null,\n                        session: null,\n                        messageId: data === null || data === void 0 ? void 0 : data.message_id\n                    },\n                    error\n                };\n            }\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError(\"You must provide either an email or phone number.\");\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.\n     */ async verifyOtp(params) {\n        var _a, _b;\n        try {\n            let redirectTo = undefined;\n            let captchaToken = undefined;\n            if (\"options\" in params) {\n                redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;\n                captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;\n            }\n            const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/verify\"), {\n                headers: this.headers,\n                body: Object.assign(Object.assign({}, params), {\n                    gotrue_meta_security: {\n                        captcha_token: captchaToken\n                    }\n                }),\n                redirectTo,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n            });\n            if (error) {\n                throw error;\n            }\n            if (!data) {\n                throw new Error(\"An error occurred on token verification.\");\n            }\n            const session = data.session;\n            const user = data.user;\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(params.type == \"recovery\" ? \"PASSWORD_RECOVERY\" : \"SIGNED_IN\", session);\n            }\n            return {\n                data: {\n                    user,\n                    session\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */ async signInWithSSO(params) {\n        var _a, _b, _c;\n        try {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === \"pkce\") {\n                ;\n                [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n            }\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/sso\"), {\n                body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, \"providerId\" in params ? {\n                    provider_id: params.providerId\n                } : null), \"domain\" in params ? {\n                    domain: params.domain\n                } : null), {\n                    redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined\n                }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? {\n                    gotrue_meta_security: {\n                        captcha_token: params.options.captchaToken\n                    }\n                } : null), {\n                    skip_http_redirect: true,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod\n                }),\n                headers: this.headers,\n                xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._ssoResponse\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */ async reauthenticate() {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async ()=>{\n            return await this._reauthenticate();\n        });\n    }\n    async _reauthenticate() {\n        try {\n            return await this._useSession(async (result)=>{\n                const { data: { session }, error: sessionError } = result;\n                if (sessionError) throw sessionError;\n                if (!session) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/reauthenticate\"), {\n                    headers: this.headers,\n                    jwt: session.access_token\n                });\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */ async resend(credentials) {\n        try {\n            const endpoint = \"\".concat(this.url, \"/resend\");\n            if (\"email\" in credentials) {\n                const { email, type, options } = credentials;\n                const { error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", endpoint, {\n                    headers: this.headers,\n                    body: {\n                        email,\n                        type,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        }\n                    },\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo\n                });\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            } else if (\"phone\" in credentials) {\n                const { phone, type, options } = credentials;\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", endpoint, {\n                    headers: this.headers,\n                    body: {\n                        phone,\n                        type,\n                        gotrue_meta_security: {\n                            captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken\n                        }\n                    }\n                });\n                return {\n                    data: {\n                        user: null,\n                        session: null,\n                        messageId: data === null || data === void 0 ? void 0 : data.message_id\n                    },\n                    error\n                };\n            }\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidCredentialsError(\"You must provide either an email or phone number and a type\");\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     *\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     *\n     * **IMPORTANT:** This method loads values directly from the storage attached\n     * to the client. If that storage is based on request cookies for example,\n     * the values in it may not be authentic and therefore it's strongly advised\n     * against using this method and its results in such circumstances. A warning\n     * will be emitted if this is detected. Use {@link #getUser()} instead.\n     */ async getSession() {\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async ()=>{\n            return this._useSession(async (result)=>{\n                return result;\n            });\n        });\n        return result;\n    }\n    /**\n     * Acquires a global lock based on the storage key.\n     */ async _acquireLock(acquireTimeout, fn) {\n        this._debug(\"#_acquireLock\", \"begin\", acquireTimeout);\n        try {\n            if (this.lockAcquired) {\n                const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();\n                const result = (async ()=>{\n                    await last;\n                    return await fn();\n                })();\n                this.pendingInLock.push((async ()=>{\n                    try {\n                        await result;\n                    } catch (e) {\n                    // we just care if it finished\n                    }\n                })());\n                return result;\n            }\n            return await this.lock(\"lock:\".concat(this.storageKey), acquireTimeout, async ()=>{\n                this._debug(\"#_acquireLock\", \"lock acquired for storage key\", this.storageKey);\n                try {\n                    this.lockAcquired = true;\n                    const result = fn();\n                    this.pendingInLock.push((async ()=>{\n                        try {\n                            await result;\n                        } catch (e) {\n                        // we just care if it finished\n                        }\n                    })());\n                    await result;\n                    // keep draining the queue until there's nothing to wait on\n                    while(this.pendingInLock.length){\n                        const waitOn = [\n                            ...this.pendingInLock\n                        ];\n                        await Promise.all(waitOn);\n                        this.pendingInLock.splice(0, waitOn.length);\n                    }\n                    return await result;\n                } finally{\n                    this._debug(\"#_acquireLock\", \"lock released for storage key\", this.storageKey);\n                    this.lockAcquired = false;\n                }\n            });\n        } finally{\n            this._debug(\"#_acquireLock\", \"end\");\n        }\n    }\n    /**\n     * Use instead of {@link #getSession} inside the library. It is\n     * semantically usually what you want, as getting a session involves some\n     * processing afterwards that requires only one client operating on the\n     * session at once across multiple tabs or processes.\n     */ async _useSession(fn) {\n        this._debug(\"#_useSession\", \"begin\");\n        try {\n            // the use of __loadSession here is the only correct use of the function!\n            const result = await this.__loadSession();\n            return await fn(result);\n        } finally{\n            this._debug(\"#_useSession\", \"end\");\n        }\n    }\n    /**\n     * NEVER USE DIRECTLY!\n     *\n     * Always use {@link #_useSession}.\n     */ async __loadSession() {\n        this._debug(\"#__loadSession()\", \"begin\");\n        if (!this.lockAcquired) {\n            this._debug(\"#__loadSession()\", \"used outside of an acquired lock!\", new Error().stack);\n        }\n        try {\n            let currentSession = null;\n            const maybeSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\n            this._debug(\"#getSession()\", \"session from storage\", maybeSession);\n            if (maybeSession !== null) {\n                if (this._isValidSession(maybeSession)) {\n                    currentSession = maybeSession;\n                } else {\n                    this._debug(\"#getSession()\", \"session from storage is not valid\");\n                    await this._removeSession();\n                }\n            }\n            if (!currentSession) {\n                return {\n                    data: {\n                        session: null\n                    },\n                    error: null\n                };\n            }\n            // A session is considered expired before the access token _actually_\n            // expires. When the autoRefreshToken option is off (or when the tab is\n            // in the background), very eager users of getSession() -- like\n            // realtime-js -- might send a valid JWT which will expire by the time it\n            // reaches the server.\n            const hasExpired = currentSession.expires_at ? currentSession.expires_at * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS : false;\n            this._debug(\"#__loadSession()\", \"session has\".concat(hasExpired ? \"\" : \" not\", \" expired\"), \"expires_at\", currentSession.expires_at);\n            if (!hasExpired) {\n                if (this.storage.isServer) {\n                    let suppressWarning = this.suppressGetSessionWarning;\n                    const proxySession = new Proxy(currentSession, {\n                        get: (target, prop, receiver)=>{\n                            if (!suppressWarning && prop === \"user\") {\n                                // only show warning when the user object is being accessed from the server\n                                console.warn(\"Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and may not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.\");\n                                suppressWarning = true; // keeps this proxy instance from logging additional warnings\n                                this.suppressGetSessionWarning = true; // keeps this client's future proxy instances from warning\n                            }\n                            return Reflect.get(target, prop, receiver);\n                        }\n                    });\n                    currentSession = proxySession;\n                }\n                return {\n                    data: {\n                        session: currentSession\n                    },\n                    error: null\n                };\n            }\n            const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return {\n                    data: {\n                        session: null\n                    },\n                    error\n                };\n            }\n            return {\n                data: {\n                    session\n                },\n                error: null\n            };\n        } finally{\n            this._debug(\"#__loadSession()\", \"end\");\n        }\n    }\n    /**\n     * Gets the current user details if there is an existing session. This method\n     * performs a network request to the Supabase Auth server, so the returned\n     * value is authentic and can be used to base authorization rules on.\n     *\n     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.\n     */ async getUser(jwt) {\n        if (jwt) {\n            return await this._getUser(jwt);\n        }\n        await this.initializePromise;\n        const result = await this._acquireLock(-1, async ()=>{\n            return await this._getUser();\n        });\n        return result;\n    }\n    async _getUser(jwt) {\n        try {\n            if (jwt) {\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/user\"), {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse\n                });\n            }\n            return await this._useSession(async (result)=>{\n                var _a, _b, _c;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                // returns an error if there is no access_token or custom authorization header\n                if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {\n                    return {\n                        data: {\n                            user: null\n                        },\n                        error: new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError()\n                    };\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/user\"), {\n                    headers: this.headers,\n                    jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : undefined,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse\n                });\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthSessionMissingError)(error)) {\n                    // JWT contains a `session_id` which does not correspond to an active\n                    // session in the database, indicating the user is signed out.\n                    await this._removeSession();\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n                }\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Updates user data for a logged in user.\n     */ async updateUser(attributes) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        await this.initializePromise;\n        return await this._acquireLock(-1, async ()=>{\n            return await this._updateUser(attributes, options);\n        });\n    }\n    async _updateUser(attributes) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        try {\n            return await this._useSession(async (result)=>{\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                let codeChallenge = null;\n                let codeChallengeMethod = null;\n                if (this.flowType === \"pkce\" && attributes.email != null) {\n                    ;\n                    [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n                }\n                const { data, error: userError } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"PUT\", \"\".concat(this.url, \"/user\"), {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: Object.assign(Object.assign({}, attributes), {\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod\n                    }),\n                    jwt: session.access_token,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._userResponse\n                });\n                if (userError) throw userError;\n                session.user = data.user;\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(\"USER_UPDATED\", session);\n                return {\n                    data: {\n                        user: session.user\n                    },\n                    error: null\n                };\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */ async setSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async ()=>{\n            return await this._setSession(currentSession);\n        });\n    }\n    async _setSession(currentSession) {\n        try {\n            if (!currentSession.access_token || !currentSession.refresh_token) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n            }\n            const timeNow = Date.now() / 1000;\n            let expiresAt = timeNow;\n            let hasExpired = true;\n            let session = null;\n            const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(currentSession.access_token);\n            if (payload.exp) {\n                expiresAt = payload.exp;\n                hasExpired = expiresAt <= timeNow;\n            }\n            if (hasExpired) {\n                const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return {\n                        data: {\n                            user: null,\n                            session: null\n                        },\n                        error: error\n                    };\n                }\n                if (!refreshedSession) {\n                    return {\n                        data: {\n                            user: null,\n                            session: null\n                        },\n                        error: null\n                    };\n                }\n                session = refreshedSession;\n            } else {\n                const { data, error } = await this._getUser(currentSession.access_token);\n                if (error) {\n                    throw error;\n                }\n                session = {\n                    access_token: currentSession.access_token,\n                    refresh_token: currentSession.refresh_token,\n                    user: data.user,\n                    token_type: \"bearer\",\n                    expires_in: expiresAt - timeNow,\n                    expires_at: expiresAt\n                };\n                await this._saveSession(session);\n                await this._notifyAllSubscribers(\"SIGNED_IN\", session);\n            }\n            return {\n                data: {\n                    user: session.user,\n                    session\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        session: null,\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */ async refreshSession(currentSession) {\n        await this.initializePromise;\n        return await this._acquireLock(-1, async ()=>{\n            return await this._refreshSession(currentSession);\n        });\n    }\n    async _refreshSession(currentSession) {\n        try {\n            return await this._useSession(async (result)=>{\n                var _a;\n                if (!currentSession) {\n                    const { data, error } = result;\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n                }\n                const { session, error } = await this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return {\n                        data: {\n                            user: null,\n                            session: null\n                        },\n                        error: error\n                    };\n                }\n                if (!session) {\n                    return {\n                        data: {\n                            user: null,\n                            session: null\n                        },\n                        error: null\n                    };\n                }\n                return {\n                    data: {\n                        user: session.user,\n                        session\n                    },\n                    error: null\n                };\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        user: null,\n                        session: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets the session data from a URL string\n     */ async _getSessionFromURL(params, callbackUrlType) {\n        try {\n            if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(\"No browser detected.\");\n            // If there's an error in the URL, it doesn't matter what flow it is, we just return the error.\n            if (params.error || params.error_description || params.error_code) {\n                // The error class returned implies that the redirect is from an implicit grant flow\n                // but it could also be from a redirect error from a PKCE flow.\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(params.error_description || \"Error in URL with unspecified error_description\", {\n                    error: params.error || \"unspecified_error\",\n                    code: params.error_code || \"unspecified_code\"\n                });\n            }\n            // Checks for mismatches between the flowType initialised in the client and the URL parameters\n            switch(callbackUrlType){\n                case \"implicit\":\n                    if (this.flowType === \"pkce\") {\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError(\"Not a valid PKCE flow url.\");\n                    }\n                    break;\n                case \"pkce\":\n                    if (this.flowType === \"implicit\") {\n                        throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(\"Not a valid implicit grant flow url.\");\n                    }\n                    break;\n                default:\n            }\n            // Since this is a redirect for PKCE, we attempt to retrieve the code from the URL for the code exchange\n            if (callbackUrlType === \"pkce\") {\n                this._debug(\"#_initialize()\", \"begin\", \"is PKCE flow\", true);\n                if (!params.code) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthPKCEGrantCodeExchangeError(\"No code detected.\");\n                const { data, error } = await this._exchangeCodeForSession(params.code);\n                if (error) throw error;\n                const url = new URL(window.location.href);\n                url.searchParams.delete(\"code\");\n                window.history.replaceState(window.history.state, \"\", url.toString());\n                return {\n                    data: {\n                        session: data.session,\n                        redirectType: null\n                    },\n                    error: null\n                };\n            }\n            const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type } = params;\n            if (!access_token || !expires_in || !refresh_token || !token_type) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthImplicitGrantRedirectError(\"No session defined in URL\");\n            }\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = parseInt(expires_in);\n            let expiresAt = timeNow + expiresIn;\n            if (expires_at) {\n                expiresAt = parseInt(expires_at);\n            }\n            const actuallyExpiresIn = expiresAt - timeNow;\n            if (actuallyExpiresIn * 1000 <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS) {\n                console.warn(\"@supabase/gotrue-js: Session as retrieved from URL expires in \".concat(actuallyExpiresIn, \"s, should have been closer to \").concat(expiresIn, \"s\"));\n            }\n            const issuedAt = expiresAt - expiresIn;\n            if (timeNow - issuedAt >= 120) {\n                console.warn(\"@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale\", issuedAt, expiresAt, timeNow);\n            } else if (timeNow - issuedAt < 0) {\n                console.warn(\"@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clock for skew\", issuedAt, expiresAt, timeNow);\n            }\n            const { data, error } = await this._getUser(access_token);\n            if (error) throw error;\n            const session = {\n                provider_token,\n                provider_refresh_token,\n                access_token,\n                expires_in: expiresIn,\n                expires_at: expiresAt,\n                refresh_token,\n                token_type,\n                user: data.user\n            };\n            // Remove tokens from URL\n            window.location.hash = \"\";\n            this._debug(\"#_getSessionFromURL()\", \"clearing window.location.hash\");\n            return {\n                data: {\n                    session,\n                    redirectType: params.type\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        session: null,\n                        redirectType: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */ _isImplicitGrantCallback(params) {\n        return Boolean(params.access_token || params.error_description);\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */ async _isPKCECallback(params) {\n        const currentStorageContent = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n        return !!(params.code && currentStorageContent);\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     *\n     * If using `others` scope, no `SIGNED_OUT` event is fired!\n     */ async signOut() {\n        let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {\n            scope: \"global\"\n        };\n        await this.initializePromise;\n        return await this._acquireLock(-1, async ()=>{\n            return await this._signOut(options);\n        });\n    }\n    async _signOut() {\n        let { scope } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {\n            scope: \"global\"\n        };\n        return await this._useSession(async (result)=>{\n            var _a;\n            const { data, error: sessionError } = result;\n            if (sessionError) {\n                return {\n                    error: sessionError\n                };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = await this.admin.signOut(accessToken, scope);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthApiError)(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {\n                        return {\n                            error\n                        };\n                    }\n                }\n            }\n            if (scope !== \"others\") {\n                await this._removeSession();\n                await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, \"\".concat(this.storageKey, \"-code-verifier\"));\n            }\n            return {\n                error: null\n            };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */ onAuthStateChange(callback) {\n        const id = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.uuid)();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: ()=>{\n                this._debug(\"#unsubscribe()\", \"state change callback with id removed\", id);\n                this.stateChangeEmitters.delete(id);\n            }\n        };\n        this._debug(\"#onAuthStateChange()\", \"registered callback with id\", id);\n        this.stateChangeEmitters.set(id, subscription);\n        (async ()=>{\n            await this.initializePromise;\n            await this._acquireLock(-1, async ()=>{\n                this._emitInitialSession(id);\n            });\n        })();\n        return {\n            data: {\n                subscription\n            }\n        };\n    }\n    async _emitInitialSession(id) {\n        return await this._useSession(async (result)=>{\n            var _a, _b;\n            try {\n                const { data: { session }, error } = result;\n                if (error) throw error;\n                await ((_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback(\"INITIAL_SESSION\", session));\n                this._debug(\"INITIAL_SESSION\", \"callback id\", id, \"session\", session);\n            } catch (err) {\n                await ((_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback(\"INITIAL_SESSION\", null));\n                this._debug(\"INITIAL_SESSION\", \"callback id\", id, \"error\", err);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address. This method supports the PKCE flow.\n     *\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */ async resetPasswordForEmail(email) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        let codeChallenge = null;\n        let codeChallengeMethod = null;\n        if (this.flowType === \"pkce\") {\n            ;\n            [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey, true // isPasswordRecovery\n            );\n        }\n        try {\n            return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/recover\"), {\n                body: {\n                    email,\n                    code_challenge: codeChallenge,\n                    code_challenge_method: codeChallengeMethod,\n                    gotrue_meta_security: {\n                        captcha_token: options.captchaToken\n                    }\n                },\n                headers: this.headers,\n                redirectTo: options.redirectTo\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Gets all the identities linked to a user.\n     */ async getUserIdentities() {\n        var _a;\n        try {\n            const { data, error } = await this.getUser();\n            if (error) throw error;\n            return {\n                data: {\n                    identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : []\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Links an oauth identity to an existing user.\n     * This method supports the PKCE flow.\n     */ async linkIdentity(credentials) {\n        var _a;\n        try {\n            const { data, error } = await this._useSession(async (result)=>{\n                var _a, _b, _c, _d, _e;\n                const { data, error } = result;\n                if (error) throw error;\n                const url = await this._getUrlForProvider(\"\".concat(this.url, \"/user/identities/authorize\"), credentials.provider, {\n                    redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                    scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                    queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                    skipBrowserRedirect: true\n                });\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"GET\", url, {\n                    headers: this.headers,\n                    jwt: (_e = (_d = data.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : undefined\n                });\n            });\n            if (error) throw error;\n            if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {\n                window.location.assign(data === null || data === void 0 ? void 0 : data.url);\n            }\n            return {\n                data: {\n                    provider: credentials.provider,\n                    url: data === null || data === void 0 ? void 0 : data.url\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        provider: credentials.provider,\n                        url: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.\n     */ async unlinkIdentity(identity) {\n        try {\n            return await this._useSession(async (result)=>{\n                var _a, _b;\n                const { data, error } = result;\n                if (error) {\n                    throw error;\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"DELETE\", \"\".concat(this.url, \"/user/identities/\").concat(identity.identity_id), {\n                    headers: this.headers,\n                    jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined\n                });\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */ async _refreshAccessToken(refreshToken) {\n        const debugName = \"#_refreshAccessToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n        this._debug(debugName, \"begin\");\n        try {\n            const startedAt = Date.now();\n            // will attempt to refresh the token with exponential backoff\n            return await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.retryable)(async (attempt)=>{\n                if (attempt > 0) {\n                    await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.sleep)(200 * Math.pow(2, attempt - 1)); // 200, 400, 800, ...\n                }\n                this._debug(debugName, \"refreshing attempt\", attempt);\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/token?grant_type=refresh_token\"), {\n                    body: {\n                        refresh_token: refreshToken\n                    },\n                    headers: this.headers,\n                    xform: _lib_fetch__WEBPACK_IMPORTED_MODULE_3__._sessionResponse\n                });\n            }, (attempt, error)=>{\n                const nextBackOffInterval = 200 * Math.pow(2, attempt);\n                return error && (0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error) && // retryable only if the request can be sent before the backoff overflows the tick duration\n                Date.now() + nextBackOffInterval - startedAt < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS;\n            });\n        } catch (error) {\n            this._debug(debugName, \"error\", error);\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: {\n                        session: null,\n                        user: null\n                    },\n                    error\n                };\n            }\n            throw error;\n        } finally{\n            this._debug(debugName, \"end\");\n        }\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === \"object\" && maybeSession !== null && \"access_token\" in maybeSession && \"refresh_token\" in maybeSession && \"expires_at\" in maybeSession;\n        return isValidSession;\n    }\n    async _handleProviderSignIn(provider, options) {\n        const url = await this._getUrlForProvider(\"\".concat(this.url, \"/authorize\"), provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams\n        });\n        this._debug(\"#_handleProviderSignIn()\", \"provider\", provider, \"options\", options, \"url\", url);\n        // try to open on the browser\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return {\n            data: {\n                provider,\n                url\n            },\n            error: null\n        };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes the token\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */ async _recoverAndRefresh() {\n        var _a;\n        const debugName = \"#_recoverAndRefresh()\";\n        this._debug(debugName, \"begin\");\n        try {\n            const currentSession = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getItemAsync)(this.storage, this.storageKey);\n            this._debug(debugName, \"session from storage\", currentSession);\n            if (!this._isValidSession(currentSession)) {\n                this._debug(debugName, \"session is not valid\");\n                if (currentSession !== null) {\n                    await this._removeSession();\n                }\n                return;\n            }\n            const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) * 1000 - Date.now() < _lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS;\n            this._debug(debugName, \"session has\".concat(expiresWithMargin ? \"\" : \" not\", \" expired with margin of \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.EXPIRY_MARGIN_MS, \"s\"));\n            if (expiresWithMargin) {\n                if (this.autoRefreshToken && currentSession.refresh_token) {\n                    const { error } = await this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        console.error(error);\n                        if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\n                            this._debug(debugName, \"refresh failed with a non-retryable error, removing the session\", error);\n                            await this._removeSession();\n                        }\n                    }\n                }\n            } else {\n                // no need to persist currentSession again, as we just loaded it from\n                // local storage; persisting it again may overwrite a value saved by\n                // another client with access to the same local storage\n                await this._notifyAllSubscribers(\"SIGNED_IN\", currentSession);\n            }\n        } catch (err) {\n            this._debug(debugName, \"error\", err);\n            console.error(err);\n            return;\n        } finally{\n            this._debug(debugName, \"end\");\n        }\n    }\n    async _callRefreshToken(refreshToken) {\n        var _a, _b;\n        if (!refreshToken) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n        }\n        // refreshing is already in progress\n        if (this.refreshingDeferred) {\n            return this.refreshingDeferred.promise;\n        }\n        const debugName = \"#_callRefreshToken(\".concat(refreshToken.substring(0, 5), \"...)\");\n        this._debug(debugName, \"begin\");\n        try {\n            this.refreshingDeferred = new _lib_helpers__WEBPACK_IMPORTED_MODULE_4__.Deferred();\n            const { data, error } = await this._refreshAccessToken(refreshToken);\n            if (error) throw error;\n            if (!data.session) throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n            await this._saveSession(data.session);\n            await this._notifyAllSubscribers(\"TOKEN_REFRESHED\", data.session);\n            const result = {\n                session: data.session,\n                error: null\n            };\n            this.refreshingDeferred.resolve(result);\n            return result;\n        } catch (error) {\n            this._debug(debugName, \"error\", error);\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                const result = {\n                    session: null,\n                    error\n                };\n                if (!(0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthRetryableFetchError)(error)) {\n                    await this._removeSession();\n                }\n                (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                return result;\n            }\n            (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n            throw error;\n        } finally{\n            this.refreshingDeferred = null;\n            this._debug(debugName, \"end\");\n        }\n    }\n    async _notifyAllSubscribers(event, session) {\n        let broadcast = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;\n        const debugName = \"#_notifyAllSubscribers(\".concat(event, \")\");\n        this._debug(debugName, \"begin\", session, \"broadcast = \".concat(broadcast));\n        try {\n            if (this.broadcastChannel && broadcast) {\n                this.broadcastChannel.postMessage({\n                    event,\n                    session\n                });\n            }\n            const errors = [];\n            const promises = Array.from(this.stateChangeEmitters.values()).map(async (x)=>{\n                try {\n                    await x.callback(event, session);\n                } catch (e) {\n                    errors.push(e);\n                }\n            });\n            await Promise.all(promises);\n            if (errors.length > 0) {\n                for(let i = 0; i < errors.length; i += 1){\n                    console.error(errors[i]);\n                }\n                throw errors[0];\n            }\n        } finally{\n            this._debug(debugName, \"end\");\n        }\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */ async _saveSession(session) {\n        this._debug(\"#_saveSession()\", session);\n        // _saveSession is always called whenever a new session has been acquired\n        // so we can safely suppress the warning returned by future getSession calls\n        this.suppressGetSessionWarning = true;\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.setItemAsync)(this.storage, this.storageKey, session);\n    }\n    async _removeSession() {\n        this._debug(\"#_removeSession()\");\n        await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.removeItemAsync)(this.storage, this.storageKey);\n        await this._notifyAllSubscribers(\"SIGNED_OUT\", null);\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */ _removeVisibilityChangedCallback() {\n        this._debug(\"#_removeVisibilityChangedCallback()\");\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener(\"visibilitychange\", callback);\n            }\n        } catch (e) {\n            console.error(\"removing visibilitychange callback failed\", e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */ async _startAutoRefresh() {\n        await this._stopAutoRefresh();\n        this._debug(\"#_startAutoRefresh()\");\n        const ticker = setInterval(()=>this._autoRefreshTokenTick(), _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\n        this.autoRefreshTicker = ticker;\n        if (ticker && typeof ticker === \"object\" && typeof ticker.unref === \"function\") {\n            // ticker is a NodeJS Timeout object that has an `unref` method\n            // https://nodejs.org/api/timers.html#timeoutunref\n            // When auto refresh is used in NodeJS (like for testing) the\n            // `setInterval` is preventing the process from being marked as\n            // finished and tests run endlessly. This can be prevented by calling\n            // `unref()` on the returned object.\n            ticker.unref();\n        // @ts-expect-error TS has no context of Deno\n        } else if (typeof Deno !== \"undefined\" && typeof Deno.unrefTimer === \"function\") {\n            // similar like for NodeJS, but with the Deno API\n            // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n            // @ts-expect-error TS has no context of Deno\n            Deno.unrefTimer(ticker);\n        }\n        // run the tick immediately, but in the next pass of the event loop so that\n        // #_initialize can be allowed to complete without recursively waiting on\n        // itself\n        setTimeout(async ()=>{\n            await this.initializePromise;\n            await this._autoRefreshTokenTick();\n        }, 0);\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */ async _stopAutoRefresh() {\n        this._debug(\"#_stopAutoRefresh()\");\n        const ticker = this.autoRefreshTicker;\n        this.autoRefreshTicker = null;\n        if (ticker) {\n            clearInterval(ticker);\n        }\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */ async startAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._startAutoRefresh();\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */ async stopAutoRefresh() {\n        this._removeVisibilityChangedCallback();\n        await this._stopAutoRefresh();\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */ async _autoRefreshTokenTick() {\n        this._debug(\"#_autoRefreshTokenTick()\", \"begin\");\n        try {\n            await this._acquireLock(0, async ()=>{\n                try {\n                    const now = Date.now();\n                    try {\n                        return await this._useSession(async (result)=>{\n                            const { data: { session } } = result;\n                            if (!session || !session.refresh_token || !session.expires_at) {\n                                this._debug(\"#_autoRefreshTokenTick()\", \"no session\");\n                                return;\n                            }\n                            // session will expire in this many ticks (or has already expired if <= 0)\n                            const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS);\n                            this._debug(\"#_autoRefreshTokenTick()\", \"access token expires in \".concat(expiresInTicks, \" ticks, a tick lasts \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_DURATION_MS, \"ms, refresh threshold is \").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD, \" ticks\"));\n                            if (expiresInTicks <= _lib_constants__WEBPACK_IMPORTED_MODULE_1__.AUTO_REFRESH_TICK_THRESHOLD) {\n                                await this._callRefreshToken(session.refresh_token);\n                            }\n                        });\n                    } catch (e) {\n                        console.error(\"Auto refresh tick failed with error. This is likely a transient error.\", e);\n                    }\n                } finally{\n                    this._debug(\"#_autoRefreshTokenTick()\", \"end\");\n                }\n            });\n        } catch (e) {\n            if (e.isAcquireTimeout || e instanceof _lib_locks__WEBPACK_IMPORTED_MODULE_8__.LockAcquireTimeoutError) {\n                this._debug(\"auto refresh token tick lock not available\");\n            } else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */ async _handleVisibilityChange() {\n        this._debug(\"#_handleVisibilityChange()\");\n        if (!(0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            if (this.autoRefreshToken) {\n                // in non-browser environments the refresh token ticker runs always\n                this.startAutoRefresh();\n            }\n            return false;\n        }\n        try {\n            this.visibilityChangedCallback = async ()=>await this._onVisibilityChanged(false);\n            window === null || window === void 0 ? void 0 : window.addEventListener(\"visibilitychange\", this.visibilityChangedCallback);\n            // now immediately call the visbility changed callback to setup with the\n            // current visbility state\n            await this._onVisibilityChanged(true); // initial call\n        } catch (error) {\n            console.error(\"_handleVisibilityChange\", error);\n        }\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */ async _onVisibilityChanged(calledFromInitialize) {\n        const methodName = \"#_onVisibilityChanged(\".concat(calledFromInitialize, \")\");\n        this._debug(methodName, \"visibilityState\", document.visibilityState);\n        if (document.visibilityState === \"visible\") {\n            if (this.autoRefreshToken) {\n                // in browser environments the refresh token ticker runs only on focused tabs\n                // which prevents race conditions\n                this._startAutoRefresh();\n            }\n            if (!calledFromInitialize) {\n                // called when the visibility has changed, i.e. the browser\n                // transitioned from hidden -> visible so we need to see if the session\n                // should be recovered immediately... but to do that we need to acquire\n                // the lock first asynchronously\n                await this.initializePromise;\n                await this._acquireLock(-1, async ()=>{\n                    if (document.visibilityState !== \"visible\") {\n                        this._debug(methodName, \"acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting\");\n                        // visibility has changed while waiting for the lock, abort\n                        return;\n                    }\n                    // recover the session\n                    await this._recoverAndRefresh();\n                });\n            }\n        } else if (document.visibilityState === \"hidden\") {\n            if (this.autoRefreshToken) {\n                this._stopAutoRefresh();\n            }\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */ async _getUrlForProvider(url, provider, options) {\n        const urlParams = [\n            \"provider=\".concat(encodeURIComponent(provider))\n        ];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(\"redirect_to=\".concat(encodeURIComponent(options.redirectTo)));\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(\"scopes=\".concat(encodeURIComponent(options.scopes)));\n        }\n        if (this.flowType === \"pkce\") {\n            const [codeChallenge, codeChallengeMethod] = await (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getCodeChallengeAndMethod)(this.storage, this.storageKey);\n            const flowParams = new URLSearchParams({\n                code_challenge: \"\".concat(encodeURIComponent(codeChallenge)),\n                code_challenge_method: \"\".concat(encodeURIComponent(codeChallengeMethod))\n            });\n            urlParams.push(flowParams.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {\n            urlParams.push(\"skip_http_redirect=\".concat(options.skipBrowserRedirect));\n        }\n        return \"\".concat(url, \"?\").concat(urlParams.join(\"&\"));\n    }\n    async _unenroll(params) {\n        try {\n            return await this._useSession(async (result)=>{\n                var _a;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return {\n                        data: null,\n                        error: sessionError\n                    };\n                }\n                return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"DELETE\", \"\".concat(this.url, \"/factors/\").concat(params.factorId), {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    async _enroll(params) {\n        try {\n            return await this._useSession(async (result)=>{\n                var _a, _b;\n                const { data: sessionData, error: sessionError } = result;\n                if (sessionError) {\n                    return {\n                        data: null,\n                        error: sessionError\n                    };\n                }\n                const body = Object.assign({\n                    friendly_name: params.friendlyName,\n                    factor_type: params.factorType\n                }, params.factorType === \"phone\" ? {\n                    phone: params.phone\n                } : {\n                    issuer: params.issuer\n                });\n                const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/factors\"), {\n                    body,\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                });\n                if (error) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                if (params.factorType === \"totp\" && ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code)) {\n                    data.totp.qr_code = \"data:image/svg+xml;utf-8,\".concat(data.totp.qr_code);\n                }\n                return {\n                    data,\n                    error: null\n                };\n            });\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */ async _verify(params) {\n        return this._acquireLock(-1, async ()=>{\n            try {\n                return await this._useSession(async (result)=>{\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return {\n                            data: null,\n                            error: sessionError\n                        };\n                    }\n                    const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/factors/\").concat(params.factorId, \"/verify\"), {\n                        body: {\n                            code: params.code,\n                            challenge_id: params.challengeId\n                        },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    });\n                    if (error) {\n                        return {\n                            data: null,\n                            error\n                        };\n                    }\n                    await this._saveSession(Object.assign({\n                        expires_at: Math.round(Date.now() / 1000) + data.expires_in\n                    }, data));\n                    await this._notifyAllSubscribers(\"MFA_CHALLENGE_VERIFIED\", data);\n                    return {\n                        data,\n                        error\n                    };\n                });\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */ async _challenge(params) {\n        return this._acquireLock(-1, async ()=>{\n            try {\n                return await this._useSession(async (result)=>{\n                    var _a;\n                    const { data: sessionData, error: sessionError } = result;\n                    if (sessionError) {\n                        return {\n                            data: null,\n                            error: sessionError\n                        };\n                    }\n                    return await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"POST\", \"\".concat(this.url, \"/factors/\").concat(params.factorId, \"/challenge\"), {\n                        body: {\n                            channel: params.channel\n                        },\n                        headers: this.headers,\n                        jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token\n                    });\n                });\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */ async _challengeAndVerify(params) {\n        // both _challenge and _verify independently acquire the lock, so no need\n        // to acquire it here\n        const { data: challengeData, error: challengeError } = await this._challenge({\n            factorId: params.factorId\n        });\n        if (challengeError) {\n            return {\n                data: null,\n                error: challengeError\n            };\n        }\n        return await this._verify({\n            factorId: params.factorId,\n            challengeId: challengeData.id,\n            code: params.code\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */ async _listFactors() {\n        // use #getUser instead of #_getUser as the former acquires a lock\n        const { data: { user }, error: userError } = await this.getUser();\n        if (userError) {\n            return {\n                data: null,\n                error: userError\n            };\n        }\n        const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n        const totp = factors.filter((factor)=>factor.factor_type === \"totp\" && factor.status === \"verified\");\n        const phone = factors.filter((factor)=>factor.factor_type === \"phone\" && factor.status === \"verified\");\n        return {\n            data: {\n                all: factors,\n                totp,\n                phone\n            },\n            error: null\n        };\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */ async _getAuthenticatorAssuranceLevel() {\n        return this._acquireLock(-1, async ()=>{\n            return await this._useSession(async (result)=>{\n                var _a, _b;\n                const { data: { session }, error: sessionError } = result;\n                if (sessionError) {\n                    return {\n                        data: null,\n                        error: sessionError\n                    };\n                }\n                if (!session) {\n                    return {\n                        data: {\n                            currentLevel: null,\n                            nextLevel: null,\n                            currentAuthenticationMethods: []\n                        },\n                        error: null\n                    };\n                }\n                const { payload } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(session.access_token);\n                let currentLevel = null;\n                if (payload.aal) {\n                    currentLevel = payload.aal;\n                }\n                let nextLevel = currentLevel;\n                const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor)=>factor.status === \"verified\")) !== null && _b !== void 0 ? _b : [];\n                if (verifiedFactors.length > 0) {\n                    nextLevel = \"aal2\";\n                }\n                const currentAuthenticationMethods = payload.amr || [];\n                return {\n                    data: {\n                        currentLevel,\n                        nextLevel,\n                        currentAuthenticationMethods\n                    },\n                    error: null\n                };\n            });\n        });\n    }\n    async fetchJwk(kid) {\n        let jwks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n            keys: []\n        };\n        // try fetching from the supplied jwks\n        let jwk = jwks.keys.find((key)=>key.kid === kid);\n        if (jwk) {\n            return jwk;\n        }\n        // try fetching from cache\n        jwk = this.jwks.keys.find((key)=>key.kid === kid);\n        // jwk exists and jwks isn't stale\n        if (jwk && this.jwks_cached_at + _lib_constants__WEBPACK_IMPORTED_MODULE_1__.JWKS_TTL > Date.now()) {\n            return jwk;\n        }\n        // jwk isn't cached in memory so we need to fetch it from the well-known endpoint\n        const { data, error } = await (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_3__._request)(this.fetch, \"GET\", \"\".concat(this.url, \"/.well-known/jwks.json\"), {\n            headers: this.headers\n        });\n        if (error) {\n            throw error;\n        }\n        if (!data.keys || data.keys.length === 0) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError(\"JWKS is empty\");\n        }\n        this.jwks = data;\n        this.jwks_cached_at = Date.now();\n        // Find the signing key\n        jwk = data.keys.find((key)=>key.kid === kid);\n        if (!jwk) {\n            throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError(\"No matching signing key found in JWKS\");\n        }\n        return jwk;\n    }\n    /**\n     * @experimental This method may change in future versions.\n     * @description Gets the claims from a JWT. If the JWT is symmetric JWTs, it will call getUser() to verify against the server. If the JWT is asymmetric, it will be verified against the JWKS using the WebCrypto API.\n     */ async getClaims(jwt) {\n        let jwks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n            keys: []\n        };\n        try {\n            let token = jwt;\n            if (!token) {\n                const { data, error } = await this.getSession();\n                if (error || !data.session) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                token = data.session.access_token;\n            }\n            const { header, payload, signature, raw: { header: rawHeader, payload: rawPayload } } = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(token);\n            // Reject expired JWTs\n            (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.validateExp)(payload.exp);\n            // If symmetric algorithm or WebCrypto API is unavailable, fallback to getUser()\n            if (!header.kid || header.alg === \"HS256\" || !(\"crypto\" in globalThis && \"subtle\" in globalThis.crypto)) {\n                const { error } = await this.getUser(token);\n                if (error) {\n                    throw error;\n                }\n                // getUser succeeds so the claims in the JWT can be trusted\n                return {\n                    data: {\n                        claims: payload,\n                        header,\n                        signature\n                    },\n                    error: null\n                };\n            }\n            const algorithm = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.getAlgorithm)(header.alg);\n            const signingKey = await this.fetchJwk(header.kid, jwks);\n            // Convert JWK to CryptoKey\n            const publicKey = await crypto.subtle.importKey(\"jwk\", signingKey, algorithm, true, [\n                \"verify\"\n            ]);\n            // Verify the signature\n            const isValid = await crypto.subtle.verify(algorithm, publicKey, signature, (0,_lib_base64url__WEBPACK_IMPORTED_MODULE_9__.stringToUint8Array)(\"\".concat(rawHeader, \".\").concat(rawPayload)));\n            if (!isValid) {\n                throw new _lib_errors__WEBPACK_IMPORTED_MODULE_2__.AuthInvalidJwtError(\"Invalid JWT signature\");\n            }\n            // If verification succeeds, decode and return claims\n            return {\n                data: {\n                    claims: payload,\n                    header,\n                    signature\n                },\n                error: null\n            };\n        } catch (error) {\n            if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_2__.isAuthError)(error)) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n            throw error;\n        }\n    }\n    /**\n     * Create a new client for use in the browser.\n     */ constructor(options){\n        var _a, _b;\n        this.memoryStorage = null;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */ this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        this.hasCustomAuthorizationHeader = false;\n        this.suppressGetSessionWarning = false;\n        this.lockAcquired = false;\n        this.pendingInLock = [];\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */ this.broadcastChannel = null;\n        this.logger = console.log;\n        this.instanceID = GoTrueClient.nextInstanceID;\n        GoTrueClient.nextInstanceID += 1;\n        if (this.instanceID > 0 && (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)()) {\n            console.warn(\"Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.\");\n        }\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.logDebugMessages = !!settings.debug;\n        if (typeof settings.debug === \"function\") {\n            this.logger = settings.debug;\n        }\n        this.persistSession = settings.persistSession;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.admin = new _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.resolveFetch)(settings.fetch);\n        this.lock = settings.lock || lockNoOp;\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;\n        if (settings.lock) {\n            this.lock = settings.lock;\n        } else if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {\n            this.lock = _lib_locks__WEBPACK_IMPORTED_MODULE_8__.navigatorLock;\n        } else {\n            this.lock = lockNoOp;\n        }\n        this.jwks = {\n            keys: []\n        };\n        this.jwks_cached_at = Number.MIN_SAFE_INTEGER;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)\n        };\n        if (this.persistSession) {\n            if (settings.storage) {\n                this.storage = settings.storage;\n            } else {\n                if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.supportsLocalStorage)()) {\n                    this.storage = _lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.localStorageAdapter;\n                } else {\n                    this.memoryStorage = {};\n                    this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\n                }\n            }\n        } else {\n            this.memoryStorage = {};\n            this.storage = (0,_lib_local_storage__WEBPACK_IMPORTED_MODULE_5__.memoryLocalStorageAdapter)(this.memoryStorage);\n        }\n        if ((0,_lib_helpers__WEBPACK_IMPORTED_MODULE_4__.isBrowser)() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            } catch (e) {\n                console.error(\"Failed to create a new BroadcastChannel, multi-tab state changes will not be available\", e);\n            }\n            (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener(\"message\", async (event)=>{\n                this._debug(\"received broadcast notification from other tab or client\", event);\n                await this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n}\n\nGoTrueClient.nextInstanceID = 0; //# sourceMappingURL=GoTrueClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: function() { return /* reexport safe */ _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   AuthApiError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthApiError; },\n/* harmony export */   AuthClient: function() { return /* reexport safe */ _AuthClient__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthError; },\n/* harmony export */   AuthImplicitGrantRedirectError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthImplicitGrantRedirectError; },\n/* harmony export */   AuthInvalidCredentialsError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidCredentialsError; },\n/* harmony export */   AuthInvalidJwtError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidJwtError; },\n/* harmony export */   AuthInvalidTokenResponseError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthInvalidTokenResponseError; },\n/* harmony export */   AuthPKCEGrantCodeExchangeError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthPKCEGrantCodeExchangeError; },\n/* harmony export */   AuthRetryableFetchError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthRetryableFetchError; },\n/* harmony export */   AuthSessionMissingError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthSessionMissingError; },\n/* harmony export */   AuthUnknownError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthUnknownError; },\n/* harmony export */   AuthWeakPasswordError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.AuthWeakPasswordError; },\n/* harmony export */   CustomAuthError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.CustomAuthError; },\n/* harmony export */   GoTrueAdminApi: function() { return /* reexport safe */ _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   GoTrueClient: function() { return /* reexport safe */ _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   NavigatorLockAcquireTimeoutError: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.NavigatorLockAcquireTimeoutError; },\n/* harmony export */   isAuthApiError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthApiError; },\n/* harmony export */   isAuthError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthError; },\n/* harmony export */   isAuthImplicitGrantRedirectError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthImplicitGrantRedirectError; },\n/* harmony export */   isAuthRetryableFetchError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthRetryableFetchError; },\n/* harmony export */   isAuthSessionMissingError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthSessionMissingError; },\n/* harmony export */   isAuthWeakPasswordError: function() { return /* reexport safe */ _lib_errors__WEBPACK_IMPORTED_MODULE_5__.isAuthWeakPasswordError; },\n/* harmony export */   lockInternals: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.internals; },\n/* harmony export */   navigatorLock: function() { return /* reexport safe */ _lib_locks__WEBPACK_IMPORTED_MODULE_6__.navigatorLock; }\n/* harmony export */ });\n/* harmony import */ var _GoTrueAdminApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GoTrueAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js\");\n/* harmony import */ var _GoTrueClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./GoTrueClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/GoTrueClient.js\");\n/* harmony import */ var _AuthAdminApi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthAdminApi */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthAdminApi.js\");\n/* harmony import */ var _AuthClient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AuthClient */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/AuthClient.js\");\n/* harmony import */ var _lib_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/types */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_locks__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/locks */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QztBQUNKO0FBQ0E7QUFDSjtBQUM0QjtBQUN0QztBQUNDO0FBQzhFLENBQzNHLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvaW5kZXguanM/NTUwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR29UcnVlQWRtaW5BcGkgZnJvbSAnLi9Hb1RydWVBZG1pbkFwaSc7XG5pbXBvcnQgR29UcnVlQ2xpZW50IGZyb20gJy4vR29UcnVlQ2xpZW50JztcbmltcG9ydCBBdXRoQWRtaW5BcGkgZnJvbSAnLi9BdXRoQWRtaW5BcGknO1xuaW1wb3J0IEF1dGhDbGllbnQgZnJvbSAnLi9BdXRoQ2xpZW50JztcbmV4cG9ydCB7IEdvVHJ1ZUFkbWluQXBpLCBHb1RydWVDbGllbnQsIEF1dGhBZG1pbkFwaSwgQXV0aENsaWVudCB9O1xuZXhwb3J0ICogZnJvbSAnLi9saWIvdHlwZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9saWIvZXJyb3JzJztcbmV4cG9ydCB7IG5hdmlnYXRvckxvY2ssIE5hdmlnYXRvckxvY2tBY3F1aXJlVGltZW91dEVycm9yLCBpbnRlcm5hbHMgYXMgbG9ja0ludGVybmFscywgfSBmcm9tICcuL2xpYi9sb2Nrcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiR29UcnVlQWRtaW5BcGkiLCJHb1RydWVDbGllbnQiLCJBdXRoQWRtaW5BcGkiLCJBdXRoQ2xpZW50IiwibmF2aWdhdG9yTG9jayIsIk5hdmlnYXRvckxvY2tBY3F1aXJlVGltZW91dEVycm9yIiwiaW50ZXJuYWxzIiwibG9ja0ludGVybmFscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/base64url.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64UrlToUint8Array: function() { return /* binding */ base64UrlToUint8Array; },\n/* harmony export */   byteFromBase64URL: function() { return /* binding */ byteFromBase64URL; },\n/* harmony export */   byteToBase64URL: function() { return /* binding */ byteToBase64URL; },\n/* harmony export */   codepointToUTF8: function() { return /* binding */ codepointToUTF8; },\n/* harmony export */   stringFromBase64URL: function() { return /* binding */ stringFromBase64URL; },\n/* harmony export */   stringFromUTF8: function() { return /* binding */ stringFromUTF8; },\n/* harmony export */   stringToBase64URL: function() { return /* binding */ stringToBase64URL; },\n/* harmony export */   stringToUTF8: function() { return /* binding */ stringToUTF8; },\n/* harmony export */   stringToUint8Array: function() { return /* binding */ stringToUint8Array; }\n/* harmony export */ });\n/**\n * Avoid modifying this file. It's part of\n * https://github.com/supabase-community/base64url-js.  Submit all fixes on\n * that repo!\n */ /**\n * An array of characters that encode 6 bits into a Base64-URL alphabet\n * character.\n */ const TO_BASE64URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\".split(\"\");\n/**\n * An array of characters that can appear in a Base64-URL encoded string but\n * should be ignored.\n */ const IGNORE_BASE64URL = \" \t\\n\\r=\".split(\"\");\n/**\n * An array of 128 numbers that map a Base64-URL character to 6 bits, or if -2\n * used to skip the character, or if -1 used to error out.\n */ const FROM_BASE64URL = (()=>{\n    const charMap = new Array(128);\n    for(let i = 0; i < charMap.length; i += 1){\n        charMap[i] = -1;\n    }\n    for(let i = 0; i < IGNORE_BASE64URL.length; i += 1){\n        charMap[IGNORE_BASE64URL[i].charCodeAt(0)] = -2;\n    }\n    for(let i = 0; i < TO_BASE64URL.length; i += 1){\n        charMap[TO_BASE64URL[i].charCodeAt(0)] = i;\n    }\n    return charMap;\n})();\n/**\n * Converts a byte to a Base64-URL string.\n *\n * @param byte The byte to convert, or null to flush at the end of the byte sequence.\n * @param state The Base64 conversion state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next Base64 character when ready.\n */ function byteToBase64URL(byte, state, emit) {\n    if (byte !== null) {\n        state.queue = state.queue << 8 | byte;\n        state.queuedBits += 8;\n        while(state.queuedBits >= 6){\n            const pos = state.queue >> state.queuedBits - 6 & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    } else if (state.queuedBits > 0) {\n        state.queue = state.queue << 6 - state.queuedBits;\n        state.queuedBits = 6;\n        while(state.queuedBits >= 6){\n            const pos = state.queue >> state.queuedBits - 6 & 63;\n            emit(TO_BASE64URL[pos]);\n            state.queuedBits -= 6;\n        }\n    }\n}\n/**\n * Converts a String char code (extracted using `string.charCodeAt(position)`) to a sequence of Base64-URL characters.\n *\n * @param charCode The char code of the JavaScript string.\n * @param state The Base64 state. Pass an initial value of `{ queue: 0, queuedBits: 0 }`.\n * @param emit A function called with the next byte.\n */ function byteFromBase64URL(charCode, state, emit) {\n    const bits = FROM_BASE64URL[charCode];\n    if (bits > -1) {\n        // valid Base64-URL character\n        state.queue = state.queue << 6 | bits;\n        state.queuedBits += 6;\n        while(state.queuedBits >= 8){\n            emit(state.queue >> state.queuedBits - 8 & 0xff);\n            state.queuedBits -= 8;\n        }\n    } else if (bits === -2) {\n        // ignore spaces, tabs, newlines, =\n        return;\n    } else {\n        throw new Error('Invalid Base64-URL character \"'.concat(String.fromCharCode(charCode), '\"'));\n    }\n}\n/**\n * Converts a JavaScript string (which may include any valid character) into a\n * Base64-URL encoded string. The string is first encoded in UTF-8 which is\n * then encoded as Base64-URL.\n *\n * @param str The string to convert.\n */ function stringToBase64URL(str) {\n    const base64 = [];\n    const emitter = (char)=>{\n        base64.push(char);\n    };\n    const state = {\n        queue: 0,\n        queuedBits: 0\n    };\n    stringToUTF8(str, (byte)=>{\n        byteToBase64URL(byte, state, emitter);\n    });\n    byteToBase64URL(null, state, emitter);\n    return base64.join(\"\");\n}\n/**\n * Converts a Base64-URL encoded string into a JavaScript string. It is assumed\n * that the underlying string has been encoded as UTF-8.\n *\n * @param str The Base64-URL encoded string.\n */ function stringFromBase64URL(str) {\n    const conv = [];\n    const utf8Emit = (codepoint)=>{\n        conv.push(String.fromCodePoint(codepoint));\n    };\n    const utf8State = {\n        utf8seq: 0,\n        codepoint: 0\n    };\n    const b64State = {\n        queue: 0,\n        queuedBits: 0\n    };\n    const byteEmit = (byte)=>{\n        stringFromUTF8(byte, utf8State, utf8Emit);\n    };\n    for(let i = 0; i < str.length; i += 1){\n        byteFromBase64URL(str.charCodeAt(i), b64State, byteEmit);\n    }\n    return conv.join(\"\");\n}\n/**\n * Converts a Unicode codepoint to a multi-byte UTF-8 sequence.\n *\n * @param codepoint The Unicode codepoint.\n * @param emit      Function which will be called for each UTF-8 byte that represents the codepoint.\n */ function codepointToUTF8(codepoint, emit) {\n    if (codepoint <= 0x7f) {\n        emit(codepoint);\n        return;\n    } else if (codepoint <= 0x7ff) {\n        emit(0xc0 | codepoint >> 6);\n        emit(0x80 | codepoint & 0x3f);\n        return;\n    } else if (codepoint <= 0xffff) {\n        emit(0xe0 | codepoint >> 12);\n        emit(0x80 | codepoint >> 6 & 0x3f);\n        emit(0x80 | codepoint & 0x3f);\n        return;\n    } else if (codepoint <= 0x10ffff) {\n        emit(0xf0 | codepoint >> 18);\n        emit(0x80 | codepoint >> 12 & 0x3f);\n        emit(0x80 | codepoint >> 6 & 0x3f);\n        emit(0x80 | codepoint & 0x3f);\n        return;\n    }\n    throw new Error(\"Unrecognized Unicode codepoint: \".concat(codepoint.toString(16)));\n}\n/**\n * Converts a JavaScript string to a sequence of UTF-8 bytes.\n *\n * @param str  The string to convert to UTF-8.\n * @param emit Function which will be called for each UTF-8 byte of the string.\n */ function stringToUTF8(str, emit) {\n    for(let i = 0; i < str.length; i += 1){\n        let codepoint = str.charCodeAt(i);\n        if (codepoint > 0xd7ff && codepoint <= 0xdbff) {\n            // most UTF-16 codepoints are Unicode codepoints, except values in this\n            // range where the next UTF-16 codepoint needs to be combined with the\n            // current one to get the Unicode codepoint\n            const highSurrogate = (codepoint - 0xd800) * 0x400 & 0xffff;\n            const lowSurrogate = str.charCodeAt(i + 1) - 0xdc00 & 0xffff;\n            codepoint = (lowSurrogate | highSurrogate) + 0x10000;\n            i += 1;\n        }\n        codepointToUTF8(codepoint, emit);\n    }\n}\n/**\n * Converts a UTF-8 byte to a Unicode codepoint.\n *\n * @param byte  The UTF-8 byte next in the sequence.\n * @param state The shared state between consecutive UTF-8 bytes in the\n *              sequence, an object with the shape `{ utf8seq: 0, codepoint: 0 }`.\n * @param emit  Function which will be called for each codepoint.\n */ function stringFromUTF8(byte, state, emit) {\n    if (state.utf8seq === 0) {\n        if (byte <= 0x7f) {\n            emit(byte);\n            return;\n        }\n        // count the number of 1 leading bits until you reach 0\n        for(let leadingBit = 1; leadingBit < 6; leadingBit += 1){\n            if ((byte >> 7 - leadingBit & 1) === 0) {\n                state.utf8seq = leadingBit;\n                break;\n            }\n        }\n        if (state.utf8seq === 2) {\n            state.codepoint = byte & 31;\n        } else if (state.utf8seq === 3) {\n            state.codepoint = byte & 15;\n        } else if (state.utf8seq === 4) {\n            state.codepoint = byte & 7;\n        } else {\n            throw new Error(\"Invalid UTF-8 sequence\");\n        }\n        state.utf8seq -= 1;\n    } else if (state.utf8seq > 0) {\n        if (byte <= 0x7f) {\n            throw new Error(\"Invalid UTF-8 sequence\");\n        }\n        state.codepoint = state.codepoint << 6 | byte & 63;\n        state.utf8seq -= 1;\n        if (state.utf8seq === 0) {\n            emit(state.codepoint);\n        }\n    }\n}\n/**\n * Helper functions to convert different types of strings to Uint8Array\n */ function base64UrlToUint8Array(str) {\n    const result = [];\n    const state = {\n        queue: 0,\n        queuedBits: 0\n    };\n    const onByte = (byte)=>{\n        result.push(byte);\n    };\n    for(let i = 0; i < str.length; i += 1){\n        byteFromBase64URL(str.charCodeAt(i), state, onByte);\n    }\n    return new Uint8Array(result);\n}\nfunction stringToUint8Array(str) {\n    const result = [];\n    stringToUTF8(str, (byte)=>result.push(byte));\n    return new Uint8Array(result);\n} //# sourceMappingURL=base64url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/constants.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_VERSIONS: function() { return /* binding */ API_VERSIONS; },\n/* harmony export */   API_VERSION_HEADER_NAME: function() { return /* binding */ API_VERSION_HEADER_NAME; },\n/* harmony export */   AUDIENCE: function() { return /* binding */ AUDIENCE; },\n/* harmony export */   AUTO_REFRESH_TICK_DURATION_MS: function() { return /* binding */ AUTO_REFRESH_TICK_DURATION_MS; },\n/* harmony export */   AUTO_REFRESH_TICK_THRESHOLD: function() { return /* binding */ AUTO_REFRESH_TICK_THRESHOLD; },\n/* harmony export */   BASE64URL_REGEX: function() { return /* binding */ BASE64URL_REGEX; },\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   EXPIRY_MARGIN_MS: function() { return /* binding */ EXPIRY_MARGIN_MS; },\n/* harmony export */   GOTRUE_URL: function() { return /* binding */ GOTRUE_URL; },\n/* harmony export */   JWKS_TTL: function() { return /* binding */ JWKS_TTL; },\n/* harmony export */   NETWORK_FAILURE: function() { return /* binding */ NETWORK_FAILURE; },\n/* harmony export */   STORAGE_KEY: function() { return /* binding */ STORAGE_KEY; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\");\n\n/** Current session will be checked for refresh at this interval. */ const AUTO_REFRESH_TICK_DURATION_MS = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */ const AUTO_REFRESH_TICK_THRESHOLD = 3;\n/*\n * Earliest time before an access token expires that the session should be refreshed.\n */ const EXPIRY_MARGIN_MS = AUTO_REFRESH_TICK_THRESHOLD * AUTO_REFRESH_TICK_DURATION_MS;\nconst GOTRUE_URL = \"http://localhost:9999\";\nconst STORAGE_KEY = \"supabase.auth.token\";\nconst AUDIENCE = \"\";\nconst DEFAULT_HEADERS = {\n    \"X-Client-Info\": \"gotrue-js/\".concat(_version__WEBPACK_IMPORTED_MODULE_0__.version)\n};\nconst NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2\n};\nconst API_VERSION_HEADER_NAME = \"X-Supabase-Api-Version\";\nconst API_VERSIONS = {\n    \"2024-01-01\": {\n        timestamp: Date.parse(\"2024-01-01T00:00:00.0Z\"),\n        name: \"2024-01-01\"\n    }\n};\nconst BASE64URL_REGEX = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}$|[a-z0-9_-]{2}$)$/i;\nconst JWKS_TTL = 600000; // 10 minutes\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBb0M7QUFDcEMsa0VBQWtFLEdBQzNELE1BQU1DLGdDQUFnQyxLQUFLLEtBQUs7QUFDdkQ7eUZBQ3lGLEdBQ2xGLE1BQU1DLDhCQUE4QixFQUFFO0FBQzdDOztDQUVDLEdBQ00sTUFBTUMsbUJBQW1CRCw4QkFBOEJELDhCQUE4QjtBQUNyRixNQUFNRyxhQUFhLHdCQUF3QjtBQUMzQyxNQUFNQyxjQUFjLHNCQUFzQjtBQUMxQyxNQUFNQyxXQUFXLEdBQUc7QUFDcEIsTUFBTUMsa0JBQWtCO0lBQUUsaUJBQWlCLGFBQXFCLE9BQVJQLDZDQUFPQTtBQUFHLEVBQUU7QUFDcEUsTUFBTVEsa0JBQWtCO0lBQzNCQyxhQUFhO0lBQ2JDLGdCQUFnQjtBQUNwQixFQUFFO0FBQ0ssTUFBTUMsMEJBQTBCLHlCQUF5QjtBQUN6RCxNQUFNQyxlQUFlO0lBQ3hCLGNBQWM7UUFDVkMsV0FBV0MsS0FBS0MsS0FBSyxDQUFDO1FBQ3RCQyxNQUFNO0lBQ1Y7QUFDSixFQUFFO0FBQ0ssTUFBTUMsa0JBQWtCLHVEQUF1RDtBQUMvRSxNQUFNQyxXQUFXLE9BQU8sQ0FBQyxhQUFhO0NBQzdDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcz9mMDQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xuLyoqIEN1cnJlbnQgc2Vzc2lvbiB3aWxsIGJlIGNoZWNrZWQgZm9yIHJlZnJlc2ggYXQgdGhpcyBpbnRlcnZhbC4gKi9cbmV4cG9ydCBjb25zdCBBVVRPX1JFRlJFU0hfVElDS19EVVJBVElPTl9NUyA9IDMwICogMTAwMDtcbi8qKlxuICogQSB0b2tlbiByZWZyZXNoIHdpbGwgYmUgYXR0ZW1wdGVkIHRoaXMgbWFueSB0aWNrcyBiZWZvcmUgdGhlIGN1cnJlbnQgc2Vzc2lvbiBleHBpcmVzLiAqL1xuZXhwb3J0IGNvbnN0IEFVVE9fUkVGUkVTSF9USUNLX1RIUkVTSE9MRCA9IDM7XG4vKlxuICogRWFybGllc3QgdGltZSBiZWZvcmUgYW4gYWNjZXNzIHRva2VuIGV4cGlyZXMgdGhhdCB0aGUgc2Vzc2lvbiBzaG91bGQgYmUgcmVmcmVzaGVkLlxuICovXG5leHBvcnQgY29uc3QgRVhQSVJZX01BUkdJTl9NUyA9IEFVVE9fUkVGUkVTSF9USUNLX1RIUkVTSE9MRCAqIEFVVE9fUkVGUkVTSF9USUNLX0RVUkFUSU9OX01TO1xuZXhwb3J0IGNvbnN0IEdPVFJVRV9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo5OTk5JztcbmV4cG9ydCBjb25zdCBTVE9SQUdFX0tFWSA9ICdzdXBhYmFzZS5hdXRoLnRva2VuJztcbmV4cG9ydCBjb25zdCBBVURJRU5DRSA9ICcnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgZ290cnVlLWpzLyR7dmVyc2lvbn1gIH07XG5leHBvcnQgY29uc3QgTkVUV09SS19GQUlMVVJFID0ge1xuICAgIE1BWF9SRVRSSUVTOiAxMCxcbiAgICBSRVRSWV9JTlRFUlZBTDogMiwgLy8gaW4gZGVjaXNlY29uZHNcbn07XG5leHBvcnQgY29uc3QgQVBJX1ZFUlNJT05fSEVBREVSX05BTUUgPSAnWC1TdXBhYmFzZS1BcGktVmVyc2lvbic7XG5leHBvcnQgY29uc3QgQVBJX1ZFUlNJT05TID0ge1xuICAgICcyMDI0LTAxLTAxJzoge1xuICAgICAgICB0aW1lc3RhbXA6IERhdGUucGFyc2UoJzIwMjQtMDEtMDFUMDA6MDA6MDAuMFonKSxcbiAgICAgICAgbmFtZTogJzIwMjQtMDEtMDEnLFxuICAgIH0sXG59O1xuZXhwb3J0IGNvbnN0IEJBU0U2NFVSTF9SRUdFWCA9IC9eKFthLXowLTlfLV17NH0pKigkfFthLXowLTlfLV17M30kfFthLXowLTlfLV17Mn0kKSQvaTtcbmV4cG9ydCBjb25zdCBKV0tTX1RUTCA9IDYwMDAwMDsgLy8gMTAgbWludXRlc1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiQVVUT19SRUZSRVNIX1RJQ0tfRFVSQVRJT05fTVMiLCJBVVRPX1JFRlJFU0hfVElDS19USFJFU0hPTEQiLCJFWFBJUllfTUFSR0lOX01TIiwiR09UUlVFX1VSTCIsIlNUT1JBR0VfS0VZIiwiQVVESUVOQ0UiLCJERUZBVUxUX0hFQURFUlMiLCJORVRXT1JLX0ZBSUxVUkUiLCJNQVhfUkVUUklFUyIsIlJFVFJZX0lOVEVSVkFMIiwiQVBJX1ZFUlNJT05fSEVBREVSX05BTUUiLCJBUElfVkVSU0lPTlMiLCJ0aW1lc3RhbXAiLCJEYXRlIiwicGFyc2UiLCJuYW1lIiwiQkFTRTY0VVJMX1JFR0VYIiwiSldLU19UVEwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/errors.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthApiError: function() { return /* binding */ AuthApiError; },\n/* harmony export */   AuthError: function() { return /* binding */ AuthError; },\n/* harmony export */   AuthImplicitGrantRedirectError: function() { return /* binding */ AuthImplicitGrantRedirectError; },\n/* harmony export */   AuthInvalidCredentialsError: function() { return /* binding */ AuthInvalidCredentialsError; },\n/* harmony export */   AuthInvalidJwtError: function() { return /* binding */ AuthInvalidJwtError; },\n/* harmony export */   AuthInvalidTokenResponseError: function() { return /* binding */ AuthInvalidTokenResponseError; },\n/* harmony export */   AuthPKCEGrantCodeExchangeError: function() { return /* binding */ AuthPKCEGrantCodeExchangeError; },\n/* harmony export */   AuthRetryableFetchError: function() { return /* binding */ AuthRetryableFetchError; },\n/* harmony export */   AuthSessionMissingError: function() { return /* binding */ AuthSessionMissingError; },\n/* harmony export */   AuthUnknownError: function() { return /* binding */ AuthUnknownError; },\n/* harmony export */   AuthWeakPasswordError: function() { return /* binding */ AuthWeakPasswordError; },\n/* harmony export */   CustomAuthError: function() { return /* binding */ CustomAuthError; },\n/* harmony export */   isAuthApiError: function() { return /* binding */ isAuthApiError; },\n/* harmony export */   isAuthError: function() { return /* binding */ isAuthError; },\n/* harmony export */   isAuthImplicitGrantRedirectError: function() { return /* binding */ isAuthImplicitGrantRedirectError; },\n/* harmony export */   isAuthRetryableFetchError: function() { return /* binding */ isAuthRetryableFetchError; },\n/* harmony export */   isAuthSessionMissingError: function() { return /* binding */ isAuthSessionMissingError; },\n/* harmony export */   isAuthWeakPasswordError: function() { return /* binding */ isAuthWeakPasswordError; }\n/* harmony export */ });\nclass AuthError extends Error {\n    constructor(message, status, code){\n        super(message);\n        this.__isAuthError = true;\n        this.name = \"AuthError\";\n        this.status = status;\n        this.code = code;\n    }\n}\nfunction isAuthError(error) {\n    return typeof error === \"object\" && error !== null && \"__isAuthError\" in error;\n}\nclass AuthApiError extends AuthError {\n    constructor(message, status, code){\n        super(message, status, code);\n        this.name = \"AuthApiError\";\n        this.status = status;\n        this.code = code;\n    }\n}\nfunction isAuthApiError(error) {\n    return isAuthError(error) && error.name === \"AuthApiError\";\n}\nclass AuthUnknownError extends AuthError {\n    constructor(message, originalError){\n        super(message);\n        this.name = \"AuthUnknownError\";\n        this.originalError = originalError;\n    }\n}\nclass CustomAuthError extends AuthError {\n    constructor(message, name, status, code){\n        super(message, status, code);\n        this.name = name;\n        this.status = status;\n    }\n}\nclass AuthSessionMissingError extends CustomAuthError {\n    constructor(){\n        super(\"Auth session missing!\", \"AuthSessionMissingError\", 400, undefined);\n    }\n}\nfunction isAuthSessionMissingError(error) {\n    return isAuthError(error) && error.name === \"AuthSessionMissingError\";\n}\nclass AuthInvalidTokenResponseError extends CustomAuthError {\n    constructor(){\n        super(\"Auth session or user missing\", \"AuthInvalidTokenResponseError\", 500, undefined);\n    }\n}\nclass AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message){\n        super(message, \"AuthInvalidCredentialsError\", 400, undefined);\n    }\n}\nclass AuthImplicitGrantRedirectError extends CustomAuthError {\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details\n        };\n    }\n    constructor(message, details = null){\n        super(message, \"AuthImplicitGrantRedirectError\", 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n}\nfunction isAuthImplicitGrantRedirectError(error) {\n    return isAuthError(error) && error.name === \"AuthImplicitGrantRedirectError\";\n}\nclass AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details\n        };\n    }\n    constructor(message, details = null){\n        super(message, \"AuthPKCEGrantCodeExchangeError\", 500, undefined);\n        this.details = null;\n        this.details = details;\n    }\n}\nclass AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status){\n        super(message, \"AuthRetryableFetchError\", status, undefined);\n    }\n}\nfunction isAuthRetryableFetchError(error) {\n    return isAuthError(error) && error.name === \"AuthRetryableFetchError\";\n}\n/**\n * This error is thrown on certain methods when the password used is deemed\n * weak. Inspect the reasons to identify what password strength rules are\n * inadequate.\n */ class AuthWeakPasswordError extends CustomAuthError {\n    constructor(message, status, reasons){\n        super(message, \"AuthWeakPasswordError\", status, \"weak_password\");\n        this.reasons = reasons;\n    }\n}\nfunction isAuthWeakPasswordError(error) {\n    return isAuthError(error) && error.name === \"AuthWeakPasswordError\";\n}\nclass AuthInvalidJwtError extends CustomAuthError {\n    constructor(message){\n        super(message, \"AuthInvalidJwtError\", 400, \"invalid_jwt\");\n    }\n} //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/fetch.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateLinkResponse: function() { return /* binding */ _generateLinkResponse; },\n/* harmony export */   _noResolveJsonResponse: function() { return /* binding */ _noResolveJsonResponse; },\n/* harmony export */   _request: function() { return /* binding */ _request; },\n/* harmony export */   _sessionResponse: function() { return /* binding */ _sessionResponse; },\n/* harmony export */   _sessionResponsePassword: function() { return /* binding */ _sessionResponsePassword; },\n/* harmony export */   _ssoResponse: function() { return /* binding */ _ssoResponse; },\n/* harmony export */   _userResponse: function() { return /* binding */ _userResponse; },\n/* harmony export */   handleError: function() { return /* binding */ handleError; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\nvar __rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\n\n\n\nconst _getErrorMessage = (err)=>err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst NETWORK_ERROR_CODES = [\n    502,\n    503,\n    504\n];\nasync function handleError(error) {\n    var _a;\n    if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_1__.looksLikeFetchResponse)(error)) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), 0);\n    }\n    if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(error), error.status);\n    }\n    let data;\n    try {\n        data = await error.json();\n    } catch (e) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthUnknownError(_getErrorMessage(e), e);\n    }\n    let errorCode = undefined;\n    const responseAPIVersion = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.parseResponseAPIVersion)(error);\n    if (responseAPIVersion && responseAPIVersion.getTime() >= _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS[\"2024-01-01\"].timestamp && typeof data === \"object\" && data && typeof data.code === \"string\") {\n        errorCode = data.code;\n    } else if (typeof data === \"object\" && data && typeof data.error_code === \"string\") {\n        errorCode = data.error_code;\n    }\n    if (!errorCode) {\n        // Legacy support for weak password errors, when there were no error codes\n        if (typeof data === \"object\" && data && typeof data.weak_password === \"object\" && data.weak_password && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.reasons.reduce((a, i)=>a && typeof i === \"string\", true)) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, data.weak_password.reasons);\n        }\n    } else if (errorCode === \"weak_password\") {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthWeakPasswordError(_getErrorMessage(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);\n    } else if (errorCode === \"session_not_found\") {\n        // The `session_id` inside the JWT does not correspond to a row in the\n        // `sessions` table. This usually means the user has signed out, has been\n        // deleted, or their session has somehow been terminated.\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthSessionMissingError();\n    }\n    throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthApiError(_getErrorMessage(data), error.status || 500, errorCode);\n}\nconst _getRequestParams = (method, options, parameters, body)=>{\n    const params = {\n        method,\n        headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n    };\n    if (method === \"GET\") {\n        return params;\n    }\n    params.headers = Object.assign({\n        \"Content-Type\": \"application/json;charset=UTF-8\"\n    }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nasync function _request(fetcher, method, url, options) {\n    var _a;\n    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n    if (!headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME]) {\n        headers[_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME] = _constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSIONS[\"2024-01-01\"].name;\n    }\n    if (options === null || options === void 0 ? void 0 : options.jwt) {\n        headers[\"Authorization\"] = \"Bearer \".concat(options.jwt);\n    }\n    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n    if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n        qs[\"redirect_to\"] = options.redirectTo;\n    }\n    const queryString = Object.keys(qs).length ? \"?\" + new URLSearchParams(qs).toString() : \"\";\n    const data = await _handleRequest(fetcher, method, url + queryString, {\n        headers,\n        noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson\n    }, {}, options === null || options === void 0 ? void 0 : options.body);\n    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : {\n        data: Object.assign({}, data),\n        error: null\n    };\n}\nasync function _handleRequest(fetcher, method, url, options, parameters, body) {\n    const requestParams = _getRequestParams(method, options, parameters, body);\n    let result;\n    try {\n        result = await fetcher(url, Object.assign({}, requestParams));\n    } catch (e) {\n        console.error(e);\n        // fetch failed, likely due to a network or CORS error\n        throw new _errors__WEBPACK_IMPORTED_MODULE_2__.AuthRetryableFetchError(_getErrorMessage(e), 0);\n    }\n    if (!result.ok) {\n        await handleError(result);\n    }\n    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {\n        return result;\n    }\n    try {\n        return await result.json();\n    } catch (e) {\n        await handleError(e);\n    }\n}\nfunction _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        if (!data.expires_at) {\n            session.expires_at = (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.expiresAt)(data.expires_in);\n        }\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return {\n        data: {\n            session,\n            user\n        },\n        error: null\n    };\n}\nfunction _sessionResponsePassword(data) {\n    const response = _sessionResponse(data);\n    if (!response.error && data.weak_password && typeof data.weak_password === \"object\" && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.message && typeof data.weak_password.message === \"string\" && data.weak_password.reasons.reduce((a, i)=>a && typeof i === \"string\", true)) {\n        response.data.weak_password = data.weak_password;\n    }\n    return response;\n}\nfunction _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return {\n        data: {\n            user\n        },\n        error: null\n    };\n}\nfunction _ssoResponse(data) {\n    return {\n        data,\n        error: null\n    };\n}\nfunction _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\n        \"action_link\",\n        \"email_otp\",\n        \"hashed_token\",\n        \"redirect_to\",\n        \"verification_type\"\n    ]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user\n        },\n        error: null\n    };\n}\nfunction _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */ function hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n} //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/helpers.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: function() { return /* binding */ Deferred; },\n/* harmony export */   decodeJWT: function() { return /* binding */ decodeJWT; },\n/* harmony export */   expiresAt: function() { return /* binding */ expiresAt; },\n/* harmony export */   generatePKCEChallenge: function() { return /* binding */ generatePKCEChallenge; },\n/* harmony export */   generatePKCEVerifier: function() { return /* binding */ generatePKCEVerifier; },\n/* harmony export */   getAlgorithm: function() { return /* binding */ getAlgorithm; },\n/* harmony export */   getCodeChallengeAndMethod: function() { return /* binding */ getCodeChallengeAndMethod; },\n/* harmony export */   getItemAsync: function() { return /* binding */ getItemAsync; },\n/* harmony export */   isBrowser: function() { return /* binding */ isBrowser; },\n/* harmony export */   looksLikeFetchResponse: function() { return /* binding */ looksLikeFetchResponse; },\n/* harmony export */   parseParametersFromURL: function() { return /* binding */ parseParametersFromURL; },\n/* harmony export */   parseResponseAPIVersion: function() { return /* binding */ parseResponseAPIVersion; },\n/* harmony export */   removeItemAsync: function() { return /* binding */ removeItemAsync; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   retryable: function() { return /* binding */ retryable; },\n/* harmony export */   setItemAsync: function() { return /* binding */ setItemAsync; },\n/* harmony export */   sleep: function() { return /* binding */ sleep; },\n/* harmony export */   supportsLocalStorage: function() { return /* binding */ supportsLocalStorage; },\n/* harmony export */   uuid: function() { return /* binding */ uuid; },\n/* harmony export */   validateExp: function() { return /* binding */ validateExp; }\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/constants.js\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/errors.js\");\n/* harmony import */ var _base64url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/base64url.js\");\n\n\n\nfunction expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nfunction uuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        const r = Math.random() * 16 | 0, v = c == \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n}\nconst isBrowser = ()=> true && typeof document !== \"undefined\";\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */ const supportsLocalStorage = ()=>{\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== \"object\") {\n            return false;\n        }\n    } catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = \"lswt-\".concat(Math.random()).concat(Math.random());\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    } catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\n/**\n * Extracts parameters encoded in the URL both in the query and fragment.\n */ function parseParametersFromURL(href) {\n    const result = {};\n    const url = new URL(href);\n    if (url.hash && url.hash[0] === \"#\") {\n        try {\n            const hashSearchParams = new URLSearchParams(url.hash.substring(1));\n            hashSearchParams.forEach((value, key)=>{\n                result[key] = value;\n            });\n        } catch (e) {\n        // hash is not a query string\n        }\n    }\n    // search parameters take precedence over hash parameters\n    url.searchParams.forEach((value, key)=>{\n        result[key] = value;\n    });\n    return result;\n}\nconst resolveFetch = (customFetch)=>{\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    } else if (typeof fetch === \"undefined\") {\n        _fetch = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then((param)=>{\n                let { default: fetch1 } = param;\n                return fetch1(...args);\n            });\n        };\n    } else {\n        _fetch = fetch;\n    }\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return _fetch(...args);\n    };\n};\nconst looksLikeFetchResponse = (maybeResponse)=>{\n    return typeof maybeResponse === \"object\" && maybeResponse !== null && \"status\" in maybeResponse && \"ok\" in maybeResponse && \"json\" in maybeResponse && typeof maybeResponse.json === \"function\";\n};\n// Storage helpers\nconst setItemAsync = async (storage, key, data)=>{\n    await storage.setItem(key, JSON.stringify(data));\n};\nconst getItemAsync = async (storage, key)=>{\n    const value = await storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    } catch (_a) {\n        return value;\n    }\n};\nconst removeItemAsync = async (storage, key)=>{\n    await storage.removeItem(key);\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */ class Deferred {\n    constructor(){\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej)=>{\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\nfunction decodeJWT(token) {\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n        throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError(\"Invalid JWT structure\");\n    }\n    // Regex checks for base64url format\n    for(let i = 0; i < parts.length; i++){\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.BASE64URL_REGEX.test(parts[i])) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AuthInvalidJwtError(\"JWT not in base64url format\");\n        }\n    }\n    const data = {\n        // using base64url lib\n        header: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[0])),\n        payload: JSON.parse((0,_base64url__WEBPACK_IMPORTED_MODULE_2__.stringFromBase64URL)(parts[1])),\n        signature: (0,_base64url__WEBPACK_IMPORTED_MODULE_2__.base64UrlToUint8Array)(parts[2]),\n        raw: {\n            header: parts[0],\n            payload: parts[1]\n        }\n    };\n    return data;\n}\n/**\n * Creates a promise that resolves to null after some time.\n */ async function sleep(time) {\n    return await new Promise((accept)=>{\n        setTimeout(()=>accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */ function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject)=>{\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (async ()=>{\n            for(let attempt = 0; attempt < Infinity; attempt++){\n                try {\n                    const result = await fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                } catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        })();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return (\"0\" + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nfunction generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === \"undefined\") {\n        const charSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\";\n        const charSetLen = charSet.length;\n        let verifier = \"\";\n        for(let i = 0; i < verifierLength; i++){\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join(\"\");\n}\nasync function sha256(randomString) {\n    const encoder = new TextEncoder();\n    const encodedData = encoder.encode(randomString);\n    const hash = await crypto.subtle.digest(\"SHA-256\", encodedData);\n    const bytes = new Uint8Array(hash);\n    return Array.from(bytes).map((c)=>String.fromCharCode(c)).join(\"\");\n}\nasync function generatePKCEChallenge(verifier) {\n    const hasCryptoSupport = typeof crypto !== \"undefined\" && typeof crypto.subtle !== \"undefined\" && typeof TextEncoder !== \"undefined\";\n    if (!hasCryptoSupport) {\n        console.warn(\"WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.\");\n        return verifier;\n    }\n    const hashed = await sha256(verifier);\n    return btoa(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n}\nasync function getCodeChallengeAndMethod(storage, storageKey) {\n    let isPasswordRecovery = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    const codeVerifier = generatePKCEVerifier();\n    let storedCodeVerifier = codeVerifier;\n    if (isPasswordRecovery) {\n        storedCodeVerifier += \"/PASSWORD_RECOVERY\";\n    }\n    await setItemAsync(storage, \"\".concat(storageKey, \"-code-verifier\"), storedCodeVerifier);\n    const codeChallenge = await generatePKCEChallenge(codeVerifier);\n    const codeChallengeMethod = codeVerifier === codeChallenge ? \"plain\" : \"s256\";\n    return [\n        codeChallenge,\n        codeChallengeMethod\n    ];\n}\n/** Parses the API version which is 2YYY-MM-DD. */ const API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;\nfunction parseResponseAPIVersion(response) {\n    const apiVersion = response.headers.get(_constants__WEBPACK_IMPORTED_MODULE_0__.API_VERSION_HEADER_NAME);\n    if (!apiVersion) {\n        return null;\n    }\n    if (!apiVersion.match(API_VERSION_REGEX)) {\n        return null;\n    }\n    try {\n        const date = new Date(\"\".concat(apiVersion, \"T00:00:00.0Z\"));\n        return date;\n    } catch (e) {\n        return null;\n    }\n}\nfunction validateExp(exp) {\n    if (!exp) {\n        throw new Error(\"Missing exp claim\");\n    }\n    const timeNow = Math.floor(Date.now() / 1000);\n    if (exp <= timeNow) {\n        throw new Error(\"JWT has expired\");\n    }\n}\nfunction getAlgorithm(alg) {\n    switch(alg){\n        case \"RS256\":\n            return {\n                name: \"RSASSA-PKCS1-v1_5\",\n                hash: {\n                    name: \"SHA-256\"\n                }\n            };\n        case \"ES256\":\n            return {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\",\n                hash: {\n                    name: \"SHA-256\"\n                }\n            };\n        default:\n            throw new Error(\"Invalid alg claim\");\n    }\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   localStorageAdapter: function() { return /* binding */ localStorageAdapter; },\n/* harmony export */   memoryLocalStorageAdapter: function() { return /* binding */ memoryLocalStorageAdapter; }\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\n/**\n * Provides safe access to the globalThis.localStorage property.\n */ const localStorageAdapter = {\n    getItem: (key)=>{\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value)=>{\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key)=>{\n        if (!(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    }\n};\n/**\n * Returns a localStorage-like object that stores the key-value pairs in\n * memory.\n */ function memoryLocalStorageAdapter() {\n    let store = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return {\n        getItem: (key)=>{\n            return store[key] || null;\n        },\n        setItem: (key, value)=>{\n            store[key] = value;\n        },\n        removeItem: (key)=>{\n            delete store[key];\n        }\n    };\n} //# sourceMappingURL=local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvbG9jYWwtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUQ7QUFDakQ7O0NBRUMsR0FDTSxNQUFNQyxzQkFBc0I7SUFDL0JDLFNBQVMsQ0FBQ0M7UUFDTixJQUFJLENBQUNILDhEQUFvQkEsSUFBSTtZQUN6QixPQUFPO1FBQ1g7UUFDQSxPQUFPSSxXQUFXQyxZQUFZLENBQUNILE9BQU8sQ0FBQ0M7SUFDM0M7SUFDQUcsU0FBUyxDQUFDSCxLQUFLSTtRQUNYLElBQUksQ0FBQ1AsOERBQW9CQSxJQUFJO1lBQ3pCO1FBQ0o7UUFDQUksV0FBV0MsWUFBWSxDQUFDQyxPQUFPLENBQUNILEtBQUtJO0lBQ3pDO0lBQ0FDLFlBQVksQ0FBQ0w7UUFDVCxJQUFJLENBQUNILDhEQUFvQkEsSUFBSTtZQUN6QjtRQUNKO1FBQ0FJLFdBQVdDLFlBQVksQ0FBQ0csVUFBVSxDQUFDTDtJQUN2QztBQUNKLEVBQUU7QUFDRjs7O0NBR0MsR0FDTSxTQUFTTTtRQUEwQkMsUUFBQUEsaUVBQVEsQ0FBQztJQUMvQyxPQUFPO1FBQ0hSLFNBQVMsQ0FBQ0M7WUFDTixPQUFPTyxLQUFLLENBQUNQLElBQUksSUFBSTtRQUN6QjtRQUNBRyxTQUFTLENBQUNILEtBQUtJO1lBQ1hHLEtBQUssQ0FBQ1AsSUFBSSxHQUFHSTtRQUNqQjtRQUNBQyxZQUFZLENBQUNMO1lBQ1QsT0FBT08sS0FBSyxDQUFDUCxJQUFJO1FBQ3JCO0lBQ0o7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL2xvY2FsLXN0b3JhZ2UuanM/MjNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBwb3J0c0xvY2FsU3RvcmFnZSB9IGZyb20gJy4vaGVscGVycyc7XG4vKipcbiAqIFByb3ZpZGVzIHNhZmUgYWNjZXNzIHRvIHRoZSBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZSBwcm9wZXJ0eS5cbiAqL1xuZXhwb3J0IGNvbnN0IGxvY2FsU3RvcmFnZUFkYXB0ZXIgPSB7XG4gICAgZ2V0SXRlbTogKGtleSkgPT4ge1xuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSk7XG4gICAgfSxcbiAgICBzZXRJdGVtOiAoa2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgdmFsdWUpO1xuICAgIH0sXG4gICAgcmVtb3ZlSXRlbTogKGtleSkgPT4ge1xuICAgICAgICBpZiAoIXN1cHBvcnRzTG9jYWxTdG9yYWdlKCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBnbG9iYWxUaGlzLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgfSxcbn07XG4vKipcbiAqIFJldHVybnMgYSBsb2NhbFN0b3JhZ2UtbGlrZSBvYmplY3QgdGhhdCBzdG9yZXMgdGhlIGtleS12YWx1ZSBwYWlycyBpblxuICogbWVtb3J5LlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVtb3J5TG9jYWxTdG9yYWdlQWRhcHRlcihzdG9yZSA9IHt9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ2V0SXRlbTogKGtleSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlW2tleV0gfHwgbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0SXRlbTogKGtleSwgdmFsdWUpID0+IHtcbiAgICAgICAgICAgIHN0b3JlW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgcmVtb3ZlSXRlbTogKGtleSkgPT4ge1xuICAgICAgICAgICAgZGVsZXRlIHN0b3JlW2tleV07XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvY2FsLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbInN1cHBvcnRzTG9jYWxTdG9yYWdlIiwibG9jYWxTdG9yYWdlQWRhcHRlciIsImdldEl0ZW0iLCJrZXkiLCJnbG9iYWxUaGlzIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInZhbHVlIiwicmVtb3ZlSXRlbSIsIm1lbW9yeUxvY2FsU3RvcmFnZUFkYXB0ZXIiLCJzdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/local-storage.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/locks.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LockAcquireTimeoutError: function() { return /* binding */ LockAcquireTimeoutError; },\n/* harmony export */   NavigatorLockAcquireTimeoutError: function() { return /* binding */ NavigatorLockAcquireTimeoutError; },\n/* harmony export */   ProcessLockAcquireTimeoutError: function() { return /* binding */ ProcessLockAcquireTimeoutError; },\n/* harmony export */   internals: function() { return /* binding */ internals; },\n/* harmony export */   navigatorLock: function() { return /* binding */ navigatorLock; },\n/* harmony export */   processLock: function() { return /* binding */ processLock; }\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/helpers.js\");\n\n/**\n * @experimental\n */ const internals = {\n    /**\n     * @experimental\n     */ debug: !!(globalThis && (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.supportsLocalStorage)() && globalThis.localStorage && globalThis.localStorage.getItem(\"supabase.gotrue-js.locks.debug\") === \"true\")\n};\n/**\n * An error thrown when a lock cannot be acquired after some amount of time.\n *\n * Use the {@link #isAcquireTimeout} property instead of checking with `instanceof`.\n */ class LockAcquireTimeoutError extends Error {\n    constructor(message){\n        super(message);\n        this.isAcquireTimeout = true;\n    }\n}\nclass NavigatorLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\nclass ProcessLockAcquireTimeoutError extends LockAcquireTimeoutError {\n}\n/**\n * Implements a global exclusive lock using the Navigator LockManager API. It\n * is available on all browsers released after 2022-03-15 with Safari being the\n * last one to release support. If the API is not available, this function will\n * throw. Make sure you check availablility before configuring {@link\n * GoTrueClient}.\n *\n * You can turn on debugging by setting the `supabase.gotrue-js.locks.debug`\n * local storage item to `true`.\n *\n * Internals:\n *\n * Since the LockManager API does not preserve stack traces for the async\n * function passed in the `request` method, a trick is used where acquiring the\n * lock releases a previously started promise to run the operation in the `fn`\n * function. The lock waits for that promise to finish (with or without error),\n * while the function will finally wait for the result anyway.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */ async function navigatorLock(name, acquireTimeout, fn) {\n    if (internals.debug) {\n        console.log(\"@supabase/gotrue-js: navigatorLock: acquire lock\", name, acquireTimeout);\n    }\n    const abortController = new globalThis.AbortController();\n    if (acquireTimeout > 0) {\n        setTimeout(()=>{\n            abortController.abort();\n            if (internals.debug) {\n                console.log(\"@supabase/gotrue-js: navigatorLock acquire timed out\", name);\n            }\n        }, acquireTimeout);\n    }\n    // MDN article: https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\n    // Wrapping navigator.locks.request() with a plain Promise is done as some\n    // libraries like zone.js patch the Promise object to track the execution\n    // context. However, it appears that most browsers use an internal promise\n    // implementation when using the navigator.locks.request() API causing them\n    // to lose context and emit confusing log messages or break certain features.\n    // This wrapping is believed to help zone.js track the execution context\n    // better.\n    return await Promise.resolve().then(()=>globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {\n            mode: \"exclusive\",\n            ifAvailable: true\n        } : {\n            mode: \"exclusive\",\n            signal: abortController.signal\n        }, async (lock)=>{\n            if (lock) {\n                if (internals.debug) {\n                    console.log(\"@supabase/gotrue-js: navigatorLock: acquired\", name, lock.name);\n                }\n                try {\n                    return await fn();\n                } finally{\n                    if (internals.debug) {\n                        console.log(\"@supabase/gotrue-js: navigatorLock: released\", name, lock.name);\n                    }\n                }\n            } else {\n                if (acquireTimeout === 0) {\n                    if (internals.debug) {\n                        console.log(\"@supabase/gotrue-js: navigatorLock: not immediately available\", name);\n                    }\n                    throw new NavigatorLockAcquireTimeoutError('Acquiring an exclusive Navigator LockManager lock \"'.concat(name, '\" immediately failed'));\n                } else {\n                    if (internals.debug) {\n                        try {\n                            const result = await globalThis.navigator.locks.query();\n                            console.log(\"@supabase/gotrue-js: Navigator LockManager state\", JSON.stringify(result, null, \"  \"));\n                        } catch (e) {\n                            console.warn(\"@supabase/gotrue-js: Error when querying Navigator LockManager state\", e);\n                        }\n                    }\n                    // Browser is not following the Navigator LockManager spec, it\n                    // returned a null lock when we didn't use ifAvailable. So we can\n                    // pretend the lock is acquired in the name of backward compatibility\n                    // and user experience and just run the function.\n                    console.warn(\"@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request\");\n                    return await fn();\n                }\n            }\n        }));\n}\nconst PROCESS_LOCKS = {};\n/**\n * Implements a global exclusive lock that works only in the current process.\n * Useful for environments like React Native or other non-browser\n * single-process (i.e. no concept of \"tabs\") environments.\n *\n * Use {@link #navigatorLock} in browser environments.\n *\n * @param name Name of the lock to be acquired.\n * @param acquireTimeout If negative, no timeout. If 0 an error is thrown if\n *                       the lock can't be acquired without waiting. If positive, the lock acquire\n *                       will time out after so many milliseconds. An error is\n *                       a timeout if it has `isAcquireTimeout` set to true.\n * @param fn The operation to run once the lock is acquired.\n */ async function processLock(name, acquireTimeout, fn) {\n    var _a;\n    const previousOperation = (_a = PROCESS_LOCKS[name]) !== null && _a !== void 0 ? _a : Promise.resolve();\n    const currentOperation = Promise.race([\n        previousOperation.catch(()=>{\n            // ignore error of previous operation that we're waiting to finish\n            return null;\n        }),\n        acquireTimeout >= 0 ? new Promise((_, reject)=>{\n            setTimeout(()=>{\n                reject(new ProcessLockAcquireTimeoutError('Acquring process lock with name \"'.concat(name, '\" timed out')));\n            }, acquireTimeout);\n        }) : null\n    ].filter((x)=>x)).catch((e)=>{\n        if (e && e.isAcquireTimeout) {\n            throw e;\n        }\n        return null;\n    }).then(async ()=>{\n        // previous operations finished and we didn't get a race on the acquire\n        // timeout, so the current operation can finally start\n        return await fn();\n    });\n    PROCESS_LOCKS[name] = currentOperation.catch(async (e)=>{\n        if (e && e.isAcquireTimeout) {\n            // if the current operation timed out, it doesn't mean that the previous\n            // operation finished, so we need contnue waiting for it to finish\n            await previousOperation;\n            return null;\n        }\n        throw e;\n    });\n    // finally wait for the current operation to finish successfully, with an\n    // error or with an acquire timeout error\n    return await currentOperation;\n} //# sourceMappingURL=locks.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/locks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   polyfillGlobalThis: function() { return /* binding */ polyfillGlobalThis; }\n/* harmony export */ });\n/**\n * https://mathiasbynens.be/notes/globalthis\n */ function polyfillGlobalThis() {\n    if (typeof globalThis === \"object\") return;\n    try {\n        Object.defineProperty(Object.prototype, \"__magic__\", {\n            get: function() {\n                return this;\n            },\n            configurable: true\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    } catch (e) {\n        if (typeof self !== \"undefined\") {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n} //# sourceMappingURL=polyfills.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLFNBQVNBO0lBQ1osSUFBSSxPQUFPQyxlQUFlLFVBQ3RCO0lBQ0osSUFBSTtRQUNBQyxPQUFPQyxjQUFjLENBQUNELE9BQU9FLFNBQVMsRUFBRSxhQUFhO1lBQ2pEQyxLQUFLO2dCQUNELE9BQU8sSUFBSTtZQUNmO1lBQ0FDLGNBQWM7UUFDbEI7UUFDQSwyQ0FBMkM7UUFDM0NDLFVBQVVOLFVBQVUsR0FBR007UUFDdkIsMkNBQTJDO1FBQzNDLE9BQU9MLE9BQU9FLFNBQVMsQ0FBQ0csU0FBUztJQUNyQyxFQUNBLE9BQU9DLEdBQUc7UUFDTixJQUFJLE9BQU9DLFNBQVMsYUFBYTtZQUM3Qiw2Q0FBNkM7WUFDN0NBLEtBQUtSLFVBQVUsR0FBR1E7UUFDdEI7SUFDSjtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvcG9seWZpbGxzLmpzPzYzZTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvZ2xvYmFsdGhpc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcG9seWZpbGxHbG9iYWxUaGlzKCkge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpXG4gICAgICAgIHJldHVybjtcbiAgICB0cnkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoT2JqZWN0LnByb3RvdHlwZSwgJ19fbWFnaWNfXycsIHtcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBtYWdpYydcbiAgICAgICAgX19tYWdpY19fLmdsb2JhbFRoaXMgPSBfX21hZ2ljX187XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgJ0FsbG93IGFjY2VzcyB0byBtYWdpYydcbiAgICAgICAgZGVsZXRlIE9iamVjdC5wcm90b3R5cGUuX19tYWdpY19fO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yICdBbGxvdyBhY2Nlc3MgdG8gZ2xvYmFscydcbiAgICAgICAgICAgIHNlbGYuZ2xvYmFsVGhpcyA9IHNlbGY7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wb2x5ZmlsbHMuanMubWFwIl0sIm5hbWVzIjpbInBvbHlmaWxsR2xvYmFsVGhpcyIsImdsb2JhbFRoaXMiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsInByb3RvdHlwZSIsImdldCIsImNvbmZpZ3VyYWJsZSIsIl9fbWFnaWNfXyIsImUiLCJzZWxmIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/polyfills.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/types.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanMiLCJtYXBwaW5ncyI6IjtBQUFVLENBQ1YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdHlwZXMuanM/MWY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/auth-js/dist/module/lib/version.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = \"2.69.1\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvYXV0aC1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsVUFBVSxTQUFTLENBQ2hDLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2F1dGgtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanM/OTc3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdmVyc2lvbiA9ICcyLjY5LjEnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionsClient: function() { return /* binding */ FunctionsClient; }\n/* harmony export */ });\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nclass FunctionsClient {\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */ setAuth(token) {\n        this.headers.Authorization = \"Bearer \".concat(token);\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */ invoke(functionName) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let { region } = options;\n                if (!region) {\n                    region = this.region;\n                }\n                if (region && region !== \"any\") {\n                    _headers[\"x-region\"] = region;\n                }\n                let body;\n                if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, \"Content-Type\") || !headers)) {\n                    if (typeof Blob !== \"undefined\" && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers[\"Content-Type\"] = \"application/octet-stream\";\n                        body = functionArgs;\n                    } else if (typeof functionArgs === \"string\") {\n                        // plain string\n                        _headers[\"Content-Type\"] = \"text/plain\";\n                        body = functionArgs;\n                    } else if (typeof FormData !== \"undefined\" && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    } else {\n                        // default, assume this is JSON\n                        _headers[\"Content-Type\"] = \"application/json\";\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(\"\".concat(this.url, \"/\").concat(functionName), {\n                    method: method || \"POST\",\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body\n                }).catch((fetchError)=>{\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get(\"x-relay-error\");\n                if (isRelayError && isRelayError === \"true\") {\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new _types__WEBPACK_IMPORTED_MODULE_0__.FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"text/plain\").split(\";\")[0].trim();\n                let data;\n                if (responseType === \"application/json\") {\n                    data = yield response.json();\n                } else if (responseType === \"application/octet-stream\") {\n                    data = yield response.blob();\n                } else if (responseType === \"text/event-stream\") {\n                    data = response;\n                } else if (responseType === \"multipart/form-data\") {\n                    data = yield response.formData();\n                } else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                return {\n                    data: null,\n                    error\n                };\n            }\n        });\n    }\n    constructor(url, { headers = {}, customFetch, region = _types__WEBPACK_IMPORTED_MODULE_0__.FunctionRegion.Any } = {}){\n        this.url = url;\n        this.headers = headers;\n        this.region = region;\n        this.fetch = (0,_helper__WEBPACK_IMPORTED_MODULE_1__.resolveFetch)(customFetch);\n    }\n} //# sourceMappingURL=FunctionsClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/helper.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; }\n/* harmony export */ });\nconst resolveFetch = (customFetch)=>{\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    } else if (typeof fetch === \"undefined\") {\n        _fetch = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then((param)=>{\n                let { default: fetch1 } = param;\n                return fetch1(...args);\n            });\n        };\n    } else {\n        _fetch = fetch;\n    }\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return _fetch(...args);\n    };\n}; //# sourceMappingURL=helper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL2hlbHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsZUFBZSxDQUFDQztJQUN6QixJQUFJQztJQUNKLElBQUlELGFBQWE7UUFDYkMsU0FBU0Q7SUFDYixPQUNLLElBQUksT0FBT0UsVUFBVSxhQUFhO1FBQ25DRCxTQUFTOzZDQUFJRTtnQkFBQUE7O21CQUFTLHNMQUFPLENBQXdCQyxJQUFJLENBQUM7b0JBQUMsRUFBRUMsU0FBU0gsTUFBSyxFQUFFO3VCQUFLQSxVQUFTQzs7O0lBQy9GLE9BQ0s7UUFDREYsU0FBU0M7SUFDYjtJQUNBLE9BQU87eUNBQUlDO1lBQUFBOztlQUFTRixVQUFVRTs7QUFDbEMsRUFBRSxDQUNGLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS9oZWxwZXIuanM/YjY5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XG4gICAgbGV0IF9mZXRjaDtcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgX2ZldGNoID0gKC4uLmFyZ3MpID0+IGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IGZldGNoKC4uLmFyZ3MpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIF9mZXRjaCA9IGZldGNoO1xuICAgIH1cbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZWxwZXIuanMubWFwIl0sIm5hbWVzIjpbInJlc29sdmVGZXRjaCIsImN1c3RvbUZldGNoIiwiX2ZldGNoIiwiZmV0Y2giLCJhcmdzIiwidGhlbiIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/helper.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/functions-js/dist/module/types.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FunctionRegion: function() { return /* binding */ FunctionRegion; },\n/* harmony export */   FunctionsError: function() { return /* binding */ FunctionsError; },\n/* harmony export */   FunctionsFetchError: function() { return /* binding */ FunctionsFetchError; },\n/* harmony export */   FunctionsHttpError: function() { return /* binding */ FunctionsHttpError; },\n/* harmony export */   FunctionsRelayError: function() { return /* binding */ FunctionsRelayError; }\n/* harmony export */ });\nclass FunctionsError extends Error {\n    constructor(message, name = \"FunctionsError\", context){\n        super(message);\n        this.name = name;\n        this.context = context;\n    }\n}\nclass FunctionsFetchError extends FunctionsError {\n    constructor(context){\n        super(\"Failed to send a request to the Edge Function\", \"FunctionsFetchError\", context);\n    }\n}\nclass FunctionsRelayError extends FunctionsError {\n    constructor(context){\n        super(\"Relay Error invoking the Edge Function\", \"FunctionsRelayError\", context);\n    }\n}\nclass FunctionsHttpError extends FunctionsError {\n    constructor(context){\n        super(\"Edge Function returned a non-2xx status code\", \"FunctionsHttpError\", context);\n    }\n}\n// Define the enum for the 'region' property\nvar FunctionRegion;\n(function(FunctionRegion) {\n    FunctionRegion[\"Any\"] = \"any\";\n    FunctionRegion[\"ApNortheast1\"] = \"ap-northeast-1\";\n    FunctionRegion[\"ApNortheast2\"] = \"ap-northeast-2\";\n    FunctionRegion[\"ApSouth1\"] = \"ap-south-1\";\n    FunctionRegion[\"ApSoutheast1\"] = \"ap-southeast-1\";\n    FunctionRegion[\"ApSoutheast2\"] = \"ap-southeast-2\";\n    FunctionRegion[\"CaCentral1\"] = \"ca-central-1\";\n    FunctionRegion[\"EuCentral1\"] = \"eu-central-1\";\n    FunctionRegion[\"EuWest1\"] = \"eu-west-1\";\n    FunctionRegion[\"EuWest2\"] = \"eu-west-2\";\n    FunctionRegion[\"EuWest3\"] = \"eu-west-3\";\n    FunctionRegion[\"SaEast1\"] = \"sa-east-1\";\n    FunctionRegion[\"UsEast1\"] = \"us-east-1\";\n    FunctionRegion[\"UsWest1\"] = \"us-west-1\";\n    FunctionRegion[\"UsWest2\"] = \"us-west-2\";\n})(FunctionRegion || (FunctionRegion = {})); //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvZnVuY3Rpb25zLWpzL2Rpc3QvbW9kdWxlL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sTUFBTUEsdUJBQXVCQztJQUNoQ0MsWUFBWUMsT0FBTyxFQUFFQyxPQUFPLGdCQUFnQixFQUFFQyxPQUFPLENBQUU7UUFDbkQsS0FBSyxDQUFDRjtRQUNOLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsT0FBTyxHQUFHQTtJQUNuQjtBQUNKO0FBQ08sTUFBTUMsNEJBQTRCTjtJQUNyQ0UsWUFBWUcsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQyxpREFBaUQsdUJBQXVCQTtJQUNsRjtBQUNKO0FBQ08sTUFBTUUsNEJBQTRCUDtJQUNyQ0UsWUFBWUcsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQywwQ0FBMEMsdUJBQXVCQTtJQUMzRTtBQUNKO0FBQ08sTUFBTUcsMkJBQTJCUjtJQUNwQ0UsWUFBWUcsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQyxnREFBZ0Qsc0JBQXNCQTtJQUNoRjtBQUNKO0FBQ0EsNENBQTRDO0FBQ3JDLElBQUlJLGVBQWU7QUFDekIsVUFBVUEsY0FBYztJQUNyQkEsY0FBYyxDQUFDLE1BQU0sR0FBRztJQUN4QkEsY0FBYyxDQUFDLGVBQWUsR0FBRztJQUNqQ0EsY0FBYyxDQUFDLGVBQWUsR0FBRztJQUNqQ0EsY0FBYyxDQUFDLFdBQVcsR0FBRztJQUM3QkEsY0FBYyxDQUFDLGVBQWUsR0FBRztJQUNqQ0EsY0FBYyxDQUFDLGVBQWUsR0FBRztJQUNqQ0EsY0FBYyxDQUFDLGFBQWEsR0FBRztJQUMvQkEsY0FBYyxDQUFDLGFBQWEsR0FBRztJQUMvQkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztJQUM1QkEsY0FBYyxDQUFDLFVBQVUsR0FBRztBQUNoQyxHQUFHQSxrQkFBbUJBLENBQUFBLGlCQUFpQixDQUFDLEtBQ3hDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL2Z1bmN0aW9ucy1qcy9kaXN0L21vZHVsZS90eXBlcy5qcz82ODhlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBGdW5jdGlvbnNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBuYW1lID0gJ0Z1bmN0aW9uc0Vycm9yJywgY29udGV4dCkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gY29udGV4dDtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zRmV0Y2hFcnJvciBleHRlbmRzIEZ1bmN0aW9uc0Vycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKCdGYWlsZWQgdG8gc2VuZCBhIHJlcXVlc3QgdG8gdGhlIEVkZ2UgRnVuY3Rpb24nLCAnRnVuY3Rpb25zRmV0Y2hFcnJvcicsIGNvbnRleHQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBGdW5jdGlvbnNSZWxheUVycm9yIGV4dGVuZHMgRnVuY3Rpb25zRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIoJ1JlbGF5IEVycm9yIGludm9raW5nIHRoZSBFZGdlIEZ1bmN0aW9uJywgJ0Z1bmN0aW9uc1JlbGF5RXJyb3InLCBjb250ZXh0KTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRnVuY3Rpb25zSHR0cEVycm9yIGV4dGVuZHMgRnVuY3Rpb25zRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIoJ0VkZ2UgRnVuY3Rpb24gcmV0dXJuZWQgYSBub24tMnh4IHN0YXR1cyBjb2RlJywgJ0Z1bmN0aW9uc0h0dHBFcnJvcicsIGNvbnRleHQpO1xuICAgIH1cbn1cbi8vIERlZmluZSB0aGUgZW51bSBmb3IgdGhlICdyZWdpb24nIHByb3BlcnR5XG5leHBvcnQgdmFyIEZ1bmN0aW9uUmVnaW9uO1xuKGZ1bmN0aW9uIChGdW5jdGlvblJlZ2lvbikge1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiQW55XCJdID0gXCJhbnlcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwTm9ydGhlYXN0MVwiXSA9IFwiYXAtbm9ydGhlYXN0LTFcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwTm9ydGhlYXN0MlwiXSA9IFwiYXAtbm9ydGhlYXN0LTJcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkFwU291dGgxXCJdID0gXCJhcC1zb3V0aC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoZWFzdDFcIl0gPSBcImFwLXNvdXRoZWFzdC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJBcFNvdXRoZWFzdDJcIl0gPSBcImFwLXNvdXRoZWFzdC0yXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJDYUNlbnRyYWwxXCJdID0gXCJjYS1jZW50cmFsLTFcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1Q2VudHJhbDFcIl0gPSBcImV1LWNlbnRyYWwtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiRXVXZXN0MVwiXSA9IFwiZXUtd2VzdC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJFdVdlc3QyXCJdID0gXCJldS13ZXN0LTJcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIkV1V2VzdDNcIl0gPSBcImV1LXdlc3QtM1wiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiU2FFYXN0MVwiXSA9IFwic2EtZWFzdC0xXCI7XG4gICAgRnVuY3Rpb25SZWdpb25bXCJVc0Vhc3QxXCJdID0gXCJ1cy1lYXN0LTFcIjtcbiAgICBGdW5jdGlvblJlZ2lvbltcIlVzV2VzdDFcIl0gPSBcInVzLXdlc3QtMVwiO1xuICAgIEZ1bmN0aW9uUmVnaW9uW1wiVXNXZXN0MlwiXSA9IFwidXMtd2VzdC0yXCI7XG59KShGdW5jdGlvblJlZ2lvbiB8fCAoRnVuY3Rpb25SZWdpb24gPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbIkZ1bmN0aW9uc0Vycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIiwiY29udGV4dCIsIkZ1bmN0aW9uc0ZldGNoRXJyb3IiLCJGdW5jdGlvbnNSZWxheUVycm9yIiwiRnVuY3Rpb25zSHR0cEVycm9yIiwiRnVuY3Rpb25SZWdpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js":
/*!******************************************************!*\
  !*** ./node_modules/@supabase/node-fetch/browser.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Headers: function() { return /* binding */ Headers; },\n/* harmony export */   Request: function() { return /* binding */ Request; },\n/* harmony export */   Response: function() { return /* binding */ Response; },\n/* harmony export */   fetch: function() { return /* binding */ fetch; }\n/* harmony export */ });\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (true) {\n        return window;\n    }\n    if (typeof __webpack_require__.g !== \"undefined\") {\n        return __webpack_require__.g;\n    }\n    throw new Error(\"unable to locate global object\");\n};\nvar globalObject = getGlobal();\nconst fetch = globalObject.fetch;\n/* harmony default export */ __webpack_exports__[\"default\"] = (globalObject.fetch.bind(globalObject));\nconst Headers = globalObject.Headers;\nconst Request = globalObject.Request;\nconst Response = globalObject.Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvbm9kZS1mZXRjaC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBYTtBQUViLCtDQUErQztBQUMvQyxJQUFJQSxZQUFZO0lBQ1osc0RBQXNEO0lBQ3RELDhCQUE4QjtJQUM5QixzREFBc0Q7SUFDdEQsSUFBSSxPQUFPQyxTQUFTLGFBQWE7UUFBRSxPQUFPQTtJQUFNO0lBQ2hELElBQUksSUFBa0IsRUFBYTtRQUFFLE9BQU9DO0lBQVE7SUFDcEQsSUFBSSxPQUFPQyxxQkFBTUEsS0FBSyxhQUFhO1FBQUUsT0FBT0EscUJBQU1BO0lBQUU7SUFDcEQsTUFBTSxJQUFJQyxNQUFNO0FBQ3BCO0FBRUEsSUFBSUMsZUFBZUw7QUFFWixNQUFNTSxRQUFRRCxhQUFhQyxLQUFLLENBQUM7QUFFeEMsK0RBQWVELGFBQWFDLEtBQUssQ0FBQ0MsSUFBSSxDQUFDRixhQUFhQSxFQUFDO0FBRTlDLE1BQU1HLFVBQVVILGFBQWFHLE9BQU8sQ0FBQztBQUNyQyxNQUFNQyxVQUFVSixhQUFhSSxPQUFPLENBQUM7QUFDckMsTUFBTUMsV0FBV0wsYUFBYUssUUFBUSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvbm9kZS1mZXRjaC9icm93c2VyLmpzPzIxZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJlZjogaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgZ2V0R2xvYmFsID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gdGhlIG9ubHkgcmVsaWFibGUgbWVhbnMgdG8gZ2V0IHRoZSBnbG9iYWwgb2JqZWN0IGlzXG4gICAgLy8gYEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKClgXG4gICAgLy8gSG93ZXZlciwgdGhpcyBjYXVzZXMgQ1NQIHZpb2xhdGlvbnMgaW4gQ2hyb21lIGFwcHMuXG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gc2VsZjsgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykgeyByZXR1cm4gd2luZG93OyB9XG4gICAgaWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBnbG9iYWw7IH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VuYWJsZSB0byBsb2NhdGUgZ2xvYmFsIG9iamVjdCcpO1xufVxuXG52YXIgZ2xvYmFsT2JqZWN0ID0gZ2V0R2xvYmFsKCk7XG5cbmV4cG9ydCBjb25zdCBmZXRjaCA9IGdsb2JhbE9iamVjdC5mZXRjaDtcblxuZXhwb3J0IGRlZmF1bHQgZ2xvYmFsT2JqZWN0LmZldGNoLmJpbmQoZ2xvYmFsT2JqZWN0KTtcblxuZXhwb3J0IGNvbnN0IEhlYWRlcnMgPSBnbG9iYWxPYmplY3QuSGVhZGVycztcbmV4cG9ydCBjb25zdCBSZXF1ZXN0ID0gZ2xvYmFsT2JqZWN0LlJlcXVlc3Q7XG5leHBvcnQgY29uc3QgUmVzcG9uc2UgPSBnbG9iYWxPYmplY3QuUmVzcG9uc2U7XG4iXSwibmFtZXMiOlsiZ2V0R2xvYmFsIiwic2VsZiIsIndpbmRvdyIsImdsb2JhbCIsIkVycm9yIiwiZ2xvYmFsT2JqZWN0IiwiZmV0Y2giLCJiaW5kIiwiSGVhZGVycyIsIlJlcXVlc3QiLCJSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n// @ts-ignore\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"));\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\nclass PostgrestBuilder {\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */ throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    /**\n     * Set an HTTP header for the request.\n     */ setHeader(name, value) {\n        this.headers = Object.assign({}, this.headers);\n        this.headers[name] = value;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n        // skip\n        } else if ([\n            \"GET\",\n            \"HEAD\"\n        ].includes(this.method)) {\n            this.headers[\"Accept-Profile\"] = this.schema;\n        } else {\n            this.headers[\"Content-Profile\"] = this.schema;\n        }\n        if (this.method !== \"GET\" && this.method !== \"HEAD\") {\n            this.headers[\"Content-Type\"] = \"application/json\";\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal\n        }).then(async (res)=>{\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== \"HEAD\") {\n                    const body = await res.text();\n                    if (body === \"\") {\n                    // Prefer: return=minimal\n                    } else if (this.headers[\"Accept\"] === \"text/csv\") {\n                        data = body;\n                    } else if (this.headers[\"Accept\"] && this.headers[\"Accept\"].includes(\"application/vnd.pgrst.plan+text\")) {\n                        data = body;\n                    } else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers[\"Prefer\"]) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get(\"content-range\")) === null || _b === void 0 ? void 0 : _b.split(\"/\");\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === \"GET\" && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: \"PGRST116\",\n                            details: \"Results contain \".concat(data.length, \" rows, application/vnd.pgrst.object+json requires 1 row\"),\n                            hint: null,\n                            message: \"JSON object requested, multiple (or no) rows returned\"\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = \"Not Acceptable\";\n                    } else if (data.length === 1) {\n                        data = data[0];\n                    } else {\n                        data = null;\n                    }\n                }\n            } else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = \"OK\";\n                    }\n                } catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === \"\") {\n                        status = 204;\n                        statusText = \"No Content\";\n                    } else {\n                        error = {\n                            message: body\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes(\"0 rows\"))) {\n                    error = null;\n                    status = 200;\n                    statusText = \"OK\";\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw new PostgrestError_1.default(error);\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError)=>{\n                var _a, _b, _c;\n                return {\n                    error: {\n                        message: \"\".concat((_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : \"FetchError\", \": \").concat(fetchError === null || fetchError === void 0 ? void 0 : fetchError.message),\n                        details: \"\".concat((_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : \"\"),\n                        hint: \"\",\n                        code: \"\".concat((_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : \"\")\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: \"\"\n                };\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */ returns() {\n        /* istanbul ignore next */ return this;\n    }\n    /**\n     * Override the type of the returned `data` field in the response.\n     *\n     * @typeParam NewResult - The new type to cast the response data to\n     * @typeParam Options - Optional type configuration (defaults to { merge: true })\n     * @typeParam Options.merge - When true, merges the new type with existing return type. When false, replaces the existing types entirely (defaults to true)\n     * @example\n     * ```typescript\n     * // Merge with existing types (default behavior)\n     * const query = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ custom_field: string }>()\n     *\n     * // Replace existing types completely\n     * const replaceQuery = supabase\n     *   .from('users')\n     *   .select()\n     *   .overrideTypes<{ id: number; name: string }, { merge: false }>()\n     * ```\n     * @returns A PostgrestBuilder instance with the new type\n     */ overrideTypes() {\n        return this;\n    }\n    constructor(builder){\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        } else if (typeof fetch === \"undefined\") {\n            this.fetch = node_fetch_1.default;\n        } else {\n            this.fetch = fetch;\n        }\n    }\n}\nexports[\"default\"] = PostgrestBuilder; //# sourceMappingURL=PostgrestBuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\");\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */ class PostgrestClient {\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */ from(relation) {\n        const url = new URL(\"\".concat(this.url, \"/\").concat(relation));\n        return new PostgrestQueryBuilder_1.default(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schemaName,\n            fetch: this.fetch\n        });\n    }\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */ schema(schema) {\n        return new PostgrestClient(this.url, {\n            headers: this.headers,\n            schema,\n            fetch: this.fetch\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */ rpc(fn) {\n        let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, { head = false, get = false, count } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        let method;\n        const url = new URL(\"\".concat(this.url, \"/rpc/\").concat(fn));\n        let body;\n        if (head || get) {\n            method = head ? \"HEAD\" : \"GET\";\n            Object.entries(args)// params with undefined value needs to be filtered out, otherwise it'll\n            // show up as `?param=undefined`\n            .filter((param)=>{\n                let [_, value] = param;\n                return value !== undefined;\n            })// array values need special syntax\n            .map((param)=>{\n                let [name, value] = param;\n                return [\n                    name,\n                    Array.isArray(value) ? \"{\".concat(value.join(\",\"), \"}\") : \"\".concat(value)\n                ];\n            }).forEach((param)=>{\n                let [name, value] = param;\n                url.searchParams.append(name, value);\n            });\n        } else {\n            method = \"POST\";\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers[\"Prefer\"] = \"count=\".concat(count);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url,\n            headers,\n            schema: this.schemaName,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */ constructor(url, { headers = {}, schema, fetch } = {}){\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);\n        this.schemaName = schema;\n        this.fetch = fetch;\n    }\n}\nexports[\"default\"] = PostgrestClient; //# sourceMappingURL=PostgrestClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * Error format\n *\n * {@link https://postgrest.org/en/stable/api.html?highlight=options#errors-and-http-status-codes}\n */ class PostgrestError extends Error {\n    constructor(context){\n        super(context.message);\n        this.name = \"PostgrestError\";\n        this.details = context.details;\n        this.hint = context.hint;\n        this.code = context.code;\n    }\n}\nexports[\"default\"] = PostgrestError; //# sourceMappingURL=PostgrestError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdEVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdEOzs7O0NBSUMsR0FDRCxNQUFNQyx1QkFBdUJDO0lBQ3pCQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQSxRQUFRQyxPQUFPO1FBQ3JCLElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDQyxPQUFPLEdBQUdILFFBQVFHLE9BQU87UUFDOUIsSUFBSSxDQUFDQyxJQUFJLEdBQUdKLFFBQVFJLElBQUk7UUFDeEIsSUFBSSxDQUFDQyxJQUFJLEdBQUdMLFFBQVFLLElBQUk7SUFDNUI7QUFDSjtBQUNBVixrQkFBZSxHQUFHRSxnQkFDbEIsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL1Bvc3RncmVzdEVycm9yLmpzPzEzZWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vKipcbiAqIEVycm9yIGZvcm1hdFxuICpcbiAqIHtAbGluayBodHRwczovL3Bvc3RncmVzdC5vcmcvZW4vc3RhYmxlL2FwaS5odG1sP2hpZ2hsaWdodD1vcHRpb25zI2Vycm9ycy1hbmQtaHR0cC1zdGF0dXMtY29kZXN9XG4gKi9cbmNsYXNzIFBvc3RncmVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgc3VwZXIoY29udGV4dC5tZXNzYWdlKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1Bvc3RncmVzdEVycm9yJztcbiAgICAgICAgdGhpcy5kZXRhaWxzID0gY29udGV4dC5kZXRhaWxzO1xuICAgICAgICB0aGlzLmhpbnQgPSBjb250ZXh0LmhpbnQ7XG4gICAgICAgIHRoaXMuY29kZSA9IGNvbnRleHQuY29kZTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBQb3N0Z3Jlc3RFcnJvcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvc3RncmVzdEVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlBvc3RncmVzdEVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsImNvbnRleHQiLCJtZXNzYWdlIiwibmFtZSIsImRldGFpbHMiLCJoaW50IiwiY29kZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\nclass PostgrestFilterBuilder extends PostgrestTransformBuilder_1.default {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ eq(column, value) {\n        this.url.searchParams.append(column, \"eq.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ neq(column, value) {\n        this.url.searchParams.append(column, \"neq.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ gt(column, value) {\n        this.url.searchParams.append(column, \"gt.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ gte(column, value) {\n        this.url.searchParams.append(column, \"gte.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ lt(column, value) {\n        this.url.searchParams.append(column, \"lt.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ lte(column, value) {\n        this.url.searchParams.append(column, \"lte.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */ like(column, pattern) {\n        this.url.searchParams.append(column, \"like.\".concat(pattern));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */ likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, \"like(all).{\".concat(patterns.join(\",\"), \"}\"));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */ likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, \"like(any).{\".concat(patterns.join(\",\"), \"}\"));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */ ilike(column, pattern) {\n        this.url.searchParams.append(column, \"ilike.\".concat(pattern));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */ ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, \"ilike(all).{\".concat(patterns.join(\",\"), \"}\"));\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */ ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, \"ilike(any).{\".concat(patterns.join(\",\"), \"}\"));\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */ is(column, value) {\n        this.url.searchParams.append(column, \"is.\".concat(value));\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */ in(column, values) {\n        const cleanedValues = Array.from(new Set(values)).map((s)=>{\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === \"string\" && new RegExp(\"[,()]\").test(s)) return '\"'.concat(s, '\"');\n            else return \"\".concat(s);\n        }).join(\",\");\n        this.url.searchParams.append(column, \"in.(\".concat(cleanedValues, \")\"));\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */ contains(column, value) {\n        if (typeof value === \"string\") {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, \"cs.\".concat(value));\n        } else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, \"cs.{\".concat(value.join(\",\"), \"}\"));\n        } else {\n            // json\n            this.url.searchParams.append(column, \"cs.\".concat(JSON.stringify(value)));\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */ containedBy(column, value) {\n        if (typeof value === \"string\") {\n            // range\n            this.url.searchParams.append(column, \"cd.\".concat(value));\n        } else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, \"cd.{\".concat(value.join(\",\"), \"}\"));\n        } else {\n            // json\n            this.url.searchParams.append(column, \"cd.\".concat(JSON.stringify(value)));\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */ rangeGt(column, range) {\n        this.url.searchParams.append(column, \"sr.\".concat(range));\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */ rangeGte(column, range) {\n        this.url.searchParams.append(column, \"nxl.\".concat(range));\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */ rangeLt(column, range) {\n        this.url.searchParams.append(column, \"sl.\".concat(range));\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */ rangeLte(column, range) {\n        this.url.searchParams.append(column, \"nxr.\".concat(range));\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */ rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, \"adj.\".concat(range));\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */ overlaps(column, value) {\n        if (typeof value === \"string\") {\n            // range\n            this.url.searchParams.append(column, \"ov.\".concat(value));\n        } else {\n            // array\n            this.url.searchParams.append(column, \"ov.{\".concat(value.join(\",\"), \"}\"));\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */ textSearch(column, query) {\n        let { config, type } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        let typePart = \"\";\n        if (type === \"plain\") {\n            typePart = \"pl\";\n        } else if (type === \"phrase\") {\n            typePart = \"ph\";\n        } else if (type === \"websearch\") {\n            typePart = \"w\";\n        }\n        const configPart = config === undefined ? \"\" : \"(\".concat(config, \")\");\n        this.url.searchParams.append(column, \"\".concat(typePart, \"fts\").concat(configPart, \".\").concat(query));\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */ match(query) {\n        Object.entries(query).forEach((param)=>{\n            let [column, value] = param;\n            this.url.searchParams.append(column, \"eq.\".concat(value));\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */ not(column, operator, value) {\n        this.url.searchParams.append(column, \"not.\".concat(operator, \".\").concat(value));\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to filter on referenced tables\n     * instead of the parent table\n     * @param options.foreignTable - Deprecated, use `referencedTable` instead\n     */ or(filters) {\n        let { foreignTable, referencedTable = foreignTable } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const key = referencedTable ? \"\".concat(referencedTable, \".or\") : \"or\";\n        this.url.searchParams.append(key, \"(\".concat(filters, \")\"));\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */ filter(column, operator, value) {\n        this.url.searchParams.append(column, \"\".concat(operator, \".\").concat(value));\n        return this;\n    }\n}\nexports[\"default\"] = PostgrestFilterBuilder; //# sourceMappingURL=PostgrestFilterBuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nclass PostgrestQueryBuilder {\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */ select(columns) {\n        let { head = false, count } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const method = head ? \"HEAD\" : \"GET\";\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : \"*\").split(\"\").map((c)=>{\n            if (/\\s/.test(c) && !quoted) {\n                return \"\";\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        }).join(\"\");\n        this.url.searchParams.set(\"select\", cleanedColumns);\n        if (count) {\n            this.headers[\"Prefer\"] = \"count=\".concat(count);\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. Only applies for bulk\n     * inserts.\n     */ insert(values) {\n        let { count, defaultToNull = true } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const method = \"POST\";\n        const prefersHeaders = [];\n        if (this.headers[\"Prefer\"]) {\n            prefersHeaders.push(this.headers[\"Prefer\"]);\n        }\n        if (count) {\n            prefersHeaders.push(\"count=\".concat(count));\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push(\"missing=default\");\n        }\n        this.headers[\"Prefer\"] = prefersHeaders.join(\",\");\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x)=>acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [\n                    ...new Set(columns)\n                ].map((column)=>'\"'.concat(column, '\"'));\n                this.url.searchParams.set(\"columns\", uniqueColumns.join(\",\"));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.\n     */ upsert(values) {\n        let { onConflict, ignoreDuplicates = false, count, defaultToNull = true } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const method = \"POST\";\n        const prefersHeaders = [\n            \"resolution=\".concat(ignoreDuplicates ? \"ignore\" : \"merge\", \"-duplicates\")\n        ];\n        if (onConflict !== undefined) this.url.searchParams.set(\"on_conflict\", onConflict);\n        if (this.headers[\"Prefer\"]) {\n            prefersHeaders.push(this.headers[\"Prefer\"]);\n        }\n        if (count) {\n            prefersHeaders.push(\"count=\".concat(count));\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push(\"missing=default\");\n        }\n        this.headers[\"Prefer\"] = prefersHeaders.join(\",\");\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x)=>acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [\n                    ...new Set(columns)\n                ].map((column)=>'\"'.concat(column, '\"'));\n                this.url.searchParams.set(\"columns\", uniqueColumns.join(\",\"));\n            }\n        }\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */ update(values) {\n        let { count } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const method = \"PATCH\";\n        const prefersHeaders = [];\n        if (this.headers[\"Prefer\"]) {\n            prefersHeaders.push(this.headers[\"Prefer\"]);\n        }\n        if (count) {\n            prefersHeaders.push(\"count=\".concat(count));\n        }\n        this.headers[\"Prefer\"] = prefersHeaders.join(\",\");\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */ delete() {\n        let { count } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        const method = \"DELETE\";\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(\"count=\".concat(count));\n        }\n        if (this.headers[\"Prefer\"]) {\n            prefersHeaders.unshift(this.headers[\"Prefer\"]);\n        }\n        this.headers[\"Prefer\"] = prefersHeaders.join(\",\");\n        return new PostgrestFilterBuilder_1.default({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false\n        });\n    }\n    constructor(url, { headers = {}, schema, fetch }){\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n}\nexports[\"default\"] = PostgrestQueryBuilder; //# sourceMappingURL=PostgrestQueryBuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\nclass PostgrestTransformBuilder extends PostgrestBuilder_1.default {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */ select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : \"*\").split(\"\").map((c)=>{\n            if (/\\s/.test(c) && !quoted) {\n                return \"\";\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        }).join(\"\");\n        this.url.searchParams.set(\"select\", cleanedColumns);\n        if (this.headers[\"Prefer\"]) {\n            this.headers[\"Prefer\"] += \",\";\n        }\n        this.headers[\"Prefer\"] += \"return=representation\";\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order referenced tables, but it only affects the ordering of the\n     * parent table if you use `!inner` in the query.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.referencedTable - Set this to order a referenced table by\n     * its columns\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */ order(column) {\n        let { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const key = referencedTable ? \"\".concat(referencedTable, \".order\") : \"order\";\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, \"\".concat(existingOrder ? \"\".concat(existingOrder, \",\") : \"\").concat(column, \".\").concat(ascending ? \"asc\" : \"desc\").concat(nullsFirst === undefined ? \"\" : nullsFirst ? \".nullsfirst\" : \".nullslast\"));\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */ limit(count) {\n        let { foreignTable, referencedTable = foreignTable } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const key = typeof referencedTable === \"undefined\" ? \"limit\" : \"\".concat(referencedTable, \".limit\");\n        this.url.searchParams.set(key, \"\".concat(count));\n        return this;\n    }\n    /**\n     * Limit the query result by starting at an offset `from` and ending at the offset `to`.\n     * Only records within this range are returned.\n     * This respects the query order and if there is no order clause the range could behave unexpectedly.\n     * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third\n     * and fourth rows of the query.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.referencedTable - Set this to limit rows of referenced\n     * tables instead of the parent table\n     * @param options.foreignTable - Deprecated, use `options.referencedTable`\n     * instead\n     */ range(from, to) {\n        let { foreignTable, referencedTable = foreignTable } = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        const keyOffset = typeof referencedTable === \"undefined\" ? \"offset\" : \"\".concat(referencedTable, \".offset\");\n        const keyLimit = typeof referencedTable === \"undefined\" ? \"limit\" : \"\".concat(referencedTable, \".limit\");\n        this.url.searchParams.set(keyOffset, \"\".concat(from));\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, \"\".concat(to - from + 1));\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */ abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */ single() {\n        this.headers[\"Accept\"] = \"application/vnd.pgrst.object+json\";\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */ maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === \"GET\") {\n            this.headers[\"Accept\"] = \"application/json\";\n        } else {\n            this.headers[\"Accept\"] = \"application/vnd.pgrst.object+json\";\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */ csv() {\n        this.headers[\"Accept\"] = \"text/csv\";\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */ geojson() {\n        this.headers[\"Accept\"] = \"application/geo+json\";\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * You need to enable the\n     * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)\n     * setting before using this method.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */ explain() {\n        let { analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = \"text\" } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        var _a;\n        const options = [\n            analyze ? \"analyze\" : null,\n            verbose ? \"verbose\" : null,\n            settings ? \"settings\" : null,\n            buffers ? \"buffers\" : null,\n            wal ? \"wal\" : null\n        ].filter(Boolean).join(\"|\");\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = (_a = this.headers[\"Accept\"]) !== null && _a !== void 0 ? _a : \"application/json\";\n        this.headers[\"Accept\"] = \"application/vnd.pgrst.plan+\".concat(format, '; for=\"').concat(forMediatype, '\"; options=').concat(options, \";\");\n        if (format === \"json\") return this;\n        else return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */ rollback() {\n        var _a;\n        if (((_a = this.headers[\"Prefer\"]) !== null && _a !== void 0 ? _a : \"\").trim().length > 0) {\n            this.headers[\"Prefer\"] += \",tx=rollback\";\n        } else {\n            this.headers[\"Prefer\"] = \"tx=rollback\";\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     * @deprecated Use overrideTypes<yourType, { merge: false }>() method at the end of your call chain instead\n     */ returns() {\n        return this;\n    }\n}\nexports[\"default\"] = PostgrestTransformBuilder; //# sourceMappingURL=PostgrestTransformBuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/constants.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.DEFAULT_HEADERS = void 0;\nconst version_1 = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\");\nexports.DEFAULT_HEADERS = {\n    \"X-Client-Info\": \"postgrest-js/\".concat(version_1.version)\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUJBQXVCLEdBQUcsS0FBSztBQUMvQixNQUFNRyxZQUFZQyxtQkFBT0EsQ0FBQyxnR0FBVztBQUNyQ0osdUJBQXVCLEdBQUc7SUFBRSxpQkFBaUIsZ0JBQWtDLE9BQWxCRyxVQUFVRSxPQUFPO0FBQUcsR0FDakYscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2NvbnN0YW50cy5qcz81NTA2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ERUZBVUxUX0hFQURFUlMgPSB2b2lkIDA7XG5jb25zdCB2ZXJzaW9uXzEgPSByZXF1aXJlKFwiLi92ZXJzaW9uXCIpO1xuZXhwb3J0cy5ERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHBvc3RncmVzdC1qcy8ke3ZlcnNpb25fMS52ZXJzaW9ufWAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJERUZBVUxUX0hFQURFUlMiLCJ2ZXJzaW9uXzEiLCJyZXF1aXJlIiwidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.PostgrestError = exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;\n// Always update wrapper.mjs when updating this file.\nconst PostgrestClient_1 = __importDefault(__webpack_require__(/*! ./PostgrestClient */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js\"));\nexports.PostgrestClient = PostgrestClient_1.default;\nconst PostgrestQueryBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestQueryBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js\"));\nexports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;\nconst PostgrestFilterBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestFilterBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js\"));\nexports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;\nconst PostgrestTransformBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestTransformBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js\"));\nexports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;\nconst PostgrestBuilder_1 = __importDefault(__webpack_require__(/*! ./PostgrestBuilder */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js\"));\nexports.PostgrestBuilder = PostgrestBuilder_1.default;\nconst PostgrestError_1 = __importDefault(__webpack_require__(/*! ./PostgrestError */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js\"));\nexports.PostgrestError = PostgrestError_1.default;\nexports[\"default\"] = {\n    PostgrestClient: PostgrestClient_1.default,\n    PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,\n    PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,\n    PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,\n    PostgrestBuilder: PostgrestBuilder_1.default,\n    PostgrestError: PostgrestError_1.default\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBR0Esd0JBQXdCLEdBQUdBLGlDQUFpQyxHQUFHQSw4QkFBOEIsR0FBR0EsNkJBQTZCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDeEwscURBQXFEO0FBQ3JELE1BQU1RLG9CQUFvQmIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyxnSEFBbUI7QUFDckVULHVCQUF1QixHQUFHUSxrQkFBa0JFLE9BQU87QUFDbkQsTUFBTUMsMEJBQTBCaEIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyw0SEFBeUI7QUFDakZULDZCQUE2QixHQUFHVyx3QkFBd0JELE9BQU87QUFDL0QsTUFBTUUsMkJBQTJCakIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyw4SEFBMEI7QUFDbkZULDhCQUE4QixHQUFHWSx5QkFBeUJGLE9BQU87QUFDakUsTUFBTUcsOEJBQThCbEIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyxvSUFBNkI7QUFDekZULGlDQUFpQyxHQUFHYSw0QkFBNEJILE9BQU87QUFDdkUsTUFBTUkscUJBQXFCbkIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyxrSEFBb0I7QUFDdkVULHdCQUF3QixHQUFHYyxtQkFBbUJKLE9BQU87QUFDckQsTUFBTUssbUJBQW1CcEIsZ0JBQWdCYyxtQkFBT0EsQ0FBQyw4R0FBa0I7QUFDbkVULHNCQUFzQixHQUFHZSxpQkFBaUJMLE9BQU87QUFDakRWLGtCQUFlLEdBQUc7SUFDZE8saUJBQWlCQyxrQkFBa0JFLE9BQU87SUFDMUNKLHVCQUF1Qkssd0JBQXdCRCxPQUFPO0lBQ3RETCx3QkFBd0JPLHlCQUF5QkYsT0FBTztJQUN4RE4sMkJBQTJCUyw0QkFBNEJILE9BQU87SUFDOURQLGtCQUFrQlcsbUJBQW1CSixPQUFPO0lBQzVDUixnQkFBZ0JhLGlCQUFpQkwsT0FBTztBQUM1QyxHQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy9pbmRleC5qcz9kMzE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb3N0Z3Jlc3RFcnJvciA9IGV4cG9ydHMuUG9zdGdyZXN0QnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0RmlsdGVyQnVpbGRlciA9IGV4cG9ydHMuUG9zdGdyZXN0UXVlcnlCdWlsZGVyID0gZXhwb3J0cy5Qb3N0Z3Jlc3RDbGllbnQgPSB2b2lkIDA7XG4vLyBBbHdheXMgdXBkYXRlIHdyYXBwZXIubWpzIHdoZW4gdXBkYXRpbmcgdGhpcyBmaWxlLlxuY29uc3QgUG9zdGdyZXN0Q2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0Q2xpZW50XCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0Q2xpZW50ID0gUG9zdGdyZXN0Q2xpZW50XzEuZGVmYXVsdDtcbmNvbnN0IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdFF1ZXJ5QnVpbGRlclwiKSk7XG5leHBvcnRzLlBvc3RncmVzdFF1ZXJ5QnVpbGRlciA9IFBvc3RncmVzdFF1ZXJ5QnVpbGRlcl8xLmRlZmF1bHQ7XG5jb25zdCBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vUG9zdGdyZXN0RmlsdGVyQnVpbGRlclwiKSk7XG5leHBvcnRzLlBvc3RncmVzdEZpbHRlckJ1aWxkZXIgPSBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdDtcbmNvbnN0IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9Qb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlciA9IFBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMS5kZWZhdWx0O1xuY29uc3QgUG9zdGdyZXN0QnVpbGRlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEJ1aWxkZXJcIikpO1xuZXhwb3J0cy5Qb3N0Z3Jlc3RCdWlsZGVyID0gUG9zdGdyZXN0QnVpbGRlcl8xLmRlZmF1bHQ7XG5jb25zdCBQb3N0Z3Jlc3RFcnJvcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL1Bvc3RncmVzdEVycm9yXCIpKTtcbmV4cG9ydHMuUG9zdGdyZXN0RXJyb3IgPSBQb3N0Z3Jlc3RFcnJvcl8xLmRlZmF1bHQ7XG5leHBvcnRzLmRlZmF1bHQgPSB7XG4gICAgUG9zdGdyZXN0Q2xpZW50OiBQb3N0Z3Jlc3RDbGllbnRfMS5kZWZhdWx0LFxuICAgIFBvc3RncmVzdFF1ZXJ5QnVpbGRlcjogUG9zdGdyZXN0UXVlcnlCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyOiBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyOiBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RCdWlsZGVyOiBQb3N0Z3Jlc3RCdWlsZGVyXzEuZGVmYXVsdCxcbiAgICBQb3N0Z3Jlc3RFcnJvcjogUG9zdGdyZXN0RXJyb3JfMS5kZWZhdWx0LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJQb3N0Z3Jlc3RFcnJvciIsIlBvc3RncmVzdEJ1aWxkZXIiLCJQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyIiwiUG9zdGdyZXN0RmlsdGVyQnVpbGRlciIsIlBvc3RncmVzdFF1ZXJ5QnVpbGRlciIsIlBvc3RncmVzdENsaWVudCIsIlBvc3RncmVzdENsaWVudF8xIiwicmVxdWlyZSIsImRlZmF1bHQiLCJQb3N0Z3Jlc3RRdWVyeUJ1aWxkZXJfMSIsIlBvc3RncmVzdEZpbHRlckJ1aWxkZXJfMSIsIlBvc3RncmVzdFRyYW5zZm9ybUJ1aWxkZXJfMSIsIlBvc3RncmVzdEJ1aWxkZXJfMSIsIlBvc3RncmVzdEVycm9yXzEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/cjs/version.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.version = void 0;\nexports.version = \"0.0.0-automated\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvY2pzL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBRyxLQUFLO0FBQ3ZCQSxlQUFlLEdBQUcsbUJBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2Nqcy92ZXJzaW9uLmpzP2ZiZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XG5leHBvcnRzLnZlcnNpb24gPSAnMC4wLjAtYXV0b21hdGVkJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidmVyc2lvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: function() { return /* binding */ REALTIME_CHANNEL_STATES; },\n/* harmony export */   REALTIME_LISTEN_TYPES: function() { return /* binding */ REALTIME_LISTEN_TYPES; },\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: function() { return /* binding */ REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: function() { return /* binding */ REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeChannel; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_push__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/push */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n\n\n\n\n\n\nvar REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nvar REALTIME_LISTEN_TYPES;\n(function(REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n    REALTIME_LISTEN_TYPES[\"SYSTEM\"] = \"system\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nvar REALTIME_SUBSCRIBE_STATES;\n(function(REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\nconst REALTIME_CHANNEL_STATES = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES;\nclass RealtimeChannel {\n    /** Subscribe registers your client with the server */ subscribe(callback) {\n        let timeout = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.timeout;\n        var _a, _b;\n        if (!this.socket.isConnected()) {\n            this.socket.connect();\n        }\n        if (this.joinedOnce) {\n            throw \"tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance\";\n        } else {\n            const { config: { broadcast, presence, private: isPrivate } } = this.params;\n            this._onError((e)=>callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, e));\n            this._onClose(()=>callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CLOSED));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r)=>r.filter)) !== null && _b !== void 0 ? _b : [],\n                private: isPrivate\n            };\n            if (this.socket.accessTokenValue) {\n                accessTokenPayload.access_token = this.socket.accessTokenValue;\n            }\n            this.updateJoinPayload(Object.assign({\n                config\n            }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush.receive(\"ok\", async (param)=>{\n                let { postgres_changes } = param;\n                var _a;\n                this.socket.setAuth();\n                if (postgres_changes === undefined) {\n                    callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                } else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for(let i = 0; i < bindingsLen; i++){\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter } } = clientPostgresBinding;\n                        const serverPostgresFilter = postgres_changes && postgres_changes[i];\n                        if (serverPostgresFilter && serverPostgresFilter.event === event && serverPostgresFilter.schema === schema && serverPostgresFilter.table === table && serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), {\n                                id: serverPostgresFilter.id\n                            }));\n                        } else {\n                            this.unsubscribe();\n                            callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(\"mismatch between server and client bindings for postgres changes\"));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback(REALTIME_SUBSCRIBE_STATES.SUBSCRIBED);\n                    return;\n                }\n            }).receive(\"error\", (error)=>{\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.CHANNEL_ERROR, new Error(JSON.stringify(Object.values(error).join(\", \") || \"error\")));\n                return;\n            }).receive(\"timeout\", ()=>{\n                callback === null || callback === void 0 ? void 0 : callback(REALTIME_SUBSCRIBE_STATES.TIMED_OUT);\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    async track(payload) {\n        let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        return await this.send({\n            type: \"presence\",\n            event: \"track\",\n            payload\n        }, opts.timeout || this.timeout);\n    }\n    async untrack() {\n        let opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        return await this.send({\n            type: \"presence\",\n            event: \"untrack\"\n        }, opts);\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    /**\n     * Sends a message into the channel.\n     *\n     * @param args Arguments to send to channel\n     * @param args.type The type of event to send\n     * @param args.event The name of the event being sent\n     * @param args.payload Payload to be sent\n     * @param opts Options to be used during the send process\n     */ async send(args) {\n        let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var _a, _b;\n        if (!this._canPush() && args.type === \"broadcast\") {\n            const { event, payload: endpoint_payload } = args;\n            const authorization = this.socket.accessTokenValue ? \"Bearer \".concat(this.socket.accessTokenValue) : \"\";\n            const options = {\n                method: \"POST\",\n                headers: {\n                    Authorization: authorization,\n                    apikey: this.socket.apiKey ? this.socket.apiKey : \"\",\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    messages: [\n                        {\n                            topic: this.subTopic,\n                            event,\n                            payload: endpoint_payload,\n                            private: this.private\n                        }\n                    ]\n                })\n            };\n            try {\n                const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);\n                await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());\n                return response.ok ? \"ok\" : \"error\";\n            } catch (error) {\n                if (error.name === \"AbortError\") {\n                    return \"timed out\";\n                } else {\n                    return \"error\";\n                }\n            }\n        } else {\n            return new Promise((resolve)=>{\n                var _a, _b, _c;\n                const push = this._push(args.type, args, opts.timeout || this.timeout);\n                if (args.type === \"broadcast\" && !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                    resolve(\"ok\");\n                }\n                push.receive(\"ok\", ()=>resolve(\"ok\"));\n                push.receive(\"error\", ()=>resolve(\"error\"));\n                push.receive(\"timeout\", ()=>resolve(\"timed out\"));\n            });\n        }\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */ unsubscribe() {\n        let timeout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.timeout;\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\n        const onClose = ()=>{\n            this.socket.log(\"channel\", \"leave \".concat(this.topic));\n            this._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, \"leave\", this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve)=>{\n            const leavePush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush.receive(\"ok\", ()=>{\n                onClose();\n                resolve(\"ok\");\n            }).receive(\"timeout\", ()=>{\n                onClose();\n                resolve(\"timed out\");\n            }).receive(\"error\", ()=>{\n                resolve(\"error\");\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger(\"ok\", {});\n            }\n        });\n    }\n    /** @internal */ async _fetchWithTimeout(url, options, timeout) {\n        const controller = new AbortController();\n        const id = setTimeout(()=>controller.abort(), timeout);\n        const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), {\n            signal: controller.signal\n        }));\n        clearTimeout(id);\n        return response;\n    }\n    /** @internal */ _push(event, payload) {\n        let timeout = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.timeout;\n        if (!this.joinedOnce) {\n            throw \"tried to push '\".concat(event, \"' to '\").concat(this.topic, \"' before joining. Use channel.subscribe() before pushing events\");\n        }\n        let pushEvent = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        } else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */ _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */ _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */ _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */ _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS;\n        const events = [\n            close,\n            error,\n            leave,\n            join\n        ];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw \"channel onMessage callbacks must return the payload, modified or unmodified\";\n        }\n        if ([\n            \"insert\",\n            \"update\",\n            \"delete\"\n        ].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind)=>{\n                var _a, _b, _c;\n                return ((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === \"*\" || ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower;\n            }).map((bind)=>bind.callback(handledPayload, ref));\n        } else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind)=>{\n                var _a, _b, _c, _d, _e, _f;\n                if ([\n                    \"broadcast\",\n                    \"presence\",\n                    \"postgres_changes\"\n                ].includes(typeLower)) {\n                    if (\"id\" in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return bindId && ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) && (bindEvent === \"*\" || (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) === ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase()));\n                    } else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return bindEvent === \"*\" || bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase());\n                    }\n                } else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind)=>{\n                if (typeof handledPayload === \"object\" && \"ids\" in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */ _isClosed() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n    }\n    /** @internal */ _isJoined() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\n    }\n    /** @internal */ _isJoining() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\n    }\n    /** @internal */ _isLeaving() {\n        return this.state === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.leaving;\n    }\n    /** @internal */ _replyEventName(ref) {\n        return \"chan_reply_\".concat(ref);\n    }\n    /** @internal */ _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        } else {\n            this.bindings[typeLower] = [\n                binding\n            ];\n        }\n        return this;\n    }\n    /** @internal */ _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind)=>{\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower && RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */ static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for(const k in obj1){\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */ _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */ _onClose(callback) {\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */ _onError(callback) {\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error, {}, (reason)=>callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */ _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */ _rejoin() {\n        let timeout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.timeout;\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */ _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {}\n        };\n        if (payload.type === \"INSERT\" || payload.type === \"UPDATE\") {\n            records.new = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === \"UPDATE\" || payload.type === \"DELETE\") {\n            records.old = _lib_transformers__WEBPACK_IMPORTED_MODULE_4__.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    constructor(/** Topic name can be any string. */ topic, params = {\n        config: {}\n    }, socket){\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.subTopic = topic.replace(/^realtime:/i, \"\");\n        this.params.config = Object.assign({\n            broadcast: {\n                ack: false,\n                self: false\n            },\n            presence: {\n                key: \"\"\n            },\n            private: false\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new _lib_push__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this, _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](()=>this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive(\"ok\", ()=>{\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent)=>pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(()=>{\n            this.rejoinTimer.reset();\n            this.socket.log(\"channel\", \"close \".concat(this.topic, \" \").concat(this._joinRef()));\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason)=>{\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log(\"channel\", \"error \".concat(this.topic), reason);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive(\"timeout\", ()=>{\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log(\"channel\", \"timeout \".concat(this.topic), this.joinPush.timeout);\n            this.state = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.reply, {}, (payload, ref)=>{\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new _RealtimePresence__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n        this.broadcastEndpointURL = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_4__.httpEndpointURL)(this.socket.endPoint) + \"/api/broadcast\";\n        this.private = this.params.config.private || false;\n    }\n} //# sourceMappingURL=RealtimeChannel.js.map\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ RealtimeClient; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_serializer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/serializer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\");\n/* harmony import */ var _lib_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/timer */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\");\n/* harmony import */ var _lib_transformers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/transformers */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n\n\n\n\n\nconst noop = ()=>{};\nconst NATIVE_WEBSOCKET_AVAILABLE = typeof WebSocket !== \"undefined\";\nconst WORKER_SCRIPT = '\\n  addEventListener(\"message\", (e) => {\\n    if (e.data.event === \"start\") {\\n      setInterval(() => postMessage({ event: \"keepAlive\" }), e.data.interval);\\n    }\\n  });';\nclass RealtimeClient {\n    /**\n     * Connects the socket, unless already connected.\n     */ connect() {\n        if (this.conn) {\n            return;\n        }\n        if (this.transport) {\n            this.conn = new this.transport(this.endpointURL(), undefined, {\n                headers: this.headers\n            });\n            return;\n        }\n        if (NATIVE_WEBSOCKET_AVAILABLE) {\n            this.conn = new WebSocket(this.endpointURL());\n            this.setupConnection();\n            return;\n        }\n        this.conn = new WSWebSocketDummy(this.endpointURL(), undefined, {\n            close: ()=>{\n                this.conn = null;\n            }\n        });\n        __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_ws_browser_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! ws */ \"(app-pages-browser)/./node_modules/ws/browser.js\", 23)).then((param)=>{\n            let { default: WS } = param;\n            this.conn = new WS(this.endpointURL(), undefined, {\n                headers: this.headers\n            });\n            this.setupConnection();\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     * @returns string The URL of the websocket.\n     */ endpointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, {\n            vsn: _lib_constants__WEBPACK_IMPORTED_MODULE_0__.VSN\n        }));\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */ disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function() {}; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : \"\");\n            } else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */ getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */ async removeChannel(channel) {\n        const status = await channel.unsubscribe();\n        if (this.channels.length === 0) {\n            this.disconnect();\n        }\n        return status;\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */ async removeAllChannels() {\n        const values_1 = await Promise.all(this.channels.map((channel)=>channel.unsubscribe()));\n        this.disconnect();\n        return values_1;\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */ log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */ connectionState() {\n        switch(this.conn && this.conn.readyState){\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_0__.SOCKET_STATES.connecting:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CONNECTION_STATE.Connecting;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_0__.SOCKET_STATES.open:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CONNECTION_STATE.Open;\n            case _lib_constants__WEBPACK_IMPORTED_MODULE_0__.SOCKET_STATES.closing:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CONNECTION_STATE.Closing;\n            default:\n                return _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */ isConnected() {\n        return this.connectionState() === _lib_constants__WEBPACK_IMPORTED_MODULE_0__.CONNECTION_STATE.Open;\n    }\n    channel(topic) {\n        let params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n            config: {}\n        };\n        const chan = new _RealtimeChannel__WEBPACK_IMPORTED_MODULE_4__[\"default\"](\"realtime:\".concat(topic), params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */ push(data) {\n        const { topic, event, payload, ref } = data;\n        const callback = ()=>{\n            this.encode(data, (result)=>{\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log(\"push\", \"\".concat(topic, \" \").concat(event, \" (\").concat(ref, \")\"), payload);\n        if (this.isConnected()) {\n            callback();\n        } else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * If param is null it will use the `accessToken` callback function or the token set on the client.\n     *\n     * On callback used, it will set the value of the token internal to the client.\n     *\n     * @param token A JWT string to override the token set on the client.\n     */ async setAuth() {\n        let token = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        let tokenToSend = token || this.accessToken && await this.accessToken() || this.accessTokenValue;\n        if (tokenToSend) {\n            let parsed = null;\n            try {\n                parsed = JSON.parse(atob(tokenToSend.split(\".\")[1]));\n            } catch (_error) {}\n            if (parsed && parsed.exp) {\n                let now = Math.floor(Date.now() / 1000);\n                let valid = now - parsed.exp < 0;\n                if (!valid) {\n                    this.log(\"auth\", 'InvalidJWTToken: Invalid value for JWT claim \"exp\" with value '.concat(parsed.exp));\n                    return Promise.reject('InvalidJWTToken: Invalid value for JWT claim \"exp\" with value '.concat(parsed.exp));\n                }\n            }\n            this.accessTokenValue = tokenToSend;\n            this.channels.forEach((channel)=>{\n                tokenToSend && channel.updateJoinPayload({\n                    access_token: tokenToSend\n                });\n                if (channel.joinedOnce && channel._isJoined()) {\n                    channel._push(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.access_token, {\n                        access_token: tokenToSend\n                    });\n                }\n            });\n        }\n    }\n    /**\n     * Sends a heartbeat message if the socket is connected.\n     */ async sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\");\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.WS_CLOSE_NORMAL, \"hearbeat timeout\");\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: \"phoenix\",\n            event: \"heartbeat\",\n            payload: {},\n            ref: this.pendingHeartbeatRef\n        });\n        this.setAuth();\n    }\n    /**\n     * Flushes send buffer\n     */ flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback)=>callback());\n            this.sendBuffer = [];\n        }\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */ _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        } else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */ _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c)=>c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log(\"transport\", 'leaving duplicate topic \"'.concat(topic, '\"'));\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */ _remove(channel) {\n        this.channels = this.channels.filter((c)=>c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Sets up connection handlers.\n     *\n     * @internal\n     */ setupConnection() {\n        if (this.conn) {\n            this.conn.binaryType = \"arraybuffer\";\n            this.conn.onopen = ()=>this._onConnOpen();\n            this.conn.onerror = (error)=>this._onConnError(error);\n            this.conn.onmessage = (event)=>this._onConnMessage(event);\n            this.conn.onclose = (event)=>this._onConnClose(event);\n        }\n    }\n    /** @internal */ _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg)=>{\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log(\"receive\", \"\".concat(payload.status || \"\", \" \").concat(topic, \" \").concat(event, \" \").concat(ref && \"(\" + ref + \")\" || \"\"), payload);\n            this.channels.filter((channel)=>channel._isMember(topic)).forEach((channel)=>channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback)=>callback(msg));\n        });\n    }\n    /** @internal */ async _onConnOpen() {\n        this.log(\"transport\", \"connected to \".concat(this.endpointURL()));\n        this.flushSendBuffer();\n        this.reconnectTimer.reset();\n        if (!this.worker) {\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.heartbeatTimer = setInterval(()=>this.sendHeartbeat(), this.heartbeatIntervalMs);\n        } else {\n            if (this.workerUrl) {\n                this.log(\"worker\", \"starting worker for from \".concat(this.workerUrl));\n            } else {\n                this.log(\"worker\", \"starting default worker\");\n            }\n            const objectUrl = this._workerObjectUrl(this.workerUrl);\n            this.workerRef = new Worker(objectUrl);\n            this.workerRef.onerror = (error)=>{\n                this.log(\"worker\", \"worker error\", error.message);\n                this.workerRef.terminate();\n            };\n            this.workerRef.onmessage = (event)=>{\n                if (event.data.event === \"keepAlive\") {\n                    this.sendHeartbeat();\n                }\n            };\n            this.workerRef.postMessage({\n                event: \"start\",\n                interval: this.heartbeatIntervalMs\n            });\n        }\n        this.stateChangeCallbacks.open.forEach((callback)=>callback());\n    }\n    /** @internal */ _onConnClose(event) {\n        this.log(\"transport\", \"close\", event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback)=>callback(event));\n    }\n    /** @internal */ _onConnError(error) {\n        this.log(\"transport\", error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback)=>callback(error));\n    }\n    /** @internal */ _triggerChanError() {\n        this.channels.forEach((channel)=>channel._trigger(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.CHANNEL_EVENTS.error));\n    }\n    /** @internal */ _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? \"&\" : \"?\";\n        const query = new URLSearchParams(params);\n        return \"\".concat(url).concat(prefix).concat(query);\n    }\n    _workerObjectUrl(url) {\n        let result_url;\n        if (url) {\n            result_url = url;\n        } else {\n            const blob = new Blob([\n                WORKER_SCRIPT\n            ], {\n                type: \"application/javascript\"\n            });\n            result_url = URL.createObjectURL(blob);\n        }\n        return result_url;\n    }\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param httpEndpoint The string HTTP endpoint, ie, \"https://example.com\", \"/\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     * @param options.worker Use Web Worker to set a side flow. Defaults to false.\n     * @param options.workerUrl The URL of the worker script. Defaults to https://realtime.supabase.com/worker.js that includes a heartbeat event call to keep the connection alive.\n     */ constructor(endPoint, options){\n        var _a;\n        this.accessTokenValue = null;\n        this.apiKey = null;\n        this.channels = [];\n        this.endPoint = \"\";\n        this.httpEndpoint = \"\";\n        this.headers = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new _lib_serializer__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: []\n        };\n        this.accessToken = null;\n        /**\n         * Use either custom fetch, if provided, or default fetch to make HTTP requests\n         *\n         * @internal\n         */ this._resolveFetch = (customFetch)=>{\n            let _fetch;\n            if (customFetch) {\n                _fetch = customFetch;\n            } else if (typeof fetch === \"undefined\") {\n                _fetch = function() {\n                    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                        args[_key] = arguments[_key];\n                    }\n                    return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then((param)=>{\n                        let { default: fetch1 } = param;\n                        return fetch1(...args);\n                    });\n                };\n            } else {\n                _fetch = fetch;\n            }\n            return function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                return _fetch(...args);\n            };\n        };\n        this.endPoint = \"\".concat(endPoint, \"/\").concat(_lib_constants__WEBPACK_IMPORTED_MODULE_0__.TRANSPORTS.websocket);\n        this.httpEndpoint = (0,_lib_transformers__WEBPACK_IMPORTED_MODULE_3__.httpEndpointURL)(endPoint);\n        if (options === null || options === void 0 ? void 0 : options.transport) {\n            this.transport = options.transport;\n        } else {\n            this.transport = null;\n        }\n        if (options === null || options === void 0 ? void 0 : options.params) this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers) this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout) this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger) this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs) this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const accessTokenValue = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;\n        if (accessTokenValue) {\n            this.accessTokenValue = accessTokenValue;\n            this.apiKey = accessTokenValue;\n        }\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs : (tries)=>{\n            return [\n                1000,\n                2000,\n                5000,\n                10000\n            ][tries - 1] || 10000;\n        };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode : (payload, callback)=>{\n            return callback(JSON.stringify(payload));\n        };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new _lib_timer__WEBPACK_IMPORTED_MODULE_2__[\"default\"](async ()=>{\n            this.disconnect();\n            this.connect();\n        }, this.reconnectAfterMs);\n        this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);\n        if (options === null || options === void 0 ? void 0 : options.worker) {\n            if ( true && !window.Worker) {\n                throw new Error(\"Web Worker is not supported\");\n            }\n            this.worker = (options === null || options === void 0 ? void 0 : options.worker) || false;\n            this.workerUrl = options === null || options === void 0 ? void 0 : options.workerUrl;\n        }\n        this.accessToken = (options === null || options === void 0 ? void 0 : options.accessToken) || null;\n    }\n}\n\nclass WSWebSocketDummy {\n    constructor(address, _protocols, options){\n        this.binaryType = \"arraybuffer\";\n        this.onclose = ()=>{};\n        this.onerror = ()=>{};\n        this.onmessage = ()=>{};\n        this.onopen = ()=>{};\n        this.readyState = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.SOCKET_STATES.connecting;\n        this.send = ()=>{};\n        this.url = null;\n        this.url = address;\n        this.close = options.close;\n    }\n} //# sourceMappingURL=RealtimeClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvUmVhbHRpbWVDbGllbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVKO0FBQzdHO0FBQ1Y7QUFDcUI7QUFDTDtBQUNoRCxNQUFNWSxPQUFPLEtBQVE7QUFDckIsTUFBTUMsNkJBQTZCLE9BQU9DLGNBQWM7QUFDeEQsTUFBTUMsZ0JBQWlCO0FBTVIsTUFBTUM7SUErR2pCOztLQUVDLEdBQ0RDLFVBQVU7UUFDTixJQUFJLElBQUksQ0FBQ0MsSUFBSSxFQUFFO1lBQ1g7UUFDSjtRQUNBLElBQUksSUFBSSxDQUFDQyxTQUFTLEVBQUU7WUFDaEIsSUFBSSxDQUFDRCxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFdBQVcsSUFBSUMsV0FBVztnQkFDMURDLFNBQVMsSUFBSSxDQUFDQSxPQUFPO1lBQ3pCO1lBQ0E7UUFDSjtRQUNBLElBQUlULDRCQUE0QjtZQUM1QixJQUFJLENBQUNLLElBQUksR0FBRyxJQUFJSixVQUFVLElBQUksQ0FBQ00sV0FBVztZQUMxQyxJQUFJLENBQUNHLGVBQWU7WUFDcEI7UUFDSjtRQUNBLElBQUksQ0FBQ0wsSUFBSSxHQUFHLElBQUlNLGlCQUFpQixJQUFJLENBQUNKLFdBQVcsSUFBSUMsV0FBVztZQUM1REksT0FBTztnQkFDSCxJQUFJLENBQUNQLElBQUksR0FBRztZQUNoQjtRQUNKO1FBQ0EsOE1BQU8sQ0FBTVEsSUFBSSxDQUFDO2dCQUFDLEVBQUVDLFNBQVNDLEVBQUUsRUFBRTtZQUM5QixJQUFJLENBQUNWLElBQUksR0FBRyxJQUFJVSxHQUFHLElBQUksQ0FBQ1IsV0FBVyxJQUFJQyxXQUFXO2dCQUM5Q0MsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDekI7WUFDQSxJQUFJLENBQUNDLGVBQWU7UUFDeEI7SUFDSjtJQUNBOzs7S0FHQyxHQUNESCxjQUFjO1FBQ1YsT0FB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QUFLO0lBQzlCO0FBQ0osRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9SZWFsdGltZUNsaWVudC5qcz82YjZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENIQU5ORUxfRVZFTlRTLCBDT05ORUNUSU9OX1NUQVRFLCBERUZBVUxUX0hFQURFUlMsIERFRkFVTFRfVElNRU9VVCwgU09DS0VUX1NUQVRFUywgVFJBTlNQT1JUUywgVlNOLCBXU19DTE9TRV9OT1JNQUwsIH0gZnJvbSAnLi9saWIvY29uc3RhbnRzJztcbmltcG9ydCBTZXJpYWxpemVyIGZyb20gJy4vbGliL3NlcmlhbGl6ZXInO1xuaW1wb3J0IFRpbWVyIGZyb20gJy4vbGliL3RpbWVyJztcbmltcG9ydCB7IGh0dHBFbmRwb2ludFVSTCB9IGZyb20gJy4vbGliL3RyYW5zZm9ybWVycyc7XG5pbXBvcnQgUmVhbHRpbWVDaGFubmVsIGZyb20gJy4vUmVhbHRpbWVDaGFubmVsJztcbmNvbnN0IG5vb3AgPSAoKSA9PiB7IH07XG5jb25zdCBOQVRJVkVfV0VCU09DS0VUX0FWQUlMQUJMRSA9IHR5cGVvZiBXZWJTb2NrZXQgIT09ICd1bmRlZmluZWQnO1xuY29uc3QgV09SS0VSX1NDUklQVCA9IGBcbiAgYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgKGUpID0+IHtcbiAgICBpZiAoZS5kYXRhLmV2ZW50ID09PSBcInN0YXJ0XCIpIHtcbiAgICAgIHNldEludGVydmFsKCgpID0+IHBvc3RNZXNzYWdlKHsgZXZlbnQ6IFwia2VlcEFsaXZlXCIgfSksIGUuZGF0YS5pbnRlcnZhbCk7XG4gICAgfVxuICB9KTtgO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVhbHRpbWVDbGllbnQge1xuICAgIC8qKlxuICAgICAqIEluaXRpYWxpemVzIHRoZSBTb2NrZXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZW5kUG9pbnQgVGhlIHN0cmluZyBXZWJTb2NrZXQgZW5kcG9pbnQsIGllLCBcIndzOi8vZXhhbXBsZS5jb20vc29ja2V0XCIsIFwid3NzOi8vZXhhbXBsZS5jb21cIiwgXCIvc29ja2V0XCIgKGluaGVyaXRlZCBob3N0ICYgcHJvdG9jb2wpXG4gICAgICogQHBhcmFtIGh0dHBFbmRwb2ludCBUaGUgc3RyaW5nIEhUVFAgZW5kcG9pbnQsIGllLCBcImh0dHBzOi8vZXhhbXBsZS5jb21cIiwgXCIvXCIgKGluaGVyaXRlZCBob3N0ICYgcHJvdG9jb2wpXG4gICAgICogQHBhcmFtIG9wdGlvbnMudHJhbnNwb3J0IFRoZSBXZWJzb2NrZXQgVHJhbnNwb3J0LCBmb3IgZXhhbXBsZSBXZWJTb2NrZXQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMudGltZW91dCBUaGUgZGVmYXVsdCB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byB0cmlnZ2VyIHB1c2ggdGltZW91dHMuXG4gICAgICogQHBhcmFtIG9wdGlvbnMucGFyYW1zIFRoZSBvcHRpb25hbCBwYXJhbXMgdG8gcGFzcyB3aGVuIGNvbm5lY3RpbmcuXG4gICAgICogQHBhcmFtIG9wdGlvbnMuaGVhZGVycyBUaGUgb3B0aW9uYWwgaGVhZGVycyB0byBwYXNzIHdoZW4gY29ubmVjdGluZy5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5oZWFydGJlYXRJbnRlcnZhbE1zIFRoZSBtaWxsaXNlYyBpbnRlcnZhbCB0byBzZW5kIGEgaGVhcnRiZWF0IG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIG9wdGlvbnMubG9nZ2VyIFRoZSBvcHRpb25hbCBmdW5jdGlvbiBmb3Igc3BlY2lhbGl6ZWQgbG9nZ2luZywgaWU6IGxvZ2dlcjogKGtpbmQsIG1zZywgZGF0YSkgPT4geyBjb25zb2xlLmxvZyhgJHtraW5kfTogJHttc2d9YCwgZGF0YSkgfVxuICAgICAqIEBwYXJhbSBvcHRpb25zLmVuY29kZSBUaGUgZnVuY3Rpb24gdG8gZW5jb2RlIG91dGdvaW5nIG1lc3NhZ2VzLiBEZWZhdWx0cyB0byBKU09OOiAocGF5bG9hZCwgY2FsbGJhY2spID0+IGNhbGxiYWNrKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKVxuICAgICAqIEBwYXJhbSBvcHRpb25zLmRlY29kZSBUaGUgZnVuY3Rpb24gdG8gZGVjb2RlIGluY29taW5nIG1lc3NhZ2VzLiBEZWZhdWx0cyB0byBTZXJpYWxpemVyJ3MgZGVjb2RlLlxuICAgICAqIEBwYXJhbSBvcHRpb25zLnJlY29ubmVjdEFmdGVyTXMgaGUgb3B0aW9uYWwgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBtaWxsc2VjIHJlY29ubmVjdCBpbnRlcnZhbC4gRGVmYXVsdHMgdG8gc3RlcHBlZCBiYWNrb2ZmIG9mZi5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy53b3JrZXIgVXNlIFdlYiBXb3JrZXIgdG8gc2V0IGEgc2lkZSBmbG93LiBEZWZhdWx0cyB0byBmYWxzZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy53b3JrZXJVcmwgVGhlIFVSTCBvZiB0aGUgd29ya2VyIHNjcmlwdC4gRGVmYXVsdHMgdG8gaHR0cHM6Ly9yZWFsdGltZS5zdXBhYmFzZS5jb20vd29ya2VyLmpzIHRoYXQgaW5jbHVkZXMgYSBoZWFydGJlYXQgZXZlbnQgY2FsbCB0byBrZWVwIHRoZSBjb25uZWN0aW9uIGFsaXZlLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGVuZFBvaW50LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5hY2Nlc3NUb2tlblZhbHVlID0gbnVsbDtcbiAgICAgICAgdGhpcy5hcGlLZXkgPSBudWxsO1xuICAgICAgICB0aGlzLmNoYW5uZWxzID0gW107XG4gICAgICAgIHRoaXMuZW5kUG9pbnQgPSAnJztcbiAgICAgICAgdGhpcy5odHRwRW5kcG9pbnQgPSAnJztcbiAgICAgICAgdGhpcy5oZWFkZXJzID0gREVGQVVMVF9IRUFERVJTO1xuICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICB0aGlzLnRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQ7XG4gICAgICAgIHRoaXMuaGVhcnRiZWF0SW50ZXJ2YWxNcyA9IDMwMDAwO1xuICAgICAgICB0aGlzLmhlYXJ0YmVhdFRpbWVyID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYgPSBudWxsO1xuICAgICAgICB0aGlzLnJlZiA9IDA7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbm9vcDtcbiAgICAgICAgdGhpcy5jb25uID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gICAgICAgIHRoaXMuc2VyaWFsaXplciA9IG5ldyBTZXJpYWxpemVyKCk7XG4gICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VDYWxsYmFja3MgPSB7XG4gICAgICAgICAgICBvcGVuOiBbXSxcbiAgICAgICAgICAgIGNsb3NlOiBbXSxcbiAgICAgICAgICAgIGVycm9yOiBbXSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IFtdLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gbnVsbDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVzZSBlaXRoZXIgY3VzdG9tIGZldGNoLCBpZiBwcm92aWRlZCwgb3IgZGVmYXVsdCBmZXRjaCB0byBtYWtlIEhUVFAgcmVxdWVzdHNcbiAgICAgICAgICpcbiAgICAgICAgICogQGludGVybmFsXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9yZXNvbHZlRmV0Y2ggPSAoY3VzdG9tRmV0Y2gpID0+IHtcbiAgICAgICAgICAgIGxldCBfZmV0Y2g7XG4gICAgICAgICAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcbiAgICAgICAgICAgICAgICBfZmV0Y2ggPSBjdXN0b21GZXRjaDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBfZmV0Y2ggPSAoLi4uYXJncykgPT4gaW1wb3J0KCdAc3VwYWJhc2Uvbm9kZS1mZXRjaCcpLnRoZW4oKHsgZGVmYXVsdDogZmV0Y2ggfSkgPT4gZmV0Y2goLi4uYXJncykpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgX2ZldGNoID0gZmV0Y2g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lbmRQb2ludCA9IGAke2VuZFBvaW50fS8ke1RSQU5TUE9SVFMud2Vic29ja2V0fWA7XG4gICAgICAgIHRoaXMuaHR0cEVuZHBvaW50ID0gaHR0cEVuZHBvaW50VVJMKGVuZFBvaW50KTtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc3BvcnQpIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNwb3J0ID0gb3B0aW9ucy50cmFuc3BvcnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnRyYW5zcG9ydCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5wYXJhbXMpXG4gICAgICAgICAgICB0aGlzLnBhcmFtcyA9IG9wdGlvbnMucGFyYW1zO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYWRlcnMpXG4gICAgICAgICAgICB0aGlzLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaGVhZGVycyksIG9wdGlvbnMuaGVhZGVycyk7XG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudGltZW91dClcbiAgICAgICAgICAgIHRoaXMudGltZW91dCA9IG9wdGlvbnMudGltZW91dDtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5sb2dnZXIpXG4gICAgICAgICAgICB0aGlzLmxvZ2dlciA9IG9wdGlvbnMubG9nZ2VyO1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYXJ0YmVhdEludGVydmFsTXMpXG4gICAgICAgICAgICB0aGlzLmhlYXJ0YmVhdEludGVydmFsTXMgPSBvcHRpb25zLmhlYXJ0YmVhdEludGVydmFsTXM7XG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuVmFsdWUgPSAoX2EgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucGFyYW1zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuYXBpa2V5O1xuICAgICAgICBpZiAoYWNjZXNzVG9rZW5WYWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5hY2Nlc3NUb2tlblZhbHVlID0gYWNjZXNzVG9rZW5WYWx1ZTtcbiAgICAgICAgICAgIHRoaXMuYXBpS2V5ID0gYWNjZXNzVG9rZW5WYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlY29ubmVjdEFmdGVyTXMgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnJlY29ubmVjdEFmdGVyTXMpXG4gICAgICAgICAgICA/IG9wdGlvbnMucmVjb25uZWN0QWZ0ZXJNc1xuICAgICAgICAgICAgOiAodHJpZXMpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gWzEwMDAsIDIwMDAsIDUwMDAsIDEwMDAwXVt0cmllcyAtIDFdIHx8IDEwMDAwO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgdGhpcy5lbmNvZGUgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmVuY29kZSlcbiAgICAgICAgICAgID8gb3B0aW9ucy5lbmNvZGVcbiAgICAgICAgICAgIDogKHBheWxvYWQsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKEpTT04uc3RyaW5naWZ5KHBheWxvYWQpKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIHRoaXMuZGVjb2RlID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kZWNvZGUpXG4gICAgICAgICAgICA/IG9wdGlvbnMuZGVjb2RlXG4gICAgICAgICAgICA6IHRoaXMuc2VyaWFsaXplci5kZWNvZGUuYmluZCh0aGlzLnNlcmlhbGl6ZXIpO1xuICAgICAgICB0aGlzLnJlY29ubmVjdFRpbWVyID0gbmV3IFRpbWVyKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdCgpO1xuICAgICAgICAgICAgdGhpcy5jb25uZWN0KCk7XG4gICAgICAgIH0sIHRoaXMucmVjb25uZWN0QWZ0ZXJNcyk7XG4gICAgICAgIHRoaXMuZmV0Y2ggPSB0aGlzLl9yZXNvbHZlRmV0Y2gob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmZldGNoKTtcbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy53b3JrZXIpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAhd2luZG93Lldvcmtlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignV2ViIFdvcmtlciBpcyBub3Qgc3VwcG9ydGVkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLndvcmtlciA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMud29ya2VyKSB8fCBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMud29ya2VyVXJsID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLndvcmtlclVybDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5hY2Nlc3NUb2tlbikgfHwgbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29ubmVjdHMgdGhlIHNvY2tldCwgdW5sZXNzIGFscmVhZHkgY29ubmVjdGVkLlxuICAgICAqL1xuICAgIGNvbm5lY3QoKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbm4pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy50cmFuc3BvcnQpIHtcbiAgICAgICAgICAgIHRoaXMuY29ubiA9IG5ldyB0aGlzLnRyYW5zcG9ydCh0aGlzLmVuZHBvaW50VVJMKCksIHVuZGVmaW5lZCwge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChOQVRJVkVfV0VCU09DS0VUX0FWQUlMQUJMRSkge1xuICAgICAgICAgICAgdGhpcy5jb25uID0gbmV3IFdlYlNvY2tldCh0aGlzLmVuZHBvaW50VVJMKCkpO1xuICAgICAgICAgICAgdGhpcy5zZXR1cENvbm5lY3Rpb24oKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbm4gPSBuZXcgV1NXZWJTb2NrZXREdW1teSh0aGlzLmVuZHBvaW50VVJMKCksIHVuZGVmaW5lZCwge1xuICAgICAgICAgICAgY2xvc2U6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm4gPSBudWxsO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGltcG9ydCgnd3MnKS50aGVuKCh7IGRlZmF1bHQ6IFdTIH0pID0+IHtcbiAgICAgICAgICAgIHRoaXMuY29ubiA9IG5ldyBXUyh0aGlzLmVuZHBvaW50VVJMKCksIHVuZGVmaW5lZCwge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5zZXR1cENvbm5lY3Rpb24oKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIFVSTCBvZiB0aGUgd2Vic29ja2V0LlxuICAgICAqIEByZXR1cm5zIHN0cmluZyBUaGUgVVJMIG9mIHRoZSB3ZWJzb2NrZXQuXG4gICAgICovXG4gICAgZW5kcG9pbnRVUkwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hcHBlbmRQYXJhbXModGhpcy5lbmRQb2ludCwgT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wYXJhbXMsIHsgdnNuOiBWU04gfSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEaXNjb25uZWN0cyB0aGUgc29ja2V0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGNvZGUgQSBudW1lcmljIHN0YXR1cyBjb2RlIHRvIHNlbmQgb24gZGlzY29ubmVjdC5cbiAgICAgKiBAcGFyYW0gcmVhc29uIEEgY3VzdG9tIHJlYXNvbiBmb3IgdGhlIGRpc2Nvbm5lY3QuXG4gICAgICovXG4gICAgZGlzY29ubmVjdChjb2RlLCByZWFzb24pIHtcbiAgICAgICAgaWYgKHRoaXMuY29ubikge1xuICAgICAgICAgICAgdGhpcy5jb25uLm9uY2xvc2UgPSBmdW5jdGlvbiAoKSB7IH07IC8vIG5vb3BcbiAgICAgICAgICAgIGlmIChjb2RlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25uLmNsb3NlKGNvZGUsIHJlYXNvbiAhPT0gbnVsbCAmJiByZWFzb24gIT09IHZvaWQgMCA/IHJlYXNvbiA6ICcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubi5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5jb25uID0gbnVsbDtcbiAgICAgICAgICAgIC8vIHJlbW92ZSBvcGVuIGhhbmRsZXNcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTtcbiAgICAgICAgICAgIHRoaXMucmVjb25uZWN0VGltZXIucmVzZXQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFsbCBjcmVhdGVkIGNoYW5uZWxzXG4gICAgICovXG4gICAgZ2V0Q2hhbm5lbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYW5uZWxzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVbnN1YnNjcmliZXMgYW5kIHJlbW92ZXMgYSBzaW5nbGUgY2hhbm5lbFxuICAgICAqIEBwYXJhbSBjaGFubmVsIEEgUmVhbHRpbWVDaGFubmVsIGluc3RhbmNlXG4gICAgICovXG4gICAgYXN5bmMgcmVtb3ZlQ2hhbm5lbChjaGFubmVsKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1cyA9IGF3YWl0IGNoYW5uZWwudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgaWYgKHRoaXMuY2hhbm5lbHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RhdHVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVbnN1YnNjcmliZXMgYW5kIHJlbW92ZXMgYWxsIGNoYW5uZWxzXG4gICAgICovXG4gICAgYXN5bmMgcmVtb3ZlQWxsQ2hhbm5lbHMoKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlc18xID0gYXdhaXQgUHJvbWlzZS5hbGwodGhpcy5jaGFubmVscy5tYXAoKGNoYW5uZWwpID0+IGNoYW5uZWwudW5zdWJzY3JpYmUoKSkpO1xuICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlc18xO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMb2dzIHRoZSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogRm9yIGN1c3RvbWl6ZWQgbG9nZ2luZywgYHRoaXMubG9nZ2VyYCBjYW4gYmUgb3ZlcnJpZGRlbi5cbiAgICAgKi9cbiAgICBsb2coa2luZCwgbXNnLCBkYXRhKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyKGtpbmQsIG1zZywgZGF0YSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIHNvY2tldC5cbiAgICAgKi9cbiAgICBjb25uZWN0aW9uU3RhdGUoKSB7XG4gICAgICAgIHN3aXRjaCAodGhpcy5jb25uICYmIHRoaXMuY29ubi5yZWFkeVN0YXRlKSB7XG4gICAgICAgICAgICBjYXNlIFNPQ0tFVF9TVEFURVMuY29ubmVjdGluZzpcbiAgICAgICAgICAgICAgICByZXR1cm4gQ09OTkVDVElPTl9TVEFURS5Db25uZWN0aW5nO1xuICAgICAgICAgICAgY2FzZSBTT0NLRVRfU1RBVEVTLm9wZW46XG4gICAgICAgICAgICAgICAgcmV0dXJuIENPTk5FQ1RJT05fU1RBVEUuT3BlbjtcbiAgICAgICAgICAgIGNhc2UgU09DS0VUX1NUQVRFUy5jbG9zaW5nOlxuICAgICAgICAgICAgICAgIHJldHVybiBDT05ORUNUSU9OX1NUQVRFLkNsb3Npbmc7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBDT05ORUNUSU9OX1NUQVRFLkNsb3NlZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGB0cnVlYCBpcyB0aGUgY29ubmVjdGlvbiBpcyBvcGVuLlxuICAgICAqL1xuICAgIGlzQ29ubmVjdGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb25uZWN0aW9uU3RhdGUoKSA9PT0gQ09OTkVDVElPTl9TVEFURS5PcGVuO1xuICAgIH1cbiAgICBjaGFubmVsKHRvcGljLCBwYXJhbXMgPSB7IGNvbmZpZzoge30gfSkge1xuICAgICAgICBjb25zdCBjaGFuID0gbmV3IFJlYWx0aW1lQ2hhbm5lbChgcmVhbHRpbWU6JHt0b3BpY31gLCBwYXJhbXMsIHRoaXMpO1xuICAgICAgICB0aGlzLmNoYW5uZWxzLnB1c2goY2hhbik7XG4gICAgICAgIHJldHVybiBjaGFuO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQdXNoIG91dCBhIG1lc3NhZ2UgaWYgdGhlIHNvY2tldCBpcyBjb25uZWN0ZWQuXG4gICAgICpcbiAgICAgKiBJZiB0aGUgc29ja2V0IGlzIG5vdCBjb25uZWN0ZWQsIHRoZSBtZXNzYWdlIGdldHMgZW5xdWV1ZWQgd2l0aGluIGEgbG9jYWwgYnVmZmVyLCBhbmQgc2VudCBvdXQgd2hlbiBhIGNvbm5lY3Rpb24gaXMgbmV4dCBlc3RhYmxpc2hlZC5cbiAgICAgKi9cbiAgICBwdXNoKGRhdGEpIHtcbiAgICAgICAgY29uc3QgeyB0b3BpYywgZXZlbnQsIHBheWxvYWQsIHJlZiB9ID0gZGF0YTtcbiAgICAgICAgY29uc3QgY2FsbGJhY2sgPSAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmVuY29kZShkYXRhLCAocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIChfYSA9IHRoaXMuY29ubikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNlbmQocmVzdWx0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLmxvZygncHVzaCcsIGAke3RvcGljfSAke2V2ZW50fSAoJHtyZWZ9KWAsIHBheWxvYWQpO1xuICAgICAgICBpZiAodGhpcy5pc0Nvbm5lY3RlZCgpKSB7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zZW5kQnVmZmVyLnB1c2goY2FsbGJhY2spO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFNldHMgdGhlIEpXVCBhY2Nlc3MgdG9rZW4gdXNlZCBmb3IgY2hhbm5lbCBzdWJzY3JpcHRpb24gYXV0aG9yaXphdGlvbiBhbmQgUmVhbHRpbWUgUkxTLlxuICAgICAqXG4gICAgICogSWYgcGFyYW0gaXMgbnVsbCBpdCB3aWxsIHVzZSB0aGUgYGFjY2Vzc1Rva2VuYCBjYWxsYmFjayBmdW5jdGlvbiBvciB0aGUgdG9rZW4gc2V0IG9uIHRoZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBPbiBjYWxsYmFjayB1c2VkLCBpdCB3aWxsIHNldCB0aGUgdmFsdWUgb2YgdGhlIHRva2VuIGludGVybmFsIHRvIHRoZSBjbGllbnQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdG9rZW4gQSBKV1Qgc3RyaW5nIHRvIG92ZXJyaWRlIHRoZSB0b2tlbiBzZXQgb24gdGhlIGNsaWVudC5cbiAgICAgKi9cbiAgICBhc3luYyBzZXRBdXRoKHRva2VuID0gbnVsbCkge1xuICAgICAgICBsZXQgdG9rZW5Ub1NlbmQgPSB0b2tlbiB8fFxuICAgICAgICAgICAgKHRoaXMuYWNjZXNzVG9rZW4gJiYgKGF3YWl0IHRoaXMuYWNjZXNzVG9rZW4oKSkpIHx8XG4gICAgICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuVmFsdWU7XG4gICAgICAgIGlmICh0b2tlblRvU2VuZCkge1xuICAgICAgICAgICAgbGV0IHBhcnNlZCA9IG51bGw7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2UoYXRvYih0b2tlblRvU2VuZC5zcGxpdCgnLicpWzFdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoX2Vycm9yKSB7IH1cbiAgICAgICAgICAgIGlmIChwYXJzZWQgJiYgcGFyc2VkLmV4cCkge1xuICAgICAgICAgICAgICAgIGxldCBub3cgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTtcbiAgICAgICAgICAgICAgICBsZXQgdmFsaWQgPSBub3cgLSBwYXJzZWQuZXhwIDwgMDtcbiAgICAgICAgICAgICAgICBpZiAoIXZhbGlkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKCdhdXRoJywgYEludmFsaWRKV1RUb2tlbjogSW52YWxpZCB2YWx1ZSBmb3IgSldUIGNsYWltIFwiZXhwXCIgd2l0aCB2YWx1ZSAke3BhcnNlZC5leHB9YCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgSW52YWxpZEpXVFRva2VuOiBJbnZhbGlkIHZhbHVlIGZvciBKV1QgY2xhaW0gXCJleHBcIiB3aXRoIHZhbHVlICR7cGFyc2VkLmV4cH1gKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmFjY2Vzc1Rva2VuVmFsdWUgPSB0b2tlblRvU2VuZDtcbiAgICAgICAgICAgIHRoaXMuY2hhbm5lbHMuZm9yRWFjaCgoY2hhbm5lbCkgPT4ge1xuICAgICAgICAgICAgICAgIHRva2VuVG9TZW5kICYmIGNoYW5uZWwudXBkYXRlSm9pblBheWxvYWQoeyBhY2Nlc3NfdG9rZW46IHRva2VuVG9TZW5kIH0pO1xuICAgICAgICAgICAgICAgIGlmIChjaGFubmVsLmpvaW5lZE9uY2UgJiYgY2hhbm5lbC5faXNKb2luZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICBjaGFubmVsLl9wdXNoKENIQU5ORUxfRVZFTlRTLmFjY2Vzc190b2tlbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzX3Rva2VuOiB0b2tlblRvU2VuZCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogU2VuZHMgYSBoZWFydGJlYXQgbWVzc2FnZSBpZiB0aGUgc29ja2V0IGlzIGNvbm5lY3RlZC5cbiAgICAgKi9cbiAgICBhc3luYyBzZW5kSGVhcnRiZWF0KCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmICghdGhpcy5pc0Nvbm5lY3RlZCgpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucGVuZGluZ0hlYXJ0YmVhdFJlZikge1xuICAgICAgICAgICAgdGhpcy5wZW5kaW5nSGVhcnRiZWF0UmVmID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubG9nKCd0cmFuc3BvcnQnLCAnaGVhcnRiZWF0IHRpbWVvdXQuIEF0dGVtcHRpbmcgdG8gcmUtZXN0YWJsaXNoIGNvbm5lY3Rpb24nKTtcbiAgICAgICAgICAgIChfYSA9IHRoaXMuY29ubikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNsb3NlKFdTX0NMT1NFX05PUk1BTCwgJ2hlYXJiZWF0IHRpbWVvdXQnKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYgPSB0aGlzLl9tYWtlUmVmKCk7XG4gICAgICAgIHRoaXMucHVzaCh7XG4gICAgICAgICAgICB0b3BpYzogJ3Bob2VuaXgnLFxuICAgICAgICAgICAgZXZlbnQ6ICdoZWFydGJlYXQnLFxuICAgICAgICAgICAgcGF5bG9hZDoge30sXG4gICAgICAgICAgICByZWY6IHRoaXMucGVuZGluZ0hlYXJ0YmVhdFJlZixcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2V0QXV0aCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGbHVzaGVzIHNlbmQgYnVmZmVyXG4gICAgICovXG4gICAgZmx1c2hTZW5kQnVmZmVyKCkge1xuICAgICAgICBpZiAodGhpcy5pc0Nvbm5lY3RlZCgpICYmIHRoaXMuc2VuZEJ1ZmZlci5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnNlbmRCdWZmZXIuZm9yRWFjaCgoY2FsbGJhY2spID0+IGNhbGxiYWNrKCkpO1xuICAgICAgICAgICAgdGhpcy5zZW5kQnVmZmVyID0gW107XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBuZXh0IG1lc3NhZ2UgcmVmLCBhY2NvdW50aW5nIGZvciBvdmVyZmxvd3NcbiAgICAgKlxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIF9tYWtlUmVmKCkge1xuICAgICAgICBsZXQgbmV3UmVmID0gdGhpcy5yZWYgKyAxO1xuICAgICAgICBpZiAobmV3UmVmID09PSB0aGlzLnJlZikge1xuICAgICAgICAgICAgdGhpcy5yZWYgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZWYgPSBuZXdSZWY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucmVmLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVuc3Vic2NyaWJlIGZyb20gY2hhbm5lbHMgd2l0aCB0aGUgc3BlY2lmaWVkIHRvcGljLlxuICAgICAqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgX2xlYXZlT3BlblRvcGljKHRvcGljKSB7XG4gICAgICAgIGxldCBkdXBDaGFubmVsID0gdGhpcy5jaGFubmVscy5maW5kKChjKSA9PiBjLnRvcGljID09PSB0b3BpYyAmJiAoYy5faXNKb2luZWQoKSB8fCBjLl9pc0pvaW5pbmcoKSkpO1xuICAgICAgICBpZiAoZHVwQ2hhbm5lbCkge1xuICAgICAgICAgICAgdGhpcy5sb2coJ3RyYW5zcG9ydCcsIGBsZWF2aW5nIGR1cGxpY2F0ZSB0b3BpYyBcIiR7dG9waWN9XCJgKTtcbiAgICAgICAgICAgIGR1cENoYW5uZWwudW5zdWJzY3JpYmUoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGEgc3Vic2NyaXB0aW9uIGZyb20gdGhlIHNvY2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjaGFubmVsIEFuIG9wZW4gc3Vic2NyaXB0aW9uLlxuICAgICAqXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgX3JlbW92ZShjaGFubmVsKSB7XG4gICAgICAgIHRoaXMuY2hhbm5lbHMgPSB0aGlzLmNoYW5uZWxzLmZpbHRlcigoYykgPT4gYy5fam9pblJlZigpICE9PSBjaGFubmVsLl9qb2luUmVmKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZXRzIHVwIGNvbm5lY3Rpb24gaGFuZGxlcnMuXG4gICAgICpcbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBzZXR1cENvbm5lY3Rpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLmNvbm4pIHtcbiAgICAgICAgICAgIHRoaXMuY29ubi5iaW5hcnlUeXBlID0gJ2FycmF5YnVmZmVyJztcbiAgICAgICAgICAgIHRoaXMuY29ubi5vbm9wZW4gPSAoKSA9PiB0aGlzLl9vbkNvbm5PcGVuKCk7XG4gICAgICAgICAgICB0aGlzLmNvbm4ub25lcnJvciA9IChlcnJvcikgPT4gdGhpcy5fb25Db25uRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgdGhpcy5jb25uLm9ubWVzc2FnZSA9IChldmVudCkgPT4gdGhpcy5fb25Db25uTWVzc2FnZShldmVudCk7XG4gICAgICAgICAgICB0aGlzLmNvbm4ub25jbG9zZSA9IChldmVudCkgPT4gdGhpcy5fb25Db25uQ2xvc2UoZXZlbnQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKiBAaW50ZXJuYWwgKi9cbiAgICBfb25Db25uTWVzc2FnZShyYXdNZXNzYWdlKSB7XG4gICAgICAgIHRoaXMuZGVjb2RlKHJhd01lc3NhZ2UuZGF0YSwgKG1zZykgPT4ge1xuICAgICAgICAgICAgbGV0IHsgdG9waWMsIGV2ZW50LCBwYXlsb2FkLCByZWYgfSA9IG1zZztcbiAgICAgICAgICAgIGlmIChyZWYgJiYgcmVmID09PSB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBlbmRpbmdIZWFydGJlYXRSZWYgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5sb2coJ3JlY2VpdmUnLCBgJHtwYXlsb2FkLnN0YXR1cyB8fCAnJ30gJHt0b3BpY30gJHtldmVudH0gJHsocmVmICYmICcoJyArIHJlZiArICcpJykgfHwgJyd9YCwgcGF5bG9hZCk7XG4gICAgICAgICAgICB0aGlzLmNoYW5uZWxzXG4gICAgICAgICAgICAgICAgLmZpbHRlcigoY2hhbm5lbCkgPT4gY2hhbm5lbC5faXNNZW1iZXIodG9waWMpKVxuICAgICAgICAgICAgICAgIC5mb3JFYWNoKChjaGFubmVsKSA9PiBjaGFubmVsLl90cmlnZ2VyKGV2ZW50LCBwYXlsb2FkLCByZWYpKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGVDaGFuZ2VDYWxsYmFja3MubWVzc2FnZS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2sobXNnKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKiogQGludGVybmFsICovXG4gICAgYXN5bmMgX29uQ29ubk9wZW4oKSB7XG4gICAgICAgIHRoaXMubG9nKCd0cmFuc3BvcnQnLCBgY29ubmVjdGVkIHRvICR7dGhpcy5lbmRwb2ludFVSTCgpfWApO1xuICAgICAgICB0aGlzLmZsdXNoU2VuZEJ1ZmZlcigpO1xuICAgICAgICB0aGlzLnJlY29ubmVjdFRpbWVyLnJlc2V0KCk7XG4gICAgICAgIGlmICghdGhpcy53b3JrZXIpIHtcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTtcbiAgICAgICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB0aGlzLnNlbmRIZWFydGJlYXQoKSwgdGhpcy5oZWFydGJlYXRJbnRlcnZhbE1zKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLndvcmtlclVybCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nKCd3b3JrZXInLCBgc3RhcnRpbmcgd29ya2VyIGZvciBmcm9tICR7dGhpcy53b3JrZXJVcmx9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxvZygnd29ya2VyJywgYHN0YXJ0aW5nIGRlZmF1bHQgd29ya2VyYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvYmplY3RVcmwgPSB0aGlzLl93b3JrZXJPYmplY3RVcmwodGhpcy53b3JrZXJVcmwpO1xuICAgICAgICAgICAgdGhpcy53b3JrZXJSZWYgPSBuZXcgV29ya2VyKG9iamVjdFVybCk7XG4gICAgICAgICAgICB0aGlzLndvcmtlclJlZi5vbmVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2coJ3dvcmtlcicsICd3b3JrZXIgZXJyb3InLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB0aGlzLndvcmtlclJlZi50ZXJtaW5hdGUoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICB0aGlzLndvcmtlclJlZi5vbm1lc3NhZ2UgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnQuZGF0YS5ldmVudCA9PT0gJ2tlZXBBbGl2ZScpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZW5kSGVhcnRiZWF0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMud29ya2VyUmVmLnBvc3RNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBldmVudDogJ3N0YXJ0JyxcbiAgICAgICAgICAgICAgICBpbnRlcnZhbDogdGhpcy5oZWFydGJlYXRJbnRlcnZhbE1zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zdGF0ZUNoYW5nZUNhbGxiYWNrcy5vcGVuLmZvckVhY2goKGNhbGxiYWNrKSA9PiBjYWxsYmFjaygpKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9vbkNvbm5DbG9zZShldmVudCkge1xuICAgICAgICB0aGlzLmxvZygndHJhbnNwb3J0JywgJ2Nsb3NlJywgZXZlbnQpO1xuICAgICAgICB0aGlzLl90cmlnZ2VyQ2hhbkVycm9yKCk7XG4gICAgICAgIHRoaXMuaGVhcnRiZWF0VGltZXIgJiYgY2xlYXJJbnRlcnZhbCh0aGlzLmhlYXJ0YmVhdFRpbWVyKTtcbiAgICAgICAgdGhpcy5yZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKTtcbiAgICAgICAgdGhpcy5zdGF0ZUNoYW5nZUNhbGxiYWNrcy5jbG9zZS5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soZXZlbnQpKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9vbkNvbm5FcnJvcihlcnJvcikge1xuICAgICAgICB0aGlzLmxvZygndHJhbnNwb3J0JywgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIHRoaXMuX3RyaWdnZXJDaGFuRXJyb3IoKTtcbiAgICAgICAgdGhpcy5zdGF0ZUNoYW5nZUNhbGxiYWNrcy5lcnJvci5mb3JFYWNoKChjYWxsYmFjaykgPT4gY2FsbGJhY2soZXJyb3IpKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF90cmlnZ2VyQ2hhbkVycm9yKCkge1xuICAgICAgICB0aGlzLmNoYW5uZWxzLmZvckVhY2goKGNoYW5uZWwpID0+IGNoYW5uZWwuX3RyaWdnZXIoQ0hBTk5FTF9FVkVOVFMuZXJyb3IpKTtcbiAgICB9XG4gICAgLyoqIEBpbnRlcm5hbCAqL1xuICAgIF9hcHBlbmRQYXJhbXModXJsLCBwYXJhbXMpIHtcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHBhcmFtcykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdXJsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByZWZpeCA9IHVybC5tYXRjaCgvXFw/LykgPyAnJicgOiAnPyc7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhwYXJhbXMpO1xuICAgICAgICByZXR1cm4gYCR7dXJsfSR7cHJlZml4fSR7cXVlcnl9YDtcbiAgICB9XG4gICAgX3dvcmtlck9iamVjdFVybCh1cmwpIHtcbiAgICAgICAgbGV0IHJlc3VsdF91cmw7XG4gICAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgICAgIHJlc3VsdF91cmwgPSB1cmw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBibG9iID0gbmV3IEJsb2IoW1dPUktFUl9TQ1JJUFRdLCB7IHR5cGU6ICdhcHBsaWNhdGlvbi9qYXZhc2NyaXB0JyB9KTtcbiAgICAgICAgICAgIHJlc3VsdF91cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHRfdXJsO1xuICAgIH1cbn1cbmNsYXNzIFdTV2ViU29ja2V0RHVtbXkge1xuICAgIGNvbnN0cnVjdG9yKGFkZHJlc3MsIF9wcm90b2NvbHMsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5iaW5hcnlUeXBlID0gJ2FycmF5YnVmZmVyJztcbiAgICAgICAgdGhpcy5vbmNsb3NlID0gKCkgPT4geyB9O1xuICAgICAgICB0aGlzLm9uZXJyb3IgPSAoKSA9PiB7IH07XG4gICAgICAgIHRoaXMub25tZXNzYWdlID0gKCkgPT4geyB9O1xuICAgICAgICB0aGlzLm9ub3BlbiA9ICgpID0+IHsgfTtcbiAgICAgICAgdGhpcy5yZWFkeVN0YXRlID0gU09DS0VUX1NUQVRFUy5jb25uZWN0aW5nO1xuICAgICAgICB0aGlzLnNlbmQgPSAoKSA9PiB7IH07XG4gICAgICAgIHRoaXMudXJsID0gbnVsbDtcbiAgICAgICAgdGhpcy51cmwgPSBhZGRyZXNzO1xuICAgICAgICB0aGlzLmNsb3NlID0gb3B0aW9ucy5jbG9zZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWFsdGltZUNsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiQ0hBTk5FTF9FVkVOVFMiLCJDT05ORUNUSU9OX1NUQVRFIiwiREVGQVVMVF9IRUFERVJTIiwiREVGQVVMVF9USU1FT1VUIiwiU09DS0VUX1NUQVRFUyIsIlRSQU5TUE9SVFMiLCJWU04iLCJXU19DTE9TRV9OT1JNQUwiLCJTZXJpYWxpemVyIiwiVGltZXIiLCJodHRwRW5kcG9pbnRVUkwiLCJSZWFsdGltZUNoYW5uZWwiLCJub29wIiwiTkFUSVZFX1dFQlNPQ0tFVF9BVkFJTEFCTEUiLCJXZWJTb2NrZXQiLCJXT1JLRVJfU0NSSVBUIiwiUmVhbHRpbWVDbGllbnQiLCJjb25uZWN0IiwiY29ubiIsInRyYW5zcG9ydCIsImVuZHBvaW50VVJMIiwidW5kZWZpbmVkIiwiaGVhZGVycyIsInNldHVwQ29ubmVjdGlvbiIsIldTV2ViU29ja2V0RHVtbXkiLCJjbG9zZSIsInRoZW4iLCJkZWZhdWx0IiwiV1MiLCJfYXBwZW5kUGFyYW1zIiwiZW5kUG9pbnQiLCJPYmplY3QiLCJhc3NpZ24iLCJwYXJhbXMiLCJ2c24iLCJkaXNjb25uZWN0IiwiY29kZSIsInJlYXNvbiIsIm9uY2xvc2UiLCJoZWFydGJlYXRUaW1lciIsImNsZWFySW50ZXJ2YWwiLCJyZWNvbm5lY3RUaW1lciIsInJlc2V0IiwiZ2V0Q2hhbm5lbHMiLCJjaGFubmVscyIsInJlbW92ZUNoYW5uZWwiLCJjaGFubmVsIiwic3RhdHVzIiwidW5zdWJzY3JpYmUiLCJsZW5ndGgiLCJyZW1vdmVBbGxDaGFubmVscyIsInZhbHVlc18xIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImxvZyIsImtpbmQiLCJtc2ciLCJkYXRhIiwibG9nZ2VyIiwiY29ubmVjdGlvblN0YXRlIiwicmVhZHlTdGF0ZSIsImNvbm5lY3RpbmciLCJDb25uZWN0aW5nIiwib3BlbiIsIk9wZW4iLCJjbG9zaW5nIiwiQ2xvc2luZyIsIkNsb3NlZCIsImlzQ29ubmVjdGVkIiwidG9waWMiLCJjb25maWciLCJjaGFuIiwicHVzaCIsImV2ZW50IiwicGF5bG9hZCIsInJlZiIsImNhbGxiYWNrIiwiZW5jb2RlIiwicmVzdWx0IiwiX2EiLCJzZW5kIiwic2VuZEJ1ZmZlciIsInNldEF1dGgiLCJ0b2tlbiIsInRva2VuVG9TZW5kIiwiYWNjZXNzVG9rZW4iLCJhY2Nlc3NUb2tlblZhbHVlIiwicGFyc2VkIiwiSlNPTiIsInBhcnNlIiwiYXRvYiIsInNwbGl0IiwiX2Vycm9yIiwiZXhwIiwibm93IiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsInZhbGlkIiwicmVqZWN0IiwiZm9yRWFjaCIsInVwZGF0ZUpvaW5QYXlsb2FkIiwiYWNjZXNzX3Rva2VuIiwiam9pbmVkT25jZSIsIl9pc0pvaW5lZCIsIl9wdXNoIiwic2VuZEhlYXJ0YmVhdCIsInBlbmRpbmdIZWFydGJlYXRSZWYiLCJfbWFrZVJlZiIsImZsdXNoU2VuZEJ1ZmZlciIsIm5ld1JlZiIsInRvU3RyaW5nIiwiX2xlYXZlT3BlblRvcGljIiwiZHVwQ2hhbm5lbCIsImZpbmQiLCJjIiwiX2lzSm9pbmluZyIsIl9yZW1vdmUiLCJmaWx0ZXIiLCJfam9pblJlZiIsImJpbmFyeVR5cGUiLCJvbm9wZW4iLCJfb25Db25uT3BlbiIsIm9uZXJyb3IiLCJlcnJvciIsIl9vbkNvbm5FcnJvciIsIm9ubWVzc2FnZSIsIl9vbkNvbm5NZXNzYWdlIiwiX29uQ29ubkNsb3NlIiwicmF3TWVzc2FnZSIsImRlY29kZSIsIl9pc01lbWJlciIsIl90cmlnZ2VyIiwic3RhdGVDaGFuZ2VDYWxsYmFja3MiLCJtZXNzYWdlIiwid29ya2VyIiwic2V0SW50ZXJ2YWwiLCJoZWFydGJlYXRJbnRlcnZhbE1zIiwid29ya2VyVXJsIiwib2JqZWN0VXJsIiwiX3dvcmtlck9iamVjdFVybCIsIndvcmtlclJlZiIsIldvcmtlciIsInRlcm1pbmF0ZSIsInBvc3RNZXNzYWdlIiwiaW50ZXJ2YWwiLCJfdHJpZ2dlckNoYW5FcnJvciIsInNjaGVkdWxlVGltZW91dCIsInVybCIsImtleXMiLCJwcmVmaXgiLCJtYXRjaCIsInF1ZXJ5IiwiVVJMU2VhcmNoUGFyYW1zIiwicmVzdWx0X3VybCIsImJsb2IiLCJCbG9iIiwidHlwZSIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsImFwaUtleSIsImh0dHBFbmRwb2ludCIsInRpbWVvdXQiLCJzZXJpYWxpemVyIiwiX3Jlc29sdmVGZXRjaCIsImN1c3RvbUZldGNoIiwiX2ZldGNoIiwiZmV0Y2giLCJhcmdzIiwid2Vic29ja2V0IiwiYXBpa2V5IiwicmVjb25uZWN0QWZ0ZXJNcyIsInRyaWVzIiwic3RyaW5naWZ5IiwiYmluZCIsIndpbmRvdyIsIkVycm9yIiwiYWRkcmVzcyIsIl9wcm90b2NvbHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: function() { return /* binding */ REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   \"default\": function() { return /* binding */ RealtimePresence; }\n/* harmony export */ });\n/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/ var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function(REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nclass RealtimePresence {\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */ static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences)=>{\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences)=>{\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m)=>m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m)=>m.presence_ref);\n                const joinedPresences = newPresences.filter((m)=>curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m)=>newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            } else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, {\n            joins,\n            leaves\n        }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */ static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves)\n        };\n        if (!onJoin) {\n            onJoin = ()=>{};\n        }\n        if (!onLeave) {\n            onLeave = ()=>{};\n        }\n        this.map(joins, (key, newPresences)=>{\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m)=>m.presence_ref);\n                const curPresences = currentPresences.filter((m)=>joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences)=>{\n            let currentPresences = state[key];\n            if (!currentPresences) return;\n            const presenceRefsToRemove = leftPresences.map((m)=>m.presence_ref);\n            currentPresences = currentPresences.filter((m)=>presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0) delete state[key];\n        });\n        return state;\n    }\n    /** @internal */ static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key)=>func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */ static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key)=>{\n            const presences = state[key];\n            if (\"metas\" in presences) {\n                newState[key] = presences.metas.map((presence)=>{\n                    presence[\"presence_ref\"] = presence[\"phx_ref\"];\n                    delete presence[\"phx_ref\"];\n                    delete presence[\"phx_ref_prev\"];\n                    return presence;\n                });\n            } else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */ static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */ onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */ onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */ onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */ inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */ constructor(channel, opts){\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: ()=>{},\n            onLeave: ()=>{},\n            onSync: ()=>{}\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: \"presence_state\",\n            diff: \"presence_diff\"\n        };\n        this.channel._on(events.state, {}, (newState)=>{\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff)=>{\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff)=>{\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            } else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences)=>{\n            this.channel._trigger(\"presence\", {\n                event: \"join\",\n                key,\n                currentPresences,\n                newPresences\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences)=>{\n            this.channel._trigger(\"presence\", {\n                event: \"leave\",\n                key,\n                currentPresences,\n                leftPresences\n            });\n        });\n        this.onSync(()=>{\n            this.channel._trigger(\"presence\", {\n                event: \"sync\"\n            });\n        });\n    }\n} //# sourceMappingURL=RealtimePresence.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   REALTIME_CHANNEL_STATES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_CHANNEL_STATES; },\n/* harmony export */   REALTIME_LISTEN_TYPES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_LISTEN_TYPES; },\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__.REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__.REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   RealtimeChannel: function() { return /* reexport safe */ _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   RealtimeClient: function() { return /* reexport safe */ _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   RealtimePresence: function() { return /* reexport safe */ _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _RealtimeClient__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RealtimeClient */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js\");\n/* harmony import */ var _RealtimeChannel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealtimeChannel */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js\");\n/* harmony import */ var _RealtimePresence__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealtimePresence */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBOEM7QUFDMEg7QUFDaEY7QUFDMEgsQ0FDbE4saUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvaW5kZXguanM/NTU1ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhbHRpbWVDbGllbnQgZnJvbSAnLi9SZWFsdGltZUNsaWVudCc7XG5pbXBvcnQgUmVhbHRpbWVDaGFubmVsLCB7IFJFQUxUSU1FX0xJU1RFTl9UWVBFUywgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlQsIFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVMsIFJFQUxUSU1FX0NIQU5ORUxfU1RBVEVTLCB9IGZyb20gJy4vUmVhbHRpbWVDaGFubmVsJztcbmltcG9ydCBSZWFsdGltZVByZXNlbmNlLCB7IFJFQUxUSU1FX1BSRVNFTkNFX0xJU1RFTl9FVkVOVFMsIH0gZnJvbSAnLi9SZWFsdGltZVByZXNlbmNlJztcbmV4cG9ydCB7IFJlYWx0aW1lUHJlc2VuY2UsIFJlYWx0aW1lQ2hhbm5lbCwgUmVhbHRpbWVDbGllbnQsIFJFQUxUSU1FX0xJU1RFTl9UWVBFUywgUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlQsIFJFQUxUSU1FX1BSRVNFTkNFX0xJU1RFTl9FVkVOVFMsIFJFQUxUSU1FX1NVQlNDUklCRV9TVEFURVMsIFJFQUxUSU1FX0NIQU5ORUxfU1RBVEVTLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIlJlYWx0aW1lQ2xpZW50IiwiUmVhbHRpbWVDaGFubmVsIiwiUkVBTFRJTUVfTElTVEVOX1RZUEVTIiwiUkVBTFRJTUVfUE9TVEdSRVNfQ0hBTkdFU19MSVNURU5fRVZFTlQiLCJSRUFMVElNRV9TVUJTQ1JJQkVfU1RBVEVTIiwiUkVBTFRJTUVfQ0hBTk5FTF9TVEFURVMiLCJSZWFsdGltZVByZXNlbmNlIiwiUkVBTFRJTUVfUFJFU0VOQ0VfTElTVEVOX0VWRU5UUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHANNEL_EVENTS: function() { return /* binding */ CHANNEL_EVENTS; },\n/* harmony export */   CHANNEL_STATES: function() { return /* binding */ CHANNEL_STATES; },\n/* harmony export */   CONNECTION_STATE: function() { return /* binding */ CONNECTION_STATE; },\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   DEFAULT_TIMEOUT: function() { return /* binding */ DEFAULT_TIMEOUT; },\n/* harmony export */   SOCKET_STATES: function() { return /* binding */ SOCKET_STATES; },\n/* harmony export */   TRANSPORTS: function() { return /* binding */ TRANSPORTS; },\n/* harmony export */   VSN: function() { return /* binding */ VSN; },\n/* harmony export */   WS_CLOSE_NORMAL: function() { return /* binding */ WS_CLOSE_NORMAL; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\");\n\nconst DEFAULT_HEADERS = {\n    \"X-Client-Info\": \"realtime-js/\".concat(_version__WEBPACK_IMPORTED_MODULE_0__.version)\n};\nconst VSN = \"1.0.0\";\nconst DEFAULT_TIMEOUT = 10000;\nconst WS_CLOSE_NORMAL = 1000;\nvar SOCKET_STATES;\n(function(SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nvar CHANNEL_STATES;\n(function(CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nvar CHANNEL_EVENTS;\n(function(CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nvar TRANSPORTS;\n(function(TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nvar CONNECTION_STATE;\n(function(CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {})); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLGtCQUFrQjtJQUFFLGlCQUFpQixlQUF1QixPQUFSRCw2Q0FBT0E7QUFBRyxFQUFFO0FBQ3RFLE1BQU1FLE1BQU0sUUFBUTtBQUNwQixNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxrQkFBa0IsS0FBSztBQUM3QixJQUFJQyxjQUFjO0FBQ3hCLFVBQVVBLGFBQWE7SUFDcEJBLGFBQWEsQ0FBQ0EsYUFBYSxDQUFDLGFBQWEsR0FBRyxFQUFFLEdBQUc7SUFDakRBLGFBQWEsQ0FBQ0EsYUFBYSxDQUFDLE9BQU8sR0FBRyxFQUFFLEdBQUc7SUFDM0NBLGFBQWEsQ0FBQ0EsYUFBYSxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUc7SUFDOUNBLGFBQWEsQ0FBQ0EsYUFBYSxDQUFDLFNBQVMsR0FBRyxFQUFFLEdBQUc7QUFDakQsR0FBR0EsaUJBQWtCQSxDQUFBQSxnQkFBZ0IsQ0FBQztBQUMvQixJQUFJQyxlQUFlO0FBQ3pCLFVBQVVBLGNBQWM7SUFDckJBLGNBQWMsQ0FBQyxTQUFTLEdBQUc7SUFDM0JBLGNBQWMsQ0FBQyxVQUFVLEdBQUc7SUFDNUJBLGNBQWMsQ0FBQyxTQUFTLEdBQUc7SUFDM0JBLGNBQWMsQ0FBQyxVQUFVLEdBQUc7SUFDNUJBLGNBQWMsQ0FBQyxVQUFVLEdBQUc7QUFDaEMsR0FBR0Esa0JBQW1CQSxDQUFBQSxpQkFBaUIsQ0FBQztBQUNqQyxJQUFJQyxlQUFlO0FBQ3pCLFVBQVVBLGNBQWM7SUFDckJBLGNBQWMsQ0FBQyxRQUFRLEdBQUc7SUFDMUJBLGNBQWMsQ0FBQyxRQUFRLEdBQUc7SUFDMUJBLGNBQWMsQ0FBQyxPQUFPLEdBQUc7SUFDekJBLGNBQWMsQ0FBQyxRQUFRLEdBQUc7SUFDMUJBLGNBQWMsQ0FBQyxRQUFRLEdBQUc7SUFDMUJBLGNBQWMsQ0FBQyxlQUFlLEdBQUc7QUFDckMsR0FBR0Esa0JBQW1CQSxDQUFBQSxpQkFBaUIsQ0FBQztBQUNqQyxJQUFJQyxXQUFXO0FBQ3JCLFVBQVVBLFVBQVU7SUFDakJBLFVBQVUsQ0FBQyxZQUFZLEdBQUc7QUFDOUIsR0FBR0EsY0FBZUEsQ0FBQUEsYUFBYSxDQUFDO0FBQ3pCLElBQUlDLGlCQUFpQjtBQUMzQixVQUFVQSxnQkFBZ0I7SUFDdkJBLGdCQUFnQixDQUFDLGFBQWEsR0FBRztJQUNqQ0EsZ0JBQWdCLENBQUMsT0FBTyxHQUFHO0lBQzNCQSxnQkFBZ0IsQ0FBQyxVQUFVLEdBQUc7SUFDOUJBLGdCQUFnQixDQUFDLFNBQVMsR0FBRztBQUNqQyxHQUFHQSxvQkFBcUJBLENBQUFBLG1CQUFtQixDQUFDLEtBQzVDLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi9jb25zdGFudHMuanM/YWMxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uJztcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHJlYWx0aW1lLWpzLyR7dmVyc2lvbn1gIH07XG5leHBvcnQgY29uc3QgVlNOID0gJzEuMC4wJztcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RJTUVPVVQgPSAxMDAwMDtcbmV4cG9ydCBjb25zdCBXU19DTE9TRV9OT1JNQUwgPSAxMDAwO1xuZXhwb3J0IHZhciBTT0NLRVRfU1RBVEVTO1xuKGZ1bmN0aW9uIChTT0NLRVRfU1RBVEVTKSB7XG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY29ubmVjdGluZ1wiXSA9IDBdID0gXCJjb25uZWN0aW5nXCI7XG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wib3BlblwiXSA9IDFdID0gXCJvcGVuXCI7XG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY2xvc2luZ1wiXSA9IDJdID0gXCJjbG9zaW5nXCI7XG4gICAgU09DS0VUX1NUQVRFU1tTT0NLRVRfU1RBVEVTW1wiY2xvc2VkXCJdID0gM10gPSBcImNsb3NlZFwiO1xufSkoU09DS0VUX1NUQVRFUyB8fCAoU09DS0VUX1NUQVRFUyA9IHt9KSk7XG5leHBvcnQgdmFyIENIQU5ORUxfU1RBVEVTO1xuKGZ1bmN0aW9uIChDSEFOTkVMX1NUQVRFUykge1xuICAgIENIQU5ORUxfU1RBVEVTW1wiY2xvc2VkXCJdID0gXCJjbG9zZWRcIjtcbiAgICBDSEFOTkVMX1NUQVRFU1tcImVycm9yZWRcIl0gPSBcImVycm9yZWRcIjtcbiAgICBDSEFOTkVMX1NUQVRFU1tcImpvaW5lZFwiXSA9IFwiam9pbmVkXCI7XG4gICAgQ0hBTk5FTF9TVEFURVNbXCJqb2luaW5nXCJdID0gXCJqb2luaW5nXCI7XG4gICAgQ0hBTk5FTF9TVEFURVNbXCJsZWF2aW5nXCJdID0gXCJsZWF2aW5nXCI7XG59KShDSEFOTkVMX1NUQVRFUyB8fCAoQ0hBTk5FTF9TVEFURVMgPSB7fSkpO1xuZXhwb3J0IHZhciBDSEFOTkVMX0VWRU5UUztcbihmdW5jdGlvbiAoQ0hBTk5FTF9FVkVOVFMpIHtcbiAgICBDSEFOTkVMX0VWRU5UU1tcImNsb3NlXCJdID0gXCJwaHhfY2xvc2VcIjtcbiAgICBDSEFOTkVMX0VWRU5UU1tcImVycm9yXCJdID0gXCJwaHhfZXJyb3JcIjtcbiAgICBDSEFOTkVMX0VWRU5UU1tcImpvaW5cIl0gPSBcInBoeF9qb2luXCI7XG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJyZXBseVwiXSA9IFwicGh4X3JlcGx5XCI7XG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJsZWF2ZVwiXSA9IFwicGh4X2xlYXZlXCI7XG4gICAgQ0hBTk5FTF9FVkVOVFNbXCJhY2Nlc3NfdG9rZW5cIl0gPSBcImFjY2Vzc190b2tlblwiO1xufSkoQ0hBTk5FTF9FVkVOVFMgfHwgKENIQU5ORUxfRVZFTlRTID0ge30pKTtcbmV4cG9ydCB2YXIgVFJBTlNQT1JUUztcbihmdW5jdGlvbiAoVFJBTlNQT1JUUykge1xuICAgIFRSQU5TUE9SVFNbXCJ3ZWJzb2NrZXRcIl0gPSBcIndlYnNvY2tldFwiO1xufSkoVFJBTlNQT1JUUyB8fCAoVFJBTlNQT1JUUyA9IHt9KSk7XG5leHBvcnQgdmFyIENPTk5FQ1RJT05fU1RBVEU7XG4oZnVuY3Rpb24gKENPTk5FQ1RJT05fU1RBVEUpIHtcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ29ubmVjdGluZ1wiXSA9IFwiY29ubmVjdGluZ1wiO1xuICAgIENPTk5FQ1RJT05fU1RBVEVbXCJPcGVuXCJdID0gXCJvcGVuXCI7XG4gICAgQ09OTkVDVElPTl9TVEFURVtcIkNsb3NpbmdcIl0gPSBcImNsb3NpbmdcIjtcbiAgICBDT05ORUNUSU9OX1NUQVRFW1wiQ2xvc2VkXCJdID0gXCJjbG9zZWRcIjtcbn0pKENPTk5FQ1RJT05fU1RBVEUgfHwgKENPTk5FQ1RJT05fU1RBVEUgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiREVGQVVMVF9IRUFERVJTIiwiVlNOIiwiREVGQVVMVF9USU1FT1VUIiwiV1NfQ0xPU0VfTk9STUFMIiwiU09DS0VUX1NUQVRFUyIsIkNIQU5ORUxfU1RBVEVTIiwiQ0hBTk5FTF9FVkVOVFMiLCJUUkFOU1BPUlRTIiwiQ09OTkVDVElPTl9TVEFURSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/push.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Push; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js\");\n\nclass Push {\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = \"\";\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived(\"timeout\")) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef()\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({\n            status,\n            callback\n        });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload)=>{\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(()=>{\n            this.trigger(\"timeout\", {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent) this.channel._trigger(this.refEvent, {\n            status,\n            response\n        });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive(param) {\n        let { status, response } = param;\n        this.recHooks.filter((h)=>h.status === status).forEach((h)=>h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */ constructor(channel, event, payload = {}, timeout = _lib_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TIMEOUT){\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = \"\";\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n} //# sourceMappingURL=push.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/push.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Serializer; }\n/* harmony export */ });\n// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nclass Serializer {\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === \"string\") {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return {\n            ref: null,\n            topic: topic,\n            event: event,\n            payload: data\n        };\n    }\n    constructor(){\n        this.HEADER_LENGTH = 1;\n    }\n} //# sourceMappingURL=serializer.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLDJIQUEySDtBQUMzSCw4RUFBOEU7QUFDL0QsTUFBTUE7SUFJakJDLE9BQU9DLFVBQVUsRUFBRUMsUUFBUSxFQUFFO1FBQ3pCLElBQUlELFdBQVdFLFdBQVcsS0FBS0MsYUFBYTtZQUN4QyxPQUFPRixTQUFTLElBQUksQ0FBQ0csYUFBYSxDQUFDSjtRQUN2QztRQUNBLElBQUksT0FBT0EsZUFBZSxVQUFVO1lBQ2hDLE9BQU9DLFNBQVNJLEtBQUtDLEtBQUssQ0FBQ047UUFDL0I7UUFDQSxPQUFPQyxTQUFTLENBQUM7SUFDckI7SUFDQUcsY0FBY0csTUFBTSxFQUFFO1FBQ2xCLE1BQU1DLE9BQU8sSUFBSUMsU0FBU0Y7UUFDMUIsTUFBTUcsVUFBVSxJQUFJQztRQUNwQixPQUFPLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUNMLFFBQVFDLE1BQU1FO0lBQy9DO0lBQ0FFLGlCQUFpQkwsTUFBTSxFQUFFQyxJQUFJLEVBQUVFLE9BQU8sRUFBRTtRQUNwQyxNQUFNRyxZQUFZTCxLQUFLTSxRQUFRLENBQUM7UUFDaEMsTUFBTUMsWUFBWVAsS0FBS00sUUFBUSxDQUFDO1FBQ2hDLElBQUlFLFNBQVMsSUFBSSxDQUFDQyxhQUFhLEdBQUc7UUFDbEMsTUFBTUMsUUFBUVIsUUFBUVgsTUFBTSxDQUFDUSxPQUFPWSxLQUFLLENBQUNILFFBQVFBLFNBQVNIO1FBQzNERyxTQUFTQSxTQUFTSDtRQUNsQixNQUFNTyxRQUFRVixRQUFRWCxNQUFNLENBQUNRLE9BQU9ZLEtBQUssQ0FBQ0gsUUFBUUEsU0FBU0Q7UUFDM0RDLFNBQVNBLFNBQVNEO1FBQ2xCLE1BQU1NLE9BQU9oQixLQUFLQyxLQUFLLENBQUNJLFFBQVFYLE1BQU0sQ0FBQ1EsT0FBT1ksS0FBSyxDQUFDSCxRQUFRVCxPQUFPZSxVQUFVO1FBQzdFLE9BQU87WUFBRUMsS0FBSztZQUFNTCxPQUFPQTtZQUFPRSxPQUFPQTtZQUFPSSxTQUFTSDtRQUFLO0lBQ2xFO0lBM0JBbkIsYUFBYztRQUNWLElBQUksQ0FBQ2UsYUFBYSxHQUFHO0lBQ3pCO0FBMEJKLEVBQ0Esc0NBQXNDO0FBRHJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3NlcmlhbGl6ZXIuanM/ODFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgZHJhd3MgaGVhdmlseSBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvY29tbWl0L2NmMDk4ZTljZjdhNDRlZTY0NzlkMzFkOTExYTk3ZDNjNzQzMGM2ZmVcbi8vIExpY2Vuc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9waG9lbml4ZnJhbWV3b3JrL3Bob2VuaXgvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZFxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VyaWFsaXplciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuSEVBREVSX0xFTkdUSCA9IDE7XG4gICAgfVxuICAgIGRlY29kZShyYXdQYXlsb2FkLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAocmF3UGF5bG9hZC5jb25zdHJ1Y3RvciA9PT0gQXJyYXlCdWZmZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayh0aGlzLl9iaW5hcnlEZWNvZGUocmF3UGF5bG9hZCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgcmF3UGF5bG9hZCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhKU09OLnBhcnNlKHJhd1BheWxvYWQpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2FsbGJhY2soe30pO1xuICAgIH1cbiAgICBfYmluYXJ5RGVjb2RlKGJ1ZmZlcikge1xuICAgICAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGJ1ZmZlcik7XG4gICAgICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RlY29kZUJyb2FkY2FzdChidWZmZXIsIHZpZXcsIGRlY29kZXIpO1xuICAgIH1cbiAgICBfZGVjb2RlQnJvYWRjYXN0KGJ1ZmZlciwgdmlldywgZGVjb2Rlcikge1xuICAgICAgICBjb25zdCB0b3BpY1NpemUgPSB2aWV3LmdldFVpbnQ4KDEpO1xuICAgICAgICBjb25zdCBldmVudFNpemUgPSB2aWV3LmdldFVpbnQ4KDIpO1xuICAgICAgICBsZXQgb2Zmc2V0ID0gdGhpcy5IRUFERVJfTEVOR1RIICsgMjtcbiAgICAgICAgY29uc3QgdG9waWMgPSBkZWNvZGVyLmRlY29kZShidWZmZXIuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyB0b3BpY1NpemUpKTtcbiAgICAgICAgb2Zmc2V0ID0gb2Zmc2V0ICsgdG9waWNTaXplO1xuICAgICAgICBjb25zdCBldmVudCA9IGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIG9mZnNldCArIGV2ZW50U2l6ZSkpO1xuICAgICAgICBvZmZzZXQgPSBvZmZzZXQgKyBldmVudFNpemU7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKGRlY29kZXIuZGVjb2RlKGJ1ZmZlci5zbGljZShvZmZzZXQsIGJ1ZmZlci5ieXRlTGVuZ3RoKSkpO1xuICAgICAgICByZXR1cm4geyByZWY6IG51bGwsIHRvcGljOiB0b3BpYywgZXZlbnQ6IGV2ZW50LCBwYXlsb2FkOiBkYXRhIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplci5qcy5tYXAiXSwibmFtZXMiOlsiU2VyaWFsaXplciIsImRlY29kZSIsInJhd1BheWxvYWQiLCJjYWxsYmFjayIsImNvbnN0cnVjdG9yIiwiQXJyYXlCdWZmZXIiLCJfYmluYXJ5RGVjb2RlIiwiSlNPTiIsInBhcnNlIiwiYnVmZmVyIiwidmlldyIsIkRhdGFWaWV3IiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiX2RlY29kZUJyb2FkY2FzdCIsInRvcGljU2l6ZSIsImdldFVpbnQ4IiwiZXZlbnRTaXplIiwib2Zmc2V0IiwiSEVBREVSX0xFTkdUSCIsInRvcGljIiwic2xpY2UiLCJldmVudCIsImRhdGEiLCJieXRlTGVuZ3RoIiwicmVmIiwicGF5bG9hZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/timer.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Timer; }\n/* harmony export */ });\n/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */ class Timer {\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(()=>{\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n    constructor(callback, timerCalc){\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n} //# sourceMappingURL=timer.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3RpbWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Q0FXQyxHQUNjLE1BQU1BO0lBU2pCQyxRQUFRO1FBQ0osSUFBSSxDQUFDQyxLQUFLLEdBQUc7UUFDYkMsYUFBYSxJQUFJLENBQUNDLEtBQUs7SUFDM0I7SUFDQSw4REFBOEQ7SUFDOURDLGtCQUFrQjtRQUNkRixhQUFhLElBQUksQ0FBQ0MsS0FBSztRQUN2QixJQUFJLENBQUNBLEtBQUssR0FBR0UsV0FBVztZQUNwQixJQUFJLENBQUNKLEtBQUssR0FBRyxJQUFJLENBQUNBLEtBQUssR0FBRztZQUMxQixJQUFJLENBQUNLLFFBQVE7UUFDakIsR0FBRyxJQUFJLENBQUNDLFNBQVMsQ0FBQyxJQUFJLENBQUNOLEtBQUssR0FBRztJQUNuQztJQW5CQU8sWUFBWUYsUUFBUSxFQUFFQyxTQUFTLENBQUU7UUFDN0IsSUFBSSxDQUFDRCxRQUFRLEdBQUdBO1FBQ2hCLElBQUksQ0FBQ0MsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNKLEtBQUssR0FBR007UUFDYixJQUFJLENBQUNSLEtBQUssR0FBRztRQUNiLElBQUksQ0FBQ0ssUUFBUSxHQUFHQTtRQUNoQixJQUFJLENBQUNDLFNBQVMsR0FBR0E7SUFDckI7QUFhSixFQUNBLGlDQUFpQztBQURoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3JlYWx0aW1lLWpzL2Rpc3QvbW9kdWxlL2xpYi90aW1lci5qcz8xMTVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHRpbWVyIHRoYXQgYWNjZXB0cyBhIGB0aW1lckNhbGNgIGZ1bmN0aW9uIHRvIHBlcmZvcm0gY2FsY3VsYXRlZCB0aW1lb3V0IHJldHJpZXMsIHN1Y2ggYXMgZXhwb25lbnRpYWwgYmFja29mZi5cbiAqXG4gKiBAZXhhbXBsZVxuICogICAgbGV0IHJlY29ubmVjdFRpbWVyID0gbmV3IFRpbWVyKCgpID0+IHRoaXMuY29ubmVjdCgpLCBmdW5jdGlvbih0cmllcyl7XG4gKiAgICAgIHJldHVybiBbMTAwMCwgNTAwMCwgMTAwMDBdW3RyaWVzIC0gMV0gfHwgMTAwMDBcbiAqICAgIH0pXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciA1MDAwXG4gKiAgICByZWNvbm5lY3RUaW1lci5yZXNldCgpXG4gKiAgICByZWNvbm5lY3RUaW1lci5zY2hlZHVsZVRpbWVvdXQoKSAvLyBmaXJlcyBhZnRlciAxMDAwXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVyIHtcbiAgICBjb25zdHJ1Y3RvcihjYWxsYmFjaywgdGltZXJDYWxjKSB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgdGhpcy50aW1lckNhbGMgPSB0aW1lckNhbGM7XG4gICAgICAgIHRoaXMudGltZXIgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMudHJpZXMgPSAwO1xuICAgICAgICB0aGlzLmNhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMudGltZXJDYWxjID0gdGltZXJDYWxjO1xuICAgIH1cbiAgICByZXNldCgpIHtcbiAgICAgICAgdGhpcy50cmllcyA9IDA7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICB9XG4gICAgLy8gQ2FuY2VscyBhbnkgcHJldmlvdXMgc2NoZWR1bGVUaW1lb3V0IGFuZCBzY2hlZHVsZXMgY2FsbGJhY2tcbiAgICBzY2hlZHVsZVRpbWVvdXQoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTtcbiAgICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy50cmllcyA9IHRoaXMudHJpZXMgKyAxO1xuICAgICAgICAgICAgdGhpcy5jYWxsYmFjaygpO1xuICAgICAgICB9LCB0aGlzLnRpbWVyQ2FsYyh0aGlzLnRyaWVzICsgMSkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVyLmpzLm1hcCJdLCJuYW1lcyI6WyJUaW1lciIsInJlc2V0IiwidHJpZXMiLCJjbGVhclRpbWVvdXQiLCJ0aW1lciIsInNjaGVkdWxlVGltZW91dCIsInNldFRpbWVvdXQiLCJjYWxsYmFjayIsInRpbWVyQ2FsYyIsImNvbnN0cnVjdG9yIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgresTypes: function() { return /* binding */ PostgresTypes; },\n/* harmony export */   convertCell: function() { return /* binding */ convertCell; },\n/* harmony export */   convertChangeData: function() { return /* binding */ convertChangeData; },\n/* harmony export */   convertColumn: function() { return /* binding */ convertColumn; },\n/* harmony export */   httpEndpointURL: function() { return /* binding */ httpEndpointURL; },\n/* harmony export */   toArray: function() { return /* binding */ toArray; },\n/* harmony export */   toBoolean: function() { return /* binding */ toBoolean; },\n/* harmony export */   toJson: function() { return /* binding */ toJson; },\n/* harmony export */   toNumber: function() { return /* binding */ toNumber; },\n/* harmony export */   toTimestampString: function() { return /* binding */ toTimestampString; }\n/* harmony export */ });\n/**\n * Helpers to convert the change Payload into native JS types.\n */ // Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nvar PostgresTypes;\n(function(PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */ const convertChangeData = function(columns, record) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key)=>{\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */ const convertColumn = (columnName, columns, record, skipTypes)=>{\n    const column = columns.find((x)=>x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */ const convertCell = (type, value)=>{\n    // if data type is an array\n    if (type.charAt(0) === \"_\") {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch(type){\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime:\n        case PostgresTypes.date:\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime:\n        case PostgresTypes.text:\n        case PostgresTypes.time:\n        case PostgresTypes.timestamptz:\n        case PostgresTypes.timetz:\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value)=>{\n    return value;\n};\nconst toBoolean = (value)=>{\n    switch(value){\n        case \"t\":\n            return true;\n        case \"f\":\n            return false;\n        default:\n            return value;\n    }\n};\nconst toNumber = (value)=>{\n    if (typeof value === \"string\") {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nconst toJson = (value)=>{\n    if (typeof value === \"string\") {\n        try {\n            return JSON.parse(value);\n        } catch (error) {\n            console.log(\"JSON parse error: \".concat(error));\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */ const toArray = (value, type)=>{\n    if (typeof value !== \"string\") {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === \"{\" && closeBrace === \"}\") {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse(\"[\" + valTrim + \"]\");\n        } catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(\",\") : [];\n        }\n        return arr.map((val)=>convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */ const toTimestampString = (value)=>{\n    if (typeof value === \"string\") {\n        return value.replace(\" \", \"T\");\n    }\n    return value;\n};\nconst httpEndpointURL = (socketUrl)=>{\n    let url = socketUrl;\n    url = url.replace(/^ws/i, \"http\");\n    url = url.replace(/(\\/socket\\/websocket|\\/socket|\\/websocket)\\/?$/i, \"\");\n    return url.replace(/\\/+$/, \"\");\n}; //# sourceMappingURL=transformers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/realtime-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = \"2.11.2\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcmVhbHRpbWUtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFVBQVUsU0FBUyxDQUNoQyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9yZWFsdGltZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcz8xZmQ1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuMTEuMic7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/StorageClient.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageClient: function() { return /* binding */ StorageClient; }\n/* harmony export */ });\n/* harmony import */ var _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./packages/StorageFileApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\");\n/* harmony import */ var _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./packages/StorageBucketApi */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\");\n\n\nclass StorageClient extends _packages_StorageBucketApi__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */ from(id) {\n        return new _packages_StorageFileApi__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.url, this.headers, id, this.fetch);\n    }\n    constructor(url, headers = {}, fetch){\n        super(url, headers, fetch);\n    }\n} //# sourceMappingURL=StorageClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9TdG9yYWdlQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1RDtBQUNJO0FBQ3BELE1BQU1FLHNCQUFzQkQsa0VBQWdCQTtJQUkvQzs7OztLQUlDLEdBQ0RFLEtBQUtDLEVBQUUsRUFBRTtRQUNMLE9BQU8sSUFBSUosZ0VBQWNBLENBQUMsSUFBSSxDQUFDSyxHQUFHLEVBQUUsSUFBSSxDQUFDQyxPQUFPLEVBQUVGLElBQUksSUFBSSxDQUFDRyxLQUFLO0lBQ3BFO0lBVkFDLFlBQVlILEdBQUcsRUFBRUMsVUFBVSxDQUFDLENBQUMsRUFBRUMsS0FBSyxDQUFFO1FBQ2xDLEtBQUssQ0FBQ0YsS0FBS0MsU0FBU0M7SUFDeEI7QUFTSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvU3RvcmFnZUNsaWVudC5qcz9hOGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdG9yYWdlRmlsZUFwaSBmcm9tICcuL3BhY2thZ2VzL1N0b3JhZ2VGaWxlQXBpJztcbmltcG9ydCBTdG9yYWdlQnVja2V0QXBpIGZyb20gJy4vcGFja2FnZXMvU3RvcmFnZUJ1Y2tldEFwaSc7XG5leHBvcnQgY2xhc3MgU3RvcmFnZUNsaWVudCBleHRlbmRzIFN0b3JhZ2VCdWNrZXRBcGkge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgaGVhZGVycyA9IHt9LCBmZXRjaCkge1xuICAgICAgICBzdXBlcih1cmwsIGhlYWRlcnMsIGZldGNoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGVyZm9ybSBmaWxlIG9wZXJhdGlvbiBpbiBhIGJ1Y2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBpZCBUaGUgYnVja2V0IGlkIHRvIG9wZXJhdGUgb24uXG4gICAgICovXG4gICAgZnJvbShpZCkge1xuICAgICAgICByZXR1cm4gbmV3IFN0b3JhZ2VGaWxlQXBpKHRoaXMudXJsLCB0aGlzLmhlYWRlcnMsIGlkLCB0aGlzLmZldGNoKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yYWdlQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJTdG9yYWdlRmlsZUFwaSIsIlN0b3JhZ2VCdWNrZXRBcGkiLCJTdG9yYWdlQ2xpZW50IiwiZnJvbSIsImlkIiwidXJsIiwiaGVhZGVycyIsImZldGNoIiwiY29uc3RydWN0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js":
/*!************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/constants.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\");\n\nconst DEFAULT_HEADERS = {\n    \"X-Client-Info\": \"storage-js/\".concat(_version__WEBPACK_IMPORTED_MODULE_0__.version)\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQzdCLE1BQU1DLGtCQUFrQjtJQUFFLGlCQUFpQixjQUFzQixPQUFSRCw2Q0FBT0E7QUFBRyxFQUFFLENBQzVFLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcz83OTkzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfSEVBREVSUyA9IHsgJ1gtQ2xpZW50LUluZm8nOiBgc3RvcmFnZS1qcy8ke3ZlcnNpb259YCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiREVGQVVMVF9IRUFERVJTIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/errors.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StorageApiError: function() { return /* binding */ StorageApiError; },\n/* harmony export */   StorageError: function() { return /* binding */ StorageError; },\n/* harmony export */   StorageUnknownError: function() { return /* binding */ StorageUnknownError; },\n/* harmony export */   isStorageError: function() { return /* binding */ isStorageError; }\n/* harmony export */ });\nclass StorageError extends Error {\n    constructor(message){\n        super(message);\n        this.__isStorageError = true;\n        this.name = \"StorageError\";\n    }\n}\nfunction isStorageError(error) {\n    return typeof error === \"object\" && error !== null && \"__isStorageError\" in error;\n}\nclass StorageApiError extends StorageError {\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status\n        };\n    }\n    constructor(message, status){\n        super(message);\n        this.name = \"StorageApiError\";\n        this.status = status;\n    }\n}\nclass StorageUnknownError extends StorageError {\n    constructor(message, originalError){\n        super(message);\n        this.name = \"StorageUnknownError\";\n        this.originalError = originalError;\n    }\n} //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBTyxNQUFNQSxxQkFBcUJDO0lBQzlCQyxZQUFZQyxPQUFPLENBQUU7UUFDakIsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ0MsZ0JBQWdCLEdBQUc7UUFDeEIsSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDaEI7QUFDSjtBQUNPLFNBQVNDLGVBQWVDLEtBQUs7SUFDaEMsT0FBTyxPQUFPQSxVQUFVLFlBQVlBLFVBQVUsUUFBUSxzQkFBc0JBO0FBQ2hGO0FBQ08sTUFBTUMsd0JBQXdCUjtJQU1qQ1MsU0FBUztRQUNMLE9BQU87WUFDSEosTUFBTSxJQUFJLENBQUNBLElBQUk7WUFDZkYsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJPLFFBQVEsSUFBSSxDQUFDQSxNQUFNO1FBQ3ZCO0lBQ0o7SUFYQVIsWUFBWUMsT0FBTyxFQUFFTyxNQUFNLENBQUU7UUFDekIsS0FBSyxDQUFDUDtRQUNOLElBQUksQ0FBQ0UsSUFBSSxHQUFHO1FBQ1osSUFBSSxDQUFDSyxNQUFNLEdBQUdBO0lBQ2xCO0FBUUo7QUFDTyxNQUFNQyw0QkFBNEJYO0lBQ3JDRSxZQUFZQyxPQUFPLEVBQUVTLGFBQWEsQ0FBRTtRQUNoQyxLQUFLLENBQUNUO1FBQ04sSUFBSSxDQUFDRSxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNPLGFBQWEsR0FBR0E7SUFDekI7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N0b3JhZ2UtanMvZGlzdC9tb2R1bGUvbGliL2Vycm9ycy5qcz80YTlhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBTdG9yYWdlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5fX2lzU3RvcmFnZUVycm9yID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ1N0b3JhZ2VFcnJvcic7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU3RvcmFnZUVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiYgZXJyb3IgIT09IG51bGwgJiYgJ19faXNTdG9yYWdlRXJyb3InIGluIGVycm9yO1xufVxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VBcGlFcnJvciBleHRlbmRzIFN0b3JhZ2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnU3RvcmFnZUFwaUVycm9yJztcbiAgICAgICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IHRoaXMubWVzc2FnZSxcbiAgICAgICAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFN0b3JhZ2VVbmtub3duRXJyb3IgZXh0ZW5kcyBTdG9yYWdlRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9yaWdpbmFsRXJyb3IpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdTdG9yYWdlVW5rbm93bkVycm9yJztcbiAgICAgICAgdGhpcy5vcmlnaW5hbEVycm9yID0gb3JpZ2luYWxFcnJvcjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbIlN0b3JhZ2VFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwiX19pc1N0b3JhZ2VFcnJvciIsIm5hbWUiLCJpc1N0b3JhZ2VFcnJvciIsImVycm9yIiwiU3RvcmFnZUFwaUVycm9yIiwidG9KU09OIiwic3RhdHVzIiwiU3RvcmFnZVVua25vd25FcnJvciIsIm9yaWdpbmFsRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js":
/*!********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/fetch.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   get: function() { return /* binding */ get; },\n/* harmony export */   head: function() { return /* binding */ head; },\n/* harmony export */   post: function() { return /* binding */ post; },\n/* harmony export */   put: function() { return /* binding */ put; },\n/* harmony export */   remove: function() { return /* binding */ remove; }\n/* harmony export */ });\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nconst _getErrorMessage = (err)=>err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject, options)=>__awaiter(void 0, void 0, void 0, function*() {\n        const Res = yield (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.resolveResponse)();\n        if (error instanceof Res && !(options === null || options === void 0 ? void 0 : options.noResolveJson)) {\n            error.json().then((err)=>{\n                reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageApiError(_getErrorMessage(err), error.status || 500));\n            }).catch((err)=>{\n                reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(err), err));\n            });\n        } else {\n            reject(new _errors__WEBPACK_IMPORTED_MODULE_1__.StorageUnknownError(_getErrorMessage(error), error));\n        }\n    });\nconst _getRequestParams = (method, options, parameters, body)=>{\n    const params = {\n        method,\n        headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n    };\n    if (method === \"GET\") {\n        return params;\n    }\n    params.headers = Object.assign({\n        \"Content-Type\": \"application/json\"\n    }, options === null || options === void 0 ? void 0 : options.headers);\n    if (body) {\n        params.body = JSON.stringify(body);\n    }\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return new Promise((resolve, reject)=>{\n            fetcher(url, _getRequestParams(method, options, parameters, body)).then((result)=>{\n                if (!result.ok) throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson) return result;\n                return result.json();\n            }).then((data)=>resolve(data)).catch((error)=>handleError(error, reject, options));\n        });\n    });\n}\nfunction get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return _handleRequest(fetcher, \"GET\", url, options, parameters);\n    });\n}\nfunction post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return _handleRequest(fetcher, \"POST\", url, options, parameters, body);\n    });\n}\nfunction put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return _handleRequest(fetcher, \"PUT\", url, options, parameters, body);\n    });\n}\nfunction head(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return _handleRequest(fetcher, \"HEAD\", url, Object.assign(Object.assign({}, options), {\n            noResolveJson: true\n        }), parameters);\n    });\n}\nfunction remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function*() {\n        return _handleRequest(fetcher, \"DELETE\", url, options, parameters, body);\n    });\n} //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNnRTtBQUNwQjtBQUM1QyxNQUFNVSxtQkFBbUIsQ0FBQ0MsTUFBUUEsSUFBSUMsR0FBRyxJQUFJRCxJQUFJRSxPQUFPLElBQUlGLElBQUlHLGlCQUFpQixJQUFJSCxJ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LElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE9BQU82QyxlQUFlQyxTQUFTLE9BQU9DLEtBQUtoQixTQUFTUSxZQUFZQztJQUNwRTtBQUNKO0FBQ08sU0FBU2EsS0FBS1AsT0FBTyxFQUFFQyxHQUFHLEVBQUVoQixPQUFPLEVBQUVRLFVBQVU7SUFDbEQsT0FBT3ZDLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsT0FBTzZDLGVBQWVDLFNBQVMsUUFBUUMsS0FBS0osT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHYixVQUFVO1lBQUVFLGVBQWU7UUFBSyxJQUFJTTtJQUNwSDtBQUNKO0FBQ08sU0FBU2UsT0FBT1IsT0FBTyxFQUFFQyxHQUFHLEVBQUVQLElBQUksRUFBRVQsT0FBTyxFQUFFUSxVQUFVO0lBQzFELE9BQU92QyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25DLE9BQU82QyxlQUFlQyxTQUFTLFVBQVVDLEtBQUtoQixTQUFTUSxZQUFZQztJQUN2RTtBQUNKLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvZmV0Y2guanM/YzA0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IFN0b3JhZ2VBcGlFcnJvciwgU3RvcmFnZVVua25vd25FcnJvciB9IGZyb20gJy4vZXJyb3JzJztcbmltcG9ydCB7IHJlc29sdmVSZXNwb25zZSB9IGZyb20gJy4vaGVscGVycyc7XG5jb25zdCBfZ2V0RXJyb3JNZXNzYWdlID0gKGVycikgPT4gZXJyLm1zZyB8fCBlcnIubWVzc2FnZSB8fCBlcnIuZXJyb3JfZGVzY3JpcHRpb24gfHwgZXJyLmVycm9yIHx8IEpTT04uc3RyaW5naWZ5KGVycik7XG5jb25zdCBoYW5kbGVFcnJvciA9IChlcnJvciwgcmVqZWN0LCBvcHRpb25zKSA9PiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICBjb25zdCBSZXMgPSB5aWVsZCByZXNvbHZlUmVzcG9uc2UoKTtcbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBSZXMgJiYgIShvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubm9SZXNvbHZlSnNvbikpIHtcbiAgICAgICAgZXJyb3JcbiAgICAgICAgICAgIC5qc29uKClcbiAgICAgICAgICAgIC50aGVuKChlcnIpID0+IHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZUFwaUVycm9yKF9nZXRFcnJvck1lc3NhZ2UoZXJyKSwgZXJyb3Iuc3RhdHVzIHx8IDUwMCkpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVyciksIGVycikpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlamVjdChuZXcgU3RvcmFnZVVua25vd25FcnJvcihfZ2V0RXJyb3JNZXNzYWdlKGVycm9yKSwgZXJyb3IpKTtcbiAgICB9XG59KTtcbmNvbnN0IF9nZXRSZXF1ZXN0UGFyYW1zID0gKG1ldGhvZCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSkgPT4ge1xuICAgIGNvbnN0IHBhcmFtcyA9IHsgbWV0aG9kLCBoZWFkZXJzOiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmhlYWRlcnMpIHx8IHt9IH07XG4gICAgaWYgKG1ldGhvZCA9PT0gJ0dFVCcpIHtcbiAgICAgICAgcmV0dXJuIHBhcmFtcztcbiAgICB9XG4gICAgcGFyYW1zLmhlYWRlcnMgPSBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuaGVhZGVycyk7XG4gICAgaWYgKGJvZHkpIHtcbiAgICAgICAgcGFyYW1zLmJvZHkgPSBKU09OLnN0cmluZ2lmeShib2R5KTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgcGFyYW1zKSwgcGFyYW1ldGVycyk7XG59O1xuZnVuY3Rpb24gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgbWV0aG9kLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgZmV0Y2hlcih1cmwsIF9nZXRSZXF1ZXN0UGFyYW1zKG1ldGhvZCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSkpXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcmVzdWx0Lm9rKVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyByZXN1bHQ7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5ub1Jlc29sdmVKc29uKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuanNvbigpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbigoZGF0YSkgPT4gcmVzb2x2ZShkYXRhKSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBoYW5kbGVFcnJvcihlcnJvciwgcmVqZWN0LCBvcHRpb25zKSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldChmZXRjaGVyLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0dFVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycyk7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcG9zdChmZXRjaGVyLCB1cmwsIGJvZHksIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ1BPU1QnLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMsIGJvZHkpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHB1dChmZXRjaGVyLCB1cmwsIGJvZHksIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ1BVVCcsIHVybCwgb3B0aW9ucywgcGFyYW1ldGVycywgYm9keSk7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaGVhZChmZXRjaGVyLCB1cmwsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gX2hhbmRsZVJlcXVlc3QoZmV0Y2hlciwgJ0hFQUQnLCB1cmwsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgbm9SZXNvbHZlSnNvbjogdHJ1ZSB9KSwgcGFyYW1ldGVycyk7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKGZldGNoZXIsIHVybCwgYm9keSwgb3B0aW9ucywgcGFyYW1ldGVycykge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHJldHVybiBfaGFuZGxlUmVxdWVzdChmZXRjaGVyLCAnREVMRVRFJywgdXJsLCBvcHRpb25zLCBwYXJhbWV0ZXJzLCBib2R5KTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJhZG9wdCIsInZhbHVlIiwicmVzb2x2ZSIsIlByb21pc2UiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsImUiLCJyZWplY3RlZCIsInJlc3VsdCIsImRvbmUiLCJ0aGVuIiwiYXBwbHkiLCJTdG9yYWdlQXBpRXJyb3IiLCJTdG9yYWdlVW5rbm93bkVycm9yIiwicmVzb2x2ZVJlc3BvbnNlIiwiX2dldEVycm9yTWVzc2FnZSIsImVyciIsIm1zZyIsIm1lc3NhZ2UiLCJlcnJvcl9kZXNjcmlwdGlvbiIsImVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImhhbmRsZUVycm9yIiwib3B0aW9ucyIsIlJlcyIsIm5vUmVzb2x2ZUpzb24iLCJqc29uIiwic3RhdHVzIiwiY2F0Y2giLCJfZ2V0UmVxdWVzdFBhcmFtcyIsIm1ldGhvZCIsInBhcmFtZXRlcnMiLCJib2R5IiwicGFyYW1zIiwiaGVhZGVycyIsIk9iamVjdCIsImFzc2lnbiIsIl9oYW5kbGVSZXF1ZXN0IiwiZmV0Y2hlciIsInVybCIsIm9rIiwiZGF0YSIsImdldCIsInBvc3QiLCJwdXQiLCJoZWFkIiwicmVtb3ZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/helpers.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   recursiveToCamel: function() { return /* binding */ recursiveToCamel; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   resolveResponse: function() { return /* binding */ resolveResponse; }\n/* harmony export */ });\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nconst resolveFetch = (customFetch)=>{\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    } else if (typeof fetch === \"undefined\") {\n        _fetch = function() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            return Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\")).then((param)=>{\n                let { default: fetch1 } = param;\n                return fetch1(...args);\n            });\n        };\n    } else {\n        _fetch = fetch;\n    }\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return _fetch(...args);\n    };\n};\nconst resolveResponse = ()=>__awaiter(void 0, void 0, void 0, function*() {\n        if (typeof Response === \"undefined\") {\n            // @ts-ignore\n            return (yield Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\"))).Response;\n        }\n        return Response;\n    });\nconst recursiveToCamel = (item)=>{\n    if (Array.isArray(item)) {\n        return item.map((el)=>recursiveToCamel(el));\n    } else if (typeof item === \"function\" || item !== Object(item)) {\n        return item;\n    }\n    const result = {};\n    Object.entries(item).forEach((param)=>{\n        let [key, value] = param;\n        const newKey = key.replace(/([-_][a-z])/gi, (c)=>c.toUpperCase().replace(/[-_]/g, \"\"));\n        result[newKey] = recursiveToCamel(value);\n    });\n    return result;\n}; //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDTyxNQUFNTyxlQUFlLENBQUNDO0lBQ3pCLElBQUlDO0lBQ0osSUFBSUQsYUFBYTtRQUNiQyxTQUFTRDtJQUNiLE9BQ0ssSUFBSSxPQUFPRSxVQUFVLGFBQWE7UUFDbkNELFNBQVM7NkNBQUlFO2dCQUFBQTs7bUJBQVMsc0xBQU8sQ0FBd0JOLElBQUksQ0FBQztvQkFBQyxFQUFFTyxTQUFTRixNQUFLLEVBQUU7dUJBQUtBLFVBQVNDOzs7SUFDL0YsT0FDSztRQUNERixTQUFTQztJQUNiO0lBQ0EsT0FBTzt5Q0FBSUM7WUFBQUE7O2VBQVNGLFVBQVVFOztBQUNsQyxFQUFFO0FBQ0ssTUFBTUUsa0JBQWtCLElBQU16QixVQUFVLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1FBQ25FLElBQUksT0FBTzBCLGFBQWEsYUFBYTtZQUNqQyxhQUFhO1lBQ2IsT0FBTyxDQUFDLE1BQU0sc0xBQTZCLEVBQUdBLFFBQVE7UUFDMUQ7UUFDQSxPQUFPQTtJQUNYLEdBQUc7QUFDSSxNQUFNQyxtQkFBbUIsQ0FBQ0M7SUFDN0IsSUFBSUMsTUFBTUMsT0FBTyxDQUFDRixPQUFPO1FBQ3JCLE9BQU9BLEtBQUtHLEdBQUcsQ0FBQyxDQUFDQyxLQUFPTCxpQkFBaUJLO0lBQzdDLE9BQ0ssSUFBSSxPQUFPSixTQUFTLGNBQWNBLFNBQVNLLE9BQU9MLE9BQU87UUFDMUQsT0FBT0E7SUFDWDtJQUNBLE1BQU1iLFNBQVMsQ0FBQztJQUNoQmtCLE9BQU9DLE9BQU8sQ0FBQ04sTUFBTU8sT0FBTyxDQUFDO1lBQUMsQ0FBQ0MsS0FBSzlCLE1BQU07UUFDdEMsTUFBTStCLFNBQVNELElBQUlFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQ0MsSUFBTUEsRUFBRUMsV0FBVyxHQUFHRixPQUFPLENBQUMsU0FBUztRQUNwRnZCLE1BQU0sQ0FBQ3NCLE9BQU8sR0FBR1YsaUJBQWlCckI7SUFDdEM7SUFDQSxPQUFPUztBQUNYLEVBQUUsQ0FDRixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL2xpYi9oZWxwZXJzLmpzP2E0N2IiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XG4gICAgbGV0IF9mZXRjaDtcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgX2ZldGNoID0gKC4uLmFyZ3MpID0+IGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKS50aGVuKCh7IGRlZmF1bHQ6IGZldGNoIH0pID0+IGZldGNoKC4uLmFyZ3MpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIF9mZXRjaCA9IGZldGNoO1xuICAgIH1cbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IF9mZXRjaCguLi5hcmdzKTtcbn07XG5leHBvcnQgY29uc3QgcmVzb2x2ZVJlc3BvbnNlID0gKCkgPT4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgaWYgKHR5cGVvZiBSZXNwb25zZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICByZXR1cm4gKHlpZWxkIGltcG9ydCgnQHN1cGFiYXNlL25vZGUtZmV0Y2gnKSkuUmVzcG9uc2U7XG4gICAgfVxuICAgIHJldHVybiBSZXNwb25zZTtcbn0pO1xuZXhwb3J0IGNvbnN0IHJlY3Vyc2l2ZVRvQ2FtZWwgPSAoaXRlbSkgPT4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGl0ZW0pKSB7XG4gICAgICAgIHJldHVybiBpdGVtLm1hcCgoZWwpID0+IHJlY3Vyc2l2ZVRvQ2FtZWwoZWwpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGl0ZW0gPT09ICdmdW5jdGlvbicgfHwgaXRlbSAhPT0gT2JqZWN0KGl0ZW0pKSB7XG4gICAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBPYmplY3QuZW50cmllcyhpdGVtKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgY29uc3QgbmV3S2V5ID0ga2V5LnJlcGxhY2UoLyhbLV9dW2Etel0pL2dpLCAoYykgPT4gYy50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoL1stX10vZywgJycpKTtcbiAgICAgICAgcmVzdWx0W25ld0tleV0gPSByZWN1cnNpdmVUb0NhbWVsKHZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsInJlc29sdmVGZXRjaCIsImN1c3RvbUZldGNoIiwiX2ZldGNoIiwiZmV0Y2giLCJhcmdzIiwiZGVmYXVsdCIsInJlc29sdmVSZXNwb25zZSIsIlJlc3BvbnNlIiwicmVjdXJzaXZlVG9DYW1lbCIsIml0ZW0iLCJBcnJheSIsImlzQXJyYXkiLCJtYXAiLCJlbCIsIk9iamVjdCIsImVudHJpZXMiLCJmb3JFYWNoIiwia2V5IiwibmV3S2V5IiwicmVwbGFjZSIsImMiLCJ0b1VwcGVyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/lib/version.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\n// generated by genversion\nconst version = \"2.7.1\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMEJBQTBCO0FBQ25CLE1BQU1BLFVBQVUsUUFBUSxDQUMvQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL2xpYi92ZXJzaW9uLmpzP2ZhMzkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2VuZXJhdGVkIGJ5IGdlbnZlcnNpb25cbmV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuNy4xJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbInZlcnNpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageBucketApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nclass StorageBucketApi {\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */ listBuckets() {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.get)(this.fetch, \"\".concat(this.url, \"/bucket\"), {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */ getBucket(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.get)(this.fetch, \"\".concat(this.url, \"/bucket/\").concat(id), {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */ createBucket(id) {\n        let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n            public: false\n        };\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.post)(this.fetch, \"\".concat(this.url, \"/bucket\"), {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes\n                }, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */ updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.put)(this.fetch, \"\".concat(this.url, \"/bucket/\").concat(id), {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes\n                }, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */ emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.post)(this.fetch, \"\".concat(this.url, \"/bucket/\").concat(id, \"/empty\"), {}, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */ deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_0__.remove)(this.fetch, \"\".concat(this.url, \"/bucket/\").concat(id), {}, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_1__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    constructor(url, headers = {}, fetch){\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_HEADERS), headers);\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_3__.resolveFetch)(fetch);\n    }\n} //# sourceMappingURL=StorageBucketApi.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StorageFileApi; }\n/* harmony export */ });\n/* harmony import */ var _lib_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/errors */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/errors.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: \"name\",\n        order: \"asc\"\n    }\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: \"3600\",\n    contentType: \"text/plain;charset=UTF-8\",\n    upsert: false\n};\nclass StorageFileApi {\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */ uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                let headers = Object.assign(Object.assign({}, this.headers), method === \"POST\" && {\n                    \"x-upsert\": String(options.upsert)\n                });\n                const metadata = options.metadata;\n                if (typeof Blob !== \"undefined\" && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append(\"cacheControl\", options.cacheControl);\n                    if (metadata) {\n                        body.append(\"metadata\", this.encodeMetadata(metadata));\n                    }\n                    body.append(\"\", fileBody);\n                } else if (typeof FormData !== \"undefined\" && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append(\"cacheControl\", options.cacheControl);\n                    if (metadata) {\n                        body.append(\"metadata\", this.encodeMetadata(metadata));\n                    }\n                } else {\n                    body = fileBody;\n                    headers[\"cache-control\"] = \"max-age=\".concat(options.cacheControl);\n                    headers[\"content-type\"] = options.contentType;\n                    if (metadata) {\n                        headers[\"x-metadata\"] = this.toBase64(this.encodeMetadata(metadata));\n                    }\n                }\n                if (fileOptions === null || fileOptions === void 0 ? void 0 : fileOptions.headers) {\n                    headers = Object.assign(Object.assign({}, headers), fileOptions.headers);\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(\"\".concat(this.url, \"/object/\").concat(_path), Object.assign({\n                    method,\n                    body: body,\n                    headers\n                }, (options === null || options === void 0 ? void 0 : options.duplex) ? {\n                    duplex: options.duplex\n                } : {}));\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: {\n                            path: cleanPath,\n                            id: data.Id,\n                            fullPath: data.Key\n                        },\n                        error: null\n                    };\n                } else {\n                    const error = data;\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */ upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this.uploadOrUpdate(\"POST\", path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */ uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + \"/object/upload/sign/\".concat(_path));\n            url.searchParams.set(\"token\", token);\n            try {\n                let body;\n                const options = Object.assign({\n                    upsert: DEFAULT_FILE_OPTIONS.upsert\n                }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), {\n                    \"x-upsert\": String(options.upsert)\n                });\n                if (typeof Blob !== \"undefined\" && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append(\"cacheControl\", options.cacheControl);\n                    body.append(\"\", fileBody);\n                } else if (typeof FormData !== \"undefined\" && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append(\"cacheControl\", options.cacheControl);\n                } else {\n                    body = fileBody;\n                    headers[\"cache-control\"] = \"max-age=\".concat(options.cacheControl);\n                    headers[\"content-type\"] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: \"PUT\",\n                    body: body,\n                    headers\n                });\n                const data = yield res.json();\n                if (res.ok) {\n                    return {\n                        data: {\n                            path: cleanPath,\n                            fullPath: data.Key\n                        },\n                        error: null\n                    };\n                } else {\n                    const error = data;\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for 2 hours.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.\n     */ createSignedUploadUrl(path, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let _path = this._getFinalPath(path);\n                const headers = Object.assign({}, this.headers);\n                if (options === null || options === void 0 ? void 0 : options.upsert) {\n                    headers[\"x-upsert\"] = \"true\";\n                }\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/upload/sign/\").concat(_path), {}, {\n                    headers\n                });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get(\"token\");\n                if (!token) {\n                    throw new _lib_errors__WEBPACK_IMPORTED_MODULE_0__.StorageError(\"No token returned by API\");\n                }\n                return {\n                    data: {\n                        signedUrl: url.toString(),\n                        path,\n                        token\n                    },\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */ update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function*() {\n            return this.uploadOrUpdate(\"PUT\", path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     * @param options The destination options.\n     */ move(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/move\"), {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket\n                }, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     * @param options The destination options.\n     */ copy(fromPath, toPath, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/copy\"), {\n                    bucketId: this.bucketId,\n                    sourceKey: fromPath,\n                    destinationKey: toPath,\n                    destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket\n                }, {\n                    headers: this.headers\n                });\n                return {\n                    data: {\n                        path: data.Key\n                    },\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */ createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/sign/\").concat(_path), Object.assign({\n                    expiresIn\n                }, (options === null || options === void 0 ? void 0 : options.transform) ? {\n                    transform: options.transform\n                } : {}), {\n                    headers: this.headers\n                });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? \"&download=\".concat(options.download === true ? \"\" : options.download) : \"\";\n                const signedUrl = encodeURI(\"\".concat(this.url).concat(data.signedURL).concat(downloadQueryParam));\n                data = {\n                    signedUrl\n                };\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */ createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/sign/\").concat(this.bucketId), {\n                    expiresIn,\n                    paths\n                }, {\n                    headers: this.headers\n                });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? \"&download=\".concat(options.download === true ? \"\" : options.download) : \"\";\n                return {\n                    data: data.map((datum)=>Object.assign(Object.assign({}, datum), {\n                            signedUrl: datum.signedURL ? encodeURI(\"\".concat(this.url).concat(datum.signedURL).concat(downloadQueryParam)) : null\n                        })),\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */ download(path, options) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== \"undefined\";\n            const renderPath = wantsTransformation ? \"render/image/authenticated\" : \"object\";\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? \"?\".concat(transformationQuery) : \"\";\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.get)(this.fetch, \"\".concat(this.url, \"/\").concat(renderPath, \"/\").concat(_path).concat(queryString), {\n                    headers: this.headers,\n                    noResolveJson: true\n                });\n                const data = yield res.blob();\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing file.\n     * @param path\n     */ info(path) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const _path = this._getFinalPath(path);\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.get)(this.fetch, \"\".concat(this.url, \"/object/info/\").concat(_path), {\n                    headers: this.headers\n                });\n                return {\n                    data: (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.recursiveToCamel)(data),\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks the existence of a file.\n     * @param path\n     */ exists(path) {\n        return __awaiter(this, void 0, void 0, function*() {\n            const _path = this._getFinalPath(path);\n            try {\n                yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.head)(this.fetch, \"\".concat(this.url, \"/object/\").concat(_path), {\n                    headers: this.headers\n                });\n                return {\n                    data: true,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error) && error instanceof _lib_errors__WEBPACK_IMPORTED_MODULE_0__.StorageUnknownError) {\n                    const originalError = error.originalError;\n                    if ([\n                        400,\n                        404\n                    ].includes(originalError === null || originalError === void 0 ? void 0 : originalError.status)) {\n                        return {\n                            data: false,\n                            error\n                        };\n                    }\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */ getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? \"download=\".concat(options.download === true ? \"\" : options.download) : \"\";\n        if (downloadQueryParam !== \"\") {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== \"undefined\";\n        const renderPath = wantsTransformation ? \"render/image\" : \"object\";\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== \"\") {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join(\"&\");\n        if (queryString !== \"\") {\n            queryString = \"?\".concat(queryString);\n        }\n        return {\n            data: {\n                publicUrl: encodeURI(\"\".concat(this.url, \"/\").concat(renderPath, \"/public/\").concat(_path).concat(queryString))\n            }\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */ remove(paths) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.remove)(this.fetch, \"\".concat(this.url, \"/object/\").concat(this.bucketId), {\n                    prefixes: paths\n                }, {\n                    headers: this.headers\n                });\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */ // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */ // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */ list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function*() {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), {\n                    prefix: path || \"\"\n                });\n                const data = yield (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_1__.post)(this.fetch, \"\".concat(this.url, \"/object/list/\").concat(this.bucketId), body, {\n                    headers: this.headers\n                }, parameters);\n                return {\n                    data,\n                    error: null\n                };\n            } catch (error) {\n                if ((0,_lib_errors__WEBPACK_IMPORTED_MODULE_0__.isStorageError)(error)) {\n                    return {\n                        data: null,\n                        error\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    encodeMetadata(metadata) {\n        return JSON.stringify(metadata);\n    }\n    toBase64(data) {\n        if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(data).toString(\"base64\");\n        }\n        return btoa(data);\n    }\n    _getFinalPath(path) {\n        return \"\".concat(this.bucketId, \"/\").concat(path);\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, \"\").replace(/\\/+/g, \"/\");\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(\"width=\".concat(transform.width));\n        }\n        if (transform.height) {\n            params.push(\"height=\".concat(transform.height));\n        }\n        if (transform.resize) {\n            params.push(\"resize=\".concat(transform.resize));\n        }\n        if (transform.format) {\n            params.push(\"format=\".concat(transform.format));\n        }\n        if (transform.quality) {\n            params.push(\"quality=\".concat(transform.quality));\n        }\n        return params.join(\"&\");\n    }\n    constructor(url, headers = {}, bucketId, fetch){\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_2__.resolveFetch)(fetch);\n    }\n} //# sourceMappingURL=StorageFileApi.js.map\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3RvcmFnZS1qcy9kaXN0L21vZHVsZS9wYWNrYWdlcy9TdG9yYWdlRmlsZUFwaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNrRjtBQUMzQjtBQUNTO0FBQ2hFLE1BQU1nQix5QkFBeUI7SUFDM0JDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxRQUFRO1FBQ0pDLFFBQVE7UUFD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LElBQUksQ0FBQ3FDLFFBQVEsR0FBR0E7UUFDaEIsSUFBSSxDQUFDeEIsS0FBSyxHQUFHbEMsMERBQVlBLENBQUNrQztJQUM5QjtBQXFnQkosRUFDQSwwQ0FBMEM7QUFEekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdG9yYWdlLWpzL2Rpc3QvbW9kdWxlL3BhY2thZ2VzL1N0b3JhZ2VGaWxlQXBpLmpzPzE1OGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBpc1N0b3JhZ2VFcnJvciwgU3RvcmFnZUVycm9yLCBTdG9yYWdlVW5rbm93bkVycm9yIH0gZnJvbSAnLi4vbGliL2Vycm9ycyc7XG5pbXBvcnQgeyBnZXQsIGhlYWQsIHBvc3QsIHJlbW92ZSB9IGZyb20gJy4uL2xpYi9mZXRjaCc7XG5pbXBvcnQgeyByZWN1cnNpdmVUb0NhbWVsLCByZXNvbHZlRmV0Y2ggfSBmcm9tICcuLi9saWIvaGVscGVycyc7XG5jb25zdCBERUZBVUxUX1NFQVJDSF9PUFRJT05TID0ge1xuICAgIGxpbWl0OiAxMDAsXG4gICAgb2Zmc2V0OiAwLFxuICAgIHNvcnRCeToge1xuICAgICAgICBjb2x1bW46ICduYW1lJyxcbiAgICAgICAgb3JkZXI6ICdhc2MnLFxuICAgIH0sXG59O1xuY29uc3QgREVGQVVMVF9GSUxFX09QVElPTlMgPSB7XG4gICAgY2FjaGVDb250cm9sOiAnMzYwMCcsXG4gICAgY29udGVudFR5cGU6ICd0ZXh0L3BsYWluO2NoYXJzZXQ9VVRGLTgnLFxuICAgIHVwc2VydDogZmFsc2UsXG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RvcmFnZUZpbGVBcGkge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgaGVhZGVycyA9IHt9LCBidWNrZXRJZCwgZmV0Y2gpIHtcbiAgICAgICAgdGhpcy51cmwgPSB1cmw7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgICAgIHRoaXMuYnVja2V0SWQgPSBidWNrZXRJZDtcbiAgICAgICAgdGhpcy5mZXRjaCA9IHJlc29sdmVGZXRjaChmZXRjaCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwbG9hZHMgYSBmaWxlIHRvIGFuIGV4aXN0aW5nIGJ1Y2tldCBvciByZXBsYWNlcyBhbiBleGlzdGluZyBmaWxlIGF0IHRoZSBzcGVjaWZpZWQgcGF0aCB3aXRoIGEgbmV3IG9uZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBtZXRob2QgSFRUUCBtZXRob2QuXG4gICAgICogQHBhcmFtIHBhdGggVGhlIHJlbGF0aXZlIGZpbGUgcGF0aC4gU2hvdWxkIGJlIG9mIHRoZSBmb3JtYXQgYGZvbGRlci9zdWJmb2xkZXIvZmlsZW5hbWUucG5nYC4gVGhlIGJ1Y2tldCBtdXN0IGFscmVhZHkgZXhpc3QgYmVmb3JlIGF0dGVtcHRpbmcgdG8gdXBsb2FkLlxuICAgICAqIEBwYXJhbSBmaWxlQm9keSBUaGUgYm9keSBvZiB0aGUgZmlsZSB0byBiZSBzdG9yZWQgaW4gdGhlIGJ1Y2tldC5cbiAgICAgKi9cbiAgICB1cGxvYWRPclVwZGF0ZShtZXRob2QsIHBhdGgsIGZpbGVCb2R5LCBmaWxlT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsZXQgYm9keTtcbiAgICAgICAgICAgICAgICBjb25zdCBvcHRpb25zID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0ZJTEVfT1BUSU9OUyksIGZpbGVPcHRpb25zKTtcbiAgICAgICAgICAgICAgICBsZXQgaGVhZGVycyA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5oZWFkZXJzKSwgKG1ldGhvZCA9PT0gJ1BPU1QnICYmIHsgJ3gtdXBzZXJ0JzogU3RyaW5nKG9wdGlvbnMudXBzZXJ0KSB9KSk7XG4gICAgICAgICAgICAgICAgY29uc3QgbWV0YWRhdGEgPSBvcHRpb25zLm1ldGFkYXRhO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgQmxvYiAhPT0gJ3VuZGVmaW5lZCcgJiYgZmlsZUJvZHkgaW5zdGFuY2VvZiBCbG9iKSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJ2NhY2hlQ29udHJvbCcsIG9wdGlvbnMuY2FjaGVDb250cm9sKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1ldGFkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5LmFwcGVuZCgnbWV0YWRhdGEnLCB0aGlzLmVuY29kZU1ldGFkYXRhKG1ldGFkYXRhKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJycsIGZpbGVCb2R5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJyAmJiBmaWxlQm9keSBpbnN0YW5jZW9mIEZvcm1EYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBmaWxlQm9keTtcbiAgICAgICAgICAgICAgICAgICAgYm9keS5hcHBlbmQoJ2NhY2hlQ29udHJvbCcsIG9wdGlvbnMuY2FjaGVDb250cm9sKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1ldGFkYXRhKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBib2R5LmFwcGVuZCgnbWV0YWRhdGEnLCB0aGlzLmVuY29kZU1ldGFkYXRhKG1ldGFkYXRhKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkgPSBmaWxlQm9keTtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY2FjaGUtY29udHJvbCddID0gYG1heC1hZ2U9JHtvcHRpb25zLmNhY2hlQ29udHJvbH1gO1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzWydjb250ZW50LXR5cGUnXSA9IG9wdGlvbnMuY29udGVudFR5cGU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXRhZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1sneC1tZXRhZGF0YSddID0gdGhpcy50b0Jhc2U2NCh0aGlzLmVuY29kZU1ldGFkYXRhKG1ldGFkYXRhKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGZpbGVPcHRpb25zID09PSBudWxsIHx8IGZpbGVPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmaWxlT3B0aW9ucy5oZWFkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGhlYWRlcnMpLCBmaWxlT3B0aW9ucy5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgY2xlYW5QYXRoID0gdGhpcy5fcmVtb3ZlRW1wdHlGb2xkZXJzKHBhdGgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKGNsZWFuUGF0aCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgdGhpcy5mZXRjaChgJHt0aGlzLnVybH0vb2JqZWN0LyR7X3BhdGh9YCwgT2JqZWN0LmFzc2lnbih7IG1ldGhvZCwgYm9keTogYm9keSwgaGVhZGVycyB9LCAoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kdXBsZXgpID8geyBkdXBsZXg6IG9wdGlvbnMuZHVwbGV4IH0gOiB7fSkpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgcmVzLmpzb24oKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IHBhdGg6IGNsZWFuUGF0aCwgaWQ6IGRhdGEuSWQsIGZ1bGxQYXRoOiBkYXRhLktleSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwbG9hZHMgYSBmaWxlIHRvIGFuIGV4aXN0aW5nIGJ1Y2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgZmlsZSBuYW1lLiBTaG91bGQgYmUgb2YgdGhlIGZvcm1hdCBgZm9sZGVyL3N1YmZvbGRlci9maWxlbmFtZS5wbmdgLiBUaGUgYnVja2V0IG11c3QgYWxyZWFkeSBleGlzdCBiZWZvcmUgYXR0ZW1wdGluZyB0byB1cGxvYWQuXG4gICAgICogQHBhcmFtIGZpbGVCb2R5IFRoZSBib2R5IG9mIHRoZSBmaWxlIHRvIGJlIHN0b3JlZCBpbiB0aGUgYnVja2V0LlxuICAgICAqL1xuICAgIHVwbG9hZChwYXRoLCBmaWxlQm9keSwgZmlsZU9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnVwbG9hZE9yVXBkYXRlKCdQT1NUJywgcGF0aCwgZmlsZUJvZHksIGZpbGVPcHRpb25zKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwbG9hZCBhIGZpbGUgd2l0aCBhIHRva2VuIGdlbmVyYXRlZCBmcm9tIGBjcmVhdGVTaWduZWRVcGxvYWRVcmxgLlxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgZmlsZSBuYW1lLiBTaG91bGQgYmUgb2YgdGhlIGZvcm1hdCBgZm9sZGVyL3N1YmZvbGRlci9maWxlbmFtZS5wbmdgLiBUaGUgYnVja2V0IG11c3QgYWxyZWFkeSBleGlzdCBiZWZvcmUgYXR0ZW1wdGluZyB0byB1cGxvYWQuXG4gICAgICogQHBhcmFtIHRva2VuIFRoZSB0b2tlbiBnZW5lcmF0ZWQgZnJvbSBgY3JlYXRlU2lnbmVkVXBsb2FkVXJsYFxuICAgICAqIEBwYXJhbSBmaWxlQm9keSBUaGUgYm9keSBvZiB0aGUgZmlsZSB0byBiZSBzdG9yZWQgaW4gdGhlIGJ1Y2tldC5cbiAgICAgKi9cbiAgICB1cGxvYWRUb1NpZ25lZFVybChwYXRoLCB0b2tlbiwgZmlsZUJvZHksIGZpbGVPcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBjbGVhblBhdGggPSB0aGlzLl9yZW1vdmVFbXB0eUZvbGRlcnMocGF0aCk7XG4gICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChjbGVhblBhdGgpO1xuICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh0aGlzLnVybCArIGAvb2JqZWN0L3VwbG9hZC9zaWduLyR7X3BhdGh9YCk7XG4gICAgICAgICAgICB1cmwuc2VhcmNoUGFyYW1zLnNldCgndG9rZW4nLCB0b2tlbik7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGxldCBib2R5O1xuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgdXBzZXJ0OiBERUZBVUxUX0ZJTEVfT1BUSU9OUy51cHNlcnQgfSwgZmlsZU9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhlYWRlcnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaGVhZGVycyksIHsgJ3gtdXBzZXJ0JzogU3RyaW5nKG9wdGlvbnMudXBzZXJ0KSB9KTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEJsb2IgIT09ICd1bmRlZmluZWQnICYmIGZpbGVCb2R5IGluc3RhbmNlb2YgQmxvYikge1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kKCdjYWNoZUNvbnRyb2wnLCBvcHRpb25zLmNhY2hlQ29udHJvbCk7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kKCcnLCBmaWxlQm9keSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBGb3JtRGF0YSAhPT0gJ3VuZGVmaW5lZCcgJiYgZmlsZUJvZHkgaW5zdGFuY2VvZiBGb3JtRGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZmlsZUJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGJvZHkuYXBwZW5kKCdjYWNoZUNvbnRyb2wnLCBvcHRpb25zLmNhY2hlQ29udHJvbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBib2R5ID0gZmlsZUJvZHk7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnNbJ2NhY2hlLWNvbnRyb2wnXSA9IGBtYXgtYWdlPSR7b3B0aW9ucy5jYWNoZUNvbnRyb2x9YDtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1snY29udGVudC10eXBlJ10gPSBvcHRpb25zLmNvbnRlbnRUeXBlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCByZXMgPSB5aWVsZCB0aGlzLmZldGNoKHVybC50b1N0cmluZygpLCB7XG4gICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgICAgICAgICAgICAgIGJvZHk6IGJvZHksXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHJlcy5qc29uKCk7XG4gICAgICAgICAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBwYXRoOiBjbGVhblBhdGgsIGZ1bGxQYXRoOiBkYXRhLktleSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGRhdGE7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBzaWduZWQgdXBsb2FkIFVSTC5cbiAgICAgKiBTaWduZWQgdXBsb2FkIFVSTHMgY2FuIGJlIHVzZWQgdG8gdXBsb2FkIGZpbGVzIHRvIHRoZSBidWNrZXQgd2l0aG91dCBmdXJ0aGVyIGF1dGhlbnRpY2F0aW9uLlxuICAgICAqIFRoZXkgYXJlIHZhbGlkIGZvciAyIGhvdXJzLlxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgY3VycmVudCBmaWxlIG5hbWUuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UucG5nYC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy51cHNlcnQgSWYgc2V0IHRvIHRydWUsIGFsbG93cyB0aGUgZmlsZSB0byBiZSBvdmVyd3JpdHRlbiBpZiBpdCBhbHJlYWR5IGV4aXN0cy5cbiAgICAgKi9cbiAgICBjcmVhdGVTaWduZWRVcGxvYWRVcmwocGF0aCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsZXQgX3BhdGggPSB0aGlzLl9nZXRGaW5hbFBhdGgocGF0aCk7XG4gICAgICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMuaGVhZGVycyk7XG4gICAgICAgICAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy51cHNlcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1sneC11cHNlcnQnXSA9ICd0cnVlJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC91cGxvYWQvc2lnbi8ke19wYXRofWAsIHt9LCB7IGhlYWRlcnMgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTCh0aGlzLnVybCArIGRhdGEudXJsKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0b2tlbiA9IHVybC5zZWFyY2hQYXJhbXMuZ2V0KCd0b2tlbicpO1xuICAgICAgICAgICAgICAgIGlmICghdG9rZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFN0b3JhZ2VFcnJvcignTm8gdG9rZW4gcmV0dXJuZWQgYnkgQVBJJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IHsgc2lnbmVkVXJsOiB1cmwudG9TdHJpbmcoKSwgcGF0aCwgdG9rZW4gfSwgZXJyb3I6IG51bGwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXBsYWNlcyBhbiBleGlzdGluZyBmaWxlIGF0IHRoZSBzcGVjaWZpZWQgcGF0aCB3aXRoIGEgbmV3IG9uZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSByZWxhdGl2ZSBmaWxlIHBhdGguIFNob3VsZCBiZSBvZiB0aGUgZm9ybWF0IGBmb2xkZXIvc3ViZm9sZGVyL2ZpbGVuYW1lLnBuZ2AuIFRoZSBidWNrZXQgbXVzdCBhbHJlYWR5IGV4aXN0IGJlZm9yZSBhdHRlbXB0aW5nIHRvIHVwZGF0ZS5cbiAgICAgKiBAcGFyYW0gZmlsZUJvZHkgVGhlIGJvZHkgb2YgdGhlIGZpbGUgdG8gYmUgc3RvcmVkIGluIHRoZSBidWNrZXQuXG4gICAgICovXG4gICAgdXBkYXRlKHBhdGgsIGZpbGVCb2R5LCBmaWxlT3B0aW9ucykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMudXBsb2FkT3JVcGRhdGUoJ1BVVCcsIHBhdGgsIGZpbGVCb2R5LCBmaWxlT3B0aW9ucyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBNb3ZlcyBhbiBleGlzdGluZyBmaWxlIHRvIGEgbmV3IHBhdGggaW4gdGhlIHNhbWUgYnVja2V0LlxuICAgICAqXG4gICAgICogQHBhcmFtIGZyb21QYXRoIFRoZSBvcmlnaW5hbCBmaWxlIHBhdGgsIGluY2x1ZGluZyB0aGUgY3VycmVudCBmaWxlIG5hbWUuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UucG5nYC5cbiAgICAgKiBAcGFyYW0gdG9QYXRoIFRoZSBuZXcgZmlsZSBwYXRoLCBpbmNsdWRpbmcgdGhlIG5ldyBmaWxlIG5hbWUuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UtbmV3LnBuZ2AuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgVGhlIGRlc3RpbmF0aW9uIG9wdGlvbnMuXG4gICAgICovXG4gICAgbW92ZShmcm9tUGF0aCwgdG9QYXRoLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBwb3N0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS9vYmplY3QvbW92ZWAsIHtcbiAgICAgICAgICAgICAgICAgICAgYnVja2V0SWQ6IHRoaXMuYnVja2V0SWQsXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZUtleTogZnJvbVBhdGgsXG4gICAgICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uS2V5OiB0b1BhdGgsXG4gICAgICAgICAgICAgICAgICAgIGRlc3RpbmF0aW9uQnVja2V0OiBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZGVzdGluYXRpb25CdWNrZXQsXG4gICAgICAgICAgICAgICAgfSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb3BpZXMgYW4gZXhpc3RpbmcgZmlsZSB0byBhIG5ldyBwYXRoIGluIHRoZSBzYW1lIGJ1Y2tldC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBmcm9tUGF0aCBUaGUgb3JpZ2luYWwgZmlsZSBwYXRoLCBpbmNsdWRpbmcgdGhlIGN1cnJlbnQgZmlsZSBuYW1lLiBGb3IgZXhhbXBsZSBgZm9sZGVyL2ltYWdlLnBuZ2AuXG4gICAgICogQHBhcmFtIHRvUGF0aCBUaGUgbmV3IGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBuZXcgZmlsZSBuYW1lLiBGb3IgZXhhbXBsZSBgZm9sZGVyL2ltYWdlLWNvcHkucG5nYC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBUaGUgZGVzdGluYXRpb24gb3B0aW9ucy5cbiAgICAgKi9cbiAgICBjb3B5KGZyb21QYXRoLCB0b1BhdGgsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9jb3B5YCwge1xuICAgICAgICAgICAgICAgICAgICBidWNrZXRJZDogdGhpcy5idWNrZXRJZCxcbiAgICAgICAgICAgICAgICAgICAgc291cmNlS2V5OiBmcm9tUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25LZXk6IHRvUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb25CdWNrZXQ6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kZXN0aW5hdGlvbkJ1Y2tldCxcbiAgICAgICAgICAgICAgICB9LCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiB7IHBhdGg6IGRhdGEuS2V5IH0sIGVycm9yOiBudWxsIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNpZ25lZCBVUkwuIFVzZSBhIHNpZ25lZCBVUkwgdG8gc2hhcmUgYSBmaWxlIGZvciBhIGZpeGVkIGFtb3VudCBvZiB0aW1lLlxuICAgICAqXG4gICAgICogQHBhcmFtIHBhdGggVGhlIGZpbGUgcGF0aCwgaW5jbHVkaW5nIHRoZSBjdXJyZW50IGZpbGUgbmFtZS4gRm9yIGV4YW1wbGUgYGZvbGRlci9pbWFnZS5wbmdgLlxuICAgICAqIEBwYXJhbSBleHBpcmVzSW4gVGhlIG51bWJlciBvZiBzZWNvbmRzIHVudGlsIHRoZSBzaWduZWQgVVJMIGV4cGlyZXMuIEZvciBleGFtcGxlLCBgNjBgIGZvciBhIFVSTCB3aGljaCBpcyB2YWxpZCBmb3Igb25lIG1pbnV0ZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kb3dubG9hZCB0cmlnZ2VycyB0aGUgZmlsZSBhcyBhIGRvd25sb2FkIGlmIHNldCB0byB0cnVlLiBTZXQgdGhpcyBwYXJhbWV0ZXIgYXMgdGhlIG5hbWUgb2YgdGhlIGZpbGUgaWYgeW91IHdhbnQgdG8gdHJpZ2dlciB0aGUgZG93bmxvYWQgd2l0aCBhIGRpZmZlcmVudCBmaWxlbmFtZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy50cmFuc2Zvcm0gVHJhbnNmb3JtIHRoZSBhc3NldCBiZWZvcmUgc2VydmluZyBpdCB0byB0aGUgY2xpZW50LlxuICAgICAqL1xuICAgIGNyZWF0ZVNpZ25lZFVybChwYXRoLCBleHBpcmVzSW4sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgbGV0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKHBhdGgpO1xuICAgICAgICAgICAgICAgIGxldCBkYXRhID0geWllbGQgcG9zdCh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vb2JqZWN0L3NpZ24vJHtfcGF0aH1gLCBPYmplY3QuYXNzaWduKHsgZXhwaXJlc0luIH0sICgob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnRyYW5zZm9ybSkgPyB7IHRyYW5zZm9ybTogb3B0aW9ucy50cmFuc2Zvcm0gfSA6IHt9KSksIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRvd25sb2FkUXVlcnlQYXJhbSA9IChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZG93bmxvYWQpXG4gICAgICAgICAgICAgICAgICAgID8gYCZkb3dubG9hZD0ke29wdGlvbnMuZG93bmxvYWQgPT09IHRydWUgPyAnJyA6IG9wdGlvbnMuZG93bmxvYWR9YFxuICAgICAgICAgICAgICAgICAgICA6ICcnO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNpZ25lZFVybCA9IGVuY29kZVVSSShgJHt0aGlzLnVybH0ke2RhdGEuc2lnbmVkVVJMfSR7ZG93bmxvYWRRdWVyeVBhcmFtfWApO1xuICAgICAgICAgICAgICAgIGRhdGEgPSB7IHNpZ25lZFVybCB9O1xuICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGEsIGVycm9yOiBudWxsIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBtdWx0aXBsZSBzaWduZWQgVVJMcy4gVXNlIGEgc2lnbmVkIFVSTCB0byBzaGFyZSBhIGZpbGUgZm9yIGEgZml4ZWQgYW1vdW50IG9mIHRpbWUuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aHMgVGhlIGZpbGUgcGF0aHMgdG8gYmUgZG93bmxvYWRlZCwgaW5jbHVkaW5nIHRoZSBjdXJyZW50IGZpbGUgbmFtZXMuIEZvciBleGFtcGxlIGBbJ2ZvbGRlci9pbWFnZS5wbmcnLCAnZm9sZGVyMi9pbWFnZTIucG5nJ11gLlxuICAgICAqIEBwYXJhbSBleHBpcmVzSW4gVGhlIG51bWJlciBvZiBzZWNvbmRzIHVudGlsIHRoZSBzaWduZWQgVVJMcyBleHBpcmUuIEZvciBleGFtcGxlLCBgNjBgIGZvciBVUkxzIHdoaWNoIGFyZSB2YWxpZCBmb3Igb25lIG1pbnV0ZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kb3dubG9hZCB0cmlnZ2VycyB0aGUgZmlsZSBhcyBhIGRvd25sb2FkIGlmIHNldCB0byB0cnVlLiBTZXQgdGhpcyBwYXJhbWV0ZXIgYXMgdGhlIG5hbWUgb2YgdGhlIGZpbGUgaWYgeW91IHdhbnQgdG8gdHJpZ2dlciB0aGUgZG93bmxvYWQgd2l0aCBhIGRpZmZlcmVudCBmaWxlbmFtZS5cbiAgICAgKi9cbiAgICBjcmVhdGVTaWduZWRVcmxzKHBhdGhzLCBleHBpcmVzSW4sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHBvc3QodGhpcy5mZXRjaCwgYCR7dGhpcy51cmx9L29iamVjdC9zaWduLyR7dGhpcy5idWNrZXRJZH1gLCB7IGV4cGlyZXNJbiwgcGF0aHMgfSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZG93bmxvYWRRdWVyeVBhcmFtID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kb3dubG9hZClcbiAgICAgICAgICAgICAgICAgICAgPyBgJmRvd25sb2FkPSR7b3B0aW9ucy5kb3dubG9hZCA9PT0gdHJ1ZSA/ICcnIDogb3B0aW9ucy5kb3dubG9hZH1gXG4gICAgICAgICAgICAgICAgICAgIDogJyc7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogZGF0YS5tYXAoKGRhdHVtKSA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBkYXR1bSksIHsgc2lnbmVkVXJsOiBkYXR1bS5zaWduZWRVUkxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGVuY29kZVVSSShgJHt0aGlzLnVybH0ke2RhdHVtLnNpZ25lZFVSTH0ke2Rvd25sb2FkUXVlcnlQYXJhbX1gKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogbnVsbCB9KSkpLFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERvd25sb2FkcyBhIGZpbGUgZnJvbSBhIHByaXZhdGUgYnVja2V0LiBGb3IgcHVibGljIGJ1Y2tldHMsIG1ha2UgYSByZXF1ZXN0IHRvIHRoZSBVUkwgcmV0dXJuZWQgZnJvbSBgZ2V0UHVibGljVXJsYCBpbnN0ZWFkLlxuICAgICAqXG4gICAgICogQHBhcmFtIHBhdGggVGhlIGZ1bGwgcGF0aCBhbmQgZmlsZSBuYW1lIG9mIHRoZSBmaWxlIHRvIGJlIGRvd25sb2FkZWQuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UucG5nYC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy50cmFuc2Zvcm0gVHJhbnNmb3JtIHRoZSBhc3NldCBiZWZvcmUgc2VydmluZyBpdCB0byB0aGUgY2xpZW50LlxuICAgICAqL1xuICAgIGRvd25sb2FkKHBhdGgsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHdhbnRzVHJhbnNmb3JtYXRpb24gPSB0eXBlb2YgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm0pICE9PSAndW5kZWZpbmVkJztcbiAgICAgICAgICAgIGNvbnN0IHJlbmRlclBhdGggPSB3YW50c1RyYW5zZm9ybWF0aW9uID8gJ3JlbmRlci9pbWFnZS9hdXRoZW50aWNhdGVkJyA6ICdvYmplY3QnO1xuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtYXRpb25RdWVyeSA9IHRoaXMudHJhbnNmb3JtT3B0c1RvUXVlcnlTdHJpbmcoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm0pIHx8IHt9KTtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gdHJhbnNmb3JtYXRpb25RdWVyeSA/IGA/JHt0cmFuc2Zvcm1hdGlvblF1ZXJ5fWAgOiAnJztcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgX3BhdGggPSB0aGlzLl9nZXRGaW5hbFBhdGgocGF0aCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgZ2V0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS8ke3JlbmRlclBhdGh9LyR7X3BhdGh9JHtxdWVyeVN0cmluZ31gLCB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgICAgICAgICAgbm9SZXNvbHZlSnNvbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0geWllbGQgcmVzLmJsb2IoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyB0aGUgZGV0YWlscyBvZiBhbiBleGlzdGluZyBmaWxlLlxuICAgICAqIEBwYXJhbSBwYXRoXG4gICAgICovXG4gICAgaW5mbyhwYXRoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChwYXRoKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIGdldCh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vb2JqZWN0L2luZm8vJHtfcGF0aH1gLCB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiByZWN1cnNpdmVUb0NhbWVsKGRhdGEpLCBlcnJvcjogbnVsbCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENoZWNrcyB0aGUgZXhpc3RlbmNlIG9mIGEgZmlsZS5cbiAgICAgKiBAcGFyYW0gcGF0aFxuICAgICAqL1xuICAgIGV4aXN0cyhwYXRoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBfcGF0aCA9IHRoaXMuX2dldEZpbmFsUGF0aChwYXRoKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgeWllbGQgaGVhZCh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vb2JqZWN0LyR7X3BhdGh9YCwge1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogdHJ1ZSwgZXJyb3I6IG51bGwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikgJiYgZXJyb3IgaW5zdGFuY2VvZiBTdG9yYWdlVW5rbm93bkVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRXJyb3IgPSBlcnJvci5vcmlnaW5hbEVycm9yO1xuICAgICAgICAgICAgICAgICAgICBpZiAoWzQwMCwgNDA0XS5pbmNsdWRlcyhvcmlnaW5hbEVycm9yID09PSBudWxsIHx8IG9yaWdpbmFsRXJyb3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9yaWdpbmFsRXJyb3Iuc3RhdHVzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogZmFsc2UsIGVycm9yIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBIHNpbXBsZSBjb252ZW5pZW5jZSBmdW5jdGlvbiB0byBnZXQgdGhlIFVSTCBmb3IgYW4gYXNzZXQgaW4gYSBwdWJsaWMgYnVja2V0LiBJZiB5b3UgZG8gbm90IHdhbnQgdG8gdXNlIHRoaXMgZnVuY3Rpb24sIHlvdSBjYW4gY29uc3RydWN0IHRoZSBwdWJsaWMgVVJMIGJ5IGNvbmNhdGVuYXRpbmcgdGhlIGJ1Y2tldCBVUkwgd2l0aCB0aGUgcGF0aCB0byB0aGUgYXNzZXQuXG4gICAgICogVGhpcyBmdW5jdGlvbiBkb2VzIG5vdCB2ZXJpZnkgaWYgdGhlIGJ1Y2tldCBpcyBwdWJsaWMuIElmIGEgcHVibGljIFVSTCBpcyBjcmVhdGVkIGZvciBhIGJ1Y2tldCB3aGljaCBpcyBub3QgcHVibGljLCB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byBkb3dubG9hZCB0aGUgYXNzZXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aCBUaGUgcGF0aCBhbmQgbmFtZSBvZiB0aGUgZmlsZSB0byBnZW5lcmF0ZSB0aGUgcHVibGljIFVSTCBmb3IuIEZvciBleGFtcGxlIGBmb2xkZXIvaW1hZ2UucG5nYC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5kb3dubG9hZCBUcmlnZ2VycyB0aGUgZmlsZSBhcyBhIGRvd25sb2FkIGlmIHNldCB0byB0cnVlLiBTZXQgdGhpcyBwYXJhbWV0ZXIgYXMgdGhlIG5hbWUgb2YgdGhlIGZpbGUgaWYgeW91IHdhbnQgdG8gdHJpZ2dlciB0aGUgZG93bmxvYWQgd2l0aCBhIGRpZmZlcmVudCBmaWxlbmFtZS5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy50cmFuc2Zvcm0gVHJhbnNmb3JtIHRoZSBhc3NldCBiZWZvcmUgc2VydmluZyBpdCB0byB0aGUgY2xpZW50LlxuICAgICAqL1xuICAgIGdldFB1YmxpY1VybChwYXRoLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IF9wYXRoID0gdGhpcy5fZ2V0RmluYWxQYXRoKHBhdGgpO1xuICAgICAgICBjb25zdCBfcXVlcnlTdHJpbmcgPSBbXTtcbiAgICAgICAgY29uc3QgZG93bmxvYWRRdWVyeVBhcmFtID0gKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5kb3dubG9hZClcbiAgICAgICAgICAgID8gYGRvd25sb2FkPSR7b3B0aW9ucy5kb3dubG9hZCA9PT0gdHJ1ZSA/ICcnIDogb3B0aW9ucy5kb3dubG9hZH1gXG4gICAgICAgICAgICA6ICcnO1xuICAgICAgICBpZiAoZG93bmxvYWRRdWVyeVBhcmFtICE9PSAnJykge1xuICAgICAgICAgICAgX3F1ZXJ5U3RyaW5nLnB1c2goZG93bmxvYWRRdWVyeVBhcmFtKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3YW50c1RyYW5zZm9ybWF0aW9uID0gdHlwZW9mIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHJhbnNmb3JtKSAhPT0gJ3VuZGVmaW5lZCc7XG4gICAgICAgIGNvbnN0IHJlbmRlclBhdGggPSB3YW50c1RyYW5zZm9ybWF0aW9uID8gJ3JlbmRlci9pbWFnZScgOiAnb2JqZWN0JztcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtYXRpb25RdWVyeSA9IHRoaXMudHJhbnNmb3JtT3B0c1RvUXVlcnlTdHJpbmcoKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy50cmFuc2Zvcm0pIHx8IHt9KTtcbiAgICAgICAgaWYgKHRyYW5zZm9ybWF0aW9uUXVlcnkgIT09ICcnKSB7XG4gICAgICAgICAgICBfcXVlcnlTdHJpbmcucHVzaCh0cmFuc2Zvcm1hdGlvblF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcXVlcnlTdHJpbmcgPSBfcXVlcnlTdHJpbmcuam9pbignJicpO1xuICAgICAgICBpZiAocXVlcnlTdHJpbmcgIT09ICcnKSB7XG4gICAgICAgICAgICBxdWVyeVN0cmluZyA9IGA/JHtxdWVyeVN0cmluZ31gO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiB7IHB1YmxpY1VybDogZW5jb2RlVVJJKGAke3RoaXMudXJsfS8ke3JlbmRlclBhdGh9L3B1YmxpYy8ke19wYXRofSR7cXVlcnlTdHJpbmd9YCkgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBmaWxlcyB3aXRoaW4gdGhlIHNhbWUgYnVja2V0XG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aHMgQW4gYXJyYXkgb2YgZmlsZXMgdG8gZGVsZXRlLCBpbmNsdWRpbmcgdGhlIHBhdGggYW5kIGZpbGUgbmFtZS4gRm9yIGV4YW1wbGUgW2AnZm9sZGVyL2ltYWdlLnBuZydgXS5cbiAgICAgKi9cbiAgICByZW1vdmUocGF0aHMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHJlbW92ZSh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vb2JqZWN0LyR7dGhpcy5idWNrZXRJZH1gLCB7IHByZWZpeGVzOiBwYXRocyB9LCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzU3RvcmFnZUVycm9yKGVycm9yKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBmaWxlIG1ldGFkYXRhXG4gICAgICogQHBhcmFtIGlkIHRoZSBmaWxlIGlkIHRvIHJldHJpZXZlIG1ldGFkYXRhXG4gICAgICovXG4gICAgLy8gYXN5bmMgZ2V0TWV0YWRhdGEoXG4gICAgLy8gICBpZDogc3RyaW5nXG4gICAgLy8gKTogUHJvbWlzZTxcbiAgICAvLyAgIHwge1xuICAgIC8vICAgICAgIGRhdGE6IE1ldGFkYXRhXG4gICAgLy8gICAgICAgZXJyb3I6IG51bGxcbiAgICAvLyAgICAgfVxuICAgIC8vICAgfCB7XG4gICAgLy8gICAgICAgZGF0YTogbnVsbFxuICAgIC8vICAgICAgIGVycm9yOiBTdG9yYWdlRXJyb3JcbiAgICAvLyAgICAgfVxuICAgIC8vID4ge1xuICAgIC8vICAgdHJ5IHtcbiAgICAvLyAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldCh0aGlzLmZldGNoLCBgJHt0aGlzLnVybH0vbWV0YWRhdGEvJHtpZH1gLCB7IGhlYWRlcnM6IHRoaXMuaGVhZGVycyB9KVxuICAgIC8vICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9XG4gICAgLy8gICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XG4gICAgLy8gICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfVxuICAgIC8vICAgICB9XG4gICAgLy8gICAgIHRocm93IGVycm9yXG4gICAgLy8gICB9XG4gICAgLy8gfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBmaWxlIG1ldGFkYXRhXG4gICAgICogQHBhcmFtIGlkIHRoZSBmaWxlIGlkIHRvIHVwZGF0ZSBtZXRhZGF0YVxuICAgICAqIEBwYXJhbSBtZXRhIHRoZSBuZXcgZmlsZSBtZXRhZGF0YVxuICAgICAqL1xuICAgIC8vIGFzeW5jIHVwZGF0ZU1ldGFkYXRhKFxuICAgIC8vICAgaWQ6IHN0cmluZyxcbiAgICAvLyAgIG1ldGE6IE1ldGFkYXRhXG4gICAgLy8gKTogUHJvbWlzZTxcbiAgICAvLyAgIHwge1xuICAgIC8vICAgICAgIGRhdGE6IE1ldGFkYXRhXG4gICAgLy8gICAgICAgZXJyb3I6IG51bGxcbiAgICAvLyAgICAgfVxuICAgIC8vICAgfCB7XG4gICAgLy8gICAgICAgZGF0YTogbnVsbFxuICAgIC8vICAgICAgIGVycm9yOiBTdG9yYWdlRXJyb3JcbiAgICAvLyAgICAgfVxuICAgIC8vID4ge1xuICAgIC8vICAgdHJ5IHtcbiAgICAvLyAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHBvc3QoXG4gICAgLy8gICAgICAgdGhpcy5mZXRjaCxcbiAgICAvLyAgICAgICBgJHt0aGlzLnVybH0vbWV0YWRhdGEvJHtpZH1gLFxuICAgIC8vICAgICAgIHsgLi4ubWV0YSB9LFxuICAgIC8vICAgICAgIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH1cbiAgICAvLyAgICAgKVxuICAgIC8vICAgICByZXR1cm4geyBkYXRhLCBlcnJvcjogbnVsbCB9XG4gICAgLy8gICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vICAgICBpZiAoaXNTdG9yYWdlRXJyb3IoZXJyb3IpKSB7XG4gICAgLy8gICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfVxuICAgIC8vICAgICB9XG4gICAgLy8gICAgIHRocm93IGVycm9yXG4gICAgLy8gICB9XG4gICAgLy8gfVxuICAgIC8qKlxuICAgICAqIExpc3RzIGFsbCB0aGUgZmlsZXMgd2l0aGluIGEgYnVja2V0LlxuICAgICAqIEBwYXJhbSBwYXRoIFRoZSBmb2xkZXIgcGF0aC5cbiAgICAgKi9cbiAgICBsaXN0KHBhdGgsIG9wdGlvbnMsIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX1NFQVJDSF9PUFRJT05TKSwgb3B0aW9ucyksIHsgcHJlZml4OiBwYXRoIHx8ICcnIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSB5aWVsZCBwb3N0KHRoaXMuZmV0Y2gsIGAke3RoaXMudXJsfS9vYmplY3QvbGlzdC8ke3RoaXMuYnVja2V0SWR9YCwgYm9keSwgeyBoZWFkZXJzOiB0aGlzLmhlYWRlcnMgfSwgcGFyYW1ldGVycyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YSwgZXJyb3I6IG51bGwgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChpc1N0b3JhZ2VFcnJvcihlcnJvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgZXJyb3IgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbmNvZGVNZXRhZGF0YShtZXRhZGF0YSkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkobWV0YWRhdGEpO1xuICAgIH1cbiAgICB0b0Jhc2U2NChkYXRhKSB7XG4gICAgICAgIGlmICh0eXBlb2YgQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGRhdGEpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYnRvYShkYXRhKTtcbiAgICB9XG4gICAgX2dldEZpbmFsUGF0aChwYXRoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLmJ1Y2tldElkfS8ke3BhdGh9YDtcbiAgICB9XG4gICAgX3JlbW92ZUVtcHR5Rm9sZGVycyhwYXRoKSB7XG4gICAgICAgIHJldHVybiBwYXRoLnJlcGxhY2UoL15cXC98XFwvJC9nLCAnJykucmVwbGFjZSgvXFwvKy9nLCAnLycpO1xuICAgIH1cbiAgICB0cmFuc2Zvcm1PcHRzVG9RdWVyeVN0cmluZyh0cmFuc2Zvcm0pIHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gW107XG4gICAgICAgIGlmICh0cmFuc2Zvcm0ud2lkdGgpIHtcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKGB3aWR0aD0ke3RyYW5zZm9ybS53aWR0aH1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJhbnNmb3JtLmhlaWdodCkge1xuICAgICAgICAgICAgcGFyYW1zLnB1c2goYGhlaWdodD0ke3RyYW5zZm9ybS5oZWlnaHR9YCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRyYW5zZm9ybS5yZXNpemUpIHtcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKGByZXNpemU9JHt0cmFuc2Zvcm0ucmVzaXplfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0cmFuc2Zvcm0uZm9ybWF0KSB7XG4gICAgICAgICAgICBwYXJhbXMucHVzaChgZm9ybWF0PSR7dHJhbnNmb3JtLmZvcm1hdH1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHJhbnNmb3JtLnF1YWxpdHkpIHtcbiAgICAgICAgICAgIHBhcmFtcy5wdXNoKGBxdWFsaXR5PSR7dHJhbnNmb3JtLnF1YWxpdHl9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhcmFtcy5qb2luKCcmJyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3RvcmFnZUZpbGVBcGkuanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsImlzU3RvcmFnZUVycm9yIiwiU3RvcmFnZUVycm9yIiwiU3RvcmFnZVVua25vd25FcnJvciIsImdldCIsImhlYWQiLCJwb3N0IiwicmVtb3ZlIiwicmVjdXJzaXZlVG9DYW1lbCIsInJlc29sdmVGZXRjaCIsIkRFRkFVTFRfU0VBUkNIX09QVElPTlMiLCJsaW1pdCIsIm9mZnNldCIsInNvcnRCeSIsImNvbHVtbiIsIm9yZGVyIiwiREVGQVVMVF9GSUxFX09QVElPTlMiLCJjYWNoZUNvbnRyb2wiLCJjb250ZW50VHlwZSIsInVwc2VydCIsIlN0b3JhZ2VGaWxlQXBpIiwidXBsb2FkT3JVcGRhdGUiLCJtZXRob2QiLCJwYXRoIiwiZmlsZUJvZHkiLCJmaWxlT3B0aW9ucyIsImJvZHkiLCJvcHRpb25zIiwiT2JqZWN0IiwiYXNzaWduIiwiaGVhZGVycyIsIlN0cmluZyIsIm1ldGFkYXRhIiwiQmxvYiIsIkZvcm1EYXRhIiwiYXBwZW5kIiwiZW5jb2RlTWV0YWRhdGEiLCJ0b0Jhc2U2NCIsImNsZWFuUGF0aCIsIl9yZW1vdmVFbXB0eUZvbGRlcnMiLCJfcGF0aCIsIl9nZXRGaW5hbFBhdGgiLCJyZXMiLCJmZXRjaCIsInVybCIsImR1cGxleCIsImRhdGEiLCJqc29uIiwib2siLCJpZCIsIklkIiwiZnVsbFBhdGgiLCJLZXkiLCJlcnJvciIsInVwbG9hZCIsInVwbG9hZFRvU2lnbmVkVXJsIiwidG9rZW4iLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJzZXQiLCJ0b1N0cmluZyIsImNyZWF0ZVNpZ25lZFVwbG9hZFVybCIsInNpZ25lZFVybCIsInVwZGF0ZSIsIm1vdmUiLCJmcm9tUGF0aCIsInRvUGF0aCIsImJ1Y2tldElkIiwic291cmNlS2V5IiwiZGVzdGluYXRpb25LZXkiLCJkZXN0aW5hdGlvbkJ1Y2tldCIsImNvcHkiLCJjcmVhdGVTaWduZWRVcmwiLCJleHBpcmVzSW4iLCJ0cmFuc2Zvcm0iLCJkb3dubG9hZFF1ZXJ5UGFyYW0iLCJkb3dubG9hZCIsImVuY29kZVVSSSIsInNpZ25lZFVSTCIsImNyZWF0ZVNpZ25lZFVybHMiLCJwYXRocyIsIm1hcCIsImRhdHVtIiwid2FudHNUcmFuc2Zvcm1hdGlvbiIsInJlbmRlclBhdGgiLCJ0cmFuc2Zvcm1hdGlvblF1ZXJ5IiwidHJhbnNmb3JtT3B0c1RvUXVlcnlTdHJpbmciLCJxdWVyeVN0cmluZyIsIm5vUmVzb2x2ZUpzb24iLCJibG9iIiwiaW5mbyIsImV4aXN0cyIsIm9yaWdpbmFsRXJyb3IiLCJpbmNsdWRlcyIsInN0YXR1cyIsImdldFB1YmxpY1VybCIsIl9xdWVyeVN0cmluZyIsInB1c2giLCJqb2luIiwicHVibGljVXJsIiwicHJlZml4ZXMiLCJsaXN0IiwicGFyYW1ldGVycyIsInByZWZpeCIsIkpTT04iLCJzdHJpbmdpZnkiLCJCdWZmZXIiLCJmcm9tIiwiYnRvYSIsInJlcGxhY2UiLCJwYXJhbXMiLCJ3aWR0aCIsImhlaWdodCIsInJlc2l6ZSIsImZvcm1hdCIsInF1YWxpdHkiLCJjb25zdHJ1Y3RvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SupabaseClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n/* harmony import */ var _supabase_storage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/storage-js */ \"(app-pages-browser)/./node_modules/@supabase/storage-js/dist/module/StorageClient.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/constants */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\");\n/* harmony import */ var _lib_fetch__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/fetch */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\");\n/* harmony import */ var _lib_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/helpers */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\");\n/* harmony import */ var _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/SupabaseAuthClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\nclass SupabaseClient {\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */ get functions() {\n        return new _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */ get storage() {\n        return new _supabase_storage_js__WEBPACK_IMPORTED_MODULE_3__.StorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */ from(relation) {\n        return this.rest.from(relation);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.schema\n    /**\n     * Select a schema to query or perform an function (rpc) call.\n     *\n     * The schema needs to be on the list of exposed schemas inside Supabase.\n     *\n     * @param schema - The schema to query\n     */ schema(schema) {\n        return this.rest.schema(schema);\n    }\n    // NOTE: signatures must be kept in sync with PostgrestClient.rpc\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.get - When set to `true`, the function will be called with\n     * read-only access mode.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */ rpc(fn) {\n        let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */ channel(name) {\n        let opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {\n            config: {}\n        };\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */ getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */ removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */ removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function*() {\n            if (this.accessToken) {\n                return yield this.accessToken();\n            }\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient(param, headers, fetch) {\n        let { autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, lock, debug } = param;\n        const authHeaders = {\n            Authorization: \"Bearer \".concat(this.supabaseKey),\n            apikey: \"\".concat(this.supabaseKey)\n        };\n        return new _lib_SupabaseAuthClient__WEBPACK_IMPORTED_MODULE_4__.SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            lock,\n            debug,\n            fetch,\n            // auth checks if there is a custom authorizaiton header using this flag\n            // so it knows whether to return an error when getUser is called with no session\n            hasCustomAuthorizationHeader: \"Authorization\" in this.headers\n        });\n    }\n    _initRealtimeClient(options) {\n        return new _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_1__.RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), {\n            params: Object.assign({\n                apikey: this.supabaseKey\n            }, options === null || options === void 0 ? void 0 : options.params)\n        }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session)=>{\n            this._handleTokenChanged(event, \"CLIENT\", session === null || session === void 0 ? void 0 : session.access_token);\n        });\n        return data;\n    }\n    _handleTokenChanged(event, source, token) {\n        if ((event === \"TOKEN_REFRESHED\" || event === \"SIGNED_IN\") && this.changedAccessToken !== token) {\n            this.changedAccessToken = token;\n        } else if (event === \"SIGNED_OUT\") {\n            this.realtime.setAuth();\n            if (source == \"STORAGE\") this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */ constructor(supabaseUrl, supabaseKey, options){\n        var _a, _b, _c;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl) throw new Error(\"supabaseUrl is required.\");\n        if (!supabaseKey) throw new Error(\"supabaseKey is required.\");\n        const _supabaseUrl = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_5__.stripTrailingSlash)(supabaseUrl);\n        this.realtimeUrl = \"\".concat(_supabaseUrl, \"/realtime/v1\").replace(/^http/i, \"ws\");\n        this.authUrl = \"\".concat(_supabaseUrl, \"/auth/v1\");\n        this.storageUrl = \"\".concat(_supabaseUrl, \"/storage/v1\");\n        this.functionsUrl = \"\".concat(_supabaseUrl, \"/functions/v1\");\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = \"sb-\".concat(new URL(this.authUrl).hostname.split(\".\")[0], \"-auth-token\");\n        const DEFAULTS = {\n            db: _lib_constants__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_DB_OPTIONS,\n            realtime: _lib_constants__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, _lib_constants__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_AUTH_OPTIONS), {\n                storageKey: defaultStorageKey\n            }),\n            global: _lib_constants__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_GLOBAL_OPTIONS\n        };\n        const settings = (0,_lib_helpers__WEBPACK_IMPORTED_MODULE_5__.applySettingDefaults)(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : \"\";\n        this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};\n        if (!settings.accessToken) {\n            this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);\n        } else {\n            this.accessToken = settings.accessToken;\n            this.auth = new Proxy({}, {\n                get: (_, prop)=>{\n                    throw new Error(\"@supabase/supabase-js: Supabase Client is configured with the accessToken option, accessing supabase.auth.\".concat(String(prop), \" is not possible\"));\n                }\n            });\n        }\n        this.fetch = (0,_lib_fetch__WEBPACK_IMPORTED_MODULE_7__.fetchWithAuth)(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({\n            headers: this.headers,\n            accessToken: this._getAccessToken.bind(this)\n        }, settings.realtime));\n        this.rest = new _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_0__.PostgrestClient(\"\".concat(_supabaseUrl, \"/rest/v1\"), {\n            headers: this.headers,\n            schema: settings.db.schema,\n            fetch: this.fetch\n        });\n        if (!settings.accessToken) {\n            this._listenForAuthEvents();\n        }\n    }\n} //# sourceMappingURL=SupabaseClient.js.map\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/index.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthAdminApi: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthAdminApi; },\n/* harmony export */   AuthApiError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthApiError; },\n/* harmony export */   AuthClient: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient; },\n/* harmony export */   AuthError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthError; },\n/* harmony export */   AuthImplicitGrantRedirectError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthImplicitGrantRedirectError; },\n/* harmony export */   AuthInvalidCredentialsError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidCredentialsError; },\n/* harmony export */   AuthInvalidJwtError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidJwtError; },\n/* harmony export */   AuthInvalidTokenResponseError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthInvalidTokenResponseError; },\n/* harmony export */   AuthPKCEGrantCodeExchangeError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthPKCEGrantCodeExchangeError; },\n/* harmony export */   AuthRetryableFetchError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthRetryableFetchError; },\n/* harmony export */   AuthSessionMissingError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthSessionMissingError; },\n/* harmony export */   AuthUnknownError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthUnknownError; },\n/* harmony export */   AuthWeakPasswordError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthWeakPasswordError; },\n/* harmony export */   CustomAuthError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.CustomAuthError; },\n/* harmony export */   FunctionRegion: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionRegion; },\n/* harmony export */   FunctionsError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsError; },\n/* harmony export */   FunctionsFetchError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsFetchError; },\n/* harmony export */   FunctionsHttpError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsHttpError; },\n/* harmony export */   FunctionsRelayError: function() { return /* reexport safe */ _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__.FunctionsRelayError; },\n/* harmony export */   GoTrueAdminApi: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueAdminApi; },\n/* harmony export */   GoTrueClient: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.GoTrueClient; },\n/* harmony export */   NavigatorLockAcquireTimeoutError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.NavigatorLockAcquireTimeoutError; },\n/* harmony export */   PostgrestError: function() { return /* reexport safe */ _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__.PostgrestError; },\n/* harmony export */   REALTIME_CHANNEL_STATES: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_CHANNEL_STATES; },\n/* harmony export */   REALTIME_LISTEN_TYPES: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_LISTEN_TYPES; },\n/* harmony export */   REALTIME_POSTGRES_CHANGES_LISTEN_EVENT: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_POSTGRES_CHANGES_LISTEN_EVENT; },\n/* harmony export */   REALTIME_PRESENCE_LISTEN_EVENTS: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_PRESENCE_LISTEN_EVENTS; },\n/* harmony export */   REALTIME_SUBSCRIBE_STATES: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.REALTIME_SUBSCRIBE_STATES; },\n/* harmony export */   RealtimeChannel: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeChannel; },\n/* harmony export */   RealtimeClient: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimeClient; },\n/* harmony export */   RealtimePresence: function() { return /* reexport safe */ _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__.RealtimePresence; },\n/* harmony export */   SupabaseClient: function() { return /* reexport safe */ _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; },\n/* harmony export */   createClient: function() { return /* binding */ createClient; },\n/* harmony export */   isAuthApiError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthApiError; },\n/* harmony export */   isAuthError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthError; },\n/* harmony export */   isAuthImplicitGrantRedirectError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthImplicitGrantRedirectError; },\n/* harmony export */   isAuthRetryableFetchError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthRetryableFetchError; },\n/* harmony export */   isAuthSessionMissingError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthSessionMissingError; },\n/* harmony export */   isAuthWeakPasswordError: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.isAuthWeakPasswordError; },\n/* harmony export */   lockInternals: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.lockInternals; },\n/* harmony export */   navigatorLock: function() { return /* reexport safe */ _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.navigatorLock; }\n/* harmony export */ });\n/* harmony import */ var _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./SupabaseClient */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js\");\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n/* harmony import */ var _supabase_postgrest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/postgrest-js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\");\n/* harmony import */ var _supabase_functions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/functions-js */ \"(app-pages-browser)/./node_modules/@supabase/functions-js/dist/module/types.js\");\n/* harmony import */ var _supabase_realtime_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/realtime-js */ \"(app-pages-browser)/./node_modules/@supabase/realtime-js/dist/module/index.js\");\n\n\n\n\n\n\n/**\n * Creates a new Supabase Client.\n */ const createClient = (supabaseUrl, supabaseKey, options)=>{\n    return new _SupabaseClient__WEBPACK_IMPORTED_MODULE_4__[\"default\"](supabaseUrl, supabaseKey, options);\n}; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QztBQUNaO0FBQ3VCO0FBQzhFO0FBQ2pHO0FBQ3VCO0FBQzdEOztDQUVDLEdBQ00sTUFBTVEsZUFBZSxDQUFDQyxhQUFhQyxhQUFhQztJQUNuRCxPQUFPLElBQUlYLHVEQUFjQSxDQUFDUyxhQUFhQyxhQUFhQztBQUN4RCxFQUFFLENBQ0YsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvaW5kZXguanM/YjMyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3VwYWJhc2VDbGllbnQgZnJvbSAnLi9TdXBhYmFzZUNsaWVudCc7XG5leHBvcnQgKiBmcm9tICdAc3VwYWJhc2UvYXV0aC1qcyc7XG5leHBvcnQgeyBQb3N0Z3Jlc3RFcnJvciwgfSBmcm9tICdAc3VwYWJhc2UvcG9zdGdyZXN0LWpzJztcbmV4cG9ydCB7IEZ1bmN0aW9uc0h0dHBFcnJvciwgRnVuY3Rpb25zRmV0Y2hFcnJvciwgRnVuY3Rpb25zUmVsYXlFcnJvciwgRnVuY3Rpb25zRXJyb3IsIEZ1bmN0aW9uUmVnaW9uLCB9IGZyb20gJ0BzdXBhYmFzZS9mdW5jdGlvbnMtanMnO1xuZXhwb3J0ICogZnJvbSAnQHN1cGFiYXNlL3JlYWx0aW1lLWpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU3VwYWJhc2VDbGllbnQgfSBmcm9tICcuL1N1cGFiYXNlQ2xpZW50Jztcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBTdXBhYmFzZSBDbGllbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBjcmVhdGVDbGllbnQgPSAoc3VwYWJhc2VVcmwsIHN1cGFiYXNlS2V5LCBvcHRpb25zKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBTdXBhYmFzZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VLZXksIG9wdGlvbnMpO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJTdXBhYmFzZUNsaWVudCIsIlBvc3RncmVzdEVycm9yIiwiRnVuY3Rpb25zSHR0cEVycm9yIiwiRnVuY3Rpb25zRmV0Y2hFcnJvciIsIkZ1bmN0aW9uc1JlbGF5RXJyb3IiLCJGdW5jdGlvbnNFcnJvciIsIkZ1bmN0aW9uUmVnaW9uIiwiZGVmYXVsdCIsImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwic3VwYWJhc2VLZXkiLCJvcHRpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SupabaseAuthClient: function() { return /* binding */ SupabaseAuthClient; }\n/* harmony export */ });\n/* harmony import */ var _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/auth-js */ \"(app-pages-browser)/./node_modules/@supabase/auth-js/dist/module/index.js\");\n\nclass SupabaseAuthClient extends _supabase_auth_js__WEBPACK_IMPORTED_MODULE_0__.AuthClient {\n    constructor(options){\n        super(options);\n    }\n} //# sourceMappingURL=SupabaseAuthClient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL1N1cGFiYXNlQXV0aENsaWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUN4QyxNQUFNQywyQkFBMkJELHlEQUFVQTtJQUM5Q0UsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLEtBQUssQ0FBQ0E7SUFDVjtBQUNKLEVBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL1N1cGFiYXNlQXV0aENsaWVudC5qcz8xZDI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhDbGllbnQgfSBmcm9tICdAc3VwYWJhc2UvYXV0aC1qcyc7XG5leHBvcnQgY2xhc3MgU3VwYWJhc2VBdXRoQ2xpZW50IGV4dGVuZHMgQXV0aENsaWVudCB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICBzdXBlcihvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdXBhYmFzZUF1dGhDbGllbnQuanMubWFwIl0sIm5hbWVzIjpbIkF1dGhDbGllbnQiLCJTdXBhYmFzZUF1dGhDbGllbnQiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/constants.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_AUTH_OPTIONS: function() { return /* binding */ DEFAULT_AUTH_OPTIONS; },\n/* harmony export */   DEFAULT_DB_OPTIONS: function() { return /* binding */ DEFAULT_DB_OPTIONS; },\n/* harmony export */   DEFAULT_GLOBAL_OPTIONS: function() { return /* binding */ DEFAULT_GLOBAL_OPTIONS; },\n/* harmony export */   DEFAULT_HEADERS: function() { return /* binding */ DEFAULT_HEADERS; },\n/* harmony export */   DEFAULT_REALTIME_OPTIONS: function() { return /* binding */ DEFAULT_REALTIME_OPTIONS; }\n/* harmony export */ });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\");\n\nlet JS_ENV = \"\";\n// @ts-ignore\nif (typeof Deno !== \"undefined\") {\n    JS_ENV = \"deno\";\n} else if (typeof document !== \"undefined\") {\n    JS_ENV = \"web\";\n} else if (typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\") {\n    JS_ENV = \"react-native\";\n} else {\n    JS_ENV = \"node\";\n}\nconst DEFAULT_HEADERS = {\n    \"X-Client-Info\": \"supabase-js-\".concat(JS_ENV, \"/\").concat(_version__WEBPACK_IMPORTED_MODULE_0__.version)\n};\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: \"public\"\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: \"implicit\"\n};\nconst DEFAULT_REALTIME_OPTIONS = {}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBb0M7QUFDcEMsSUFBSUMsU0FBUztBQUNiLGFBQWE7QUFDYixJQUFJLE9BQU9DLFNBQVMsYUFBYTtJQUM3QkQsU0FBUztBQUNiLE9BQ0ssSUFBSSxPQUFPRSxhQUFhLGFBQWE7SUFDdENGLFNBQVM7QUFDYixPQUNLLElBQUksT0FBT0csY0FBYyxlQUFlQSxVQUFVQyxPQUFPLEtBQUssZUFBZTtJQUM5RUosU0FBUztBQUNiLE9BQ0s7SUFDREEsU0FBUztBQUNiO0FBQ08sTUFBTUssa0JBQWtCO0lBQUUsaUJBQWlCLGVBQXlCTixPQUFWQyxRQUFPLEtBQVcsT0FBUkQsNkNBQU9BO0FBQUcsRUFBRTtBQUNoRixNQUFNTyx5QkFBeUI7SUFDbENDLFNBQVNGO0FBQ2IsRUFBRTtBQUNLLE1BQU1HLHFCQUFxQjtJQUM5QkMsUUFBUTtBQUNaLEVBQUU7QUFDSyxNQUFNQyx1QkFBdUI7SUFDaENDLGtCQUFrQjtJQUNsQkMsZ0JBQWdCO0lBQ2hCQyxvQkFBb0I7SUFDcEJDLFVBQVU7QUFDZCxFQUFFO0FBQ0ssTUFBTUMsMkJBQTJCLENBQUMsRUFBRSxDQUMzQyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvY29uc3RhbnRzLmpzP2JlNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmVyc2lvbiB9IGZyb20gJy4vdmVyc2lvbic7XG5sZXQgSlNfRU5WID0gJyc7XG4vLyBAdHMtaWdub3JlXG5pZiAodHlwZW9mIERlbm8gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgSlNfRU5WID0gJ2Rlbm8nO1xufVxuZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgIEpTX0VOViA9ICd3ZWInO1xufVxuZWxzZSBpZiAodHlwZW9mIG5hdmlnYXRvciAhPT0gJ3VuZGVmaW5lZCcgJiYgbmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScpIHtcbiAgICBKU19FTlYgPSAncmVhY3QtbmF0aXZlJztcbn1cbmVsc2Uge1xuICAgIEpTX0VOViA9ICdub2RlJztcbn1cbmV4cG9ydCBjb25zdCBERUZBVUxUX0hFQURFUlMgPSB7ICdYLUNsaWVudC1JbmZvJzogYHN1cGFiYXNlLWpzLSR7SlNfRU5WfS8ke3ZlcnNpb259YCB9O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfR0xPQkFMX09QVElPTlMgPSB7XG4gICAgaGVhZGVyczogREVGQVVMVF9IRUFERVJTLFxufTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0RCX09QVElPTlMgPSB7XG4gICAgc2NoZW1hOiAncHVibGljJyxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9BVVRIX09QVElPTlMgPSB7XG4gICAgYXV0b1JlZnJlc2hUb2tlbjogdHJ1ZSxcbiAgICBwZXJzaXN0U2Vzc2lvbjogdHJ1ZSxcbiAgICBkZXRlY3RTZXNzaW9uSW5Vcmw6IHRydWUsXG4gICAgZmxvd1R5cGU6ICdpbXBsaWNpdCcsXG59O1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUyA9IHt9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiSlNfRU5WIiwiRGVubyIsImRvY3VtZW50IiwibmF2aWdhdG9yIiwicHJvZHVjdCIsIkRFRkFVTFRfSEVBREVSUyIsIkRFRkFVTFRfR0xPQkFMX09QVElPTlMiLCJoZWFkZXJzIiwiREVGQVVMVF9EQl9PUFRJT05TIiwic2NoZW1hIiwiREVGQVVMVF9BVVRIX09QVElPTlMiLCJhdXRvUmVmcmVzaFRva2VuIiwicGVyc2lzdFNlc3Npb24iLCJkZXRlY3RTZXNzaW9uSW5VcmwiLCJmbG93VHlwZSIsIkRFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchWithAuth: function() { return /* binding */ fetchWithAuth; },\n/* harmony export */   resolveFetch: function() { return /* binding */ resolveFetch; },\n/* harmony export */   resolveHeadersConstructor: function() { return /* binding */ resolveHeadersConstructor; }\n/* harmony export */ });\n/* harmony import */ var _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/node-fetch */ \"(app-pages-browser)/./node_modules/@supabase/node-fetch/browser.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-ignore\n\nconst resolveFetch = (customFetch)=>{\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    } else if (typeof fetch === \"undefined\") {\n        _fetch = _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    } else {\n        _fetch = fetch;\n    }\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        return _fetch(...args);\n    };\n};\nconst resolveHeadersConstructor = ()=>{\n    if (typeof Headers === \"undefined\") {\n        return _supabase_node_fetch__WEBPACK_IMPORTED_MODULE_0__.Headers;\n    }\n    return Headers;\n};\nconst fetchWithAuth = (supabaseKey, getAccessToken, customFetch)=>{\n    const fetch1 = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init)=>__awaiter(void 0, void 0, void 0, function*() {\n            var _a;\n            const accessToken = (_a = yield getAccessToken()) !== null && _a !== void 0 ? _a : supabaseKey;\n            let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n            if (!headers.has(\"apikey\")) {\n                headers.set(\"apikey\", supabaseKey);\n            }\n            if (!headers.has(\"Authorization\")) {\n                headers.set(\"Authorization\", \"Bearer \".concat(accessToken));\n            }\n            return fetch1(input, Object.assign(Object.assign({}, init), {\n                headers\n            }));\n        });\n}; //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFJQSxZQUFZLFNBQUssSUFBSSxTQUFJLENBQUNBLFNBQVMsSUFBSyxTQUFVQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsQ0FBQyxFQUFFQyxTQUFTO0lBQ25GLFNBQVNDLE1BQU1DLEtBQUs7UUFBSSxPQUFPQSxpQkFBaUJILElBQUlHLFFBQVEsSUFBSUgsRUFBRSxTQUFVSSxPQUFPO1lBQUlBLFFBQVFEO1FBQVE7SUFBSTtJQUMzRyxPQUFPLElBQUtILENBQUFBLEtBQU1BLENBQUFBLElBQUlLLE9BQU0sQ0FBQyxFQUFHLFNBQVVELE9BQU8sRUFBRUUsTUFBTTtRQUNyRCxTQUFTQyxVQUFVSixLQUFLO1lBQUksSUFBSTtnQkFBRUssS0FBS1AsVUFBVVEsSUFBSSxDQUFDTjtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzFGLFNBQVNDLFNBQVNSLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBT08sR0FBRztnQkFBRUosT0FBT0k7WUFBSTtRQUFFO1FBQzdGLFNBQVNGLEtBQUtJLE1BQU07WUFBSUEsT0FBT0MsSUFBSSxHQUFHVCxRQUFRUSxPQUFPVCxLQUFLLElBQUlELE1BQU1VLE9BQU9ULEtBQUssRUFBRVcsSUFBSSxDQUFDUCxXQUFXSTtRQUFXO1FBQzdHSCxLQUFLLENBQUNQLFlBQVlBLFVBQVVjLEtBQUssQ0FBQ2pCLFNBQVNDLGNBQWMsRUFBRSxHQUFHVSxJQUFJO0lBQ3RFO0FBQ0o7QUFDQSxhQUFhO0FBQ2lFO0FBQ3ZFLE1BQU1VLGVBQWUsQ0FBQ0M7SUFDekIsSUFBSUM7SUFDSixJQUFJRCxhQUFhO1FBQ2JDLFNBQVNEO0lBQ2IsT0FDSyxJQUFJLE9BQU9FLFVBQVUsYUFBYTtRQUNuQ0QsU0FBU0wsNERBQVNBO0lBQ3RCLE9BQ0s7UUFDREssU0FBU0M7SUFDYjtJQUNBLE9BQU87eUNBQUlDO1lBQUFBOztlQUFTRixVQUFVRTs7QUFDbEMsRUFBRTtBQUNLLE1BQU1DLDRCQUE0QjtJQUNyQyxJQUFJLE9BQU9QLFlBQVksYUFBYTtRQUNoQyxPQUFPQyx5REFBZ0JBO0lBQzNCO0lBQ0EsT0FBT0Q7QUFDWCxFQUFFO0FBQ0ssTUFBTVEsZ0JBQWdCLENBQUNDLGFBQWFDLGdCQUFnQlA7SUFDdkQsTUFBTUUsU0FBUUgsYUFBYUM7SUFDM0IsTUFBTVEscUJBQXFCSjtJQUMzQixPQUFPLENBQUNLLE9BQU9DLE9BQVNqQyxVQUFVLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHO1lBQ3RELElBQUlrQztZQUNKLE1BQU1DLGNBQWMsQ0FBQ0QsS0FBTSxNQUFNSixnQkFBZ0IsTUFBTyxRQUFRSSxPQUFPLEtBQUssSUFBSUEsS0FBS0w7WUFDckYsSUFBSU8sVUFBVSxJQUFJTCxtQkFBbUJFLFNBQVMsUUFBUUEsU0FBUyxLQUFLLElBQUksS0FBSyxJQUFJQSxLQUFLRyxPQUFPO1lBQzdGLElBQUksQ0FBQ0EsUUFBUUMsR0FBRyxDQUFDLFdBQVc7Z0JBQ3hCRCxRQUFRRSxHQUFHLENBQUMsVUFBVVQ7WUFDMUI7WUFDQSxJQUFJLENBQUNPLFFBQVFDLEdBQUcsQ0FBQyxrQkFBa0I7Z0JBQy9CRCxRQUFRRSxHQUFHLENBQUMsaUJBQWlCLFVBQXNCLE9BQVpIO1lBQzNDO1lBQ0EsT0FBT1YsT0FBTU8sT0FBT08sT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHUCxPQUFPO2dCQUFFRztZQUFRO1FBQ3pFO0FBQ0osRUFBRSxDQUNGLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3N1cGFiYXNlLWpzL2Rpc3QvbW9kdWxlL2xpYi9mZXRjaC5qcz8yNTRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuLy8gQHRzLWlnbm9yZVxuaW1wb3J0IG5vZGVGZXRjaCwgeyBIZWFkZXJzIGFzIE5vZGVGZXRjaEhlYWRlcnMgfSBmcm9tICdAc3VwYWJhc2Uvbm9kZS1mZXRjaCc7XG5leHBvcnQgY29uc3QgcmVzb2x2ZUZldGNoID0gKGN1c3RvbUZldGNoKSA9PiB7XG4gICAgbGV0IF9mZXRjaDtcbiAgICBpZiAoY3VzdG9tRmV0Y2gpIHtcbiAgICAgICAgX2ZldGNoID0gY3VzdG9tRmV0Y2g7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBmZXRjaCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgX2ZldGNoID0gbm9kZUZldGNoO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgX2ZldGNoID0gZmV0Y2g7XG4gICAgfVxuICAgIHJldHVybiAoLi4uYXJncykgPT4gX2ZldGNoKC4uLmFyZ3MpO1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yID0gKCkgPT4ge1xuICAgIGlmICh0eXBlb2YgSGVhZGVycyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIE5vZGVGZXRjaEhlYWRlcnM7XG4gICAgfVxuICAgIHJldHVybiBIZWFkZXJzO1xufTtcbmV4cG9ydCBjb25zdCBmZXRjaFdpdGhBdXRoID0gKHN1cGFiYXNlS2V5LCBnZXRBY2Nlc3NUb2tlbiwgY3VzdG9tRmV0Y2gpID0+IHtcbiAgICBjb25zdCBmZXRjaCA9IHJlc29sdmVGZXRjaChjdXN0b21GZXRjaCk7XG4gICAgY29uc3QgSGVhZGVyc0NvbnN0cnVjdG9yID0gcmVzb2x2ZUhlYWRlcnNDb25zdHJ1Y3RvcigpO1xuICAgIHJldHVybiAoaW5wdXQsIGluaXQpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IGFjY2Vzc1Rva2VuID0gKF9hID0gKHlpZWxkIGdldEFjY2Vzc1Rva2VuKCkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBzdXBhYmFzZUtleTtcbiAgICAgICAgbGV0IGhlYWRlcnMgPSBuZXcgSGVhZGVyc0NvbnN0cnVjdG9yKGluaXQgPT09IG51bGwgfHwgaW5pdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogaW5pdC5oZWFkZXJzKTtcbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhcygnYXBpa2V5JykpIHtcbiAgICAgICAgICAgIGhlYWRlcnMuc2V0KCdhcGlrZXknLCBzdXBhYmFzZUtleSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFoZWFkZXJzLmhhcygnQXV0aG9yaXphdGlvbicpKSB7XG4gICAgICAgICAgICBoZWFkZXJzLnNldCgnQXV0aG9yaXphdGlvbicsIGBCZWFyZXIgJHthY2Nlc3NUb2tlbn1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmV0Y2goaW5wdXQsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaW5pdCksIHsgaGVhZGVycyB9KSk7XG4gICAgfSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsIm5vZGVGZXRjaCIsIkhlYWRlcnMiLCJOb2RlRmV0Y2hIZWFkZXJzIiwicmVzb2x2ZUZldGNoIiwiY3VzdG9tRmV0Y2giLCJfZmV0Y2giLCJmZXRjaCIsImFyZ3MiLCJyZXNvbHZlSGVhZGVyc0NvbnN0cnVjdG9yIiwiZmV0Y2hXaXRoQXV0aCIsInN1cGFiYXNlS2V5IiwiZ2V0QWNjZXNzVG9rZW4iLCJIZWFkZXJzQ29uc3RydWN0b3IiLCJpbnB1dCIsImluaXQiLCJfYSIsImFjY2Vzc1Rva2VuIiwiaGVhZGVycyIsImhhcyIsInNldCIsIk9iamVjdCIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySettingDefaults: function() { return /* binding */ applySettingDefaults; },\n/* harmony export */   isBrowser: function() { return /* binding */ isBrowser; },\n/* harmony export */   stripTrailingSlash: function() { return /* binding */ stripTrailingSlash; },\n/* harmony export */   uuid: function() { return /* binding */ uuid; }\n/* harmony export */ });\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction uuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n        var r = Math.random() * 16 | 0, v = c == \"x\" ? r : r & 0x3 | 0x8;\n        return v.toString(16);\n    });\n}\nfunction stripTrailingSlash(url) {\n    return url.replace(/\\/$/, \"\");\n}\nconst isBrowser = ()=>\"object\" !== \"undefined\";\nfunction applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS } = defaults;\n    const result = {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n        accessToken: ()=>__awaiter(this, void 0, void 0, function*() {\n                return \"\";\n            })\n    };\n    if (options.accessToken) {\n        result.accessToken = options.accessToken;\n    } else {\n        // hack around Required<>\n        delete result.accessToken;\n    }\n    return result;\n} //# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNPLFNBQVNPO0lBQ1osT0FBTyx1Q0FBdUNDLE9BQU8sQ0FBQyxTQUFTLFNBQVVDLENBQUM7UUFDdEUsSUFBSUMsSUFBSSxLQUFNRSxNQUFNLEtBQUssS0FBTSxHQUFHQyxJQUFJSixLQUFLLE1BQU1DLElBQUksSUFBSyxNQUFPO1FBQ2pFLE9BQU9HLEVBQUVDLFFBQVEsQ0FBQztJQUN0QjtBQUNKO0FBQ08sU0FBU0MsbUJBQW1CQyxHQUFHO0lBQ2xDLE9BQU9BLElBQUlSLE9BQU8sQ0FBQyxPQUFPO0FBQzlCO0FBQ08sTUFBTVMsWUFBWSxJQUFNLGFBQWtCLFlBQVk7QUFDdEQsU0FBU0MscUJBQXFCQyxPQUFPLEVBQUVDLFFBQVE7SUFDbEQsTUFBTSxFQUFFQyxJQUFJQyxTQUFTLEVBQUVDLE1BQU1DLFdBQVcsRUFBRUMsVUFBVUMsZUFBZSxFQUFFQyxRQUFRQyxhQUFhLEVBQUcsR0FBR1Q7SUFDaEcsTUFBTSxFQUFFRSxJQUFJUSxrQkFBa0IsRUFBRU4sTUFBTU8sb0JBQW9CLEVBQUVMLFVBQVVNLHdCQUF3QixFQUFFSixRQUFRSyxzQkFBc0IsRUFBRyxHQUFHWjtJQUNwSSxNQUFNakIsU0FBUztRQUNYa0IsSUFBSVksT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHTCxxQkFBcUJQO1FBQ3pEQyxNQUFNVSxPQUFPQyxNQUFNLENBQUNELE9BQU9DLE1BQU0sQ0FBQyxDQUFDLEdBQUdKLHVCQUF1Qk47UUFDN0RDLFVBQVVRLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBR0gsMkJBQTJCTDtRQUNyRUMsUUFBUU0sT0FBT0MsTUFBTSxDQUFDRCxPQUFPQyxNQUFNLENBQUMsQ0FBQyxHQUFHRix5QkFBeUJKO1FBQ2pFTyxhQUFhLElBQU0vQyxVQUFVLElBQUksRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHO2dCQUFlLE9BQU87WUFBSTtJQUNqRjtJQUNBLElBQUkrQixRQUFRZ0IsV0FBVyxFQUFFO1FBQ3JCaEMsT0FBT2dDLFdBQVcsR0FBR2hCLFFBQVFnQixXQUFXO0lBQzVDLE9BQ0s7UUFDRCx5QkFBeUI7UUFDekIsT0FBT2hDLE9BQU9nQyxXQUFXO0lBQzdCO0lBQ0EsT0FBT2hDO0FBQ1gsRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvaGVscGVycy5qcz85YTZkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHV1aWQoKSB7XG4gICAgcmV0dXJuICd4eHh4eHh4eC14eHh4LTR4eHgteXh4eC14eHh4eHh4eHh4eHgnLnJlcGxhY2UoL1t4eV0vZywgZnVuY3Rpb24gKGMpIHtcbiAgICAgICAgdmFyIHIgPSAoTWF0aC5yYW5kb20oKSAqIDE2KSB8IDAsIHYgPSBjID09ICd4JyA/IHIgOiAociAmIDB4MykgfCAweDg7XG4gICAgICAgIHJldHVybiB2LnRvU3RyaW5nKDE2KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdHJpcFRyYWlsaW5nU2xhc2godXJsKSB7XG4gICAgcmV0dXJuIHVybC5yZXBsYWNlKC9cXC8kLywgJycpO1xufVxuZXhwb3J0IGNvbnN0IGlzQnJvd3NlciA9ICgpID0+IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5U2V0dGluZ0RlZmF1bHRzKG9wdGlvbnMsIGRlZmF1bHRzKSB7XG4gICAgY29uc3QgeyBkYjogZGJPcHRpb25zLCBhdXRoOiBhdXRoT3B0aW9ucywgcmVhbHRpbWU6IHJlYWx0aW1lT3B0aW9ucywgZ2xvYmFsOiBnbG9iYWxPcHRpb25zLCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCB7IGRiOiBERUZBVUxUX0RCX09QVElPTlMsIGF1dGg6IERFRkFVTFRfQVVUSF9PUFRJT05TLCByZWFsdGltZTogREVGQVVMVF9SRUFMVElNRV9PUFRJT05TLCBnbG9iYWw6IERFRkFVTFRfR0xPQkFMX09QVElPTlMsIH0gPSBkZWZhdWx0cztcbiAgICBjb25zdCByZXN1bHQgPSB7XG4gICAgICAgIGRiOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfREJfT1BUSU9OUyksIGRiT3B0aW9ucyksXG4gICAgICAgIGF1dGg6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9BVVRIX09QVElPTlMpLCBhdXRoT3B0aW9ucyksXG4gICAgICAgIHJlYWx0aW1lOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfUkVBTFRJTUVfT1BUSU9OUyksIHJlYWx0aW1lT3B0aW9ucyksXG4gICAgICAgIGdsb2JhbDogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX0dMT0JBTF9PUFRJT05TKSwgZ2xvYmFsT3B0aW9ucyksXG4gICAgICAgIGFjY2Vzc1Rva2VuOiAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7IHJldHVybiAnJzsgfSksXG4gICAgfTtcbiAgICBpZiAob3B0aW9ucy5hY2Nlc3NUb2tlbikge1xuICAgICAgICByZXN1bHQuYWNjZXNzVG9rZW4gPSBvcHRpb25zLmFjY2Vzc1Rva2VuO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gaGFjayBhcm91bmQgUmVxdWlyZWQ8PlxuICAgICAgICBkZWxldGUgcmVzdWx0LmFjY2Vzc1Rva2VuO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOlsiX19hd2FpdGVyIiwidGhpc0FyZyIsIl9hcmd1bWVudHMiLCJQIiwiZ2VuZXJhdG9yIiwiYWRvcHQiLCJ2YWx1ZSIsInJlc29sdmUiLCJQcm9taXNlIiwicmVqZWN0IiwiZnVsZmlsbGVkIiwic3RlcCIsIm5leHQiLCJlIiwicmVqZWN0ZWQiLCJyZXN1bHQiLCJkb25lIiwidGhlbiIsImFwcGx5IiwidXVpZCIsInJlcGxhY2UiLCJjIiwiciIsIk1hdGgiLCJyYW5kb20iLCJ2IiwidG9TdHJpbmciLCJzdHJpcFRyYWlsaW5nU2xhc2giLCJ1cmwiLCJpc0Jyb3dzZXIiLCJhcHBseVNldHRpbmdEZWZhdWx0cyIsIm9wdGlvbnMiLCJkZWZhdWx0cyIsImRiIiwiZGJPcHRpb25zIiwiYXV0aCIsImF1dGhPcHRpb25zIiwicmVhbHRpbWUiLCJyZWFsdGltZU9wdGlvbnMiLCJnbG9iYWwiLCJnbG9iYWxPcHRpb25zIiwiREVGQVVMVF9EQl9PUFRJT05TIiwiREVGQVVMVF9BVVRIX09QVElPTlMiLCJERUZBVUxUX1JFQUxUSU1FX09QVElPTlMiLCJERUZBVUxUX0dMT0JBTF9PUFRJT05TIiwiT2JqZWN0IiwiYXNzaWduIiwiYWNjZXNzVG9rZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@supabase/supabase-js/dist/module/lib/version.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   version: function() { return /* binding */ version; }\n/* harmony export */ });\nconst version = \"2.49.4\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2Uvc3VwYWJhc2UtanMvZGlzdC9tb2R1bGUvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFVBQVUsU0FBUyxDQUNoQyxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdXBhYmFzZS9zdXBhYmFzZS1qcy9kaXN0L21vZHVsZS9saWIvdmVyc2lvbi5qcz80ODI3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB2ZXJzaW9uID0gJzIuNDkuNCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJ2ZXJzaW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_DataView.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_DataView.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"), root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */ var DataView = getNative(root, \"DataView\");\nmodule.exports = DataView;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0RhdGFWaWV3LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxnRkFDcEJDLE9BQU9ELG1CQUFPQSxDQUFDO0FBRW5CLDhEQUE4RCxHQUM5RCxJQUFJRSxXQUFXSCxVQUFVRSxNQUFNO0FBRS9CRSxPQUFPQyxPQUFPLEdBQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0RhdGFWaWV3LmpzPzhjNjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpLFxuICAgIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBEYXRhVmlldyA9IGdldE5hdGl2ZShyb290LCAnRGF0YVZpZXcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBEYXRhVmlldztcbiJdLCJuYW1lcyI6WyJnZXROYXRpdmUiLCJyZXF1aXJlIiwicm9vdCIsIkRhdGFWaWV3IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_DataView.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Hash.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_Hash.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar hashClear = __webpack_require__(/*! ./_hashClear */ \"(app-pages-browser)/./node_modules/lodash/_hashClear.js\"), hashDelete = __webpack_require__(/*! ./_hashDelete */ \"(app-pages-browser)/./node_modules/lodash/_hashDelete.js\"), hashGet = __webpack_require__(/*! ./_hashGet */ \"(app-pages-browser)/./node_modules/lodash/_hashGet.js\"), hashHas = __webpack_require__(/*! ./_hashHas */ \"(app-pages-browser)/./node_modules/lodash/_hashHas.js\"), hashSet = __webpack_require__(/*! ./_hashSet */ \"(app-pages-browser)/./node_modules/lodash/_hashSet.js\");\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function Hash(entries) {\n    var index = -1, length = entries == null ? 0 : entries.length;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n_c = Hash;\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype[\"delete\"] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;\nvar _c;\n$RefreshReg$(_c, \"Hash\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0hhc2guanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGdGQUNwQkMsYUFBYUQsbUJBQU9BLENBQUMsa0ZBQ3JCRSxVQUFVRixtQkFBT0EsQ0FBQyw0RUFDbEJHLFVBQVVILG1CQUFPQSxDQUFDLDRFQUNsQkksVUFBVUosbUJBQU9BLENBQUM7QUFFdEI7Ozs7OztDQU1DLEdBQ0QsU0FBU0ssS0FBS0MsT0FBTztJQUNuQixJQUFJQyxRQUFRLENBQUMsR0FDVEMsU0FBU0YsV0FBVyxPQUFPLElBQUlBLFFBQVFFLE1BQU07SUFFakQsSUFBSSxDQUFDQyxLQUFLO0lBQ1YsTUFBTyxFQUFFRixRQUFRQyxPQUFRO1FBQ3ZCLElBQUlFLFFBQVFKLE9BQU8sQ0FBQ0MsTUFBTTtRQUMxQixJQUFJLENBQUNJLEdBQUcsQ0FBQ0QsS0FBSyxDQUFDLEVBQUUsRUFBRUEsS0FBSyxDQUFDLEVBQUU7SUFDN0I7QUFDRjtLQVRTTDtBQVdULHlCQUF5QjtBQUN6QkEsS0FBS08sU0FBUyxDQUFDSCxLQUFLLEdBQUdWO0FBQ3ZCTSxLQUFLTyxTQUFTLENBQUMsU0FBUyxHQUFHWDtBQUMzQkksS0FBS08sU0FBUyxDQUFDQyxHQUFHLEdBQUdYO0FBQ3JCRyxLQUFLTyxTQUFTLENBQUNFLEdBQUcsR0FBR1g7QUFDckJFLEtBQUtPLFNBQVMsQ0FBQ0QsR0FBRyxHQUFHUDtBQUVyQlcsT0FBT0MsT0FBTyxHQUFHWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzPzM1NGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhc2hDbGVhciA9IHJlcXVpcmUoJy4vX2hhc2hDbGVhcicpLFxuICAgIGhhc2hEZWxldGUgPSByZXF1aXJlKCcuL19oYXNoRGVsZXRlJyksXG4gICAgaGFzaEdldCA9IHJlcXVpcmUoJy4vX2hhc2hHZXQnKSxcbiAgICBoYXNoSGFzID0gcmVxdWlyZSgnLi9faGFzaEhhcycpLFxuICAgIGhhc2hTZXQgPSByZXF1aXJlKCcuL19oYXNoU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhhc2ggb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhhc2g7XG4iXSwibmFtZXMiOlsiaGFzaENsZWFyIiwicmVxdWlyZSIsImhhc2hEZWxldGUiLCJoYXNoR2V0IiwiaGFzaEhhcyIsImhhc2hTZXQiLCJIYXNoIiwiZW50cmllcyIsImluZGV4IiwibGVuZ3RoIiwiY2xlYXIiLCJlbnRyeSIsInNldCIsInByb3RvdHlwZSIsImdldCIsImhhcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Hash.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_ListCache.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_ListCache.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar listCacheClear = __webpack_require__(/*! ./_listCacheClear */ \"(app-pages-browser)/./node_modules/lodash/_listCacheClear.js\"), listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ \"(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js\"), listCacheGet = __webpack_require__(/*! ./_listCacheGet */ \"(app-pages-browser)/./node_modules/lodash/_listCacheGet.js\"), listCacheHas = __webpack_require__(/*! ./_listCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_listCacheHas.js\"), listCacheSet = __webpack_require__(/*! ./_listCacheSet */ \"(app-pages-browser)/./node_modules/lodash/_listCacheSet.js\");\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function ListCache(entries) {\n    var index = -1, length = entries == null ? 0 : entries.length;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n_c = ListCache;\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype[\"delete\"] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;\nvar _c;\n$RefreshReg$(_c, \"ListCache\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0xpc3RDYWNoZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQywwRkFDekJDLGtCQUFrQkQsbUJBQU9BLENBQUMsNEZBQzFCRSxlQUFlRixtQkFBT0EsQ0FBQyxzRkFDdkJHLGVBQWVILG1CQUFPQSxDQUFDLHNGQUN2QkksZUFBZUosbUJBQU9BLENBQUM7QUFFM0I7Ozs7OztDQU1DLEdBQ0QsU0FBU0ssVUFBVUMsT0FBTztJQUN4QixJQUFJQyxRQUFRLENBQUMsR0FDVEMsU0FBU0YsV0FBVyxPQUFPLElBQUlBLFFBQVFFLE1BQU07SUFFakQsSUFBSSxDQUFDQyxLQUFLO0lBQ1YsTUFBTyxFQUFFRixRQUFRQyxPQUFRO1FBQ3ZCLElBQUlFLFFBQVFKLE9BQU8sQ0FBQ0MsTUFBTTtRQUMxQixJQUFJLENBQUNJLEdBQUcsQ0FBQ0QsS0FBSyxDQUFDLEVBQUUsRUFBRUEsS0FBSyxDQUFDLEVBQUU7SUFDN0I7QUFDRjtLQVRTTDtBQVdULDhCQUE4QjtBQUM5QkEsVUFBVU8sU0FBUyxDQUFDSCxLQUFLLEdBQUdWO0FBQzVCTSxVQUFVTyxTQUFTLENBQUMsU0FBUyxHQUFHWDtBQUNoQ0ksVUFBVU8sU0FBUyxDQUFDQyxHQUFHLEdBQUdYO0FBQzFCRyxVQUFVTyxTQUFTLENBQUNFLEdBQUcsR0FBR1g7QUFDMUJFLFVBQVVPLFNBQVMsQ0FBQ0QsR0FBRyxHQUFHUDtBQUUxQlcsT0FBT0MsT0FBTyxHQUFHWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanM/NDFlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbGlzdENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVDbGVhcicpLFxuICAgIGxpc3RDYWNoZURlbGV0ZSA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZURlbGV0ZScpLFxuICAgIGxpc3RDYWNoZUdldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUdldCcpLFxuICAgIGxpc3RDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUhhcycpLFxuICAgIGxpc3RDYWNoZVNldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBMaXN0Q2FjaGVgLlxuTGlzdENhY2hlLnByb3RvdHlwZS5jbGVhciA9IGxpc3RDYWNoZUNsZWFyO1xuTGlzdENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBsaXN0Q2FjaGVEZWxldGU7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmdldCA9IGxpc3RDYWNoZUdldDtcbkxpc3RDYWNoZS5wcm90b3R5cGUuaGFzID0gbGlzdENhY2hlSGFzO1xuTGlzdENhY2hlLnByb3RvdHlwZS5zZXQgPSBsaXN0Q2FjaGVTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gTGlzdENhY2hlO1xuIl0sIm5hbWVzIjpbImxpc3RDYWNoZUNsZWFyIiwicmVxdWlyZSIsImxpc3RDYWNoZURlbGV0ZSIsImxpc3RDYWNoZUdldCIsImxpc3RDYWNoZUhhcyIsImxpc3RDYWNoZVNldCIsIkxpc3RDYWNoZSIsImVudHJpZXMiLCJpbmRleCIsImxlbmd0aCIsImNsZWFyIiwiZW50cnkiLCJzZXQiLCJwcm90b3R5cGUiLCJnZXQiLCJoYXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_ListCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Map.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Map.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"), root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */ var Map = getNative(root, \"Map\");\nmodule.exports = Map;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsZ0ZBQ3BCQyxPQUFPRCxtQkFBT0EsQ0FBQztBQUVuQiw4REFBOEQsR0FDOUQsSUFBSUUsTUFBTUgsVUFBVUUsTUFBTTtBQUUxQkUsT0FBT0MsT0FBTyxHQUFHRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanM/YzE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIE1hcCA9IGdldE5hdGl2ZShyb290LCAnTWFwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwO1xuIl0sIm5hbWVzIjpbImdldE5hdGl2ZSIsInJlcXVpcmUiLCJyb290IiwiTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Map.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_MapCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_MapCache.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js\"), mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js\"), mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js\"), mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js\"), mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ \"(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js\");\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function MapCache(entries) {\n    var index = -1, length = entries == null ? 0 : entries.length;\n    this.clear();\n    while(++index < length){\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n    }\n}\n_c = MapCache;\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype[\"delete\"] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;\nvar _c;\n$RefreshReg$(_c, \"MapCache\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxnQkFBZ0JDLG1CQUFPQSxDQUFDLHdGQUN4QkMsaUJBQWlCRCxtQkFBT0EsQ0FBQywwRkFDekJFLGNBQWNGLG1CQUFPQSxDQUFDLG9GQUN0QkcsY0FBY0gsbUJBQU9BLENBQUMsb0ZBQ3RCSSxjQUFjSixtQkFBT0EsQ0FBQztBQUUxQjs7Ozs7O0NBTUMsR0FDRCxTQUFTSyxTQUFTQyxPQUFPO0lBQ3ZCLElBQUlDLFFBQVEsQ0FBQyxHQUNUQyxTQUFTRixXQUFXLE9BQU8sSUFBSUEsUUFBUUUsTUFBTTtJQUVqRCxJQUFJLENBQUNDLEtBQUs7SUFDVixNQUFPLEVBQUVGLFFBQVFDLE9BQVE7UUFDdkIsSUFBSUUsUUFBUUosT0FBTyxDQUFDQyxNQUFNO1FBQzFCLElBQUksQ0FBQ0ksR0FBRyxDQUFDRCxLQUFLLENBQUMsRUFBRSxFQUFFQSxLQUFLLENBQUMsRUFBRTtJQUM3QjtBQUNGO0tBVFNMO0FBV1QsNkJBQTZCO0FBQzdCQSxTQUFTTyxTQUFTLENBQUNILEtBQUssR0FBR1Y7QUFDM0JNLFNBQVNPLFNBQVMsQ0FBQyxTQUFTLEdBQUdYO0FBQy9CSSxTQUFTTyxTQUFTLENBQUNDLEdBQUcsR0FBR1g7QUFDekJHLFNBQVNPLFNBQVMsQ0FBQ0UsR0FBRyxHQUFHWDtBQUN6QkUsU0FBU08sU0FBUyxDQUFDRCxHQUFHLEdBQUdQO0FBRXpCVyxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzPzk3MGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1hcENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19tYXBDYWNoZUNsZWFyJyksXG4gICAgbWFwQ2FjaGVEZWxldGUgPSByZXF1aXJlKCcuL19tYXBDYWNoZURlbGV0ZScpLFxuICAgIG1hcENhY2hlR2V0ID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVHZXQnKSxcbiAgICBtYXBDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX21hcENhY2hlSGFzJyksXG4gICAgbWFwQ2FjaGVTZXQgPSByZXF1aXJlKCcuL19tYXBDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBtYXAgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gTWFwQ2FjaGUoZW50cmllcykge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgTWFwQ2FjaGVgLlxuTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyID0gbWFwQ2FjaGVDbGVhcjtcbk1hcENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBtYXBDYWNoZURlbGV0ZTtcbk1hcENhY2hlLnByb3RvdHlwZS5nZXQgPSBtYXBDYWNoZUdldDtcbk1hcENhY2hlLnByb3RvdHlwZS5oYXMgPSBtYXBDYWNoZUhhcztcbk1hcENhY2hlLnByb3RvdHlwZS5zZXQgPSBtYXBDYWNoZVNldDtcblxubW9kdWxlLmV4cG9ydHMgPSBNYXBDYWNoZTtcbiJdLCJuYW1lcyI6WyJtYXBDYWNoZUNsZWFyIiwicmVxdWlyZSIsIm1hcENhY2hlRGVsZXRlIiwibWFwQ2FjaGVHZXQiLCJtYXBDYWNoZUhhcyIsIm1hcENhY2hlU2V0IiwiTWFwQ2FjaGUiLCJlbnRyaWVzIiwiaW5kZXgiLCJsZW5ndGgiLCJjbGVhciIsImVudHJ5Iiwic2V0IiwicHJvdG90eXBlIiwiZ2V0IiwiaGFzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_MapCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Promise.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_Promise.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"), root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */ var Promise = getNative(root, \"Promise\");\nmodule.exports = Promise;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1Byb21pc2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGdGQUNwQkMsT0FBT0QsbUJBQU9BLENBQUM7QUFFbkIsOERBQThELEdBQzlELElBQUlFLFVBQVVILFVBQVVFLE1BQU07QUFFOUJFLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fUHJvbWlzZS5qcz82NDI2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgUHJvbWlzZSA9IGdldE5hdGl2ZShyb290LCAnUHJvbWlzZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByb21pc2U7XG4iXSwibmFtZXMiOlsiZ2V0TmF0aXZlIiwicmVxdWlyZSIsInJvb3QiLCJQcm9taXNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Promise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Set.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/_Set.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"), root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */ var Set = getNative(root, \"Set\");\nmodule.exports = Set;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUMsZ0ZBQ3BCQyxPQUFPRCxtQkFBT0EsQ0FBQztBQUVuQiw4REFBOEQsR0FDOUQsSUFBSUUsTUFBTUgsVUFBVUUsTUFBTTtBQUUxQkUsT0FBT0MsT0FBTyxHQUFHRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXQuanM/ZGJhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFNldCA9IGdldE5hdGl2ZShyb290LCAnU2V0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gU2V0O1xuIl0sIm5hbWVzIjpbImdldE5hdGl2ZSIsInJlcXVpcmUiLCJyb290IiwiU2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Set.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_SetCache.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_SetCache.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar MapCache = __webpack_require__(/*! ./_MapCache */ \"(app-pages-browser)/./node_modules/lodash/_MapCache.js\"), setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ \"(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js\"), setCacheHas = __webpack_require__(/*! ./_setCacheHas */ \"(app-pages-browser)/./node_modules/lodash/_setCacheHas.js\");\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */ function SetCache(values) {\n    var index = -1, length = values == null ? 0 : values.length;\n    this.__data__ = new MapCache;\n    while(++index < length){\n        this.add(values[index]);\n    }\n}\n_c = SetCache;\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;\nvar _c;\n$RefreshReg$(_c, \"SetCache\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1NldENhY2hlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyw4RUFDbkJDLGNBQWNELG1CQUFPQSxDQUFDLG9GQUN0QkUsY0FBY0YsbUJBQU9BLENBQUM7QUFFMUI7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNHLFNBQVNDLE1BQU07SUFDdEIsSUFBSUMsUUFBUSxDQUFDLEdBQ1RDLFNBQVNGLFVBQVUsT0FBTyxJQUFJQSxPQUFPRSxNQUFNO0lBRS9DLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlSO0lBQ3BCLE1BQU8sRUFBRU0sUUFBUUMsT0FBUTtRQUN2QixJQUFJLENBQUNFLEdBQUcsQ0FBQ0osTUFBTSxDQUFDQyxNQUFNO0lBQ3hCO0FBQ0Y7S0FSU0Y7QUFVVCw2QkFBNkI7QUFDN0JBLFNBQVNNLFNBQVMsQ0FBQ0QsR0FBRyxHQUFHTCxTQUFTTSxTQUFTLENBQUNDLElBQUksR0FBR1Q7QUFDbkRFLFNBQVNNLFNBQVMsQ0FBQ0UsR0FBRyxHQUFHVDtBQUV6QlUsT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TZXRDYWNoZS5qcz9lMmU0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBNYXBDYWNoZSA9IHJlcXVpcmUoJy4vX01hcENhY2hlJyksXG4gICAgc2V0Q2FjaGVBZGQgPSByZXF1aXJlKCcuL19zZXRDYWNoZUFkZCcpLFxuICAgIHNldENhY2hlSGFzID0gcmVxdWlyZSgnLi9fc2V0Q2FjaGVIYXMnKTtcblxuLyoqXG4gKlxuICogQ3JlYXRlcyBhbiBhcnJheSBjYWNoZSBvYmplY3QgdG8gc3RvcmUgdW5pcXVlIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbdmFsdWVzXSBUaGUgdmFsdWVzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTZXRDYWNoZSh2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMgPT0gbnVsbCA/IDAgOiB2YWx1ZXMubGVuZ3RoO1xuXG4gIHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGU7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdGhpcy5hZGQodmFsdWVzW2luZGV4XSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFNldENhY2hlYC5cblNldENhY2hlLnByb3RvdHlwZS5hZGQgPSBTZXRDYWNoZS5wcm90b3R5cGUucHVzaCA9IHNldENhY2hlQWRkO1xuU2V0Q2FjaGUucHJvdG90eXBlLmhhcyA9IHNldENhY2hlSGFzO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNldENhY2hlO1xuIl0sIm5hbWVzIjpbIk1hcENhY2hlIiwicmVxdWlyZSIsInNldENhY2hlQWRkIiwic2V0Q2FjaGVIYXMiLCJTZXRDYWNoZSIsInZhbHVlcyIsImluZGV4IiwibGVuZ3RoIiwiX19kYXRhX18iLCJhZGQiLCJwcm90b3R5cGUiLCJwdXNoIiwiaGFzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_SetCache.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Stack.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/_Stack.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"), stackClear = __webpack_require__(/*! ./_stackClear */ \"(app-pages-browser)/./node_modules/lodash/_stackClear.js\"), stackDelete = __webpack_require__(/*! ./_stackDelete */ \"(app-pages-browser)/./node_modules/lodash/_stackDelete.js\"), stackGet = __webpack_require__(/*! ./_stackGet */ \"(app-pages-browser)/./node_modules/lodash/_stackGet.js\"), stackHas = __webpack_require__(/*! ./_stackHas */ \"(app-pages-browser)/./node_modules/lodash/_stackHas.js\"), stackSet = __webpack_require__(/*! ./_stackSet */ \"(app-pages-browser)/./node_modules/lodash/_stackSet.js\");\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */ function Stack(entries) {\n    var data = this.__data__ = new ListCache(entries);\n    this.size = data.size;\n}\n_c = Stack;\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype[\"delete\"] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;\nvar _c;\n$RefreshReg$(_c, \"Stack\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxnRkFDcEJDLGFBQWFELG1CQUFPQSxDQUFDLGtGQUNyQkUsY0FBY0YsbUJBQU9BLENBQUMsb0ZBQ3RCRyxXQUFXSCxtQkFBT0EsQ0FBQyw4RUFDbkJJLFdBQVdKLG1CQUFPQSxDQUFDLDhFQUNuQkssV0FBV0wsbUJBQU9BLENBQUM7QUFFdkI7Ozs7OztDQU1DLEdBQ0QsU0FBU00sTUFBTUMsT0FBTztJQUNwQixJQUFJQyxPQUFPLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlWLFVBQVVRO0lBQ3pDLElBQUksQ0FBQ0csSUFBSSxHQUFHRixLQUFLRSxJQUFJO0FBQ3ZCO0tBSFNKO0FBS1QsMEJBQTBCO0FBQzFCQSxNQUFNSyxTQUFTLENBQUNDLEtBQUssR0FBR1g7QUFDeEJLLE1BQU1LLFNBQVMsQ0FBQyxTQUFTLEdBQUdUO0FBQzVCSSxNQUFNSyxTQUFTLENBQUNFLEdBQUcsR0FBR1Y7QUFDdEJHLE1BQU1LLFNBQVMsQ0FBQ0csR0FBRyxHQUFHVjtBQUN0QkUsTUFBTUssU0FBUyxDQUFDSSxHQUFHLEdBQUdWO0FBRXRCVyxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N0YWNrLmpzP2VmZjAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIHN0YWNrQ2xlYXIgPSByZXF1aXJlKCcuL19zdGFja0NsZWFyJyksXG4gICAgc3RhY2tEZWxldGUgPSByZXF1aXJlKCcuL19zdGFja0RlbGV0ZScpLFxuICAgIHN0YWNrR2V0ID0gcmVxdWlyZSgnLi9fc3RhY2tHZXQnKSxcbiAgICBzdGFja0hhcyA9IHJlcXVpcmUoJy4vX3N0YWNrSGFzJyksXG4gICAgc3RhY2tTZXQgPSByZXF1aXJlKCcuL19zdGFja1NldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTdGFjayhlbnRyaWVzKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGUoZW50cmllcyk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFN0YWNrYC5cblN0YWNrLnByb3RvdHlwZS5jbGVhciA9IHN0YWNrQ2xlYXI7XG5TdGFjay5wcm90b3R5cGVbJ2RlbGV0ZSddID0gc3RhY2tEZWxldGU7XG5TdGFjay5wcm90b3R5cGUuZ2V0ID0gc3RhY2tHZXQ7XG5TdGFjay5wcm90b3R5cGUuaGFzID0gc3RhY2tIYXM7XG5TdGFjay5wcm90b3R5cGUuc2V0ID0gc3RhY2tTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gU3RhY2s7XG4iXSwibmFtZXMiOlsiTGlzdENhY2hlIiwicmVxdWlyZSIsInN0YWNrQ2xlYXIiLCJzdGFja0RlbGV0ZSIsInN0YWNrR2V0Iiwic3RhY2tIYXMiLCJzdGFja1NldCIsIlN0YWNrIiwiZW50cmllcyIsImRhdGEiLCJfX2RhdGFfXyIsInNpemUiLCJwcm90b3R5cGUiLCJjbGVhciIsImdldCIsImhhcyIsInNldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Stack.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/** Built-in value references. */ var Symbol = root.Symbol;\nmodule.exports = Symbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1N5bWJvbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsT0FBT0MsbUJBQU9BLENBQUM7QUFFbkIsK0JBQStCLEdBQy9CLElBQUlDLFNBQVNGLEtBQUtFLE1BQU07QUFFeEJDLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fU3ltYm9sLmpzPzY4NDIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIFN5bWJvbCA9IHJvb3QuU3ltYm9sO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN5bWJvbDtcbiJdLCJuYW1lcyI6WyJyb290IiwicmVxdWlyZSIsIlN5bWJvbCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Symbol.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_Uint8Array.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_Uint8Array.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/** Built-in value references. */ var Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1VpbnQ4QXJyYXkuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLE9BQU9DLG1CQUFPQSxDQUFDO0FBRW5CLCtCQUErQixHQUMvQixJQUFJQyxhQUFhRixLQUFLRSxVQUFVO0FBRWhDQyxPQUFPQyxPQUFPLEdBQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1VpbnQ4QXJyYXkuanM/MWMzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgVWludDhBcnJheSA9IHJvb3QuVWludDhBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBVaW50OEFycmF5O1xuIl0sIm5hbWVzIjpbInJvb3QiLCJyZXF1aXJlIiwiVWludDhBcnJheSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_Uint8Array.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_WeakMap.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_WeakMap.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\"), root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/* Built-in method references that are verified to be native. */ var WeakMap = getNative(root, \"WeakMap\");\nmodule.exports = WeakMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX1dlYWtNYXAuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGdGQUNwQkMsT0FBT0QsbUJBQU9BLENBQUM7QUFFbkIsOERBQThELEdBQzlELElBQUlFLFVBQVVILFVBQVVFLE1BQU07QUFFOUJFLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fV2Vha01hcC5qcz8zY2U5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKSxcbiAgICByb290ID0gcmVxdWlyZSgnLi9fcm9vdCcpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgV2Vha01hcCA9IGdldE5hdGl2ZShyb290LCAnV2Vha01hcCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFdlYWtNYXA7XG4iXSwibmFtZXMiOlsiZ2V0TmF0aXZlIiwicmVxdWlyZSIsInJvb3QiLCJXZWFrTWFwIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_WeakMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayFilter.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_arrayFilter.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */ \nfunction arrayFilter(array, predicate) {\n    var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];\n    while(++index < length){\n        var value = array[index];\n        if (predicate(value, index, array)) {\n            result[resIndex++] = value;\n        }\n    }\n    return result;\n}\nmodule.exports = arrayFilter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RmlsdGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDO0FBQ0QsU0FBU0EsWUFBWUMsS0FBSyxFQUFFQyxTQUFTO0lBQ25DLElBQUlDLFFBQVEsQ0FBQyxHQUNUQyxTQUFTSCxTQUFTLE9BQU8sSUFBSUEsTUFBTUcsTUFBTSxFQUN6Q0MsV0FBVyxHQUNYQyxTQUFTLEVBQUU7SUFFZixNQUFPLEVBQUVILFFBQVFDLE9BQVE7UUFDdkIsSUFBSUcsUUFBUU4sS0FBSyxDQUFDRSxNQUFNO1FBQ3hCLElBQUlELFVBQVVLLE9BQU9KLE9BQU9GLFFBQVE7WUFDbENLLE1BQU0sQ0FBQ0QsV0FBVyxHQUFHRTtRQUN2QjtJQUNGO0lBQ0EsT0FBT0Q7QUFDVDtBQUVBRSxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5RmlsdGVyLmpzPzAzZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8uZmlsdGVyYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcbiAqIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHByZWRpY2F0ZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZmlsdGVyZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5RmlsdGVyKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCxcbiAgICAgIHJlc0luZGV4ID0gMCxcbiAgICAgIHJlc3VsdCA9IFtdO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgIGlmIChwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5RmlsdGVyO1xuIl0sIm5hbWVzIjpbImFycmF5RmlsdGVyIiwiYXJyYXkiLCJwcmVkaWNhdGUiLCJpbmRleCIsImxlbmd0aCIsInJlc0luZGV4IiwicmVzdWx0IiwidmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayFilter.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_arrayLikeKeys.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseTimes = __webpack_require__(/*! ./_baseTimes */ \"(app-pages-browser)/./node_modules/lodash/_baseTimes.js\"), isArguments = __webpack_require__(/*! ./isArguments */ \"(app-pages-browser)/./node_modules/lodash/isArguments.js\"), isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\"), isBuffer = __webpack_require__(/*! ./isBuffer */ \"(app-pages-browser)/./node_modules/lodash/isBuffer.js\"), isIndex = __webpack_require__(/*! ./_isIndex */ \"(app-pages-browser)/./node_modules/lodash/_isIndex.js\"), isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"(app-pages-browser)/./node_modules/lodash/isTypedArray.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */ function arrayLikeKeys(value, inherited) {\n    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;\n    for(var key in value){\n        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.\n        (key == \"length\" || // Node.js 0.10 has enumerable non-index properties on buffers.\n        isBuff && (key == \"offset\" || key == \"parent\") || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n        isType && (key == \"buffer\" || key == \"byteLength\" || key == \"byteOffset\") || // Skip index properties.\n        isIndex(key, length)))) {\n            result.push(key);\n        }\n    }\n    return result;\n}\nmodule.exports = arrayLikeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDLGdGQUNwQkMsY0FBY0QsbUJBQU9BLENBQUMsa0ZBQ3RCRSxVQUFVRixtQkFBT0EsQ0FBQywwRUFDbEJHLFdBQVdILG1CQUFPQSxDQUFDLDRFQUNuQkksVUFBVUosbUJBQU9BLENBQUMsNEVBQ2xCSyxlQUFlTCxtQkFBT0EsQ0FBQztBQUUzQix5Q0FBeUMsR0FDekMsSUFBSU0sY0FBY0MsT0FBT0MsU0FBUztBQUVsQyw4Q0FBOEMsR0FDOUMsSUFBSUMsaUJBQWlCSCxZQUFZRyxjQUFjO0FBRS9DOzs7Ozs7O0NBT0MsR0FDRCxTQUFTQyxjQUFjQyxLQUFLLEVBQUVDLFNBQVM7SUFDckMsSUFBSUMsUUFBUVgsUUFBUVMsUUFDaEJHLFFBQVEsQ0FBQ0QsU0FBU1osWUFBWVUsUUFDOUJJLFNBQVMsQ0FBQ0YsU0FBUyxDQUFDQyxTQUFTWCxTQUFTUSxRQUN0Q0ssU0FBUyxDQUFDSCxTQUFTLENBQUNDLFNBQVMsQ0FBQ0MsVUFBVVYsYUFBYU0sUUFDckRNLGNBQWNKLFNBQVNDLFNBQVNDLFVBQVVDLFFBQzFDRSxTQUFTRCxjQUFjbEIsVUFBVVksTUFBTVEsTUFBTSxFQUFFQyxVQUFVLEVBQUUsRUFDM0RELFNBQVNELE9BQU9DLE1BQU07SUFFMUIsSUFBSyxJQUFJRSxPQUFPVixNQUFPO1FBQ3JCLElBQUksQ0FBQ0MsYUFBYUgsZUFBZWEsSUFBSSxDQUFDWCxPQUFPVSxJQUFHLEtBQzVDLENBQUVKLENBQUFBLGVBQ0MsNkRBQTZEO1FBQzdESSxDQUFBQSxPQUFPLFlBQ1AsK0RBQStEO1FBQzlETixVQUFXTSxDQUFBQSxPQUFPLFlBQVlBLE9BQU8sUUFBTyxLQUM3QyxtRUFBbUU7UUFDbEVMLFVBQVdLLENBQUFBLE9BQU8sWUFBWUEsT0FBTyxnQkFBZ0JBLE9BQU8sWUFBVyxLQUN4RSx5QkFBeUI7UUFDekJqQixRQUFRaUIsS0FBS0YsT0FBTSxDQUN0QixHQUFJO1lBQ05ELE9BQU9LLElBQUksQ0FBQ0Y7UUFDZDtJQUNGO0lBQ0EsT0FBT0g7QUFDVDtBQUVBTSxPQUFPQyxPQUFPLEdBQUdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TGlrZUtleXMuanM/OTM4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZVRpbWVzID0gcmVxdWlyZSgnLi9fYmFzZVRpbWVzJyksXG4gICAgaXNBcmd1bWVudHMgPSByZXF1aXJlKCcuL2lzQXJndW1lbnRzJyksXG4gICAgaXNBcnJheSA9IHJlcXVpcmUoJy4vaXNBcnJheScpLFxuICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnLi9pc0J1ZmZlcicpLFxuICAgIGlzSW5kZXggPSByZXF1aXJlKCcuL19pc0luZGV4JyksXG4gICAgaXNUeXBlZEFycmF5ID0gcmVxdWlyZSgnLi9pc1R5cGVkQXJyYXknKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5TGlrZUtleXM7XG4iXSwibmFtZXMiOlsiYmFzZVRpbWVzIiwicmVxdWlyZSIsImlzQXJndW1lbnRzIiwiaXNBcnJheSIsImlzQnVmZmVyIiwiaXNJbmRleCIsImlzVHlwZWRBcnJheSIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJhcnJheUxpa2VLZXlzIiwidmFsdWUiLCJpbmhlcml0ZWQiLCJpc0FyciIsImlzQXJnIiwiaXNCdWZmIiwiaXNUeXBlIiwic2tpcEluZGV4ZXMiLCJyZXN1bHQiLCJsZW5ndGgiLCJTdHJpbmciLCJrZXkiLCJjYWxsIiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arrayPush.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arrayPush.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */ \nfunction arrayPush(array, values) {\n    var index = -1, length = values.length, offset = array.length;\n    while(++index < length){\n        array[offset + index] = values[index];\n    }\n    return array;\n}\nmodule.exports = arrayPush;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5UHVzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztDQU9DO0FBQ0QsU0FBU0EsVUFBVUMsS0FBSyxFQUFFQyxNQUFNO0lBQzlCLElBQUlDLFFBQVEsQ0FBQyxHQUNUQyxTQUFTRixPQUFPRSxNQUFNLEVBQ3RCQyxTQUFTSixNQUFNRyxNQUFNO0lBRXpCLE1BQU8sRUFBRUQsUUFBUUMsT0FBUTtRQUN2QkgsS0FBSyxDQUFDSSxTQUFTRixNQUFNLEdBQUdELE1BQU0sQ0FBQ0MsTUFBTTtJQUN2QztJQUNBLE9BQU9GO0FBQ1Q7QUFFQUssT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheVB1c2guanM/Yjg4YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFwcGVuZHMgdGhlIGVsZW1lbnRzIG9mIGB2YWx1ZXNgIHRvIGBhcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge0FycmF5fSB2YWx1ZXMgVGhlIHZhbHVlcyB0byBhcHBlbmQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSB2YWx1ZXMubGVuZ3RoLFxuICAgICAgb2Zmc2V0ID0gYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgYXJyYXlbb2Zmc2V0ICsgaW5kZXhdID0gdmFsdWVzW2luZGV4XTtcbiAgfVxuICByZXR1cm4gYXJyYXk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlQdXNoO1xuIl0sIm5hbWVzIjpbImFycmF5UHVzaCIsImFycmF5IiwidmFsdWVzIiwiaW5kZXgiLCJsZW5ndGgiLCJvZmZzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arrayPush.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_arraySome.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_arraySome.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */ \nfunction arraySome(array, predicate) {\n    var index = -1, length = array == null ? 0 : array.length;\n    while(++index < length){\n        if (predicate(array[index], index, array)) {\n            return true;\n        }\n    }\n    return false;\n}\nmodule.exports = arraySome;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5U29tZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0NBU0M7QUFDRCxTQUFTQSxVQUFVQyxLQUFLLEVBQUVDLFNBQVM7SUFDakMsSUFBSUMsUUFBUSxDQUFDLEdBQ1RDLFNBQVNILFNBQVMsT0FBTyxJQUFJQSxNQUFNRyxNQUFNO0lBRTdDLE1BQU8sRUFBRUQsUUFBUUMsT0FBUTtRQUN2QixJQUFJRixVQUFVRCxLQUFLLENBQUNFLE1BQU0sRUFBRUEsT0FBT0YsUUFBUTtZQUN6QyxPQUFPO1FBQ1Q7SUFDRjtJQUNBLE9BQU87QUFDVDtBQUVBSSxPQUFPQyxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5U29tZS5qcz8wZGYwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnNvbWVgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW55IGVsZW1lbnQgcGFzc2VzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBhcnJheVNvbWUoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlTb21lO1xuIl0sIm5hbWVzIjpbImFycmF5U29tZSIsImFycmF5IiwicHJlZGljYXRlIiwiaW5kZXgiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_arraySome.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_assocIndexOf.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar eq = __webpack_require__(/*! ./eq */ \"(app-pages-browser)/./node_modules/lodash/eq.js\");\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */ function assocIndexOf(array, key) {\n    var length = array.length;\n    while(length--){\n        if (eq(array[length][0], key)) {\n            return length;\n        }\n    }\n    return -1;\n}\nmodule.exports = assocIndexOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsS0FBS0MsbUJBQU9BLENBQUM7QUFFakI7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLGFBQWFDLEtBQUssRUFBRUMsR0FBRztJQUM5QixJQUFJQyxTQUFTRixNQUFNRSxNQUFNO0lBQ3pCLE1BQU9BLFNBQVU7UUFDZixJQUFJTCxHQUFHRyxLQUFLLENBQUNFLE9BQU8sQ0FBQyxFQUFFLEVBQUVELE1BQU07WUFDN0IsT0FBT0M7UUFDVDtJQUNGO0lBQ0EsT0FBTyxDQUFDO0FBQ1Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hc3NvY0luZGV4T2YuanM/NzgwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXEgPSByZXF1aXJlKCcuL2VxJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGBrZXlgIGlzIGZvdW5kIGluIGBhcnJheWAgb2Yga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7Kn0ga2V5IFRoZSBrZXkgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuXG4gKi9cbmZ1bmN0aW9uIGFzc29jSW5kZXhPZihhcnJheSwga2V5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIGlmIChlcShhcnJheVtsZW5ndGhdWzBdLCBrZXkpKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXNzb2NJbmRleE9mO1xuIl0sIm5hbWVzIjpbImVxIiwicmVxdWlyZSIsImFzc29jSW5kZXhPZiIsImFycmF5Iiwia2V5IiwibGVuZ3RoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_baseGetAllKeys.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar arrayPush = __webpack_require__(/*! ./_arrayPush */ \"(app-pages-browser)/./node_modules/lodash/_arrayPush.js\"), isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\");\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */ function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n    var result = keysFunc(object);\n    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\nmodule.exports = baseGetAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRBbGxLZXlzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxnRkFDcEJDLFVBQVVELG1CQUFPQSxDQUFDO0FBRXRCOzs7Ozs7Ozs7O0NBVUMsR0FDRCxTQUFTRSxlQUFlQyxNQUFNLEVBQUVDLFFBQVEsRUFBRUMsV0FBVztJQUNuRCxJQUFJQyxTQUFTRixTQUFTRDtJQUN0QixPQUFPRixRQUFRRSxVQUFVRyxTQUFTUCxVQUFVTyxRQUFRRCxZQUFZRjtBQUNsRTtBQUVBSSxPQUFPQyxPQUFPLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRBbGxLZXlzLmpzPzM4YzAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5UHVzaCA9IHJlcXVpcmUoJy4vX2FycmF5UHVzaCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0QWxsS2V5c2AgYW5kIGBnZXRBbGxLZXlzSW5gIHdoaWNoIHVzZXNcbiAqIGBrZXlzRnVuY2AgYW5kIGBzeW1ib2xzRnVuY2AgdG8gZ2V0IHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZFxuICogc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN5bWJvbHNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXNGdW5jLCBzeW1ib2xzRnVuYykge1xuICB2YXIgcmVzdWx0ID0ga2V5c0Z1bmMob2JqZWN0KTtcbiAgcmV0dXJuIGlzQXJyYXkob2JqZWN0KSA/IHJlc3VsdCA6IGFycmF5UHVzaChyZXN1bHQsIHN5bWJvbHNGdW5jKG9iamVjdCkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VHZXRBbGxLZXlzO1xuIl0sIm5hbWVzIjpbImFycmF5UHVzaCIsInJlcXVpcmUiLCJpc0FycmF5IiwiYmFzZUdldEFsbEtleXMiLCJvYmplY3QiLCJrZXlzRnVuYyIsInN5bWJvbHNGdW5jIiwicmVzdWx0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\"), getRawTag = __webpack_require__(/*! ./_getRawTag */ \"(app-pages-browser)/./node_modules/lodash/_getRawTag.js\"), objectToString = __webpack_require__(/*! ./_objectToString */ \"(app-pages-browser)/./node_modules/lodash/_objectToString.js\");\n/** `Object#toString` result references. */ var nullTag = \"[object Null]\", undefinedTag = \"[object Undefined]\";\n/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */ function baseGetTag(value) {\n    if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n    }\n    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\nmodule.exports = baseGetTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VHZXRUYWcuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFNBQVNDLG1CQUFPQSxDQUFDLDBFQUNqQkMsWUFBWUQsbUJBQU9BLENBQUMsZ0ZBQ3BCRSxpQkFBaUJGLG1CQUFPQSxDQUFDO0FBRTdCLHlDQUF5QyxHQUN6QyxJQUFJRyxVQUFVLGlCQUNWQyxlQUFlO0FBRW5CLCtCQUErQixHQUMvQixJQUFJQyxpQkFBaUJOLFNBQVNBLE9BQU9PLFdBQVcsR0FBR0M7QUFFbkQ7Ozs7OztDQU1DLEdBQ0QsU0FBU0MsV0FBV0MsS0FBSztJQUN2QixJQUFJQSxTQUFTLE1BQU07UUFDakIsT0FBT0EsVUFBVUYsWUFBWUgsZUFBZUQ7SUFDOUM7SUFDQSxPQUFPLGtCQUFtQkUsa0JBQWtCSyxPQUFPRCxTQUMvQ1IsVUFBVVEsU0FDVlAsZUFBZU87QUFDckI7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0VGFnLmpzP2Y0ZWQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLFxuICAgIGdldFJhd1RhZyA9IHJlcXVpcmUoJy4vX2dldFJhd1RhZycpLFxuICAgIG9iamVjdFRvU3RyaW5nID0gcmVxdWlyZSgnLi9fb2JqZWN0VG9TdHJpbmcnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG51bGxUYWcgPSAnW29iamVjdCBOdWxsXScsXG4gICAgdW5kZWZpbmVkVGFnID0gJ1tvYmplY3QgVW5kZWZpbmVkXSc7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHN5bVRvU3RyaW5nVGFnID0gU3ltYm9sID8gU3ltYm9sLnRvU3RyaW5nVGFnIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRUYWdgIHdpdGhvdXQgZmFsbGJhY2tzIGZvciBidWdneSBlbnZpcm9ubWVudHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkVGFnIDogbnVsbFRhZztcbiAgfVxuICByZXR1cm4gKHN5bVRvU3RyaW5nVGFnICYmIHN5bVRvU3RyaW5nVGFnIGluIE9iamVjdCh2YWx1ZSkpXG4gICAgPyBnZXRSYXdUYWcodmFsdWUpXG4gICAgOiBvYmplY3RUb1N0cmluZyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldFRhZztcbiJdLCJuYW1lcyI6WyJTeW1ib2wiLCJyZXF1aXJlIiwiZ2V0UmF3VGFnIiwib2JqZWN0VG9TdHJpbmciLCJudWxsVGFnIiwidW5kZWZpbmVkVGFnIiwic3ltVG9TdHJpbmdUYWciLCJ0b1N0cmluZ1RhZyIsInVuZGVmaW5lZCIsImJhc2VHZXRUYWciLCJ2YWx1ZSIsIk9iamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsArguments.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"), isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */ var argsTag = \"[object Arguments]\";\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */ function baseIsArguments(value) {\n    return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\nmodule.exports = baseIsArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0FyZ3VtZW50cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUMsa0ZBQ3JCQyxlQUFlRCxtQkFBT0EsQ0FBQztBQUUzQix5Q0FBeUMsR0FDekMsSUFBSUUsVUFBVTtBQUVkOzs7Ozs7Q0FNQyxHQUNELFNBQVNDLGdCQUFnQkMsS0FBSztJQUM1QixPQUFPSCxhQUFhRyxVQUFVTCxXQUFXSyxVQUFVRjtBQUNyRDtBQUVBRyxPQUFPQyxPQUFPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0FyZ3VtZW50cy5qcz9mNThhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzT2JqZWN0TGlrZSA9IHJlcXVpcmUoJy4vaXNPYmplY3RMaWtlJyk7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNBcmd1bWVudHNgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGBhcmd1bWVudHNgIG9iamVjdCxcbiAqL1xuZnVuY3Rpb24gYmFzZUlzQXJndW1lbnRzKHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IGFyZ3NUYWc7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzQXJndW1lbnRzO1xuIl0sIm5hbWVzIjpbImJhc2VHZXRUYWciLCJyZXF1aXJlIiwiaXNPYmplY3RMaWtlIiwiYXJnc1RhZyIsImJhc2VJc0FyZ3VtZW50cyIsInZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_baseIsEqual.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ \"(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js\"), isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */ function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n        return true;\n    }\n    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n        return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\nmodule.exports = baseIsEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxrQkFBa0JDLG1CQUFPQSxDQUFDLDRGQUMxQkMsZUFBZUQsbUJBQU9BLENBQUM7QUFFM0I7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNELFNBQVNFLFlBQVlDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsS0FBSztJQUMzRCxJQUFJSixVQUFVQyxPQUFPO1FBQ25CLE9BQU87SUFDVDtJQUNBLElBQUlELFNBQVMsUUFBUUMsU0FBUyxRQUFTLENBQUNILGFBQWFFLFVBQVUsQ0FBQ0YsYUFBYUcsUUFBUztRQUNwRixPQUFPRCxVQUFVQSxTQUFTQyxVQUFVQTtJQUN0QztJQUNBLE9BQU9MLGdCQUFnQkksT0FBT0MsT0FBT0MsU0FBU0MsWUFBWUosYUFBYUs7QUFDekU7QUFFQUMsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbC5qcz8zODFhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlSXNFcXVhbERlZXAgPSByZXF1aXJlKCcuL19iYXNlSXNFcXVhbERlZXAnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzRXF1YWxgIHdoaWNoIHN1cHBvcnRzIHBhcnRpYWwgY29tcGFyaXNvbnNcbiAqIGFuZCB0cmFja3MgdHJhdmVyc2VkIG9iamVjdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHtib29sZWFufSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLlxuICogIDEgLSBVbm9yZGVyZWQgY29tcGFyaXNvblxuICogIDIgLSBQYXJ0aWFsIGNvbXBhcmlzb25cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgdmFsdWVgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNFcXVhbCh2YWx1ZSwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSB7XG4gIGlmICh2YWx1ZSA9PT0gb3RoZXIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCB8fCBvdGhlciA9PSBudWxsIHx8ICghaXNPYmplY3RMaWtlKHZhbHVlKSAmJiAhaXNPYmplY3RMaWtlKG90aGVyKSkpIHtcbiAgICByZXR1cm4gdmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcjtcbiAgfVxuICByZXR1cm4gYmFzZUlzRXF1YWxEZWVwKHZhbHVlLCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgYmFzZUlzRXF1YWwsIHN0YWNrKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNFcXVhbDtcbiJdLCJuYW1lcyI6WyJiYXNlSXNFcXVhbERlZXAiLCJyZXF1aXJlIiwiaXNPYmplY3RMaWtlIiwiYmFzZUlzRXF1YWwiLCJ2YWx1ZSIsIm90aGVyIiwiYml0bWFzayIsImN1c3RvbWl6ZXIiLCJzdGFjayIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_baseIsEqualDeep.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar Stack = __webpack_require__(/*! ./_Stack */ \"(app-pages-browser)/./node_modules/lodash/_Stack.js\"), equalArrays = __webpack_require__(/*! ./_equalArrays */ \"(app-pages-browser)/./node_modules/lodash/_equalArrays.js\"), equalByTag = __webpack_require__(/*! ./_equalByTag */ \"(app-pages-browser)/./node_modules/lodash/_equalByTag.js\"), equalObjects = __webpack_require__(/*! ./_equalObjects */ \"(app-pages-browser)/./node_modules/lodash/_equalObjects.js\"), getTag = __webpack_require__(/*! ./_getTag */ \"(app-pages-browser)/./node_modules/lodash/_getTag.js\"), isArray = __webpack_require__(/*! ./isArray */ \"(app-pages-browser)/./node_modules/lodash/isArray.js\"), isBuffer = __webpack_require__(/*! ./isBuffer */ \"(app-pages-browser)/./node_modules/lodash/isBuffer.js\"), isTypedArray = __webpack_require__(/*! ./isTypedArray */ \"(app-pages-browser)/./node_modules/lodash/isTypedArray.js\");\n/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */ var argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", objectTag = \"[object Object]\";\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */ function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;\n    if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n            return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n    }\n    if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, \"__wrapped__\"), othIsWrapped = othIsObj && hasOwnProperty.call(other, \"__wrapped__\");\n        if (objIsWrapped || othIsWrapped) {\n            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;\n            stack || (stack = new Stack);\n            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n    }\n    if (!isSameTag) {\n        return false;\n    }\n    stack || (stack = new Stack);\n    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\nmodule.exports = baseIsEqualDeep;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc0VxdWFsRGVlcC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsUUFBUUMsbUJBQU9BLENBQUMsd0VBQ2hCQyxjQUFjRCxtQkFBT0EsQ0FBQyxvRkFDdEJFLGFBQWFGLG1CQUFPQSxDQUFDLGtGQUNyQkcsZUFBZUgsbUJBQU9BLENBQUMsc0ZBQ3ZCSSxTQUFTSixtQkFBT0EsQ0FBQywwRUFDakJLLFVBQVVMLG1CQUFPQSxDQUFDLDBFQUNsQk0sV0FBV04sbUJBQU9BLENBQUMsNEVBQ25CTyxlQUFlUCxtQkFBT0EsQ0FBQztBQUUzQixvREFBb0QsR0FDcEQsSUFBSVEsdUJBQXVCO0FBRTNCLHlDQUF5QyxHQUN6QyxJQUFJQyxVQUFVLHNCQUNWQyxXQUFXLGtCQUNYQyxZQUFZO0FBRWhCLHlDQUF5QyxHQUN6QyxJQUFJQyxjQUFjQyxPQUFPQyxTQUFTO0FBRWxDLDhDQUE4QyxHQUM5QyxJQUFJQyxpQkFBaUJILFlBQVlHLGNBQWM7QUFFL0M7Ozs7Ozs7Ozs7Ozs7Q0FhQyxHQUNELFNBQVNDLGdCQUFnQkMsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxTQUFTLEVBQUVDLEtBQUs7SUFDM0UsSUFBSUMsV0FBV2xCLFFBQVFZLFNBQ25CTyxXQUFXbkIsUUFBUWEsUUFDbkJPLFNBQVNGLFdBQVdiLFdBQVdOLE9BQU9hLFNBQ3RDUyxTQUFTRixXQUFXZCxXQUFXTixPQUFPYztJQUUxQ08sU0FBU0EsVUFBVWhCLFVBQVVFLFlBQVljO0lBQ3pDQyxTQUFTQSxVQUFVakIsVUFBVUUsWUFBWWU7SUFFekMsSUFBSUMsV0FBV0YsVUFBVWQsV0FDckJpQixXQUFXRixVQUFVZixXQUNyQmtCLFlBQVlKLFVBQVVDO0lBRTFCLElBQUlHLGFBQWF2QixTQUFTVyxTQUFTO1FBQ2pDLElBQUksQ0FBQ1gsU0FBU1ksUUFBUTtZQUNwQixPQUFPO1FBQ1Q7UUFDQUssV0FBVztRQUNYSSxXQUFXO0lBQ2I7SUFDQSxJQUFJRSxhQUFhLENBQUNGLFVBQVU7UUFDMUJMLFNBQVVBLENBQUFBLFFBQVEsSUFBSXZCLEtBQUk7UUFDMUIsT0FBTyxZQUFhUSxhQUFhVSxVQUM3QmhCLFlBQVlnQixRQUFRQyxPQUFPQyxTQUFTQyxZQUFZQyxXQUFXQyxTQUMzRHBCLFdBQVdlLFFBQVFDLE9BQU9PLFFBQVFOLFNBQVNDLFlBQVlDLFdBQVdDO0lBQ3hFO0lBQ0EsSUFBSSxDQUFFSCxDQUFBQSxVQUFVWCxvQkFBbUIsR0FBSTtRQUNyQyxJQUFJc0IsZUFBZUgsWUFBWVosZUFBZWdCLElBQUksQ0FBQ2QsUUFBUSxnQkFDdkRlLGVBQWVKLFlBQVliLGVBQWVnQixJQUFJLENBQUNiLE9BQU87UUFFMUQsSUFBSVksZ0JBQWdCRSxjQUFjO1lBQ2hDLElBQUlDLGVBQWVILGVBQWViLE9BQU9pQixLQUFLLEtBQUtqQixRQUMvQ2tCLGVBQWVILGVBQWVkLE1BQU1nQixLQUFLLEtBQUtoQjtZQUVsREksU0FBVUEsQ0FBQUEsUUFBUSxJQUFJdkIsS0FBSTtZQUMxQixPQUFPc0IsVUFBVVksY0FBY0UsY0FBY2hCLFNBQVNDLFlBQVlFO1FBQ3BFO0lBQ0Y7SUFDQSxJQUFJLENBQUNPLFdBQVc7UUFDZCxPQUFPO0lBQ1Q7SUFDQVAsU0FBVUEsQ0FBQUEsUUFBUSxJQUFJdkIsS0FBSTtJQUMxQixPQUFPSSxhQUFhYyxRQUFRQyxPQUFPQyxTQUFTQyxZQUFZQyxXQUFXQztBQUNyRTtBQUVBYyxPQUFPQyxPQUFPLEdBQUdyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNFcXVhbERlZXAuanM/NGMwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3RhY2sgPSByZXF1aXJlKCcuL19TdGFjaycpLFxuICAgIGVxdWFsQXJyYXlzID0gcmVxdWlyZSgnLi9fZXF1YWxBcnJheXMnKSxcbiAgICBlcXVhbEJ5VGFnID0gcmVxdWlyZSgnLi9fZXF1YWxCeVRhZycpLFxuICAgIGVxdWFsT2JqZWN0cyA9IHJlcXVpcmUoJy4vX2VxdWFsT2JqZWN0cycpLFxuICAgIGdldFRhZyA9IHJlcXVpcmUoJy4vX2dldFRhZycpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc0J1ZmZlciA9IHJlcXVpcmUoJy4vaXNCdWZmZXInKSxcbiAgICBpc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL2lzVHlwZWRBcnJheScpO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIGJpdG1hc2tzIGZvciB2YWx1ZSBjb21wYXJpc29ucy4gKi9cbnZhciBDT01QQVJFX1BBUlRJQUxfRkxBRyA9IDE7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXScsXG4gICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxgIGZvciBhcnJheXMgYW5kIG9iamVjdHMgd2hpY2ggcGVyZm9ybXNcbiAqIGRlZXAgY29tcGFyaXNvbnMgYW5kIHRyYWNrcyB0cmF2ZXJzZWQgb2JqZWN0cyBlbmFibGluZyBvYmplY3RzIHdpdGggY2lyY3VsYXJcbiAqIHJlZmVyZW5jZXMgdG8gYmUgY29tcGFyZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGFja10gVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0VxdWFsRGVlcChvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gIHZhciBvYmpJc0FyciA9IGlzQXJyYXkob2JqZWN0KSxcbiAgICAgIG90aElzQXJyID0gaXNBcnJheShvdGhlciksXG4gICAgICBvYmpUYWcgPSBvYmpJc0FyciA/IGFycmF5VGFnIDogZ2V0VGFnKG9iamVjdCksXG4gICAgICBvdGhUYWcgPSBvdGhJc0FyciA/IGFycmF5VGFnIDogZ2V0VGFnKG90aGVyKTtcblxuICBvYmpUYWcgPSBvYmpUYWcgPT0gYXJnc1RhZyA/IG9iamVjdFRhZyA6IG9ialRhZztcbiAgb3RoVGFnID0gb3RoVGFnID09IGFyZ3NUYWcgPyBvYmplY3RUYWcgOiBvdGhUYWc7XG5cbiAgdmFyIG9iaklzT2JqID0gb2JqVGFnID09IG9iamVjdFRhZyxcbiAgICAgIG90aElzT2JqID0gb3RoVGFnID09IG9iamVjdFRhZyxcbiAgICAgIGlzU2FtZVRhZyA9IG9ialRhZyA9PSBvdGhUYWc7XG5cbiAgaWYgKGlzU2FtZVRhZyAmJiBpc0J1ZmZlcihvYmplY3QpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihvdGhlcikpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgb2JqSXNBcnIgPSB0cnVlO1xuICAgIG9iaklzT2JqID0gZmFsc2U7XG4gIH1cbiAgaWYgKGlzU2FtZVRhZyAmJiAhb2JqSXNPYmopIHtcbiAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2spO1xuICAgIHJldHVybiAob2JqSXNBcnIgfHwgaXNUeXBlZEFycmF5KG9iamVjdCkpXG4gICAgICA/IGVxdWFsQXJyYXlzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spXG4gICAgICA6IGVxdWFsQnlUYWcob2JqZWN0LCBvdGhlciwgb2JqVGFnLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbiAgfVxuICBpZiAoIShiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUcpKSB7XG4gICAgdmFyIG9iaklzV3JhcHBlZCA9IG9iaklzT2JqICYmIGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCAnX193cmFwcGVkX18nKSxcbiAgICAgICAgb3RoSXNXcmFwcGVkID0gb3RoSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwgJ19fd3JhcHBlZF9fJyk7XG5cbiAgICBpZiAob2JqSXNXcmFwcGVkIHx8IG90aElzV3JhcHBlZCkge1xuICAgICAgdmFyIG9ialVud3JhcHBlZCA9IG9iaklzV3JhcHBlZCA/IG9iamVjdC52YWx1ZSgpIDogb2JqZWN0LFxuICAgICAgICAgIG90aFVud3JhcHBlZCA9IG90aElzV3JhcHBlZCA/IG90aGVyLnZhbHVlKCkgOiBvdGhlcjtcblxuICAgICAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgICAgIHJldHVybiBlcXVhbEZ1bmMob2JqVW53cmFwcGVkLCBvdGhVbndyYXBwZWQsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFpc1NhbWVUYWcpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgcmV0dXJuIGVxdWFsT2JqZWN0cyhvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNFcXVhbERlZXA7XG4iXSwibmFtZXMiOlsiU3RhY2siLCJyZXF1aXJlIiwiZXF1YWxBcnJheXMiLCJlcXVhbEJ5VGFnIiwiZXF1YWxPYmplY3RzIiwiZ2V0VGFnIiwiaXNBcnJheSIsImlzQnVmZmVyIiwiaXNUeXBlZEFycmF5IiwiQ09NUEFSRV9QQVJUSUFMX0ZMQUciLCJhcmdzVGFnIiwiYXJyYXlUYWciLCJvYmplY3RUYWciLCJvYmplY3RQcm90byIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiYmFzZUlzRXF1YWxEZWVwIiwib2JqZWN0Iiwib3RoZXIiLCJiaXRtYXNrIiwiY3VzdG9taXplciIsImVxdWFsRnVuYyIsInN0YWNrIiwib2JqSXNBcnIiLCJvdGhJc0FyciIsIm9ialRhZyIsIm90aFRhZyIsIm9iaklzT2JqIiwib3RoSXNPYmoiLCJpc1NhbWVUYWciLCJvYmpJc1dyYXBwZWQiLCJjYWxsIiwib3RoSXNXcmFwcGVkIiwib2JqVW53cmFwcGVkIiwidmFsdWUiLCJvdGhVbndyYXBwZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsEqualDeep.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsNative.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_baseIsNative.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar isFunction = __webpack_require__(/*! ./isFunction */ \"(app-pages-browser)/./node_modules/lodash/isFunction.js\"), isMasked = __webpack_require__(/*! ./_isMasked */ \"(app-pages-browser)/./node_modules/lodash/_isMasked.js\"), isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/./node_modules/lodash/isObject.js\"), toSource = __webpack_require__(/*! ./_toSource */ \"(app-pages-browser)/./node_modules/lodash/_toSource.js\");\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */ var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */ var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */ var funcProto = Function.prototype, objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */ var reIsNative = RegExp(\"^\" + funcToString.call(hasOwnProperty).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */ function baseIsNative(value) {\n    if (!isObject(value) || isMasked(value)) {\n        return false;\n    }\n    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n    return pattern.test(toSource(value));\n}\nmodule.exports = baseIsNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUMsZ0ZBQ3JCQyxXQUFXRCxtQkFBT0EsQ0FBQyw4RUFDbkJFLFdBQVdGLG1CQUFPQSxDQUFDLDRFQUNuQkcsV0FBV0gsbUJBQU9BLENBQUM7QUFFdkI7OztDQUdDLEdBQ0QsSUFBSUksZUFBZTtBQUVuQiwrQ0FBK0MsR0FDL0MsSUFBSUMsZUFBZTtBQUVuQix5Q0FBeUMsR0FDekMsSUFBSUMsWUFBWUMsU0FBU0MsU0FBUyxFQUM5QkMsY0FBY0MsT0FBT0YsU0FBUztBQUVsQyx3REFBd0QsR0FDeEQsSUFBSUcsZUFBZUwsVUFBVU0sUUFBUTtBQUVyQyw4Q0FBOEMsR0FDOUMsSUFBSUMsaUJBQWlCSixZQUFZSSxjQUFjO0FBRS9DLDBDQUEwQyxHQUMxQyxJQUFJQyxhQUFhQyxPQUFPLE1BQ3RCSixhQUFhSyxJQUFJLENBQUNILGdCQUFnQkksT0FBTyxDQUFDYixjQUFjLFFBQ3ZEYSxPQUFPLENBQUMsMERBQTBELFdBQVc7QUFHaEY7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNDLGFBQWFDLEtBQUs7SUFDekIsSUFBSSxDQUFDakIsU0FBU2lCLFVBQVVsQixTQUFTa0IsUUFBUTtRQUN2QyxPQUFPO0lBQ1Q7SUFDQSxJQUFJQyxVQUFVckIsV0FBV29CLFNBQVNMLGFBQWFUO0lBQy9DLE9BQU9lLFFBQVFDLElBQUksQ0FBQ2xCLFNBQVNnQjtBQUMvQjtBQUVBRyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc05hdGl2ZS5qcz82OGU5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0Z1bmN0aW9uID0gcmVxdWlyZSgnLi9pc0Z1bmN0aW9uJyksXG4gICAgaXNNYXNrZWQgPSByZXF1aXJlKCcuL19pc01hc2tlZCcpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpLFxuICAgIHRvU291cmNlID0gcmVxdWlyZSgnLi9fdG9Tb3VyY2UnKTtcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGhvc3QgY29uc3RydWN0b3JzIChTYWZhcmkpLiAqL1xudmFyIHJlSXNIb3N0Q3RvciA9IC9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC87XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaWYgYSBtZXRob2QgaXMgbmF0aXZlLiAqL1xudmFyIHJlSXNOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgZnVuY1RvU3RyaW5nLmNhbGwoaGFzT3duUHJvcGVydHkpLnJlcGxhY2UocmVSZWdFeHBDaGFyLCAnXFxcXCQmJylcbiAgLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csICckMS4qPycpICsgJyQnXG4pO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTmF0aXZlYCB3aXRob3V0IGJhZCBzaGltIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG5hdGl2ZSBmdW5jdGlvbixcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc05hdGl2ZSh2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSB8fCBpc01hc2tlZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHBhdHRlcm4gPSBpc0Z1bmN0aW9uKHZhbHVlKSA/IHJlSXNOYXRpdmUgOiByZUlzSG9zdEN0b3I7XG4gIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlSXNOYXRpdmU7XG4iXSwibmFtZXMiOlsiaXNGdW5jdGlvbiIsInJlcXVpcmUiLCJpc01hc2tlZCIsImlzT2JqZWN0IiwidG9Tb3VyY2UiLCJyZVJlZ0V4cENoYXIiLCJyZUlzSG9zdEN0b3IiLCJmdW5jUHJvdG8iLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwiZnVuY1RvU3RyaW5nIiwidG9TdHJpbmciLCJoYXNPd25Qcm9wZXJ0eSIsInJlSXNOYXRpdmUiLCJSZWdFeHAiLCJjYWxsIiwicmVwbGFjZSIsImJhc2VJc05hdGl2ZSIsInZhbHVlIiwicGF0dGVybiIsInRlc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsNative.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js":
/*!**************************************************!*\
  !*** ./node_modules/lodash/_baseIsTypedArray.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"), isLength = __webpack_require__(/*! ./isLength */ \"(app-pages-browser)/./node_modules/lodash/isLength.js\"), isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */ var argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", errorTag = \"[object Error]\", funcTag = \"[object Function]\", mapTag = \"[object Map]\", numberTag = \"[object Number]\", objectTag = \"[object Object]\", regexpTag = \"[object RegExp]\", setTag = \"[object Set]\", stringTag = \"[object String]\", weakMapTag = \"[object WeakMap]\";\nvar arrayBufferTag = \"[object ArrayBuffer]\", dataViewTag = \"[object DataView]\", float32Tag = \"[object Float32Array]\", float64Tag = \"[object Float64Array]\", int8Tag = \"[object Int8Array]\", int16Tag = \"[object Int16Array]\", int32Tag = \"[object Int32Array]\", uint8Tag = \"[object Uint8Array]\", uint8ClampedTag = \"[object Uint8ClampedArray]\", uint16Tag = \"[object Uint16Array]\", uint32Tag = \"[object Uint32Array]\";\n/** Used to identify `toStringTag` values of typed arrays. */ var typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */ function baseIsTypedArray(value) {\n    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\nmodule.exports = baseIsTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VJc1R5cGVkQXJyYXkuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDLGtGQUNyQkMsV0FBV0QsbUJBQU9BLENBQUMsNEVBQ25CRSxlQUFlRixtQkFBT0EsQ0FBQztBQUUzQix5Q0FBeUMsR0FDekMsSUFBSUcsVUFBVSxzQkFDVkMsV0FBVyxrQkFDWEMsVUFBVSxvQkFDVkMsVUFBVSxpQkFDVkMsV0FBVyxrQkFDWEMsVUFBVSxxQkFDVkMsU0FBUyxnQkFDVEMsWUFBWSxtQkFDWkMsWUFBWSxtQkFDWkMsWUFBWSxtQkFDWkMsU0FBUyxnQkFDVEMsWUFBWSxtQkFDWkMsYUFBYTtBQUVqQixJQUFJQyxpQkFBaUIsd0JBQ2pCQyxjQUFjLHFCQUNkQyxhQUFhLHlCQUNiQyxhQUFhLHlCQUNiQyxVQUFVLHNCQUNWQyxXQUFXLHVCQUNYQyxXQUFXLHVCQUNYQyxXQUFXLHVCQUNYQyxrQkFBa0IsOEJBQ2xCQyxZQUFZLHdCQUNaQyxZQUFZO0FBRWhCLDJEQUEyRCxHQUMzRCxJQUFJQyxpQkFBaUIsQ0FBQztBQUN0QkEsY0FBYyxDQUFDVCxXQUFXLEdBQUdTLGNBQWMsQ0FBQ1IsV0FBVyxHQUN2RFEsY0FBYyxDQUFDUCxRQUFRLEdBQUdPLGNBQWMsQ0FBQ04sU0FBUyxHQUNsRE0sY0FBYyxDQUFDTCxTQUFTLEdBQUdLLGNBQWMsQ0FBQ0osU0FBUyxHQUNuREksY0FBYyxDQUFDSCxnQkFBZ0IsR0FBR0csY0FBYyxDQUFDRixVQUFVLEdBQzNERSxjQUFjLENBQUNELFVBQVUsR0FBRztBQUM1QkMsY0FBYyxDQUFDeEIsUUFBUSxHQUFHd0IsY0FBYyxDQUFDdkIsU0FBUyxHQUNsRHVCLGNBQWMsQ0FBQ1gsZUFBZSxHQUFHVyxjQUFjLENBQUN0QixRQUFRLEdBQ3hEc0IsY0FBYyxDQUFDVixZQUFZLEdBQUdVLGNBQWMsQ0FBQ3JCLFFBQVEsR0FDckRxQixjQUFjLENBQUNwQixTQUFTLEdBQUdvQixjQUFjLENBQUNuQixRQUFRLEdBQ2xEbUIsY0FBYyxDQUFDbEIsT0FBTyxHQUFHa0IsY0FBYyxDQUFDakIsVUFBVSxHQUNsRGlCLGNBQWMsQ0FBQ2hCLFVBQVUsR0FBR2dCLGNBQWMsQ0FBQ2YsVUFBVSxHQUNyRGUsY0FBYyxDQUFDZCxPQUFPLEdBQUdjLGNBQWMsQ0FBQ2IsVUFBVSxHQUNsRGEsY0FBYyxDQUFDWixXQUFXLEdBQUc7QUFFN0I7Ozs7OztDQU1DLEdBQ0QsU0FBU2EsaUJBQWlCQyxLQUFLO0lBQzdCLE9BQU8zQixhQUFhMkIsVUFDbEI1QixTQUFTNEIsTUFBTUMsTUFBTSxLQUFLLENBQUMsQ0FBQ0gsY0FBYyxDQUFDNUIsV0FBVzhCLE9BQU87QUFDakU7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNUeXBlZEFycmF5LmpzPzBhZjgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VHZXRUYWcgPSByZXF1aXJlKCcuL19iYXNlR2V0VGFnJyksXG4gICAgaXNMZW5ndGggPSByZXF1aXJlKCcuL2lzTGVuZ3RoJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLFxuICAgIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJyxcbiAgICBmbG9hdDMyVGFnID0gJ1tvYmplY3QgRmxvYXQzMkFycmF5XScsXG4gICAgZmxvYXQ2NFRhZyA9ICdbb2JqZWN0IEZsb2F0NjRBcnJheV0nLFxuICAgIGludDhUYWcgPSAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICBpbnQxNlRhZyA9ICdbb2JqZWN0IEludDE2QXJyYXldJyxcbiAgICBpbnQzMlRhZyA9ICdbb2JqZWN0IEludDMyQXJyYXldJyxcbiAgICB1aW50OFRhZyA9ICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICB1aW50OENsYW1wZWRUYWcgPSAnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxuICAgIHVpbnQxNlRhZyA9ICdbb2JqZWN0IFVpbnQxNkFycmF5XScsXG4gICAgdWludDMyVGFnID0gJ1tvYmplY3QgVWludDMyQXJyYXldJztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgb2YgdHlwZWQgYXJyYXlzLiAqL1xudmFyIHR5cGVkQXJyYXlUYWdzID0ge307XG50eXBlZEFycmF5VGFnc1tmbG9hdDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Zsb2F0NjRUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQ4VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50OENsYW1wZWRUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbnR5cGVkQXJyYXlUYWdzW2FyZ3NUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddID1cbnR5cGVkQXJyYXlUYWdzW2FycmF5QnVmZmVyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Jvb2xUYWddID1cbnR5cGVkQXJyYXlUYWdzW2RhdGFWaWV3VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2RhdGVUYWddID1cbnR5cGVkQXJyYXlUYWdzW2Vycm9yVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddID1cbnR5cGVkQXJyYXlUYWdzW21hcFRhZ10gPSB0eXBlZEFycmF5VGFnc1tudW1iZXJUYWddID1cbnR5cGVkQXJyYXlUYWdzW29iamVjdFRhZ10gPSB0eXBlZEFycmF5VGFnc1tyZWdleHBUYWddID1cbnR5cGVkQXJyYXlUYWdzW3NldFRhZ10gPSB0eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddID1cbnR5cGVkQXJyYXlUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNUeXBlZEFycmF5YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc1R5cGVkQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiZcbiAgICBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICEhdHlwZWRBcnJheVRhZ3NbYmFzZUdldFRhZyh2YWx1ZSldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGJhc2VJc1R5cGVkQXJyYXk7XG4iXSwibmFtZXMiOlsiYmFzZUdldFRhZyIsInJlcXVpcmUiLCJpc0xlbmd0aCIsImlzT2JqZWN0TGlrZSIsImFyZ3NUYWciLCJhcnJheVRhZyIsImJvb2xUYWciLCJkYXRlVGFnIiwiZXJyb3JUYWciLCJmdW5jVGFnIiwibWFwVGFnIiwibnVtYmVyVGFnIiwib2JqZWN0VGFnIiwicmVnZXhwVGFnIiwic2V0VGFnIiwic3RyaW5nVGFnIiwid2Vha01hcFRhZyIsImFycmF5QnVmZmVyVGFnIiwiZGF0YVZpZXdUYWciLCJmbG9hdDMyVGFnIiwiZmxvYXQ2NFRhZyIsImludDhUYWciLCJpbnQxNlRhZyIsImludDMyVGFnIiwidWludDhUYWciLCJ1aW50OENsYW1wZWRUYWciLCJ1aW50MTZUYWciLCJ1aW50MzJUYWciLCJ0eXBlZEFycmF5VGFncyIsImJhc2VJc1R5cGVkQXJyYXkiLCJ2YWx1ZSIsImxlbmd0aCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseKeys.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_baseKeys.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar isPrototype = __webpack_require__(/*! ./_isPrototype */ \"(app-pages-browser)/./node_modules/lodash/_isPrototype.js\"), nativeKeys = __webpack_require__(/*! ./_nativeKeys */ \"(app-pages-browser)/./node_modules/lodash/_nativeKeys.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */ function baseKeys(object) {\n    if (!isPrototype(object)) {\n        return nativeKeys(object);\n    }\n    var result = [];\n    for(var key in Object(object)){\n        if (hasOwnProperty.call(object, key) && key != \"constructor\") {\n            result.push(key);\n        }\n    }\n    return result;\n}\nmodule.exports = baseKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxjQUFjQyxtQkFBT0EsQ0FBQyxvRkFDdEJDLGFBQWFELG1CQUFPQSxDQUFDO0FBRXpCLHlDQUF5QyxHQUN6QyxJQUFJRSxjQUFjQyxPQUFPQyxTQUFTO0FBRWxDLDhDQUE4QyxHQUM5QyxJQUFJQyxpQkFBaUJILFlBQVlHLGNBQWM7QUFFL0M7Ozs7OztDQU1DLEdBQ0QsU0FBU0MsU0FBU0MsTUFBTTtJQUN0QixJQUFJLENBQUNSLFlBQVlRLFNBQVM7UUFDeEIsT0FBT04sV0FBV007SUFDcEI7SUFDQSxJQUFJQyxTQUFTLEVBQUU7SUFDZixJQUFLLElBQUlDLE9BQU9OLE9BQU9JLFFBQVM7UUFDOUIsSUFBSUYsZUFBZUssSUFBSSxDQUFDSCxRQUFRRSxRQUFRQSxPQUFPLGVBQWU7WUFDNURELE9BQU9HLElBQUksQ0FBQ0Y7UUFDZDtJQUNGO0lBQ0EsT0FBT0Q7QUFDVDtBQUVBSSxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VLZXlzLmpzP2Q1YzYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzUHJvdG90eXBlID0gcmVxdWlyZSgnLi9faXNQcm90b3R5cGUnKSxcbiAgICBuYXRpdmVLZXlzID0gcmVxdWlyZSgnLi9fbmF0aXZlS2V5cycpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmtleXNgIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYmFzZUtleXMob2JqZWN0KSB7XG4gIGlmICghaXNQcm90b3R5cGUob2JqZWN0KSkge1xuICAgIHJldHVybiBuYXRpdmVLZXlzKG9iamVjdCk7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gT2JqZWN0KG9iamVjdCkpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgJiYga2V5ICE9ICdjb25zdHJ1Y3RvcicpIHtcbiAgICAgIHJlc3VsdC5wdXNoKGtleSk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUtleXM7XG4iXSwibmFtZXMiOlsiaXNQcm90b3R5cGUiLCJyZXF1aXJlIiwibmF0aXZlS2V5cyIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJiYXNlS2V5cyIsIm9iamVjdCIsInJlc3VsdCIsImtleSIsImNhbGwiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseTimes.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseTimes.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */ \nfunction baseTimes(n, iteratee) {\n    var index = -1, result = Array(n);\n    while(++index < n){\n        result[index] = iteratee(index);\n    }\n    return result;\n}\nmodule.exports = baseTimes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUaW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQztBQUNELFNBQVNBLFVBQVVDLENBQUMsRUFBRUMsUUFBUTtJQUM1QixJQUFJQyxRQUFRLENBQUMsR0FDVEMsU0FBU0MsTUFBTUo7SUFFbkIsTUFBTyxFQUFFRSxRQUFRRixFQUFHO1FBQ2xCRyxNQUFNLENBQUNELE1BQU0sR0FBR0QsU0FBU0M7SUFDM0I7SUFDQSxPQUFPQztBQUNUO0FBRUFFLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZVRpbWVzLmpzP2RkYTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50aW1lc2Agd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzXG4gKiBvciBtYXggYXJyYXkgbGVuZ3RoIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtudW1iZXJ9IG4gVGhlIG51bWJlciBvZiB0aW1lcyB0byBpbnZva2UgYGl0ZXJhdGVlYC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHJlc3VsdHMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VUaW1lcyhuLCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KG4pO1xuXG4gIHdoaWxlICgrK2luZGV4IDwgbikge1xuICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRlZShpbmRleCk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVGltZXM7XG4iXSwibmFtZXMiOlsiYmFzZVRpbWVzIiwibiIsIml0ZXJhdGVlIiwiaW5kZXgiLCJyZXN1bHQiLCJBcnJheSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseTimes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_baseUnary.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_baseUnary.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */ \nfunction baseUnary(func) {\n    return function(value) {\n        return func(value);\n    };\n}\nmodule.exports = baseUnary;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VVbmFyeS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0NBTUM7QUFDRCxTQUFTQSxVQUFVQyxJQUFJO0lBQ3JCLE9BQU8sU0FBU0MsS0FBSztRQUNuQixPQUFPRCxLQUFLQztJQUNkO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVW5hcnkuanM/ZTM0NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnVuYXJ5YCB3aXRob3V0IHN1cHBvcnQgZm9yIHN0b3JpbmcgbWV0YWRhdGEuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNhcCBhcmd1bWVudHMgZm9yLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY2FwcGVkIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlVW5hcnkoZnVuYykge1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gZnVuYyh2YWx1ZSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZVVuYXJ5O1xuIl0sIm5hbWVzIjpbImJhc2VVbmFyeSIsImZ1bmMiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_baseUnary.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_cacheHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_cacheHas.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ \nfunction cacheHas(cache, key) {\n    return cache.has(key);\n}\nmodule.exports = cacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0NBT0M7QUFDRCxTQUFTQSxTQUFTQyxLQUFLLEVBQUVDLEdBQUc7SUFDMUIsT0FBT0QsTUFBTUUsR0FBRyxDQUFDRDtBQUNuQjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NhY2hlSGFzLmpzPzMxOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYSBgY2FjaGVgIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBjYWNoZSBUaGUgY2FjaGUgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gY2FjaGVIYXMoY2FjaGUsIGtleSkge1xuICByZXR1cm4gY2FjaGUuaGFzKGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FjaGVIYXM7XG4iXSwibmFtZXMiOlsiY2FjaGVIYXMiLCJjYWNoZSIsImtleSIsImhhcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_cacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_coreJsData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_coreJsData.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\");\n/** Used to detect overreaching core-js shims. */ var coreJsData = root[\"__core-js_shared__\"];\nmodule.exports = coreJsData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLE9BQU9DLG1CQUFPQSxDQUFDO0FBRW5CLCtDQUErQyxHQUMvQyxJQUFJQyxhQUFhRixJQUFJLENBQUMscUJBQXFCO0FBRTNDRyxPQUFPQyxPQUFPLEdBQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2NvcmVKc0RhdGEuanM/MjUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL1xudmFyIGNvcmVKc0RhdGEgPSByb290WydfX2NvcmUtanNfc2hhcmVkX18nXTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb3JlSnNEYXRhO1xuIl0sIm5hbWVzIjpbInJvb3QiLCJyZXF1aXJlIiwiY29yZUpzRGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_coreJsData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalArrays.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_equalArrays.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar SetCache = __webpack_require__(/*! ./_SetCache */ \"(app-pages-browser)/./node_modules/lodash/_SetCache.js\"), arraySome = __webpack_require__(/*! ./_arraySome */ \"(app-pages-browser)/./node_modules/lodash/_arraySome.js\"), cacheHas = __webpack_require__(/*! ./_cacheHas */ \"(app-pages-browser)/./node_modules/lodash/_cacheHas.js\");\n/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */ function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n    }\n    // Check that cyclic values are equal.\n    var arrStacked = stack.get(array);\n    var othStacked = stack.get(other);\n    if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n    }\n    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;\n    stack.set(array, other);\n    stack.set(other, array);\n    // Ignore non-index properties.\n    while(++index < arrLength){\n        var arrValue = array[index], othValue = other[index];\n        if (customizer) {\n            var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n            if (compared) {\n                continue;\n            }\n            result = false;\n            break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n            if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                    return seen.push(othIndex);\n                }\n            })) {\n                result = false;\n                break;\n            }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n            result = false;\n            break;\n        }\n    }\n    stack[\"delete\"](array);\n    stack[\"delete\"](other);\n    return result;\n}\nmodule.exports = equalArrays;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQXJyYXlzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxXQUFXQyxtQkFBT0EsQ0FBQyw4RUFDbkJDLFlBQVlELG1CQUFPQSxDQUFDLGdGQUNwQkUsV0FBV0YsbUJBQU9BLENBQUM7QUFFdkIsb0RBQW9ELEdBQ3BELElBQUlHLHVCQUF1QixHQUN2QkMseUJBQXlCO0FBRTdCOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNELFNBQVNDLFlBQVlDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxLQUFLO0lBQ3RFLElBQUlDLFlBQVlKLFVBQVVMLHNCQUN0QlUsWUFBWVAsTUFBTVEsTUFBTSxFQUN4QkMsWUFBWVIsTUFBTU8sTUFBTTtJQUU1QixJQUFJRCxhQUFhRSxhQUFhLENBQUVILENBQUFBLGFBQWFHLFlBQVlGLFNBQVEsR0FBSTtRQUNuRSxPQUFPO0lBQ1Q7SUFDQSxzQ0FBc0M7SUFDdEMsSUFBSUcsYUFBYUwsTUFBTU0sR0FBRyxDQUFDWDtJQUMzQixJQUFJWSxhQUFhUCxNQUFNTSxHQUFHLENBQUNWO0lBQzNCLElBQUlTLGNBQWNFLFlBQVk7UUFDNUIsT0FBT0YsY0FBY1QsU0FBU1csY0FBY1o7SUFDOUM7SUFDQSxJQUFJYSxRQUFRLENBQUMsR0FDVEMsU0FBUyxNQUNUQyxPQUFPLFVBQVdqQix5QkFBMEIsSUFBSUwsV0FBV3VCO0lBRS9EWCxNQUFNWSxHQUFHLENBQUNqQixPQUFPQztJQUNqQkksTUFBTVksR0FBRyxDQUFDaEIsT0FBT0Q7SUFFakIsK0JBQStCO0lBQy9CLE1BQU8sRUFBRWEsUUFBUU4sVUFBVztRQUMxQixJQUFJVyxXQUFXbEIsS0FBSyxDQUFDYSxNQUFNLEVBQ3ZCTSxXQUFXbEIsS0FBSyxDQUFDWSxNQUFNO1FBRTNCLElBQUlWLFlBQVk7WUFDZCxJQUFJaUIsV0FBV2QsWUFDWEgsV0FBV2dCLFVBQVVELFVBQVVMLE9BQU9aLE9BQU9ELE9BQU9LLFNBQ3BERixXQUFXZSxVQUFVQyxVQUFVTixPQUFPYixPQUFPQyxPQUFPSTtRQUMxRDtRQUNBLElBQUllLGFBQWFKLFdBQVc7WUFDMUIsSUFBSUksVUFBVTtnQkFDWjtZQUNGO1lBQ0FOLFNBQVM7WUFDVDtRQUNGO1FBQ0EsaUVBQWlFO1FBQ2pFLElBQUlDLE1BQU07WUFDUixJQUFJLENBQUNwQixVQUFVTSxPQUFPLFNBQVNrQixRQUFRLEVBQUVFLFFBQVE7Z0JBQzNDLElBQUksQ0FBQ3pCLFNBQVNtQixNQUFNTSxhQUNmSCxDQUFBQSxhQUFhQyxZQUFZZixVQUFVYyxVQUFVQyxVQUFVakIsU0FBU0MsWUFBWUUsTUFBSyxHQUFJO29CQUN4RixPQUFPVSxLQUFLTyxJQUFJLENBQUNEO2dCQUNuQjtZQUNGLElBQUk7Z0JBQ05QLFNBQVM7Z0JBQ1Q7WUFDRjtRQUNGLE9BQU8sSUFBSSxDQUNMSSxDQUFBQSxhQUFhQyxZQUNYZixVQUFVYyxVQUFVQyxVQUFVakIsU0FBU0MsWUFBWUUsTUFBSyxHQUN6RDtZQUNMUyxTQUFTO1lBQ1Q7UUFDRjtJQUNGO0lBQ0FULEtBQUssQ0FBQyxTQUFTLENBQUNMO0lBQ2hCSyxLQUFLLENBQUMsU0FBUyxDQUFDSjtJQUNoQixPQUFPYTtBQUNUO0FBRUFTLE9BQU9DLE9BQU8sR0FBR3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsQXJyYXlzLmpzP2EzZjkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFNldENhY2hlID0gcmVxdWlyZSgnLi9fU2V0Q2FjaGUnKSxcbiAgICBhcnJheVNvbWUgPSByZXF1aXJlKCcuL19hcnJheVNvbWUnKSxcbiAgICBjYWNoZUhhcyA9IHJlcXVpcmUoJy4vX2NhY2hlSGFzJyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIHZhbHVlIGNvbXBhcmlzb25zLiAqL1xudmFyIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSxcbiAgICBDT01QQVJFX1VOT1JERVJFRF9GTEFHID0gMjtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIGFycmF5cyB3aXRoIHN1cHBvcnQgZm9yXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjb21wYXJlLlxuICogQHBhcmFtIHtBcnJheX0gb3RoZXIgVGhlIG90aGVyIGFycmF5IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBmbGFncy4gU2VlIGBiYXNlSXNFcXVhbGAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBhcnJheWAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYXJyYXlzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGVxdWFsQXJyYXlzKGFycmF5LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHLFxuICAgICAgYXJyTGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgb3RoTGVuZ3RoID0gb3RoZXIubGVuZ3RoO1xuXG4gIGlmIChhcnJMZW5ndGggIT0gb3RoTGVuZ3RoICYmICEoaXNQYXJ0aWFsICYmIG90aExlbmd0aCA+IGFyckxlbmd0aCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gQ2hlY2sgdGhhdCBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIGFyclN0YWNrZWQgPSBzdGFjay5nZXQoYXJyYXkpO1xuICB2YXIgb3RoU3RhY2tlZCA9IHN0YWNrLmdldChvdGhlcik7XG4gIGlmIChhcnJTdGFja2VkICYmIG90aFN0YWNrZWQpIHtcbiAgICByZXR1cm4gYXJyU3RhY2tlZCA9PSBvdGhlciAmJiBvdGhTdGFja2VkID09IGFycmF5O1xuICB9XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gdHJ1ZSxcbiAgICAgIHNlZW4gPSAoYml0bWFzayAmIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcpID8gbmV3IFNldENhY2hlIDogdW5kZWZpbmVkO1xuXG4gIHN0YWNrLnNldChhcnJheSwgb3RoZXIpO1xuICBzdGFjay5zZXQob3RoZXIsIGFycmF5KTtcblxuICAvLyBJZ25vcmUgbm9uLWluZGV4IHByb3BlcnRpZXMuXG4gIHdoaWxlICgrK2luZGV4IDwgYXJyTGVuZ3RoKSB7XG4gICAgdmFyIGFyclZhbHVlID0gYXJyYXlbaW5kZXhdLFxuICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2luZGV4XTtcblxuICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWxcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBhcnJWYWx1ZSwgaW5kZXgsIG90aGVyLCBhcnJheSwgc3RhY2spXG4gICAgICAgIDogY3VzdG9taXplcihhcnJWYWx1ZSwgb3RoVmFsdWUsIGluZGV4LCBhcnJheSwgb3RoZXIsIHN0YWNrKTtcbiAgICB9XG4gICAgaWYgKGNvbXBhcmVkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGlmIChjb21wYXJlZCkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgYXJyYXlzIChzdXNjZXB0aWJsZSB0byBjYWxsIHN0YWNrIGxpbWl0cykuXG4gICAgaWYgKHNlZW4pIHtcbiAgICAgIGlmICghYXJyYXlTb21lKG90aGVyLCBmdW5jdGlvbihvdGhWYWx1ZSwgb3RoSW5kZXgpIHtcbiAgICAgICAgICAgIGlmICghY2FjaGVIYXMoc2Vlbiwgb3RoSW5kZXgpICYmXG4gICAgICAgICAgICAgICAgKGFyclZhbHVlID09PSBvdGhWYWx1ZSB8fCBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykpKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzZWVuLnB1c2gob3RoSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKSB7XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCEoXG4gICAgICAgICAgYXJyVmFsdWUgPT09IG90aFZhbHVlIHx8XG4gICAgICAgICAgICBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaylcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKGFycmF5KTtcbiAgc3RhY2tbJ2RlbGV0ZSddKG90aGVyKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlcXVhbEFycmF5cztcbiJdLCJuYW1lcyI6WyJTZXRDYWNoZSIsInJlcXVpcmUiLCJhcnJheVNvbWUiLCJjYWNoZUhhcyIsIkNPTVBBUkVfUEFSVElBTF9GTEFHIiwiQ09NUEFSRV9VTk9SREVSRURfRkxBRyIsImVxdWFsQXJyYXlzIiwiYXJyYXkiLCJvdGhlciIsImJpdG1hc2siLCJjdXN0b21pemVyIiwiZXF1YWxGdW5jIiwic3RhY2siLCJpc1BhcnRpYWwiLCJhcnJMZW5ndGgiLCJsZW5ndGgiLCJvdGhMZW5ndGgiLCJhcnJTdGFja2VkIiwiZ2V0Iiwib3RoU3RhY2tlZCIsImluZGV4IiwicmVzdWx0Iiwic2VlbiIsInVuZGVmaW5lZCIsInNldCIsImFyclZhbHVlIiwib3RoVmFsdWUiLCJjb21wYXJlZCIsIm90aEluZGV4IiwicHVzaCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalArrays.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalByTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_equalByTag.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\"), Uint8Array = __webpack_require__(/*! ./_Uint8Array */ \"(app-pages-browser)/./node_modules/lodash/_Uint8Array.js\"), eq = __webpack_require__(/*! ./eq */ \"(app-pages-browser)/./node_modules/lodash/eq.js\"), equalArrays = __webpack_require__(/*! ./_equalArrays */ \"(app-pages-browser)/./node_modules/lodash/_equalArrays.js\"), mapToArray = __webpack_require__(/*! ./_mapToArray */ \"(app-pages-browser)/./node_modules/lodash/_mapToArray.js\"), setToArray = __webpack_require__(/*! ./_setToArray */ \"(app-pages-browser)/./node_modules/lodash/_setToArray.js\");\n/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */ var boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", errorTag = \"[object Error]\", mapTag = \"[object Map]\", numberTag = \"[object Number]\", regexpTag = \"[object RegExp]\", setTag = \"[object Set]\", stringTag = \"[object String]\", symbolTag = \"[object Symbol]\";\nvar arrayBufferTag = \"[object ArrayBuffer]\", dataViewTag = \"[object DataView]\";\n/** Used to convert symbols to primitives and strings. */ var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */ function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch(tag){\n        case dataViewTag:\n            if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n                return false;\n            }\n            object = object.buffer;\n            other = other.buffer;\n        case arrayBufferTag:\n            if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n                return false;\n            }\n            return true;\n        case boolTag:\n        case dateTag:\n        case numberTag:\n            // Coerce booleans to `1` or `0` and dates to milliseconds.\n            // Invalid dates are coerced to `NaN`.\n            return eq(+object, +other);\n        case errorTag:\n            return object.name == other.name && object.message == other.message;\n        case regexpTag:\n        case stringTag:\n            // Coerce regexes to strings and treat strings, primitives and objects,\n            // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n            // for more details.\n            return object == other + \"\";\n        case mapTag:\n            var convert = mapToArray;\n        case setTag:\n            var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n            convert || (convert = setToArray);\n            if (object.size != other.size && !isPartial) {\n                return false;\n            }\n            // Assume cyclic values are equal.\n            var stacked = stack.get(object);\n            if (stacked) {\n                return stacked == other;\n            }\n            bitmask |= COMPARE_UNORDERED_FLAG;\n            // Recursively compare objects (susceptible to call stack limits).\n            stack.set(object, other);\n            var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n            stack[\"delete\"](object);\n            return result;\n        case symbolTag:\n            if (symbolValueOf) {\n                return symbolValueOf.call(object) == symbolValueOf.call(other);\n            }\n    }\n    return false;\n}\nmodule.exports = equalByTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalByTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_equalObjects.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_equalObjects.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getAllKeys = __webpack_require__(/*! ./_getAllKeys */ \"(app-pages-browser)/./node_modules/lodash/_getAllKeys.js\");\n/** Used to compose bitmasks for value comparisons. */ var COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */ function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;\n    if (objLength != othLength && !isPartial) {\n        return false;\n    }\n    var index = objLength;\n    while(index--){\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n            return false;\n        }\n    }\n    // Check that cyclic values are equal.\n    var objStacked = stack.get(object);\n    var othStacked = stack.get(other);\n    if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n    }\n    var result = true;\n    stack.set(object, other);\n    stack.set(other, object);\n    var skipCtor = isPartial;\n    while(++index < objLength){\n        key = objProps[index];\n        var objValue = object[key], othValue = other[key];\n        if (customizer) {\n            var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n            result = false;\n            break;\n        }\n        skipCtor || (skipCtor = key == \"constructor\");\n    }\n    if (result && !skipCtor) {\n        var objCtor = object.constructor, othCtor = other.constructor;\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor && \"constructor\" in object && \"constructor\" in other && !(typeof objCtor == \"function\" && objCtor instanceof objCtor && typeof othCtor == \"function\" && othCtor instanceof othCtor)) {\n            result = false;\n        }\n    }\n    stack[\"delete\"](object);\n    stack[\"delete\"](other);\n    return result;\n}\nmodule.exports = equalObjects;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2VxdWFsT2JqZWN0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUM7QUFFekIsb0RBQW9ELEdBQ3BELElBQUlDLHVCQUF1QjtBQUUzQix5Q0FBeUMsR0FDekMsSUFBSUMsY0FBY0MsT0FBT0MsU0FBUztBQUVsQyw4Q0FBOEMsR0FDOUMsSUFBSUMsaUJBQWlCSCxZQUFZRyxjQUFjO0FBRS9DOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNELFNBQVNDLGFBQWFDLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxPQUFPLEVBQUVDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxLQUFLO0lBQ3hFLElBQUlDLFlBQVlKLFVBQVVSLHNCQUN0QmEsV0FBV2YsV0FBV1EsU0FDdEJRLFlBQVlELFNBQVNFLE1BQU0sRUFDM0JDLFdBQVdsQixXQUFXUyxRQUN0QlUsWUFBWUQsU0FBU0QsTUFBTTtJQUUvQixJQUFJRCxhQUFhRyxhQUFhLENBQUNMLFdBQVc7UUFDeEMsT0FBTztJQUNUO0lBQ0EsSUFBSU0sUUFBUUo7SUFDWixNQUFPSSxRQUFTO1FBQ2QsSUFBSUMsTUFBTU4sUUFBUSxDQUFDSyxNQUFNO1FBQ3pCLElBQUksQ0FBRU4sQ0FBQUEsWUFBWU8sT0FBT1osUUFBUUgsZUFBZWdCLElBQUksQ0FBQ2IsT0FBT1ksSUFBRyxHQUFJO1lBQ2pFLE9BQU87UUFDVDtJQUNGO0lBQ0Esc0NBQXNDO0lBQ3RDLElBQUlFLGFBQWFWLE1BQU1XLEdBQUcsQ0FBQ2hCO0lBQzNCLElBQUlpQixhQUFhWixNQUFNVyxHQUFHLENBQUNmO0lBQzNCLElBQUljLGNBQWNFLFlBQVk7UUFDNUIsT0FBT0YsY0FBY2QsU0FBU2dCLGNBQWNqQjtJQUM5QztJQUNBLElBQUlrQixTQUFTO0lBQ2JiLE1BQU1jLEdBQUcsQ0FBQ25CLFFBQVFDO0lBQ2xCSSxNQUFNYyxHQUFHLENBQUNsQixPQUFPRDtJQUVqQixJQUFJb0IsV0FBV2Q7SUFDZixNQUFPLEVBQUVNLFFBQVFKLFVBQVc7UUFDMUJLLE1BQU1OLFFBQVEsQ0FBQ0ssTUFBTTtRQUNyQixJQUFJUyxXQUFXckIsTUFBTSxDQUFDYSxJQUFJLEVBQ3RCUyxXQUFXckIsS0FBSyxDQUFDWSxJQUFJO1FBRXpCLElBQUlWLFlBQVk7WUFDZCxJQUFJb0IsV0FBV2pCLFlBQ1hILFdBQVdtQixVQUFVRCxVQUFVUixLQUFLWixPQUFPRCxRQUFRSyxTQUNuREYsV0FBV2tCLFVBQVVDLFVBQVVULEtBQUtiLFFBQVFDLE9BQU9JO1FBQ3pEO1FBQ0Esa0VBQWtFO1FBQ2xFLElBQUksQ0FBRWtCLENBQUFBLGFBQWFDLFlBQ1ZILGFBQWFDLFlBQVlsQixVQUFVaUIsVUFBVUMsVUFBVXBCLFNBQVNDLFlBQVlFLFNBQzdFa0IsUUFBTyxHQUNSO1lBQ0xMLFNBQVM7WUFDVDtRQUNGO1FBQ0FFLFlBQWFBLENBQUFBLFdBQVdQLE9BQU8sYUFBWTtJQUM3QztJQUNBLElBQUlLLFVBQVUsQ0FBQ0UsVUFBVTtRQUN2QixJQUFJSyxVQUFVekIsT0FBTzBCLFdBQVcsRUFDNUJDLFVBQVUxQixNQUFNeUIsV0FBVztRQUUvQiwyRUFBMkU7UUFDM0UsSUFBSUQsV0FBV0UsV0FDVixpQkFBaUIzQixVQUFVLGlCQUFpQkMsU0FDN0MsQ0FBRSxRQUFPd0IsV0FBVyxjQUFjQSxtQkFBbUJBLFdBQ25ELE9BQU9FLFdBQVcsY0FBY0EsbUJBQW1CQSxPQUFNLEdBQUk7WUFDakVULFNBQVM7UUFDWDtJQUNGO0lBQ0FiLEtBQUssQ0FBQyxTQUFTLENBQUNMO0lBQ2hCSyxLQUFLLENBQUMsU0FBUyxDQUFDSjtJQUNoQixPQUFPaUI7QUFDVDtBQUVBVSxPQUFPQyxPQUFPLEdBQUc5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19lcXVhbE9iamVjdHMuanM/MWFhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0QWxsS2V5cyA9IHJlcXVpcmUoJy4vX2dldEFsbEtleXMnKTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgdmFsdWUgY29tcGFyaXNvbnMuICovXG52YXIgQ09NUEFSRV9QQVJUSUFMX0ZMQUcgPSAxO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3Igb2JqZWN0cyB3aXRoIHN1cHBvcnQgZm9yXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYCBmb3IgbW9yZSBkZXRhaWxzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gY3VzdG9taXplciBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtPYmplY3R9IHN0YWNrIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBlcXVhbE9iamVjdHMob2JqZWN0LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHLFxuICAgICAgb2JqUHJvcHMgPSBnZXRBbGxLZXlzKG9iamVjdCksXG4gICAgICBvYmpMZW5ndGggPSBvYmpQcm9wcy5sZW5ndGgsXG4gICAgICBvdGhQcm9wcyA9IGdldEFsbEtleXMob3RoZXIpLFxuICAgICAgb3RoTGVuZ3RoID0gb3RoUHJvcHMubGVuZ3RoO1xuXG4gIGlmIChvYmpMZW5ndGggIT0gb3RoTGVuZ3RoICYmICFpc1BhcnRpYWwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGluZGV4ID0gb2JqTGVuZ3RoO1xuICB3aGlsZSAoaW5kZXgtLSkge1xuICAgIHZhciBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgaWYgKCEoaXNQYXJ0aWFsID8ga2V5IGluIG90aGVyIDogaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwga2V5KSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgLy8gQ2hlY2sgdGhhdCBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIG9ialN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgdmFyIG90aFN0YWNrZWQgPSBzdGFjay5nZXQob3RoZXIpO1xuICBpZiAob2JqU3RhY2tlZCAmJiBvdGhTdGFja2VkKSB7XG4gICAgcmV0dXJuIG9ialN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBvYmplY3Q7XG4gIH1cbiAgdmFyIHJlc3VsdCA9IHRydWU7XG4gIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBvYmplY3QpO1xuXG4gIHZhciBza2lwQ3RvciA9IGlzUGFydGlhbDtcbiAgd2hpbGUgKCsraW5kZXggPCBvYmpMZW5ndGgpIHtcbiAgICBrZXkgPSBvYmpQcm9wc1tpbmRleF07XG4gICAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV0sXG4gICAgICAgIG90aFZhbHVlID0gb3RoZXJba2V5XTtcblxuICAgIGlmIChjdXN0b21pemVyKSB7XG4gICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWxcbiAgICAgICAgPyBjdXN0b21pemVyKG90aFZhbHVlLCBvYmpWYWx1ZSwga2V5LCBvdGhlciwgb2JqZWN0LCBzdGFjaylcbiAgICAgICAgOiBjdXN0b21pemVyKG9ialZhbHVlLCBvdGhWYWx1ZSwga2V5LCBvYmplY3QsIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIC8vIFJlY3Vyc2l2ZWx5IGNvbXBhcmUgb2JqZWN0cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmICghKGNvbXBhcmVkID09PSB1bmRlZmluZWRcbiAgICAgICAgICA/IChvYmpWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKG9ialZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKVxuICAgICAgICAgIDogY29tcGFyZWRcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgc2tpcEN0b3IgfHwgKHNraXBDdG9yID0ga2V5ID09ICdjb25zdHJ1Y3RvcicpO1xuICB9XG4gIGlmIChyZXN1bHQgJiYgIXNraXBDdG9yKSB7XG4gICAgdmFyIG9iakN0b3IgPSBvYmplY3QuY29uc3RydWN0b3IsXG4gICAgICAgIG90aEN0b3IgPSBvdGhlci5jb25zdHJ1Y3RvcjtcblxuICAgIC8vIE5vbiBgT2JqZWN0YCBvYmplY3QgaW5zdGFuY2VzIHdpdGggZGlmZmVyZW50IGNvbnN0cnVjdG9ycyBhcmUgbm90IGVxdWFsLlxuICAgIGlmIChvYmpDdG9yICE9IG90aEN0b3IgJiZcbiAgICAgICAgKCdjb25zdHJ1Y3RvcicgaW4gb2JqZWN0ICYmICdjb25zdHJ1Y3RvcicgaW4gb3RoZXIpICYmXG4gICAgICAgICEodHlwZW9mIG9iakN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBvYmpDdG9yIGluc3RhbmNlb2Ygb2JqQ3RvciAmJlxuICAgICAgICAgIHR5cGVvZiBvdGhDdG9yID09ICdmdW5jdGlvbicgJiYgb3RoQ3RvciBpbnN0YW5jZW9mIG90aEN0b3IpKSB7XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKG9iamVjdCk7XG4gIHN0YWNrWydkZWxldGUnXShvdGhlcik7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXF1YWxPYmplY3RzO1xuIl0sIm5hbWVzIjpbImdldEFsbEtleXMiLCJyZXF1aXJlIiwiQ09NUEFSRV9QQVJUSUFMX0ZMQUciLCJvYmplY3RQcm90byIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiZXF1YWxPYmplY3RzIiwib2JqZWN0Iiwib3RoZXIiLCJiaXRtYXNrIiwiY3VzdG9taXplciIsImVxdWFsRnVuYyIsInN0YWNrIiwiaXNQYXJ0aWFsIiwib2JqUHJvcHMiLCJvYmpMZW5ndGgiLCJsZW5ndGgiLCJvdGhQcm9wcyIsIm90aExlbmd0aCIsImluZGV4Iiwia2V5IiwiY2FsbCIsIm9ialN0YWNrZWQiLCJnZXQiLCJvdGhTdGFja2VkIiwicmVzdWx0Iiwic2V0Iiwic2tpcEN0b3IiLCJvYmpWYWx1ZSIsIm90aFZhbHVlIiwiY29tcGFyZWQiLCJ1bmRlZmluZWQiLCJvYmpDdG9yIiwiY29uc3RydWN0b3IiLCJvdGhDdG9yIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_equalObjects.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Detect free variable `global` from Node.js. */ \nvar freeGlobal = typeof __webpack_require__.g == \"object\" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\nmodule.exports = freeGlobal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2ZyZWVHbG9iYWwuanMiLCJtYXBwaW5ncyI6IkFBQUEsZ0RBQWdEO0FBQ2hELElBQUlBLGFBQWEsT0FBT0MscUJBQU1BLElBQUksWUFBWUEscUJBQU1BLElBQUlBLHFCQUFNQSxDQUFDQyxNQUFNLEtBQUtBLFVBQVVELHFCQUFNQTtBQUUxRkUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzPzA1ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwgJiYgZ2xvYmFsLk9iamVjdCA9PT0gT2JqZWN0ICYmIGdsb2JhbDtcblxubW9kdWxlLmV4cG9ydHMgPSBmcmVlR2xvYmFsO1xuIl0sIm5hbWVzIjpbImZyZWVHbG9iYWwiLCJnbG9iYWwiLCJPYmplY3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getAllKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getAllKeys.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ \"(app-pages-browser)/./node_modules/lodash/_baseGetAllKeys.js\"), getSymbols = __webpack_require__(/*! ./_getSymbols */ \"(app-pages-browser)/./node_modules/lodash/_getSymbols.js\"), keys = __webpack_require__(/*! ./keys */ \"(app-pages-browser)/./node_modules/lodash/keys.js\");\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */ function getAllKeys(object) {\n    return baseGetAllKeys(object, keys, getSymbols);\n}\nmodule.exports = getAllKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldEFsbEtleXMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGlCQUFpQkMsbUJBQU9BLENBQUMsMEZBQ3pCQyxhQUFhRCxtQkFBT0EsQ0FBQyxrRkFDckJFLE9BQU9GLG1CQUFPQSxDQUFDO0FBRW5COzs7Ozs7Q0FNQyxHQUNELFNBQVNHLFdBQVdDLE1BQU07SUFDeEIsT0FBT0wsZUFBZUssUUFBUUYsTUFBTUQ7QUFDdEM7QUFFQUksT0FBT0MsT0FBTyxHQUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRBbGxLZXlzLmpzPzdkNmUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VHZXRBbGxLZXlzID0gcmVxdWlyZSgnLi9fYmFzZUdldEFsbEtleXMnKSxcbiAgICBnZXRTeW1ib2xzID0gcmVxdWlyZSgnLi9fZ2V0U3ltYm9scycpLFxuICAgIGtleXMgPSByZXF1aXJlKCcuL2tleXMnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIG93biBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxuICovXG5mdW5jdGlvbiBnZXRBbGxLZXlzKG9iamVjdCkge1xuICByZXR1cm4gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzLCBnZXRTeW1ib2xzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRBbGxLZXlzO1xuIl0sIm5hbWVzIjpbImJhc2VHZXRBbGxLZXlzIiwicmVxdWlyZSIsImdldFN5bWJvbHMiLCJrZXlzIiwiZ2V0QWxsS2V5cyIsIm9iamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getAllKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getMapData.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getMapData.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar isKeyable = __webpack_require__(/*! ./_isKeyable */ \"(app-pages-browser)/./node_modules/lodash/_isKeyable.js\");\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */ function getMapData(map, key) {\n    var data = map.__data__;\n    return isKeyable(key) ? data[typeof key == \"string\" ? \"string\" : \"hash\"] : data.map;\n}\nmodule.exports = getMapData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hcERhdGEuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDO0FBRXhCOzs7Ozs7O0NBT0MsR0FDRCxTQUFTQyxXQUFXQyxHQUFHLEVBQUVDLEdBQUc7SUFDMUIsSUFBSUMsT0FBT0YsSUFBSUcsUUFBUTtJQUN2QixPQUFPTixVQUFVSSxPQUNiQyxJQUFJLENBQUMsT0FBT0QsT0FBTyxXQUFXLFdBQVcsT0FBTyxHQUNoREMsS0FBS0YsR0FBRztBQUNkO0FBRUFJLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TWFwRGF0YS5qcz82YzZiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0tleWFibGUgPSByZXF1aXJlKCcuL19pc0tleWFibGUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBkYXRhIGZvciBgbWFwYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXAgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZ2V0TWFwRGF0YShtYXAsIGtleSkge1xuICB2YXIgZGF0YSA9IG1hcC5fX2RhdGFfXztcbiAgcmV0dXJuIGlzS2V5YWJsZShrZXkpXG4gICAgPyBkYXRhW3R5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyAnc3RyaW5nJyA6ICdoYXNoJ11cbiAgICA6IGRhdGEubWFwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE1hcERhdGE7XG4iXSwibmFtZXMiOlsiaXNLZXlhYmxlIiwicmVxdWlyZSIsImdldE1hcERhdGEiLCJtYXAiLCJrZXkiLCJkYXRhIiwiX19kYXRhX18iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getMapData.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getNative.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getNative.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseIsNative = __webpack_require__(/*! ./_baseIsNative */ \"(app-pages-browser)/./node_modules/lodash/_baseIsNative.js\"), getValue = __webpack_require__(/*! ./_getValue */ \"(app-pages-browser)/./node_modules/lodash/_getValue.js\");\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */ function getNative(object, key) {\n    var value = getValue(object, key);\n    return baseIsNative(value) ? value : undefined;\n}\nmodule.exports = getNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE5hdGl2ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUMsc0ZBQ3ZCQyxXQUFXRCxtQkFBT0EsQ0FBQztBQUV2Qjs7Ozs7OztDQU9DLEdBQ0QsU0FBU0UsVUFBVUMsTUFBTSxFQUFFQyxHQUFHO0lBQzVCLElBQUlDLFFBQVFKLFNBQVNFLFFBQVFDO0lBQzdCLE9BQU9MLGFBQWFNLFNBQVNBLFFBQVFDO0FBQ3ZDO0FBRUFDLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TmF0aXZlLmpzPzQxYzkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc05hdGl2ZSA9IHJlcXVpcmUoJy4vX2Jhc2VJc05hdGl2ZScpLFxuICAgIGdldFZhbHVlID0gcmVxdWlyZSgnLi9fZ2V0VmFsdWUnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBuYXRpdmUgZnVuY3Rpb24gYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFZhbHVlKG9iamVjdCwga2V5KTtcbiAgcmV0dXJuIGJhc2VJc05hdGl2ZSh2YWx1ZSkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXROYXRpdmU7XG4iXSwibmFtZXMiOlsiYmFzZUlzTmF0aXZlIiwicmVxdWlyZSIsImdldFZhbHVlIiwiZ2V0TmF0aXZlIiwib2JqZWN0Iiwia2V5IiwidmFsdWUiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getNative.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar Symbol = __webpack_require__(/*! ./_Symbol */ \"(app-pages-browser)/./node_modules/lodash/_Symbol.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var nativeObjectToString = objectProto.toString;\n/** Built-in value references. */ var symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */ function getRawTag(value) {\n    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n    try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n    } catch (e) {}\n    var result = nativeObjectToString.call(value);\n    if (unmasked) {\n        if (isOwn) {\n            value[symToStringTag] = tag;\n        } else {\n            delete value[symToStringTag];\n        }\n    }\n    return result;\n}\nmodule.exports = getRawTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFJhd1RhZy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFckIseUNBQXlDLEdBQ3pDLElBQUlDLGNBQWNDLE9BQU9DLFNBQVM7QUFFbEMsOENBQThDLEdBQzlDLElBQUlDLGlCQUFpQkgsWUFBWUcsY0FBYztBQUUvQzs7OztDQUlDLEdBQ0QsSUFBSUMsdUJBQXVCSixZQUFZSyxRQUFRO0FBRS9DLCtCQUErQixHQUMvQixJQUFJQyxpQkFBaUJSLFNBQVNBLE9BQU9TLFdBQVcsR0FBR0M7QUFFbkQ7Ozs7OztDQU1DLEdBQ0QsU0FBU0MsVUFBVUMsS0FBSztJQUN0QixJQUFJQyxRQUFRUixlQUFlUyxJQUFJLENBQUNGLE9BQU9KLGlCQUNuQ08sTUFBTUgsS0FBSyxDQUFDSixlQUFlO0lBRS9CLElBQUk7UUFDRkksS0FBSyxDQUFDSixlQUFlLEdBQUdFO1FBQ3hCLElBQUlNLFdBQVc7SUFDakIsRUFBRSxPQUFPQyxHQUFHLENBQUM7SUFFYixJQUFJQyxTQUFTWixxQkFBcUJRLElBQUksQ0FBQ0Y7SUFDdkMsSUFBSUksVUFBVTtRQUNaLElBQUlILE9BQU87WUFDVEQsS0FBSyxDQUFDSixlQUFlLEdBQUdPO1FBQzFCLE9BQU87WUFDTCxPQUFPSCxLQUFLLENBQUNKLGVBQWU7UUFDOUI7SUFDRjtJQUNBLE9BQU9VO0FBQ1Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanM/ZmM4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdUYWc7XG4iXSwibmFtZXMiOlsiU3ltYm9sIiwicmVxdWlyZSIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJuYXRpdmVPYmplY3RUb1N0cmluZyIsInRvU3RyaW5nIiwic3ltVG9TdHJpbmdUYWciLCJ0b1N0cmluZ1RhZyIsInVuZGVmaW5lZCIsImdldFJhd1RhZyIsInZhbHVlIiwiaXNPd24iLCJjYWxsIiwidGFnIiwidW5tYXNrZWQiLCJlIiwicmVzdWx0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getRawTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getSymbols.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_getSymbols.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar arrayFilter = __webpack_require__(/*! ./_arrayFilter */ \"(app-pages-browser)/./node_modules/lodash/_arrayFilter.js\"), stubArray = __webpack_require__(/*! ./stubArray */ \"(app-pages-browser)/./node_modules/lodash/stubArray.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */ var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n    if (object == null) {\n        return [];\n    }\n    object = Object(object);\n    return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n    });\n};\nmodule.exports = getSymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFN5bWJvbHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGNBQWNDLG1CQUFPQSxDQUFDLG9GQUN0QkMsWUFBWUQsbUJBQU9BLENBQUM7QUFFeEIseUNBQXlDLEdBQ3pDLElBQUlFLGNBQWNDLE9BQU9DLFNBQVM7QUFFbEMsK0JBQStCLEdBQy9CLElBQUlDLHVCQUF1QkgsWUFBWUcsb0JBQW9CO0FBRTNELHNGQUFzRixHQUN0RixJQUFJQyxtQkFBbUJILE9BQU9JLHFCQUFxQjtBQUVuRDs7Ozs7O0NBTUMsR0FDRCxJQUFJQyxhQUFhLENBQUNGLG1CQUFtQkwsWUFBWSxTQUFTUSxNQUFNO0lBQzlELElBQUlBLFVBQVUsTUFBTTtRQUNsQixPQUFPLEVBQUU7SUFDWDtJQUNBQSxTQUFTTixPQUFPTTtJQUNoQixPQUFPVixZQUFZTyxpQkFBaUJHLFNBQVMsU0FBU0MsTUFBTTtRQUMxRCxPQUFPTCxxQkFBcUJNLElBQUksQ0FBQ0YsUUFBUUM7SUFDM0M7QUFDRjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFN5bWJvbHMuanM/NWJmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlGaWx0ZXIgPSByZXF1aXJlKCcuL19hcnJheUZpbHRlcicpLFxuICAgIHN0dWJBcnJheSA9IHJlcXVpcmUoJy4vc3R1YkFycmF5Jyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gb2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVHZXRTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBvd24gZW51bWVyYWJsZSBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHN5bWJvbHMuXG4gKi9cbnZhciBnZXRTeW1ib2xzID0gIW5hdGl2ZUdldFN5bWJvbHMgPyBzdHViQXJyYXkgOiBmdW5jdGlvbihvYmplY3QpIHtcbiAgaWYgKG9iamVjdCA9PSBudWxsKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICByZXR1cm4gYXJyYXlGaWx0ZXIobmF0aXZlR2V0U3ltYm9scyhvYmplY3QpLCBmdW5jdGlvbihzeW1ib2wpIHtcbiAgICByZXR1cm4gcHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChvYmplY3QsIHN5bWJvbCk7XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRTeW1ib2xzO1xuIl0sIm5hbWVzIjpbImFycmF5RmlsdGVyIiwicmVxdWlyZSIsInN0dWJBcnJheSIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJuYXRpdmVHZXRTeW1ib2xzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZ2V0U3ltYm9scyIsIm9iamVjdCIsInN5bWJvbCIsImNhbGwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getSymbols.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getTag.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_getTag.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar DataView = __webpack_require__(/*! ./_DataView */ \"(app-pages-browser)/./node_modules/lodash/_DataView.js\"), Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\"), Promise = __webpack_require__(/*! ./_Promise */ \"(app-pages-browser)/./node_modules/lodash/_Promise.js\"), Set = __webpack_require__(/*! ./_Set */ \"(app-pages-browser)/./node_modules/lodash/_Set.js\"), WeakMap = __webpack_require__(/*! ./_WeakMap */ \"(app-pages-browser)/./node_modules/lodash/_WeakMap.js\"), baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"), toSource = __webpack_require__(/*! ./_toSource */ \"(app-pages-browser)/./node_modules/lodash/_toSource.js\");\n/** `Object#toString` result references. */ var mapTag = \"[object Map]\", objectTag = \"[object Object]\", promiseTag = \"[object Promise]\", setTag = \"[object Set]\", weakMapTag = \"[object WeakMap]\";\nvar dataViewTag = \"[object DataView]\";\n/** Used to detect maps, sets, and weakmaps. */ var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */ var getTag = baseGetTag;\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) {\n    getTag = function(value) {\n        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : \"\";\n        if (ctorString) {\n            switch(ctorString){\n                case dataViewCtorString:\n                    return dataViewTag;\n                case mapCtorString:\n                    return mapTag;\n                case promiseCtorString:\n                    return promiseTag;\n                case setCtorString:\n                    return setTag;\n                case weakMapCtorString:\n                    return weakMapTag;\n            }\n        }\n        return result;\n    };\n}\nmodule.exports = getTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFRhZy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUMsOEVBQ25CQyxNQUFNRCxtQkFBT0EsQ0FBQyxvRUFDZEUsVUFBVUYsbUJBQU9BLENBQUMsNEVBQ2xCRyxNQUFNSCxtQkFBT0EsQ0FBQyxvRUFDZEksVUFBVUosbUJBQU9BLENBQUMsNEVBQ2xCSyxhQUFhTCxtQkFBT0EsQ0FBQyxrRkFDckJNLFdBQVdOLG1CQUFPQSxDQUFDO0FBRXZCLHlDQUF5QyxHQUN6QyxJQUFJTyxTQUFTLGdCQUNUQyxZQUFZLG1CQUNaQyxhQUFhLG9CQUNiQyxTQUFTLGdCQUNUQyxhQUFhO0FBRWpCLElBQUlDLGNBQWM7QUFFbEIsNkNBQTZDLEdBQzdDLElBQUlDLHFCQUFxQlAsU0FBU1AsV0FDOUJlLGdCQUFnQlIsU0FBU0wsTUFDekJjLG9CQUFvQlQsU0FBU0osVUFDN0JjLGdCQUFnQlYsU0FBU0gsTUFDekJjLG9CQUFvQlgsU0FBU0Y7QUFFakM7Ozs7OztDQU1DLEdBQ0QsSUFBSWMsU0FBU2I7QUFFYiwyRkFBMkY7QUFDM0YsSUFBSSxZQUFhYSxPQUFPLElBQUluQixTQUFTLElBQUlvQixZQUFZLFFBQVFQLGVBQ3hEWCxPQUFPaUIsT0FBTyxJQUFJakIsUUFBUU0sVUFDMUJMLFdBQVdnQixPQUFPaEIsUUFBUWtCLE9BQU8sT0FBT1gsY0FDeENOLE9BQU9lLE9BQU8sSUFBSWYsUUFBUU8sVUFDMUJOLFdBQVdjLE9BQU8sSUFBSWQsWUFBWU8sWUFBYTtJQUNsRE8sU0FBUyxTQUFTRyxLQUFLO1FBQ3JCLElBQUlDLFNBQVNqQixXQUFXZ0IsUUFDcEJFLE9BQU9ELFVBQVVkLFlBQVlhLE1BQU1HLFdBQVcsR0FBR0MsV0FDakRDLGFBQWFILE9BQU9qQixTQUFTaUIsUUFBUTtRQUV6QyxJQUFJRyxZQUFZO1lBQ2QsT0FBUUE7Z0JBQ04sS0FBS2I7b0JBQW9CLE9BQU9EO2dCQUNoQyxLQUFLRTtvQkFBZSxPQUFPUDtnQkFDM0IsS0FBS1E7b0JBQW1CLE9BQU9OO2dCQUMvQixLQUFLTztvQkFBZSxPQUFPTjtnQkFDM0IsS0FBS087b0JBQW1CLE9BQU9OO1lBQ2pDO1FBQ0Y7UUFDQSxPQUFPVztJQUNUO0FBQ0Y7QUFFQUssT0FBT0MsT0FBTyxHQUFHViIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRUYWcuanM/NmRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgRGF0YVZpZXcgPSByZXF1aXJlKCcuL19EYXRhVmlldycpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpLFxuICAgIFByb21pc2UgPSByZXF1aXJlKCcuL19Qcm9taXNlJyksXG4gICAgU2V0ID0gcmVxdWlyZSgnLi9fU2V0JyksXG4gICAgV2Vha01hcCA9IHJlcXVpcmUoJy4vX1dlYWtNYXAnKSxcbiAgICBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIHRvU291cmNlID0gcmVxdWlyZSgnLi9fdG9Tb3VyY2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHByb21pc2VUYWcgPSAnW29iamVjdCBQcm9taXNlXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1hcHMsIHNldHMsIGFuZCB3ZWFrbWFwcy4gKi9cbnZhciBkYXRhVmlld0N0b3JTdHJpbmcgPSB0b1NvdXJjZShEYXRhVmlldyksXG4gICAgbWFwQ3RvclN0cmluZyA9IHRvU291cmNlKE1hcCksXG4gICAgcHJvbWlzZUN0b3JTdHJpbmcgPSB0b1NvdXJjZShQcm9taXNlKSxcbiAgICBzZXRDdG9yU3RyaW5nID0gdG9Tb3VyY2UoU2V0KSxcbiAgICB3ZWFrTWFwQ3RvclN0cmluZyA9IHRvU291cmNlKFdlYWtNYXApO1xuXG4vKipcbiAqIEdldHMgdGhlIGB0b1N0cmluZ1RhZ2Agb2YgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG52YXIgZ2V0VGFnID0gYmFzZUdldFRhZztcblxuLy8gRmFsbGJhY2sgZm9yIGRhdGEgdmlld3MsIG1hcHMsIHNldHMsIGFuZCB3ZWFrIG1hcHMgaW4gSUUgMTEgYW5kIHByb21pc2VzIGluIE5vZGUuanMgPCA2LlxuaWYgKChEYXRhVmlldyAmJiBnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpICE9IGRhdGFWaWV3VGFnKSB8fFxuICAgIChNYXAgJiYgZ2V0VGFnKG5ldyBNYXApICE9IG1hcFRhZykgfHxcbiAgICAoUHJvbWlzZSAmJiBnZXRUYWcoUHJvbWlzZS5yZXNvbHZlKCkpICE9IHByb21pc2VUYWcpIHx8XG4gICAgKFNldCAmJiBnZXRUYWcobmV3IFNldCkgIT0gc2V0VGFnKSB8fFxuICAgIChXZWFrTWFwICYmIGdldFRhZyhuZXcgV2Vha01hcCkgIT0gd2Vha01hcFRhZykpIHtcbiAgZ2V0VGFnID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gYmFzZUdldFRhZyh2YWx1ZSksXG4gICAgICAgIEN0b3IgPSByZXN1bHQgPT0gb2JqZWN0VGFnID8gdmFsdWUuY29uc3RydWN0b3IgOiB1bmRlZmluZWQsXG4gICAgICAgIGN0b3JTdHJpbmcgPSBDdG9yID8gdG9Tb3VyY2UoQ3RvcikgOiAnJztcblxuICAgIGlmIChjdG9yU3RyaW5nKSB7XG4gICAgICBzd2l0Y2ggKGN0b3JTdHJpbmcpIHtcbiAgICAgICAgY2FzZSBkYXRhVmlld0N0b3JTdHJpbmc6IHJldHVybiBkYXRhVmlld1RhZztcbiAgICAgICAgY2FzZSBtYXBDdG9yU3RyaW5nOiByZXR1cm4gbWFwVGFnO1xuICAgICAgICBjYXNlIHByb21pc2VDdG9yU3RyaW5nOiByZXR1cm4gcHJvbWlzZVRhZztcbiAgICAgICAgY2FzZSBzZXRDdG9yU3RyaW5nOiByZXR1cm4gc2V0VGFnO1xuICAgICAgICBjYXNlIHdlYWtNYXBDdG9yU3RyaW5nOiByZXR1cm4gd2Vha01hcFRhZztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRUYWc7XG4iXSwibmFtZXMiOlsiRGF0YVZpZXciLCJyZXF1aXJlIiwiTWFwIiwiUHJvbWlzZSIsIlNldCIsIldlYWtNYXAiLCJiYXNlR2V0VGFnIiwidG9Tb3VyY2UiLCJtYXBUYWciLCJvYmplY3RUYWciLCJwcm9taXNlVGFnIiwic2V0VGFnIiwid2Vha01hcFRhZyIsImRhdGFWaWV3VGFnIiwiZGF0YVZpZXdDdG9yU3RyaW5nIiwibWFwQ3RvclN0cmluZyIsInByb21pc2VDdG9yU3RyaW5nIiwic2V0Q3RvclN0cmluZyIsIndlYWtNYXBDdG9yU3RyaW5nIiwiZ2V0VGFnIiwiQXJyYXlCdWZmZXIiLCJyZXNvbHZlIiwidmFsdWUiLCJyZXN1bHQiLCJDdG9yIiwiY29uc3RydWN0b3IiLCJ1bmRlZmluZWQiLCJjdG9yU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getTag.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_getValue.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_getValue.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */ \nfunction getValue(object, key) {\n    return object == null ? undefined : object[key];\n}\nmodule.exports = getValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFZhbHVlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0NBT0M7QUFDRCxTQUFTQSxTQUFTQyxNQUFNLEVBQUVDLEdBQUc7SUFDM0IsT0FBT0QsVUFBVSxPQUFPRSxZQUFZRixNQUFNLENBQUNDLElBQUk7QUFDakQ7QUFFQUUsT0FBT0MsT0FBTyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRWYWx1ZS5qcz9lOTlmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZhbHVlO1xuIl0sIm5hbWVzIjpbImdldFZhbHVlIiwib2JqZWN0Iiwia2V5IiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_getValue.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashClear.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_hashClear.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */ function hashClear() {\n    this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    this.size = 0;\n}\nmodule.exports = hashClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hDbGVhci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFFM0I7Ozs7OztDQU1DLEdBQ0QsU0FBU0M7SUFDUCxJQUFJLENBQUNDLFFBQVEsR0FBR0gsZUFBZUEsYUFBYSxRQUFRLENBQUM7SUFDckQsSUFBSSxDQUFDSSxJQUFJLEdBQUc7QUFDZDtBQUVBQyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hDbGVhci5qcz9jNjA0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIEhhc2hcbiAqL1xuZnVuY3Rpb24gaGFzaENsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmF0aXZlQ3JlYXRlID8gbmF0aXZlQ3JlYXRlKG51bGwpIDoge307XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaENsZWFyO1xuIl0sIm5hbWVzIjpbIm5hdGl2ZUNyZWF0ZSIsInJlcXVpcmUiLCJoYXNoQ2xlYXIiLCJfX2RhdGFfXyIsInNpemUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashDelete.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_hashDelete.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ \nfunction hashDelete(key) {\n    var result = this.has(key) && delete this.__data__[key];\n    this.size -= result ? 1 : 0;\n    return result;\n}\nmodule.exports = hashDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hEZWxldGUuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7OztDQVNDO0FBQ0QsU0FBU0EsV0FBV0MsR0FBRztJQUNyQixJQUFJQyxTQUFTLElBQUksQ0FBQ0MsR0FBRyxDQUFDRixRQUFRLE9BQU8sSUFBSSxDQUFDRyxRQUFRLENBQUNILElBQUk7SUFDdkQsSUFBSSxDQUFDSSxJQUFJLElBQUlILFNBQVMsSUFBSTtJQUMxQixPQUFPQTtBQUNUO0FBRUFJLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaERlbGV0ZS5qcz8yNmQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7T2JqZWN0fSBoYXNoIFRoZSBoYXNoIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoRGVsZXRlKGtleSkge1xuICB2YXIgcmVzdWx0ID0gdGhpcy5oYXMoa2V5KSAmJiBkZWxldGUgdGhpcy5fX2RhdGFfX1trZXldO1xuICB0aGlzLnNpemUgLT0gcmVzdWx0ID8gMSA6IDA7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaERlbGV0ZTtcbiJdLCJuYW1lcyI6WyJoYXNoRGVsZXRlIiwia2V5IiwicmVzdWx0IiwiaGFzIiwiX19kYXRhX18iLCJzaXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashGet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashGet.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function hashGet(key) {\n    var data = this.__data__;\n    if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n    }\n    return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\nmodule.exports = hashGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hHZXQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBRTNCLGtEQUFrRCxHQUNsRCxJQUFJQyxpQkFBaUI7QUFFckIseUNBQXlDLEdBQ3pDLElBQUlDLGNBQWNDLE9BQU9DLFNBQVM7QUFFbEMsOENBQThDLEdBQzlDLElBQUlDLGlCQUFpQkgsWUFBWUcsY0FBYztBQUUvQzs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNDLFFBQVFDLEdBQUc7SUFDbEIsSUFBSUMsT0FBTyxJQUFJLENBQUNDLFFBQVE7SUFDeEIsSUFBSVYsY0FBYztRQUNoQixJQUFJVyxTQUFTRixJQUFJLENBQUNELElBQUk7UUFDdEIsT0FBT0csV0FBV1QsaUJBQWlCVSxZQUFZRDtJQUNqRDtJQUNBLE9BQU9MLGVBQWVPLElBQUksQ0FBQ0osTUFBTUQsT0FBT0MsSUFBSSxDQUFDRCxJQUFJLEdBQUdJO0FBQ3REO0FBRUFFLE9BQU9DLE9BQU8sR0FBR1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEdldC5qcz9kN2VhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBuYXRpdmVDcmVhdGUgPSByZXF1aXJlKCcuL19uYXRpdmVDcmVhdGUnKTtcblxuLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIEdldHMgdGhlIGhhc2ggdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gaGFzaEdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAobmF0aXZlQ3JlYXRlKSB7XG4gICAgdmFyIHJlc3VsdCA9IGRhdGFba2V5XTtcbiAgICByZXR1cm4gcmVzdWx0ID09PSBIQVNIX1VOREVGSU5FRCA/IHVuZGVmaW5lZCA6IHJlc3VsdDtcbiAgfVxuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpID8gZGF0YVtrZXldIDogdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hHZXQ7XG4iXSwibmFtZXMiOlsibmF0aXZlQ3JlYXRlIiwicmVxdWlyZSIsIkhBU0hfVU5ERUZJTkVEIiwib2JqZWN0UHJvdG8iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImhhc2hHZXQiLCJrZXkiLCJkYXRhIiwiX19kYXRhX18iLCJyZXN1bHQiLCJ1bmRlZmluZWQiLCJjYWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashHas.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashHas.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function hashHas(key) {\n    var data = this.__data__;\n    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\nmodule.exports = hashHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hIYXMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBRTNCLHlDQUF5QyxHQUN6QyxJQUFJQyxjQUFjQyxPQUFPQyxTQUFTO0FBRWxDLDhDQUE4QyxHQUM5QyxJQUFJQyxpQkFBaUJILFlBQVlHLGNBQWM7QUFFL0M7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxRQUFRQyxHQUFHO0lBQ2xCLElBQUlDLE9BQU8sSUFBSSxDQUFDQyxRQUFRO0lBQ3hCLE9BQU9ULGVBQWdCUSxJQUFJLENBQUNELElBQUksS0FBS0csWUFBYUwsZUFBZU0sSUFBSSxDQUFDSCxNQUFNRDtBQUM5RTtBQUVBSyxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hIYXMuanM/MzRjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICByZXR1cm4gbmF0aXZlQ3JlYXRlID8gKGRhdGFba2V5XSAhPT0gdW5kZWZpbmVkKSA6IGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoSGFzO1xuIl0sIm5hbWVzIjpbIm5hdGl2ZUNyZWF0ZSIsInJlcXVpcmUiLCJvYmplY3RQcm90byIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiaGFzaEhhcyIsImtleSIsImRhdGEiLCJfX2RhdGFfXyIsInVuZGVmaW5lZCIsImNhbGwiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_hashSet.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_hashSet.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar nativeCreate = __webpack_require__(/*! ./_nativeCreate */ \"(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\");\n/** Used to stand-in for `undefined` hash values. */ var HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */ function hashSet(key, value) {\n    var data = this.__data__;\n    this.size += this.has(key) ? 0 : 1;\n    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n    return this;\n}\nmodule.exports = hashSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hTZXQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGVBQWVDLG1CQUFPQSxDQUFDO0FBRTNCLGtEQUFrRCxHQUNsRCxJQUFJQyxpQkFBaUI7QUFFckI7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0MsUUFBUUMsR0FBRyxFQUFFQyxLQUFLO0lBQ3pCLElBQUlDLE9BQU8sSUFBSSxDQUFDQyxRQUFRO0lBQ3hCLElBQUksQ0FBQ0MsSUFBSSxJQUFJLElBQUksQ0FBQ0MsR0FBRyxDQUFDTCxPQUFPLElBQUk7SUFDakNFLElBQUksQ0FBQ0YsSUFBSSxHQUFHLGdCQUFpQkMsVUFBVUssWUFBYVIsaUJBQWlCRztJQUNyRSxPQUFPLElBQUk7QUFDYjtBQUVBTSxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2hhc2hTZXQuanM/MGYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqXG4gKiBTZXRzIHRoZSBoYXNoIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgaGFzaCBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gaGFzaFNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgdGhpcy5zaXplICs9IHRoaXMuaGFzKGtleSkgPyAwIDogMTtcbiAgZGF0YVtrZXldID0gKG5hdGl2ZUNyZWF0ZSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkKSA/IEhBU0hfVU5ERUZJTkVEIDogdmFsdWU7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hTZXQ7XG4iXSwibmFtZXMiOlsibmF0aXZlQ3JlYXRlIiwicmVxdWlyZSIsIkhBU0hfVU5ERUZJTkVEIiwiaGFzaFNldCIsImtleSIsInZhbHVlIiwiZGF0YSIsIl9fZGF0YV9fIiwic2l6ZSIsImhhcyIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_hashSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isIndex.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_isIndex.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used as references for various `Number` constants. */ \nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */ var reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */ function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return !!length && (type == \"number\" || type != \"symbol\" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\nmodule.exports = isIndex;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzSW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELElBQUlBLG1CQUFtQjtBQUV2Qiw0Q0FBNEMsR0FDNUMsSUFBSUMsV0FBVztBQUVmOzs7Ozs7O0NBT0MsR0FDRCxTQUFTQyxRQUFRQyxLQUFLLEVBQUVDLE1BQU07SUFDNUIsSUFBSUMsT0FBTyxPQUFPRjtJQUNsQkMsU0FBU0EsVUFBVSxPQUFPSixtQkFBbUJJO0lBRTdDLE9BQU8sQ0FBQyxDQUFDQSxVQUNOQyxDQUFBQSxRQUFRLFlBQ05BLFFBQVEsWUFBWUosU0FBU0ssSUFBSSxDQUFDSCxNQUFNLEtBQ3RDQSxRQUFRLENBQUMsS0FBS0EsUUFBUSxLQUFLLEtBQUtBLFFBQVFDO0FBQ2pEO0FBRUFHLE9BQU9DLE9BQU8sR0FBR04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNJbmRleC5qcz82NWJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgdW5zaWduZWQgaW50ZWdlciB2YWx1ZXMuICovXG52YXIgcmVJc1VpbnQgPSAvXig/OjB8WzEtOV1cXGQqKSQvO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBpbmRleC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcGFyYW0ge251bWJlcn0gW2xlbmd0aD1NQVhfU0FGRV9JTlRFR0VSXSBUaGUgdXBwZXIgYm91bmRzIG9mIGEgdmFsaWQgaW5kZXguXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGluZGV4LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzSW5kZXgodmFsdWUsIGxlbmd0aCkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgbGVuZ3RoID0gbGVuZ3RoID09IG51bGwgPyBNQVhfU0FGRV9JTlRFR0VSIDogbGVuZ3RoO1xuXG4gIHJldHVybiAhIWxlbmd0aCAmJlxuICAgICh0eXBlID09ICdudW1iZXInIHx8XG4gICAgICAodHlwZSAhPSAnc3ltYm9sJyAmJiByZUlzVWludC50ZXN0KHZhbHVlKSkpICYmXG4gICAgICAgICh2YWx1ZSA+IC0xICYmIHZhbHVlICUgMSA9PSAwICYmIHZhbHVlIDwgbGVuZ3RoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0luZGV4O1xuIl0sIm5hbWVzIjpbIk1BWF9TQUZFX0lOVEVHRVIiLCJyZUlzVWludCIsImlzSW5kZXgiLCJ2YWx1ZSIsImxlbmd0aCIsInR5cGUiLCJ0ZXN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isIndex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isKeyable.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_isKeyable.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */ \nfunction isKeyable(value) {\n    var type = typeof value;\n    return type == \"string\" || type == \"number\" || type == \"symbol\" || type == \"boolean\" ? value !== \"__proto__\" : value === null;\n}\nmodule.exports = isKeyable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzS2V5YWJsZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0NBTUM7QUFDRCxTQUFTQSxVQUFVQyxLQUFLO0lBQ3RCLElBQUlDLE9BQU8sT0FBT0Q7SUFDbEIsT0FBTyxRQUFTLFlBQVlDLFFBQVEsWUFBWUEsUUFBUSxZQUFZQSxRQUFRLFlBQ3ZFRCxVQUFVLGNBQ1ZBLFVBQVU7QUFDakI7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanM/ZDVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlIGZvciB1c2UgYXMgdW5pcXVlIG9iamVjdCBrZXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXlhYmxlKHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gKHR5cGUgPT0gJ3N0cmluZycgfHwgdHlwZSA9PSAnbnVtYmVyJyB8fCB0eXBlID09ICdzeW1ib2wnIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nKVxuICAgID8gKHZhbHVlICE9PSAnX19wcm90b19fJylcbiAgICA6ICh2YWx1ZSA9PT0gbnVsbCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNLZXlhYmxlO1xuIl0sIm5hbWVzIjpbImlzS2V5YWJsZSIsInZhbHVlIiwidHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isKeyable.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isMasked.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_isMasked.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar coreJsData = __webpack_require__(/*! ./_coreJsData */ \"(app-pages-browser)/./node_modules/lodash/_coreJsData.js\");\n/** Used to detect methods masquerading as native. */ var maskSrcKey = function() {\n    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || \"\");\n    return uid ? \"Symbol(src)_1.\" + uid : \"\";\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */ function isMasked(func) {\n    return !!maskSrcKey && maskSrcKey in func;\n}\nmodule.exports = isMasked;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzTWFza2VkLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6QixtREFBbUQsR0FDbkQsSUFBSUMsYUFBYztJQUNoQixJQUFJQyxNQUFNLFNBQVNDLElBQUksQ0FBQ0osY0FBY0EsV0FBV0ssSUFBSSxJQUFJTCxXQUFXSyxJQUFJLENBQUNDLFFBQVEsSUFBSTtJQUNyRixPQUFPSCxNQUFPLG1CQUFtQkEsTUFBTztBQUMxQztBQUVBOzs7Ozs7Q0FNQyxHQUNELFNBQVNJLFNBQVNDLElBQUk7SUFDcEIsT0FBTyxDQUFDLENBQUNOLGNBQWVBLGNBQWNNO0FBQ3hDO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNNYXNrZWQuanM/ZTRjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZUpzRGF0YSA9IHJlcXVpcmUoJy4vX2NvcmVKc0RhdGEnKTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1ldGhvZHMgbWFzcXVlcmFkaW5nIGFzIG5hdGl2ZS4gKi9cbnZhciBtYXNrU3JjS2V5ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgdWlkID0gL1teLl0rJC8uZXhlYyhjb3JlSnNEYXRhICYmIGNvcmVKc0RhdGEua2V5cyAmJiBjb3JlSnNEYXRhLmtleXMuSUVfUFJPVE8gfHwgJycpO1xuICByZXR1cm4gdWlkID8gKCdTeW1ib2woc3JjKV8xLicgKyB1aWQpIDogJyc7XG59KCkpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgZnVuY2AgaGFzIGl0cyBzb3VyY2UgbWFza2VkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgZnVuY2AgaXMgbWFza2VkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzTWFza2VkKGZ1bmMpIHtcbiAgcmV0dXJuICEhbWFza1NyY0tleSAmJiAobWFza1NyY0tleSBpbiBmdW5jKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc01hc2tlZDtcbiJdLCJuYW1lcyI6WyJjb3JlSnNEYXRhIiwicmVxdWlyZSIsIm1hc2tTcmNLZXkiLCJ1aWQiLCJleGVjIiwia2V5cyIsIklFX1BST1RPIiwiaXNNYXNrZWQiLCJmdW5jIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isMasked.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_isPrototype.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_isPrototype.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used for built-in method references. */ \nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */ function isPrototype(value) {\n    var Ctor = value && value.constructor, proto = typeof Ctor == \"function\" && Ctor.prototype || objectProto;\n    return value === proto;\n}\nmodule.exports = isPrototype;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2lzUHJvdG90eXBlLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUN6QyxJQUFJQSxjQUFjQyxPQUFPQyxTQUFTO0FBRWxDOzs7Ozs7Q0FNQyxHQUNELFNBQVNDLFlBQVlDLEtBQUs7SUFDeEIsSUFBSUMsT0FBT0QsU0FBU0EsTUFBTUUsV0FBVyxFQUNqQ0MsUUFBUSxPQUFRRixRQUFRLGNBQWNBLEtBQUtILFNBQVMsSUFBS0Y7SUFFN0QsT0FBT0ksVUFBVUc7QUFDbkI7QUFFQUMsT0FBT0MsT0FBTyxHQUFHTiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc1Byb3RvdHlwZS5qcz81MDExIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1Byb3RvdHlwZTtcbiJdLCJuYW1lcyI6WyJvYmplY3RQcm90byIsIk9iamVjdCIsInByb3RvdHlwZSIsImlzUHJvdG90eXBlIiwidmFsdWUiLCJDdG9yIiwiY29uc3RydWN0b3IiLCJwcm90byIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_isPrototype.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheClear.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_listCacheClear.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */ \nfunction listCacheClear() {\n    this.__data__ = [];\n    this.size = 0;\n}\nmodule.exports = listCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUNsZWFyLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Q0FNQztBQUNELFNBQVNBO0lBQ1AsSUFBSSxDQUFDQyxRQUFRLEdBQUcsRUFBRTtJQUNsQixJQUFJLENBQUNDLElBQUksR0FBRztBQUNkO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanM/NWY5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gW107XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlQ2xlYXI7XG4iXSwibmFtZXMiOlsibGlzdENhY2hlQ2xlYXIiLCJfX2RhdGFfXyIsInNpemUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js":
/*!*************************************************!*\
  !*** ./node_modules/lodash/_listCacheDelete.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n/** Used for built-in method references. */ var arrayProto = Array.prototype;\n/** Built-in value references. */ var splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ function listCacheDelete(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) {\n        return false;\n    }\n    var lastIndex = data.length - 1;\n    if (index == lastIndex) {\n        data.pop();\n    } else {\n        splice.call(data, index, 1);\n    }\n    --this.size;\n    return true;\n}\nmodule.exports = listCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFFM0IseUNBQXlDLEdBQ3pDLElBQUlDLGFBQWFDLE1BQU1DLFNBQVM7QUFFaEMsK0JBQStCLEdBQy9CLElBQUlDLFNBQVNILFdBQVdHLE1BQU07QUFFOUI7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxnQkFBZ0JDLEdBQUc7SUFDMUIsSUFBSUMsT0FBTyxJQUFJLENBQUNDLFFBQVEsRUFDcEJDLFFBQVFWLGFBQWFRLE1BQU1EO0lBRS9CLElBQUlHLFFBQVEsR0FBRztRQUNiLE9BQU87SUFDVDtJQUNBLElBQUlDLFlBQVlILEtBQUtJLE1BQU0sR0FBRztJQUM5QixJQUFJRixTQUFTQyxXQUFXO1FBQ3RCSCxLQUFLSyxHQUFHO0lBQ1YsT0FBTztRQUNMUixPQUFPUyxJQUFJLENBQUNOLE1BQU1FLE9BQU87SUFDM0I7SUFDQSxFQUFFLElBQUksQ0FBQ0ssSUFBSTtJQUNYLE9BQU87QUFDVDtBQUVBQyxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qcz8xMzg1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBsaXN0IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgbGFzdEluZGV4ID0gZGF0YS5sZW5ndGggLSAxO1xuICBpZiAoaW5kZXggPT0gbGFzdEluZGV4KSB7XG4gICAgZGF0YS5wb3AoKTtcbiAgfSBlbHNlIHtcbiAgICBzcGxpY2UuY2FsbChkYXRhLCBpbmRleCwgMSk7XG4gIH1cbiAgLS10aGlzLnNpemU7XG4gIHJldHVybiB0cnVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZURlbGV0ZTtcbiJdLCJuYW1lcyI6WyJhc3NvY0luZGV4T2YiLCJyZXF1aXJlIiwiYXJyYXlQcm90byIsIkFycmF5IiwicHJvdG90eXBlIiwic3BsaWNlIiwibGlzdENhY2hlRGVsZXRlIiwia2V5IiwiZGF0YSIsIl9fZGF0YV9fIiwiaW5kZXgiLCJsYXN0SW5kZXgiLCJsZW5ndGgiLCJwb3AiLCJjYWxsIiwic2l6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheGet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheGet.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function listCacheGet(key) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    return index < 0 ? undefined : data[index][1];\n}\nmodule.exports = listCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUdldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFFM0I7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxhQUFhQyxHQUFHO0lBQ3ZCLElBQUlDLE9BQU8sSUFBSSxDQUFDQyxRQUFRLEVBQ3BCQyxRQUFRTixhQUFhSSxNQUFNRDtJQUUvQixPQUFPRyxRQUFRLElBQUlDLFlBQVlILElBQUksQ0FBQ0UsTUFBTSxDQUFDLEVBQUU7QUFDL0M7QUFFQUUsT0FBT0MsT0FBTyxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanM/YzIzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogZGF0YVtpbmRleF1bMV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlR2V0O1xuIl0sIm5hbWVzIjpbImFzc29jSW5kZXhPZiIsInJlcXVpcmUiLCJsaXN0Q2FjaGVHZXQiLCJrZXkiLCJkYXRhIiwiX19kYXRhX18iLCJpbmRleCIsInVuZGVmaW5lZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheHas.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheHas.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function listCacheHas(key) {\n    return assocIndexOf(this.__data__, key) > -1;\n}\nmodule.exports = listCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUhhcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFFM0I7Ozs7Ozs7O0NBUUMsR0FDRCxTQUFTQyxhQUFhQyxHQUFHO0lBQ3ZCLE9BQU9ILGFBQWEsSUFBSSxDQUFDSSxRQUFRLEVBQUVELE9BQU8sQ0FBQztBQUM3QztBQUVBRSxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZUhhcy5qcz9kOWY1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlSGFzO1xuIl0sIm5hbWVzIjpbImFzc29jSW5kZXhPZiIsInJlcXVpcmUiLCJsaXN0Q2FjaGVIYXMiLCJrZXkiLCJfX2RhdGFfXyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_listCacheSet.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_listCacheSet.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ \"(app-pages-browser)/./node_modules/lodash/_assocIndexOf.js\");\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */ function listCacheSet(key, value) {\n    var data = this.__data__, index = assocIndexOf(data, key);\n    if (index < 0) {\n        ++this.size;\n        data.push([\n            key,\n            value\n        ]);\n    } else {\n        data[index][1] = value;\n    }\n    return this;\n}\nmodule.exports = listCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZUFBZUMsbUJBQU9BLENBQUM7QUFFM0I7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0MsYUFBYUMsR0FBRyxFQUFFQyxLQUFLO0lBQzlCLElBQUlDLE9BQU8sSUFBSSxDQUFDQyxRQUFRLEVBQ3BCQyxRQUFRUCxhQUFhSyxNQUFNRjtJQUUvQixJQUFJSSxRQUFRLEdBQUc7UUFDYixFQUFFLElBQUksQ0FBQ0MsSUFBSTtRQUNYSCxLQUFLSSxJQUFJLENBQUM7WUFBQ047WUFBS0M7U0FBTTtJQUN4QixPQUFPO1FBQ0xDLElBQUksQ0FBQ0UsTUFBTSxDQUFDLEVBQUUsR0FBR0g7SUFDbkI7SUFDQSxPQUFPLElBQUk7QUFDYjtBQUVBTSxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qcz9mYTA4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBhc3NvY0luZGV4T2YgPSByZXF1aXJlKCcuL19hc3NvY0luZGV4T2YnKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBsaXN0IGNhY2hlIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBsaXN0IGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICArK3RoaXMuc2l6ZTtcbiAgICBkYXRhLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSBlbHNlIHtcbiAgICBkYXRhW2luZGV4XVsxXSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZVNldDtcbiJdLCJuYW1lcyI6WyJhc3NvY0luZGV4T2YiLCJyZXF1aXJlIiwibGlzdENhY2hlU2V0Iiwia2V5IiwidmFsdWUiLCJkYXRhIiwiX19kYXRhX18iLCJpbmRleCIsInNpemUiLCJwdXNoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_listCacheSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js":
/*!***********************************************!*\
  !*** ./node_modules/lodash/_mapCacheClear.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar Hash = __webpack_require__(/*! ./_Hash */ \"(app-pages-browser)/./node_modules/lodash/_Hash.js\"), ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"), Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\");\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */ function mapCacheClear() {\n    this.size = 0;\n    this.__data__ = {\n        \"hash\": new Hash,\n        \"map\": new (Map || ListCache),\n        \"string\": new Hash\n    };\n}\nmodule.exports = mapCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlQ2xlYXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLE9BQU9DLG1CQUFPQSxDQUFDLHNFQUNmQyxZQUFZRCxtQkFBT0EsQ0FBQyxnRkFDcEJFLE1BQU1GLG1CQUFPQSxDQUFDO0FBRWxCOzs7Ozs7Q0FNQyxHQUNELFNBQVNHO0lBQ1AsSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDWixJQUFJLENBQUNDLFFBQVEsR0FBRztRQUNkLFFBQVEsSUFBSU47UUFDWixPQUFPLElBQUtHLENBQUFBLE9BQU9ELFNBQVE7UUFDM0IsVUFBVSxJQUFJRjtJQUNoQjtBQUNGO0FBRUFPLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVDbGVhci5qcz85YTExIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBIYXNoID0gcmVxdWlyZSgnLi9fSGFzaCcpLFxuICAgIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUNsZWFyKCkge1xuICB0aGlzLnNpemUgPSAwO1xuICB0aGlzLl9fZGF0YV9fID0ge1xuICAgICdoYXNoJzogbmV3IEhhc2gsXG4gICAgJ21hcCc6IG5ldyAoTWFwIHx8IExpc3RDYWNoZSksXG4gICAgJ3N0cmluZyc6IG5ldyBIYXNoXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVDbGVhcjtcbiJdLCJuYW1lcyI6WyJIYXNoIiwicmVxdWlyZSIsIkxpc3RDYWNoZSIsIk1hcCIsIm1hcENhY2hlQ2xlYXIiLCJzaXplIiwiX19kYXRhX18iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_mapCacheDelete.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ function mapCacheDelete(key) {\n    var result = getMapData(this, key)[\"delete\"](key);\n    this.size -= result ? 1 : 0;\n    return result;\n}\nmodule.exports = mapCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6Qjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNDLGVBQWVDLEdBQUc7SUFDekIsSUFBSUMsU0FBU0osV0FBVyxJQUFJLEVBQUVHLElBQUksQ0FBQyxTQUFTLENBQUNBO0lBQzdDLElBQUksQ0FBQ0UsSUFBSSxJQUFJRCxTQUFTLElBQUk7SUFDMUIsT0FBT0E7QUFDVDtBQUVBRSxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlRGVsZXRlLmpzPzIyMTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE1hcERhdGEgPSByZXF1aXJlKCcuL19nZXRNYXBEYXRhJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IGdldE1hcERhdGEodGhpcywga2V5KVsnZGVsZXRlJ10oa2V5KTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlRGVsZXRlO1xuIl0sIm5hbWVzIjpbImdldE1hcERhdGEiLCJyZXF1aXJlIiwibWFwQ2FjaGVEZWxldGUiLCJrZXkiLCJyZXN1bHQiLCJzaXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheGet.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ function mapCacheGet(key) {\n    return getMapData(this, key).get(key);\n}\nmodule.exports = mapCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6Qjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNDLFlBQVlDLEdBQUc7SUFDdEIsT0FBT0gsV0FBVyxJQUFJLEVBQUVHLEtBQUtDLEdBQUcsQ0FBQ0Q7QUFDbkM7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUdldC5qcz8xMjAyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVHZXQ7XG4iXSwibmFtZXMiOlsiZ2V0TWFwRGF0YSIsInJlcXVpcmUiLCJtYXBDYWNoZUdldCIsImtleSIsImdldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheHas.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ function mapCacheHas(key) {\n    return getMapData(this, key).has(key);\n}\nmodule.exports = mapCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6Qjs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNDLFlBQVlDLEdBQUc7SUFDdEIsT0FBT0gsV0FBVyxJQUFJLEVBQUVHLEtBQUtDLEdBQUcsQ0FBQ0Q7QUFDbkM7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUhhcy5qcz82YjI1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIG1hcCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmhhcyhrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlSGFzO1xuIl0sIm5hbWVzIjpbImdldE1hcERhdGEiLCJyZXF1aXJlIiwibWFwQ2FjaGVIYXMiLCJrZXkiLCJoYXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_mapCacheSet.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getMapData = __webpack_require__(/*! ./_getMapData */ \"(app-pages-browser)/./node_modules/lodash/_getMapData.js\");\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */ function mapCacheSet(key, value) {\n    var data = getMapData(this, key), size = data.size;\n    data.set(key, value);\n    this.size += data.size == size ? 0 : 1;\n    return this;\n}\nmodule.exports = mapCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxhQUFhQyxtQkFBT0EsQ0FBQztBQUV6Qjs7Ozs7Ozs7O0NBU0MsR0FDRCxTQUFTQyxZQUFZQyxHQUFHLEVBQUVDLEtBQUs7SUFDN0IsSUFBSUMsT0FBT0wsV0FBVyxJQUFJLEVBQUVHLE1BQ3hCRyxPQUFPRCxLQUFLQyxJQUFJO0lBRXBCRCxLQUFLRSxHQUFHLENBQUNKLEtBQUtDO0lBQ2QsSUFBSSxDQUFDRSxJQUFJLElBQUlELEtBQUtDLElBQUksSUFBSUEsT0FBTyxJQUFJO0lBQ3JDLE9BQU8sSUFBSTtBQUNiO0FBRUFFLE9BQU9DLE9BQU8sR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVTZXQuanM/Yzg2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TWFwRGF0YSA9IHJlcXVpcmUoJy4vX2dldE1hcERhdGEnKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBtYXAgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbWFwIGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZVNldChrZXksIHZhbHVlKSB7XG4gIHZhciBkYXRhID0gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLFxuICAgICAgc2l6ZSA9IGRhdGEuc2l6ZTtcblxuICBkYXRhLnNldChrZXksIHZhbHVlKTtcbiAgdGhpcy5zaXplICs9IGRhdGEuc2l6ZSA9PSBzaXplID8gMCA6IDE7XG4gIHJldHVybiB0aGlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlU2V0O1xuIl0sIm5hbWVzIjpbImdldE1hcERhdGEiLCJyZXF1aXJlIiwibWFwQ2FjaGVTZXQiLCJrZXkiLCJ2YWx1ZSIsImRhdGEiLCJzaXplIiwic2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapCacheSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_mapToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_mapToArray.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */ \nfunction mapToArray(map) {\n    var index = -1, result = Array(map.size);\n    map.forEach(function(value, key) {\n        result[++index] = [\n            key,\n            value\n        ];\n    });\n    return result;\n}\nmodule.exports = mapToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcFRvQXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztDQU1DO0FBQ0QsU0FBU0EsV0FBV0MsR0FBRztJQUNyQixJQUFJQyxRQUFRLENBQUMsR0FDVEMsU0FBU0MsTUFBTUgsSUFBSUksSUFBSTtJQUUzQkosSUFBSUssT0FBTyxDQUFDLFNBQVNDLEtBQUssRUFBRUMsR0FBRztRQUM3QkwsTUFBTSxDQUFDLEVBQUVELE1BQU0sR0FBRztZQUFDTTtZQUFLRDtTQUFNO0lBQ2hDO0lBQ0EsT0FBT0o7QUFDVDtBQUVBTSxPQUFPQyxPQUFPLEdBQUdWIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcFRvQXJyYXkuanM/Nzk4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnRzIGBtYXBgIHRvIGl0cyBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXG4gKi9cbmZ1bmN0aW9uIG1hcFRvQXJyYXkobWFwKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobWFwLnNpemUpO1xuXG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcFRvQXJyYXk7XG4iXSwibmFtZXMiOlsibWFwVG9BcnJheSIsIm1hcCIsImluZGV4IiwicmVzdWx0IiwiQXJyYXkiLCJzaXplIiwiZm9yRWFjaCIsInZhbHVlIiwia2V5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_mapToArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nativeCreate.js":
/*!**********************************************!*\
  !*** ./node_modules/lodash/_nativeCreate.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar getNative = __webpack_require__(/*! ./_getNative */ \"(app-pages-browser)/./node_modules/lodash/_getNative.js\");\n/* Built-in method references that are verified to be native. */ var nativeCreate = getNative(Object, \"create\");\nmodule.exports = nativeCreate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUNyZWF0ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsWUFBWUMsbUJBQU9BLENBQUM7QUFFeEIsOERBQThELEdBQzlELElBQUlDLGVBQWVGLFVBQVVHLFFBQVE7QUFFckNDLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbmF0aXZlQ3JlYXRlLmpzPzhmMDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGdldE5hdGl2ZSA9IHJlcXVpcmUoJy4vX2dldE5hdGl2ZScpO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgbmF0aXZlQ3JlYXRlID0gZ2V0TmF0aXZlKE9iamVjdCwgJ2NyZWF0ZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUNyZWF0ZTtcbiJdLCJuYW1lcyI6WyJnZXROYXRpdmUiLCJyZXF1aXJlIiwibmF0aXZlQ3JlYXRlIiwiT2JqZWN0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nativeCreate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nativeKeys.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_nativeKeys.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar overArg = __webpack_require__(/*! ./_overArg */ \"(app-pages-browser)/./node_modules/lodash/_overArg.js\");\n/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFVBQVVDLG1CQUFPQSxDQUFDO0FBRXRCLHNGQUFzRixHQUN0RixJQUFJQyxhQUFhRixRQUFRRyxPQUFPQyxJQUFJLEVBQUVEO0FBRXRDRSxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUtleXMuanM/MWVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgb3ZlckFyZyA9IHJlcXVpcmUoJy4vX292ZXJBcmcnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgZm9yIHRob3NlIHdpdGggdGhlIHNhbWUgbmFtZSBhcyBvdGhlciBgbG9kYXNoYCBtZXRob2RzLiAqL1xudmFyIG5hdGl2ZUtleXMgPSBvdmVyQXJnKE9iamVjdC5rZXlzLCBPYmplY3QpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdGl2ZUtleXM7XG4iXSwibmFtZXMiOlsib3ZlckFyZyIsInJlcXVpcmUiLCJuYXRpdmVLZXlzIiwiT2JqZWN0Iiwia2V5cyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nativeKeys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_nodeUtil.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_nodeUtil.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n\nvar freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\");\n/** Detect free variable `exports`. */ var freeExports =  true && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */ var freeModule = freeExports && \"object\" == \"object\" && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */ var freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */ var nodeUtil = function() {\n    try {\n        // Use `util.types` for Node.js 10+.\n        var types = freeModule && freeModule.require && freeModule.require(\"util\").types;\n        if (types) {\n            return types;\n        }\n        // Legacy `process.binding('util')` for Node.js < 10.\n        return freeProcess && freeProcess.binding && freeProcess.binding(\"util\");\n    } catch (e) {}\n}();\nmodule.exports = nodeUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25vZGVVdGlsLmpzIiwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUM7QUFFekIsb0NBQW9DLEdBQ3BDLElBQUlDLGNBQWMsS0FBa0IsSUFBWUMsV0FBVyxDQUFDQSxRQUFRQyxRQUFRLElBQUlEO0FBRWhGLG1DQUFtQyxHQUNuQyxJQUFJRSxhQUFhSCxlQUFlLFFBQWFJLElBQUksWUFBWUEsVUFBVSxDQUFDQSxPQUFPRixRQUFRLElBQUlFO0FBRTNGLDREQUE0RCxHQUM1RCxJQUFJQyxnQkFBZ0JGLGNBQWNBLFdBQVdGLE9BQU8sS0FBS0Q7QUFFekQsaURBQWlELEdBQ2pELElBQUlNLGNBQWNELGlCQUFpQlAsV0FBV1MsT0FBTztBQUVyRCwyQ0FBMkMsR0FDM0MsSUFBSUMsV0FBWTtJQUNkLElBQUk7UUFDRixvQ0FBb0M7UUFDcEMsSUFBSUMsUUFBUU4sY0FBY0EsV0FBV0osT0FBTyxJQUFJSSxXQUFXSixPQUFPLENBQUMsUUFBUVUsS0FBSztRQUVoRixJQUFJQSxPQUFPO1lBQ1QsT0FBT0E7UUFDVDtRQUVBLHFEQUFxRDtRQUNyRCxPQUFPSCxlQUFlQSxZQUFZSSxPQUFPLElBQUlKLFlBQVlJLE9BQU8sQ0FBQztJQUNuRSxFQUFFLE9BQU9DLEdBQUcsQ0FBQztBQUNmO0FBRUFQLE9BQU9ILE9BQU8sR0FBR08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbm9kZVV0aWwuanM/OTU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZnJlZUdsb2JhbCA9IHJlcXVpcmUoJy4vX2ZyZWVHbG9iYWwnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICAvLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy5cbiAgICB2YXIgdHlwZXMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUucmVxdWlyZSAmJiBmcmVlTW9kdWxlLnJlcXVpcmUoJ3V0aWwnKS50eXBlcztcblxuICAgIGlmICh0eXBlcykge1xuICAgICAgcmV0dXJuIHR5cGVzO1xuICAgIH1cblxuICAgIC8vIExlZ2FjeSBgcHJvY2Vzcy5iaW5kaW5nKCd1dGlsJylgIGZvciBOb2RlLmpzIDwgMTAuXG4gICAgcmV0dXJuIGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZygndXRpbCcpO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxubW9kdWxlLmV4cG9ydHMgPSBub2RlVXRpbDtcbiJdLCJuYW1lcyI6WyJmcmVlR2xvYmFsIiwicmVxdWlyZSIsImZyZWVFeHBvcnRzIiwiZXhwb3J0cyIsIm5vZGVUeXBlIiwiZnJlZU1vZHVsZSIsIm1vZHVsZSIsIm1vZHVsZUV4cG9ydHMiLCJmcmVlUHJvY2VzcyIsInByb2Nlc3MiLCJub2RlVXRpbCIsInR5cGVzIiwiYmluZGluZyIsImUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_nodeUtil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used for built-in method references. */ \nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */ var nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */ function objectToString(value) {\n    return nativeObjectToString.call(value);\n}\nmodule.exports = objectToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX29iamVjdFRvU3RyaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUN6QyxJQUFJQSxjQUFjQyxPQUFPQyxTQUFTO0FBRWxDOzs7O0NBSUMsR0FDRCxJQUFJQyx1QkFBdUJILFlBQVlJLFFBQVE7QUFFL0M7Ozs7OztDQU1DLEdBQ0QsU0FBU0MsZUFBZUMsS0FBSztJQUMzQixPQUFPSCxxQkFBcUJJLElBQUksQ0FBQ0Q7QUFDbkM7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vYmplY3RUb1N0cmluZy5qcz9kZmRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9iamVjdFRvU3RyaW5nO1xuIl0sIm5hbWVzIjpbIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwibmF0aXZlT2JqZWN0VG9TdHJpbmciLCJ0b1N0cmluZyIsIm9iamVjdFRvU3RyaW5nIiwidmFsdWUiLCJjYWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_objectToString.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_overArg.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/_overArg.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */ \nfunction overArg(func, transform) {\n    return function(arg) {\n        return func(transform(arg));\n    };\n}\nmodule.exports = overArg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX292ZXJBcmcuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Q0FPQztBQUNELFNBQVNBLFFBQVFDLElBQUksRUFBRUMsU0FBUztJQUM5QixPQUFPLFNBQVNDLEdBQUc7UUFDakIsT0FBT0YsS0FBS0MsVUFBVUM7SUFDeEI7QUFDRjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX292ZXJBcmcuanM/YjBjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZXMgYSB1bmFyeSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgIHdpdGggaXRzIGFyZ3VtZW50IHRyYW5zZm9ybWVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSBhcmd1bWVudCB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlckFyZyhmdW5jLCB0cmFuc2Zvcm0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBmdW5jKHRyYW5zZm9ybShhcmcpKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvdmVyQXJnO1xuIl0sIm5hbWVzIjpbIm92ZXJBcmciLCJmdW5jIiwidHJhbnNmb3JtIiwiYXJnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_overArg.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"(app-pages-browser)/./node_modules/lodash/_freeGlobal.js\");\n/** Detect free variable `self`. */ var freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\n/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function(\"return this\")();\nmodule.exports = root;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3Jvb3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDO0FBRXpCLGlDQUFpQyxHQUNqQyxJQUFJQyxXQUFXLE9BQU9DLFFBQVEsWUFBWUEsUUFBUUEsS0FBS0MsTUFBTSxLQUFLQSxVQUFVRDtBQUU1RSw4Q0FBOEMsR0FDOUMsSUFBSUUsT0FBT0wsY0FBY0UsWUFBWUksU0FBUztBQUU5Q0MsT0FBT0MsT0FBTyxHQUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzP2VkYmYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZyZWVHbG9iYWwgPSByZXF1aXJlKCcuL19mcmVlR2xvYmFsJyk7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb290O1xuIl0sIm5hbWVzIjpbImZyZWVHbG9iYWwiLCJyZXF1aXJlIiwiZnJlZVNlbGYiLCJzZWxmIiwiT2JqZWN0Iiwicm9vdCIsIkZ1bmN0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_root.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheAdd.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used to stand-in for `undefined` hash values. */ \nvar HASH_UNDEFINED = \"__lodash_hash_undefined__\";\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */ function setCacheAdd(value) {\n    this.__data__.set(value, HASH_UNDEFINED);\n    return this;\n}\nmodule.exports = setCacheAdd;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGtEQUFrRDtBQUNsRCxJQUFJQSxpQkFBaUI7QUFFckI7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0MsWUFBWUMsS0FBSztJQUN4QixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsR0FBRyxDQUFDRixPQUFPRjtJQUN6QixPQUFPLElBQUk7QUFDYjtBQUVBSyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlQWRkLmpzPzBkY2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgdG8gc3RhbmQtaW4gZm9yIGB1bmRlZmluZWRgIGhhc2ggdmFsdWVzLiAqL1xudmFyIEhBU0hfVU5ERUZJTkVEID0gJ19fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18nO1xuXG4vKipcbiAqIEFkZHMgYHZhbHVlYCB0byB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGFkZFxuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAYWxpYXMgcHVzaFxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2FjaGUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc2V0Q2FjaGVBZGQodmFsdWUpIHtcbiAgdGhpcy5fX2RhdGFfXy5zZXQodmFsdWUsIEhBU0hfVU5ERUZJTkVEKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0Q2FjaGVBZGQ7XG4iXSwibmFtZXMiOlsiSEFTSF9VTkRFRklORUQiLCJzZXRDYWNoZUFkZCIsInZhbHVlIiwiX19kYXRhX18iLCJzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setCacheAdd.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setCacheHas.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_setCacheHas.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */ \nfunction setCacheHas(value) {\n    return this.__data__.has(value);\n}\nmodule.exports = setCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldENhY2hlSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDO0FBQ0QsU0FBU0EsWUFBWUMsS0FBSztJQUN4QixPQUFPLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxHQUFHLENBQUNGO0FBQzNCO0FBRUFHLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc2V0Q2FjaGVIYXMuanM/MzFmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGluIHRoZSBhcnJheSBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgU2V0Q2FjaGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGZvdW5kLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIHNldENhY2hlSGFzKHZhbHVlKSB7XG4gIHJldHVybiB0aGlzLl9fZGF0YV9fLmhhcyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0Q2FjaGVIYXM7XG4iXSwibmFtZXMiOlsic2V0Q2FjaGVIYXMiLCJ2YWx1ZSIsIl9fZGF0YV9fIiwiaGFzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setCacheHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_setToArray.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_setToArray.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */ \nfunction setToArray(set) {\n    var index = -1, result = Array(set.size);\n    set.forEach(function(value) {\n        result[++index] = value;\n    });\n    return result;\n}\nmodule.exports = setToArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztDQU1DO0FBQ0QsU0FBU0EsV0FBV0MsR0FBRztJQUNyQixJQUFJQyxRQUFRLENBQUMsR0FDVEMsU0FBU0MsTUFBTUgsSUFBSUksSUFBSTtJQUUzQkosSUFBSUssT0FBTyxDQUFDLFNBQVNDLEtBQUs7UUFDeEJKLE1BQU0sQ0FBQyxFQUFFRCxNQUFNLEdBQUdLO0lBQ3BCO0lBQ0EsT0FBT0o7QUFDVDtBQUVBSyxPQUFPQyxPQUFPLEdBQUdUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3NldFRvQXJyYXkuanM/Y2Q0MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnZlcnRzIGBzZXRgIHRvIGFuIGFycmF5IG9mIGl0cyB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzZXQgVGhlIHNldCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSB2YWx1ZXMuXG4gKi9cbmZ1bmN0aW9uIHNldFRvQXJyYXkoc2V0KSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkoc2V0LnNpemUpO1xuXG4gIHNldC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmVzdWx0WysraW5kZXhdID0gdmFsdWU7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldFRvQXJyYXk7XG4iXSwibmFtZXMiOlsic2V0VG9BcnJheSIsInNldCIsImluZGV4IiwicmVzdWx0IiwiQXJyYXkiLCJzaXplIiwiZm9yRWFjaCIsInZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_setToArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackClear.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_stackClear.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\");\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */ function stackClear() {\n    this.__data__ = new ListCache;\n    this.size = 0;\n}\nmodule.exports = stackClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrQ2xlYXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLFlBQVlDLG1CQUFPQSxDQUFDO0FBRXhCOzs7Ozs7Q0FNQyxHQUNELFNBQVNDO0lBQ1AsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSUg7SUFDcEIsSUFBSSxDQUFDSSxJQUFJLEdBQUc7QUFDZDtBQUVBQyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrQ2xlYXIuanM/ODc5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqL1xuZnVuY3Rpb24gc3RhY2tDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5ldyBMaXN0Q2FjaGU7XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tDbGVhcjtcbiJdLCJuYW1lcyI6WyJMaXN0Q2FjaGUiLCJyZXF1aXJlIiwic3RhY2tDbGVhciIsIl9fZGF0YV9fIiwic2l6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackClear.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackDelete.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/_stackDelete.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */ \nfunction stackDelete(key) {\n    var data = this.__data__, result = data[\"delete\"](key);\n    this.size = data.size;\n    return result;\n}\nmodule.exports = stackDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrRGVsZXRlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDO0FBQ0QsU0FBU0EsWUFBWUMsR0FBRztJQUN0QixJQUFJQyxPQUFPLElBQUksQ0FBQ0MsUUFBUSxFQUNwQkMsU0FBU0YsSUFBSSxDQUFDLFNBQVMsQ0FBQ0Q7SUFFNUIsSUFBSSxDQUFDSSxJQUFJLEdBQUdILEtBQUtHLElBQUk7SUFDckIsT0FBT0Q7QUFDVDtBQUVBRSxPQUFPQyxPQUFPLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrRGVsZXRlLmpzP2RkYjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgc3RhY2suXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIHJlc3VsdCA9IGRhdGFbJ2RlbGV0ZSddKGtleSk7XG5cbiAgdGhpcy5zaXplID0gZGF0YS5zaXplO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrRGVsZXRlO1xuIl0sIm5hbWVzIjpbInN0YWNrRGVsZXRlIiwia2V5IiwiZGF0YSIsIl9fZGF0YV9fIiwicmVzdWx0Iiwic2l6ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackDelete.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackGet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackGet.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */ \nfunction stackGet(key) {\n    return this.__data__.get(key);\n}\nmodule.exports = stackGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrR2V0LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDO0FBQ0QsU0FBU0EsU0FBU0MsR0FBRztJQUNuQixPQUFPLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxHQUFHLENBQUNGO0FBQzNCO0FBRUFHLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tHZXQuanM/NzkwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tHZXQ7XG4iXSwibmFtZXMiOlsic3RhY2tHZXQiLCJrZXkiLCJfX2RhdGFfXyIsImdldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackGet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackHas.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackHas.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */ \nfunction stackHas(key) {\n    return this.__data__.has(key);\n}\nmodule.exports = stackHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrSGFzLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztDQVFDO0FBQ0QsU0FBU0EsU0FBU0MsR0FBRztJQUNuQixPQUFPLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxHQUFHLENBQUNGO0FBQzNCO0FBRUFHLE9BQU9DLE9BQU8sR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RhY2tIYXMuanM/MjY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIHN0YWNrIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIFN0YWNrXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc3RhY2tIYXMoa2V5KSB7XG4gIHJldHVybiB0aGlzLl9fZGF0YV9fLmhhcyhrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0YWNrSGFzO1xuIl0sIm5hbWVzIjpbInN0YWNrSGFzIiwia2V5IiwiX19kYXRhX18iLCJoYXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackHas.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_stackSet.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_stackSet.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ListCache = __webpack_require__(/*! ./_ListCache */ \"(app-pages-browser)/./node_modules/lodash/_ListCache.js\"), Map = __webpack_require__(/*! ./_Map */ \"(app-pages-browser)/./node_modules/lodash/_Map.js\"), MapCache = __webpack_require__(/*! ./_MapCache */ \"(app-pages-browser)/./node_modules/lodash/_MapCache.js\");\n/** Used as the size to enable large array optimizations. */ var LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */ function stackSet(key, value) {\n    var data = this.__data__;\n    if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n            pairs.push([\n                key,\n                value\n            ]);\n            this.size = ++data.size;\n            return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n    }\n    data.set(key, value);\n    this.size = data.size;\n    return this;\n}\nmodule.exports = stackSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrU2V0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxZQUFZQyxtQkFBT0EsQ0FBQyxnRkFDcEJDLE1BQU1ELG1CQUFPQSxDQUFDLG9FQUNkRSxXQUFXRixtQkFBT0EsQ0FBQztBQUV2QiwwREFBMEQsR0FDMUQsSUFBSUcsbUJBQW1CO0FBRXZCOzs7Ozs7Ozs7Q0FTQyxHQUNELFNBQVNDLFNBQVNDLEdBQUcsRUFBRUMsS0FBSztJQUMxQixJQUFJQyxPQUFPLElBQUksQ0FBQ0MsUUFBUTtJQUN4QixJQUFJRCxnQkFBZ0JSLFdBQVc7UUFDN0IsSUFBSVUsUUFBUUYsS0FBS0MsUUFBUTtRQUN6QixJQUFJLENBQUNQLE9BQVFRLE1BQU1DLE1BQU0sR0FBR1AsbUJBQW1CLEdBQUk7WUFDakRNLE1BQU1FLElBQUksQ0FBQztnQkFBQ047Z0JBQUtDO2FBQU07WUFDdkIsSUFBSSxDQUFDTSxJQUFJLEdBQUcsRUFBRUwsS0FBS0ssSUFBSTtZQUN2QixPQUFPLElBQUk7UUFDYjtRQUNBTCxPQUFPLElBQUksQ0FBQ0MsUUFBUSxHQUFHLElBQUlOLFNBQVNPO0lBQ3RDO0lBQ0FGLEtBQUtNLEdBQUcsQ0FBQ1IsS0FBS0M7SUFDZCxJQUFJLENBQUNNLElBQUksR0FBR0wsS0FBS0ssSUFBSTtJQUNyQixPQUFPLElBQUk7QUFDYjtBQUVBRSxPQUFPQyxPQUFPLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3N0YWNrU2V0LmpzPzRlNTciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIExpc3RDYWNoZSA9IHJlcXVpcmUoJy4vX0xpc3RDYWNoZScpLFxuICAgIE1hcCA9IHJlcXVpcmUoJy4vX01hcCcpLFxuICAgIE1hcENhY2hlID0gcmVxdWlyZSgnLi9fTWFwQ2FjaGUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIHNpemUgdG8gZW5hYmxlIGxhcmdlIGFycmF5IG9wdGltaXphdGlvbnMuICovXG52YXIgTEFSR0VfQVJSQVlfU0laRSA9IDIwMDtcblxuLyoqXG4gKiBTZXRzIHRoZSBzdGFjayBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBzdGFjayBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc3RhY2tTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChkYXRhIGluc3RhbmNlb2YgTGlzdENhY2hlKSB7XG4gICAgdmFyIHBhaXJzID0gZGF0YS5fX2RhdGFfXztcbiAgICBpZiAoIU1hcCB8fCAocGFpcnMubGVuZ3RoIDwgTEFSR0VfQVJSQVlfU0laRSAtIDEpKSB7XG4gICAgICBwYWlycy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICB0aGlzLnNpemUgPSArK2RhdGEuc2l6ZTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZShwYWlycyk7XG4gIH1cbiAgZGF0YS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RhY2tTZXQ7XG4iXSwibmFtZXMiOlsiTGlzdENhY2hlIiwicmVxdWlyZSIsIk1hcCIsIk1hcENhY2hlIiwiTEFSR0VfQVJSQVlfU0laRSIsInN0YWNrU2V0Iiwia2V5IiwidmFsdWUiLCJkYXRhIiwiX19kYXRhX18iLCJwYWlycyIsImxlbmd0aCIsInB1c2giLCJzaXplIiwic2V0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_stackSet.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/_toSource.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/_toSource.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used for built-in method references. */ \nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */ var funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */ function toSource(func) {\n    if (func != null) {\n        try {\n            return funcToString.call(func);\n        } catch (e) {}\n        try {\n            return func + \"\";\n        } catch (e) {}\n    }\n    return \"\";\n}\nmodule.exports = toSource;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvU291cmNlLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlDQUF5QztBQUN6QyxJQUFJQSxZQUFZQyxTQUFTQyxTQUFTO0FBRWxDLHdEQUF3RCxHQUN4RCxJQUFJQyxlQUFlSCxVQUFVSSxRQUFRO0FBRXJDOzs7Ozs7Q0FNQyxHQUNELFNBQVNDLFNBQVNDLElBQUk7SUFDcEIsSUFBSUEsUUFBUSxNQUFNO1FBQ2hCLElBQUk7WUFDRixPQUFPSCxhQUFhSSxJQUFJLENBQUNEO1FBQzNCLEVBQUUsT0FBT0UsR0FBRyxDQUFDO1FBQ2IsSUFBSTtZQUNGLE9BQVFGLE9BQU87UUFDakIsRUFBRSxPQUFPRSxHQUFHLENBQUM7SUFDZjtJQUNBLE9BQU87QUFDVDtBQUVBQyxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvU291cmNlLmpzP2FiYmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRvU291cmNlO1xuIl0sIm5hbWVzIjpbImZ1bmNQcm90byIsIkZ1bmN0aW9uIiwicHJvdG90eXBlIiwiZnVuY1RvU3RyaW5nIiwidG9TdHJpbmciLCJ0b1NvdXJjZSIsImZ1bmMiLCJjYWxsIiwiZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/_toSource.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/eq.js":
/*!***********************************!*\
  !*** ./node_modules/lodash/eq.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */ \nfunction eq(value, other) {\n    return value === other || value !== value && other !== other;\n}\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0ErQkM7QUFDRCxTQUFTQSxHQUFHQyxLQUFLLEVBQUVDLEtBQUs7SUFDdEIsT0FBT0QsVUFBVUMsU0FBVUQsVUFBVUEsU0FBU0MsVUFBVUE7QUFDMUQ7QUFFQUMsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2VxLmpzPzgyZDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJmb3JtcyBhXG4gKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoJ2EnLCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoTmFOLCBOYU4pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCAodmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXE7XG4iXSwibmFtZXMiOlsiZXEiLCJ2YWx1ZSIsIm90aGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/eq.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArguments.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArguments.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ \"(app-pages-browser)/./node_modules/lodash/_baseIsArguments.js\"), isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"(app-pages-browser)/./node_modules/lodash/isObjectLike.js\");\n/** Used for built-in method references. */ var objectProto = Object.prototype;\n/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */ var propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */ var isArguments = baseIsArguments(function() {\n    return arguments;\n}()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, \"callee\") && !propertyIsEnumerable.call(value, \"callee\");\n};\nmodule.exports = isArguments;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcmd1bWVudHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGtCQUFrQkMsbUJBQU9BLENBQUMsNEZBQzFCQyxlQUFlRCxtQkFBT0EsQ0FBQztBQUUzQix5Q0FBeUMsR0FDekMsSUFBSUUsY0FBY0MsT0FBT0MsU0FBUztBQUVsQyw4Q0FBOEMsR0FDOUMsSUFBSUMsaUJBQWlCSCxZQUFZRyxjQUFjO0FBRS9DLCtCQUErQixHQUMvQixJQUFJQyx1QkFBdUJKLFlBQVlJLG9CQUFvQjtBQUUzRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FpQkMsR0FDRCxJQUFJQyxjQUFjUixnQkFBZ0I7SUFBYSxPQUFPUztBQUFXLE9BQU9ULGtCQUFrQixTQUFTVSxLQUFLO0lBQ3RHLE9BQU9SLGFBQWFRLFVBQVVKLGVBQWVLLElBQUksQ0FBQ0QsT0FBTyxhQUN2RCxDQUFDSCxxQkFBcUJJLElBQUksQ0FBQ0QsT0FBTztBQUN0QztBQUVBRSxPQUFPQyxPQUFPLEdBQUdMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcmd1bWVudHMuanM/YmMxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzQXJndW1lbnRzID0gcmVxdWlyZSgnLi9fYmFzZUlzQXJndW1lbnRzJyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGBhcmd1bWVudHNgIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJndW1lbnRzID0gYmFzZUlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID8gYmFzZUlzQXJndW1lbnRzIDogZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgIXByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodmFsdWUsICdjYWxsZWUnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcmd1bWVudHM7XG4iXSwibmFtZXMiOlsiYmFzZUlzQXJndW1lbnRzIiwicmVxdWlyZSIsImlzT2JqZWN0TGlrZSIsIm9iamVjdFByb3RvIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImlzQXJndW1lbnRzIiwiYXJndW1lbnRzIiwidmFsdWUiLCJjYWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArguments.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArray.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isArray.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */ \nvar isArray = Array.isArray;\nmodule.exports = isArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCQztBQUNELElBQUlBLFVBQVVDLE1BQU1ELE9BQU87QUFFM0JFLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0FycmF5LmpzPzc2MzciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheTtcbiJdLCJuYW1lcyI6WyJpc0FycmF5IiwiQXJyYXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isArrayLike.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/isArrayLike.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar isFunction = __webpack_require__(/*! ./isFunction */ \"(app-pages-browser)/./node_modules/lodash/isFunction.js\"), isLength = __webpack_require__(/*! ./isLength */ \"(app-pages-browser)/./node_modules/lodash/isLength.js\");\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */ function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n}\nmodule.exports = isArrayLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheUxpa2UuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGFBQWFDLG1CQUFPQSxDQUFDLGdGQUNyQkMsV0FBV0QsbUJBQU9BLENBQUM7QUFFdkI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXdCQyxHQUNELFNBQVNFLFlBQVlDLEtBQUs7SUFDeEIsT0FBT0EsU0FBUyxRQUFRRixTQUFTRSxNQUFNQyxNQUFNLEtBQUssQ0FBQ0wsV0FBV0k7QUFDaEU7QUFFQUUsT0FBT0MsT0FBTyxHQUFHSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQXJyYXlMaWtlLmpzPzAwNGEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzRnVuY3Rpb24gPSByZXF1aXJlKCcuL2lzRnVuY3Rpb24nKSxcbiAgICBpc0xlbmd0aCA9IHJlcXVpcmUoJy4vaXNMZW5ndGgnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhcnJheS1saWtlLiBBIHZhbHVlIGlzIGNvbnNpZGVyZWQgYXJyYXktbGlrZSBpZiBpdCdzXG4gKiBub3QgYSBmdW5jdGlvbiBhbmQgaGFzIGEgYHZhbHVlLmxlbmd0aGAgdGhhdCdzIGFuIGludGVnZXIgZ3JlYXRlciB0aGFuIG9yXG4gKiBlcXVhbCB0byBgMGAgYW5kIGxlc3MgdGhhbiBvciBlcXVhbCB0byBgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0FycmF5TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheUxpa2UoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZSgnYWJjJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUxpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhaXNGdW5jdGlvbih2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNBcnJheUxpa2U7XG4iXSwibmFtZXMiOlsiaXNGdW5jdGlvbiIsInJlcXVpcmUiLCJpc0xlbmd0aCIsImlzQXJyYXlMaWtlIiwidmFsdWUiLCJsZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isArrayLike.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isBuffer.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isBuffer.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* module decorator */ module = __webpack_require__.nmd(module);\n\nvar root = __webpack_require__(/*! ./_root */ \"(app-pages-browser)/./node_modules/lodash/_root.js\"), stubFalse = __webpack_require__(/*! ./stubFalse */ \"(app-pages-browser)/./node_modules/lodash/stubFalse.js\");\n/** Detect free variable `exports`. */ var freeExports =  true && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */ var freeModule = freeExports && \"object\" == \"object\" && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */ var moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */ var Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */ var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */ var isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNCdWZmZXIuanMiLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxPQUFPQyxtQkFBT0EsQ0FBQyxzRUFDZkMsWUFBWUQsbUJBQU9BLENBQUM7QUFFeEIsb0NBQW9DLEdBQ3BDLElBQUlFLGNBQWMsS0FBa0IsSUFBWUMsV0FBVyxDQUFDQSxRQUFRQyxRQUFRLElBQUlEO0FBRWhGLG1DQUFtQyxHQUNuQyxJQUFJRSxhQUFhSCxlQUFlLFFBQWFJLElBQUksWUFBWUEsVUFBVSxDQUFDQSxPQUFPRixRQUFRLElBQUlFO0FBRTNGLDREQUE0RCxHQUM1RCxJQUFJQyxnQkFBZ0JGLGNBQWNBLFdBQVdGLE9BQU8sS0FBS0Q7QUFFekQsK0JBQStCLEdBQy9CLElBQUlNLFNBQVNELGdCQUFnQlIsS0FBS1MsTUFBTSxHQUFHQztBQUUzQyxzRkFBc0YsR0FDdEYsSUFBSUMsaUJBQWlCRixTQUFTQSxPQUFPRyxRQUFRLEdBQUdGO0FBRWhEOzs7Ozs7Ozs7Ozs7Ozs7O0NBZ0JDLEdBQ0QsSUFBSUUsV0FBV0Qsa0JBQWtCVDtBQUVqQ0ssT0FBT0gsT0FBTyxHQUFHUSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzQnVmZmVyLmpzPzUxNWYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290JyksXG4gICAgc3R1YkZhbHNlID0gcmVxdWlyZSgnLi9zdHViRmFsc2UnKTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBCdWZmZXIgPSBtb2R1bGVFeHBvcnRzID8gcm9vdC5CdWZmZXIgOiB1bmRlZmluZWQ7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIGZvciB0aG9zZSB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgb3RoZXIgYGxvZGFzaGAgbWV0aG9kcy4gKi9cbnZhciBuYXRpdmVJc0J1ZmZlciA9IEJ1ZmZlciA/IEJ1ZmZlci5pc0J1ZmZlciA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlci5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGJ1ZmZlciwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBCdWZmZXIoMikpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNCdWZmZXIobmV3IFVpbnQ4QXJyYXkoMikpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQnVmZmVyID0gbmF0aXZlSXNCdWZmZXIgfHwgc3R1YkZhbHNlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQnVmZmVyO1xuIl0sIm5hbWVzIjpbInJvb3QiLCJyZXF1aXJlIiwic3R1YkZhbHNlIiwiZnJlZUV4cG9ydHMiLCJleHBvcnRzIiwibm9kZVR5cGUiLCJmcmVlTW9kdWxlIiwibW9kdWxlIiwibW9kdWxlRXhwb3J0cyIsIkJ1ZmZlciIsInVuZGVmaW5lZCIsIm5hdGl2ZUlzQnVmZmVyIiwiaXNCdWZmZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isBuffer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isEqual.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/isEqual.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ \"(app-pages-browser)/./node_modules/lodash/_baseIsEqual.js\");\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */ function isEqual(value, other) {\n    return baseIsEqual(value, other);\n}\nmodule.exports = isEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNFcXVhbC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsY0FBY0MsbUJBQU9BLENBQUM7QUFFMUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTJCQyxHQUNELFNBQVNDLFFBQVFDLEtBQUssRUFBRUMsS0FBSztJQUMzQixPQUFPSixZQUFZRyxPQUFPQztBQUM1QjtBQUVBQyxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNFcXVhbC5qcz82MzA3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlSXNFcXVhbCA9IHJlcXVpcmUoJy4vX2Jhc2VJc0VxdWFsJyk7XG5cbi8qKlxuICogUGVyZm9ybXMgYSBkZWVwIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZVxuICogZXF1aXZhbGVudC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2Qgc3VwcG9ydHMgY29tcGFyaW5nIGFycmF5cywgYXJyYXkgYnVmZmVycywgYm9vbGVhbnMsXG4gKiBkYXRlIG9iamVjdHMsIGVycm9yIG9iamVjdHMsIG1hcHMsIG51bWJlcnMsIGBPYmplY3RgIG9iamVjdHMsIHJlZ2V4ZXMsXG4gKiBzZXRzLCBzdHJpbmdzLCBzeW1ib2xzLCBhbmQgdHlwZWQgYXJyYXlzLiBgT2JqZWN0YCBvYmplY3RzIGFyZSBjb21wYXJlZFxuICogYnkgdGhlaXIgb3duLCBub3QgaW5oZXJpdGVkLCBlbnVtZXJhYmxlIHByb3BlcnRpZXMuIEZ1bmN0aW9ucyBhbmQgRE9NXG4gKiBub2RlcyBhcmUgY29tcGFyZWQgYnkgc3RyaWN0IGVxdWFsaXR5LCBpLmUuIGA9PT1gLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSB9O1xuICogdmFyIG90aGVyID0geyAnYSc6IDEgfTtcbiAqXG4gKiBfLmlzRXF1YWwob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogb2JqZWN0ID09PSBvdGhlcjtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRXF1YWwodmFsdWUsIG90aGVyKSB7XG4gIHJldHVybiBiYXNlSXNFcXVhbCh2YWx1ZSwgb3RoZXIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRXF1YWw7XG4iXSwibmFtZXMiOlsiYmFzZUlzRXF1YWwiLCJyZXF1aXJlIiwiaXNFcXVhbCIsInZhbHVlIiwib3RoZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isEqual.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isFunction.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/isFunction.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"(app-pages-browser)/./node_modules/lodash/_baseGetTag.js\"), isObject = __webpack_require__(/*! ./isObject */ \"(app-pages-browser)/./node_modules/lodash/isObject.js\");\n/** `Object#toString` result references. */ var asyncTag = \"[object AsyncFunction]\", funcTag = \"[object Function]\", genTag = \"[object GeneratorFunction]\", proxyTag = \"[object Proxy]\";\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */ function isFunction(value) {\n    if (!isObject(value)) {\n        return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\nmodule.exports = isFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsYUFBYUMsbUJBQU9BLENBQUMsa0ZBQ3JCQyxXQUFXRCxtQkFBT0EsQ0FBQztBQUV2Qix5Q0FBeUMsR0FDekMsSUFBSUUsV0FBVywwQkFDWEMsVUFBVSxxQkFDVkMsU0FBUyw4QkFDVEMsV0FBVztBQUVmOzs7Ozs7Ozs7Ozs7Ozs7O0NBZ0JDLEdBQ0QsU0FBU0MsV0FBV0MsS0FBSztJQUN2QixJQUFJLENBQUNOLFNBQVNNLFFBQVE7UUFDcEIsT0FBTztJQUNUO0lBQ0Esd0VBQXdFO0lBQ3hFLDhFQUE4RTtJQUM5RSxJQUFJQyxNQUFNVCxXQUFXUTtJQUNyQixPQUFPQyxPQUFPTCxXQUFXSyxPQUFPSixVQUFVSSxPQUFPTixZQUFZTSxPQUFPSDtBQUN0RTtBQUVBSSxPQUFPQyxPQUFPLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNGdW5jdGlvbi5qcz82ZTQ3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0VGFnID0gcmVxdWlyZSgnLi9fYmFzZUdldFRhZycpLFxuICAgIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9pc09iamVjdCcpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXN5bmNUYWcgPSAnW29iamVjdCBBc3luY0Z1bmN0aW9uXScsXG4gICAgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgZ2VuVGFnID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJyxcbiAgICBwcm94eVRhZyA9ICdbb2JqZWN0IFByb3h5XSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBGdW5jdGlvbmAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgZnVuY3Rpb24sIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0Z1bmN0aW9uKF8pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNGdW5jdGlvbigvYWJjLyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbHVlKSB7XG4gIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIFRoZSB1c2Ugb2YgYE9iamVjdCN0b1N0cmluZ2AgYXZvaWRzIGlzc3VlcyB3aXRoIHRoZSBgdHlwZW9mYCBvcGVyYXRvclxuICAvLyBpbiBTYWZhcmkgOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheXMgYW5kIG90aGVyIGNvbnN0cnVjdG9ycy5cbiAgdmFyIHRhZyA9IGJhc2VHZXRUYWcodmFsdWUpO1xuICByZXR1cm4gdGFnID09IGZ1bmNUYWcgfHwgdGFnID09IGdlblRhZyB8fCB0YWcgPT0gYXN5bmNUYWcgfHwgdGFnID09IHByb3h5VGFnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRnVuY3Rpb247XG4iXSwibmFtZXMiOlsiYmFzZUdldFRhZyIsInJlcXVpcmUiLCJpc09iamVjdCIsImFzeW5jVGFnIiwiZnVuY1RhZyIsImdlblRhZyIsInByb3h5VGFnIiwiaXNGdW5jdGlvbiIsInZhbHVlIiwidGFnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isFunction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isLength.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isLength.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** Used as references for various `Number` constants. */ \nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */ function isLength(value) {\n    return typeof value == \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\nmodule.exports = isLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNMZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELElBQUlBLG1CQUFtQjtBQUV2Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXlCQyxHQUNELFNBQVNDLFNBQVNDLEtBQUs7SUFDckIsT0FBTyxPQUFPQSxTQUFTLFlBQ3JCQSxRQUFRLENBQUMsS0FBS0EsUUFBUSxLQUFLLEtBQUtBLFNBQVNGO0FBQzdDO0FBRUFHLE9BQU9DLE9BQU8sR0FBR0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc0xlbmd0aC5qcz8yYmVmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGFzIHJlZmVyZW5jZXMgZm9yIHZhcmlvdXMgYE51bWJlcmAgY29uc3RhbnRzLiAqL1xudmFyIE1BWF9TQUZFX0lOVEVHRVIgPSA5MDA3MTk5MjU0NzQwOTkxO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgYXJyYXktbGlrZSBsZW5ndGguXG4gKlxuICogKipOb3RlOioqIFRoaXMgbWV0aG9kIGlzIGxvb3NlbHkgYmFzZWQgb25cbiAqIFtgVG9MZW5ndGhgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy10b2xlbmd0aCkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBsZW5ndGgsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0xlbmd0aCgzKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzTGVuZ3RoKE51bWJlci5NSU5fVkFMVUUpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKEluZmluaXR5KTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aCgnMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNMZW5ndGgodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyAmJlxuICAgIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0xlbmd0aDtcbiJdLCJuYW1lcyI6WyJNQVhfU0FGRV9JTlRFR0VSIiwiaXNMZW5ndGgiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isLength.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */ \nfunction isObject(value) {\n    var type = typeof value;\n    return value != null && (type == \"object\" || type == \"function\");\n}\nmodule.exports = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXdCQztBQUNELFNBQVNBLFNBQVNDLEtBQUs7SUFDckIsSUFBSUMsT0FBTyxPQUFPRDtJQUNsQixPQUFPQSxTQUFTLFFBQVNDLENBQUFBLFFBQVEsWUFBWUEsUUFBUSxVQUFTO0FBQ2hFO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdC5qcz8xNjQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlXG4gKiBbbGFuZ3VhZ2UgdHlwZV0oaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLWVjbWFzY3JpcHQtbGFuZ3VhZ2UtdHlwZXMpXG4gKiBvZiBgT2JqZWN0YC4gKGUuZy4gYXJyYXlzLCBmdW5jdGlvbnMsIG9iamVjdHMsIHJlZ2V4ZXMsIGBuZXcgTnVtYmVyKDApYCwgYW5kIGBuZXcgU3RyaW5nKCcnKWApXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3Qoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KF8ubm9vcCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiAodHlwZSA9PSAnb2JqZWN0JyB8fCB0eXBlID09ICdmdW5jdGlvbicpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0O1xuIl0sIm5hbWVzIjpbImlzT2JqZWN0IiwidmFsdWUiLCJ0eXBlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */ \nfunction isObjectLike(value) {\n    return value != null && typeof value == \"object\";\n}\nmodule.exports = isObjectLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3RMaWtlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXVCQztBQUNELFNBQVNBLGFBQWFDLEtBQUs7SUFDekIsT0FBT0EsU0FBUyxRQUFRLE9BQU9BLFNBQVM7QUFDMUM7QUFFQUMsT0FBT0MsT0FBTyxHQUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0TGlrZS5qcz9jYmVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0TGlrZTtcbiJdLCJuYW1lcyI6WyJpc09iamVjdExpa2UiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isObjectLike.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/isTypedArray.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isTypedArray.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ \"(app-pages-browser)/./node_modules/lodash/_baseIsTypedArray.js\"), baseUnary = __webpack_require__(/*! ./_baseUnary */ \"(app-pages-browser)/./node_modules/lodash/_baseUnary.js\"), nodeUtil = __webpack_require__(/*! ./_nodeUtil */ \"(app-pages-browser)/./node_modules/lodash/_nodeUtil.js\");\n/* Node.js helper references. */ var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */ var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNUeXBlZEFycmF5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxtQkFBbUJDLG1CQUFPQSxDQUFDLDhGQUMzQkMsWUFBWUQsbUJBQU9BLENBQUMsZ0ZBQ3BCRSxXQUFXRixtQkFBT0EsQ0FBQztBQUV2Qiw4QkFBOEIsR0FDOUIsSUFBSUcsbUJBQW1CRCxZQUFZQSxTQUFTRSxZQUFZO0FBRXhEOzs7Ozs7Ozs7Ozs7Ozs7O0NBZ0JDLEdBQ0QsSUFBSUEsZUFBZUQsbUJBQW1CRixVQUFVRSxvQkFBb0JKO0FBRXBFTSxPQUFPQyxPQUFPLEdBQUdGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNUeXBlZEFycmF5LmpzPzQ3NjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VJc1R5cGVkQXJyYXkgPSByZXF1aXJlKCcuL19iYXNlSXNUeXBlZEFycmF5JyksXG4gICAgYmFzZVVuYXJ5ID0gcmVxdWlyZSgnLi9fYmFzZVVuYXJ5JyksXG4gICAgbm9kZVV0aWwgPSByZXF1aXJlKCcuL19ub2RlVXRpbCcpO1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xudmFyIG5vZGVJc1R5cGVkQXJyYXkgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1R5cGVkQXJyYXk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkobmV3IFVpbnQ4QXJyYXkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KFtdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc1R5cGVkQXJyYXkgPSBub2RlSXNUeXBlZEFycmF5ID8gYmFzZVVuYXJ5KG5vZGVJc1R5cGVkQXJyYXkpIDogYmFzZUlzVHlwZWRBcnJheTtcblxubW9kdWxlLmV4cG9ydHMgPSBpc1R5cGVkQXJyYXk7XG4iXSwibmFtZXMiOlsiYmFzZUlzVHlwZWRBcnJheSIsInJlcXVpcmUiLCJiYXNlVW5hcnkiLCJub2RlVXRpbCIsIm5vZGVJc1R5cGVkQXJyYXkiLCJpc1R5cGVkQXJyYXkiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/isTypedArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/keys.js":
/*!*************************************!*\
  !*** ./node_modules/lodash/keys.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ \"(app-pages-browser)/./node_modules/lodash/_arrayLikeKeys.js\"), baseKeys = __webpack_require__(/*! ./_baseKeys */ \"(app-pages-browser)/./node_modules/lodash/_baseKeys.js\"), isArrayLike = __webpack_require__(/*! ./isArrayLike */ \"(app-pages-browser)/./node_modules/lodash/isArrayLike.js\");\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */ function keys(object) {\n    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\nmodule.exports = keys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gva2V5cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyx3RkFDeEJDLFdBQVdELG1CQUFPQSxDQUFDLDhFQUNuQkUsY0FBY0YsbUJBQU9BLENBQUM7QUFFMUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQTJCQyxHQUNELFNBQVNHLEtBQUtDLE1BQU07SUFDbEIsT0FBT0YsWUFBWUUsVUFBVUwsY0FBY0ssVUFBVUgsU0FBU0c7QUFDaEU7QUFFQUMsT0FBT0MsT0FBTyxHQUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL2tleXMuanM/YTZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlS2V5cyA9IHJlcXVpcmUoJy4vX2FycmF5TGlrZUtleXMnKSxcbiAgICBiYXNlS2V5cyA9IHJlcXVpcmUoJy4vX2Jhc2VLZXlzJyksXG4gICAgaXNBcnJheUxpa2UgPSByZXF1aXJlKCcuL2lzQXJyYXlMaWtlJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAqIFtFUyBzcGVjXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8ua2V5cygnaGknKTtcbiAqIC8vID0+IFsnMCcsICcxJ11cbiAqL1xuZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCkgOiBiYXNlS2V5cyhvYmplY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGtleXM7XG4iXSwibmFtZXMiOlsiYXJyYXlMaWtlS2V5cyIsInJlcXVpcmUiLCJiYXNlS2V5cyIsImlzQXJyYXlMaWtlIiwia2V5cyIsIm9iamVjdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/keys.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/stubArray.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubArray.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */ \nfunction stubArray() {\n    return [];\n}\nmodule.exports = stubArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvc3R1YkFycmF5LmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7OztDQWlCQztBQUNELFNBQVNBO0lBQ1AsT0FBTyxFQUFFO0FBQ1g7QUFFQUMsT0FBT0MsT0FBTyxHQUFHRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9kYXNoL3N0dWJBcnJheS5qcz81Mzg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBtZXRob2QgcmV0dXJucyBhIG5ldyBlbXB0eSBhcnJheS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGVtcHR5IGFycmF5LlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgYXJyYXlzID0gXy50aW1lcygyLCBfLnN0dWJBcnJheSk7XG4gKlxuICogY29uc29sZS5sb2coYXJyYXlzKTtcbiAqIC8vID0+IFtbXSwgW11dXG4gKlxuICogY29uc29sZS5sb2coYXJyYXlzWzBdID09PSBhcnJheXNbMV0pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gc3R1YkFycmF5KCkge1xuICByZXR1cm4gW107XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkFycmF5O1xuIl0sIm5hbWVzIjpbInN0dWJBcnJheSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/stubArray.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lodash/stubFalse.js":
/*!******************************************!*\
  !*** ./node_modules/lodash/stubFalse.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */ \nfunction stubFalse() {\n    return false;\n}\nmodule.exports = stubFalse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvc3R1YkZhbHNlLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Q0FZQztBQUNELFNBQVNBO0lBQ1AsT0FBTztBQUNUO0FBRUFDLE9BQU9DLE9BQU8sR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC9zdHViRmFsc2UuanM/ZTQ0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R1YkZhbHNlO1xuIl0sIm5hbWVzIjpbInN0dWJGYWxzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lodash/stubFalse.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js":
/*!****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/createLucideIcon.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ createLucideIcon; },\n/* harmony export */   toKebabCase: function() { return /* binding */ toKebabCase; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultAttributes.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \n\nconst toKebabCase = (string)=>string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase().trim();\nconst createLucideIcon = (iconName, iconNode)=>{\n    const Component = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)((param, ref)=>{\n        let { color = \"currentColor\", size = 24, strokeWidth = 2, absoluteStrokeWidth, className = \"\", children, ...rest } = param;\n        return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(\"svg\", {\n            ref,\n            ..._defaultAttributes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n            width: size,\n            height: size,\n            stroke: color,\n            strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n            className: [\n                \"lucide\",\n                \"lucide-\".concat(toKebabCase(iconName)),\n                className\n            ].join(\" \"),\n            ...rest\n        }, [\n            ...iconNode.map((param)=>{\n                let [tag, attrs] = param;\n                return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)(tag, attrs);\n            }),\n            ...Array.isArray(children) ? children : [\n                children\n            ]\n        ]);\n    });\n    Component.displayName = \"\".concat(iconName);\n    return Component;\n};\n //# sourceMappingURL=createLucideIcon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztDQUtDLEdBRWlEO0FBQ0s7QUFFdkQsTUFBTUcsY0FBYyxDQUFDQyxTQUFXQSxPQUFPQyxPQUFPLENBQUMsc0JBQXNCLFNBQVNDLFdBQVcsR0FBR0MsSUFBSTtBQUNoRyxNQUFNQyxtQkFBbUIsQ0FBQ0MsVUFBVUM7SUFDbEMsTUFBTUMsMEJBQVlYLGlEQUFVQSxDQUMxQixRQVFHWTtZQVJGLEVBQ0NDLFFBQVEsY0FBYyxFQUN0QkMsT0FBTyxFQUFFLEVBQ1RDLGNBQWMsQ0FBQyxFQUNmQyxtQkFBbUIsRUFDbkJDLFlBQVksRUFBRSxFQUNkQyxRQUFRLEVBQ1IsR0FBR0MsTUFDSjtRQUNDLHFCQUFPbEIsb0RBQWFBLENBQ2xCLE9BQ0E7WUFDRVc7WUFDQSxHQUFHViw2REFBaUI7WUFDcEJrQixPQUFPTjtZQUNQTyxRQUFRUDtZQUNSUSxRQUFRVDtZQUNSRSxhQUFhQyxzQkFBc0JPLE9BQU9SLGVBQWUsS0FBS1EsT0FBT1QsUUFBUUM7WUFDN0VFLFdBQVc7Z0JBQUM7Z0JBQVcsVUFBK0IsT0FBdEJkLFlBQVlNO2dCQUFhUTthQUFVLENBQUNPLElBQUksQ0FBQztZQUN6RSxHQUFHTCxJQUFJO1FBQ1QsR0FDQTtlQUNLVCxTQUFTZSxHQUFHLENBQUM7b0JBQUMsQ0FBQ0MsS0FBS0MsTUFBTTtxQ0FBSzFCLG9EQUFhQSxDQUFDeUIsS0FBS0M7O2VBQ2xEQyxNQUFNQyxPQUFPLENBQUNYLFlBQVlBLFdBQVc7Z0JBQUNBO2FBQVM7U0FDbkQ7SUFFTDtJQUVGUCxVQUFVbUIsV0FBVyxHQUFHLEdBQVksT0FBVHJCO0lBQzNCLE9BQU9FO0FBQ1Q7QUFFb0QsQ0FDcEQsNENBQTRDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vY3JlYXRlTHVjaWRlSWNvbi5qcz80MGM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjM0NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgeyBmb3J3YXJkUmVmLCBjcmVhdGVFbGVtZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGRlZmF1bHRBdHRyaWJ1dGVzIGZyb20gJy4vZGVmYXVsdEF0dHJpYnV0ZXMuanMnO1xuXG5jb25zdCB0b0tlYmFiQ2FzZSA9IChzdHJpbmcpID0+IHN0cmluZy5yZXBsYWNlKC8oW2EtejAtOV0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuY29uc3QgY3JlYXRlTHVjaWRlSWNvbiA9IChpY29uTmFtZSwgaWNvbk5vZGUpID0+IHtcbiAgY29uc3QgQ29tcG9uZW50ID0gZm9yd2FyZFJlZihcbiAgICAoe1xuICAgICAgY29sb3IgPSBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgc2l6ZSA9IDI0LFxuICAgICAgc3Ryb2tlV2lkdGggPSAyLFxuICAgICAgYWJzb2x1dGVTdHJva2VXaWR0aCxcbiAgICAgIGNsYXNzTmFtZSA9IFwiXCIsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIC4uLnJlc3RcbiAgICB9LCByZWYpID0+IHtcbiAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFxuICAgICAgICBcInN2Z1wiLFxuICAgICAgICB7XG4gICAgICAgICAgcmVmLFxuICAgICAgICAgIC4uLmRlZmF1bHRBdHRyaWJ1dGVzLFxuICAgICAgICAgIHdpZHRoOiBzaXplLFxuICAgICAgICAgIGhlaWdodDogc2l6ZSxcbiAgICAgICAgICBzdHJva2U6IGNvbG9yLFxuICAgICAgICAgIHN0cm9rZVdpZHRoOiBhYnNvbHV0ZVN0cm9rZVdpZHRoID8gTnVtYmVyKHN0cm9rZVdpZHRoKSAqIDI0IC8gTnVtYmVyKHNpemUpIDogc3Ryb2tlV2lkdGgsXG4gICAgICAgICAgY2xhc3NOYW1lOiBbXCJsdWNpZGVcIiwgYGx1Y2lkZS0ke3RvS2ViYWJDYXNlKGljb25OYW1lKX1gLCBjbGFzc05hbWVdLmpvaW4oXCIgXCIpLFxuICAgICAgICAgIC4uLnJlc3RcbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIC4uLmljb25Ob2RlLm1hcCgoW3RhZywgYXR0cnNdKSA9PiBjcmVhdGVFbGVtZW50KHRhZywgYXR0cnMpKSxcbiAgICAgICAgICAuLi5BcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxuICAgICAgICBdXG4gICAgICApO1xuICAgIH1cbiAgKTtcbiAgQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gYCR7aWNvbk5hbWV9YDtcbiAgcmV0dXJuIENvbXBvbmVudDtcbn07XG5cbmV4cG9ydCB7IGNyZWF0ZUx1Y2lkZUljb24gYXMgZGVmYXVsdCwgdG9LZWJhYkNhc2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNyZWF0ZUx1Y2lkZUljb24uanMubWFwXG4iXSwibmFtZXMiOlsiZm9yd2FyZFJlZiIsImNyZWF0ZUVsZW1lbnQiLCJkZWZhdWx0QXR0cmlidXRlcyIsInRvS2ViYWJDYXNlIiwic3RyaW5nIiwicmVwbGFjZSIsInRvTG93ZXJDYXNlIiwidHJpbSIsImNyZWF0ZUx1Y2lkZUljb24iLCJpY29uTmFtZSIsImljb25Ob2RlIiwiQ29tcG9uZW50IiwicmVmIiwiY29sb3IiLCJzaXplIiwic3Ryb2tlV2lkdGgiLCJhYnNvbHV0ZVN0cm9rZVdpZHRoIiwiY2xhc3NOYW1lIiwiY2hpbGRyZW4iLCJyZXN0Iiwid2lkdGgiLCJoZWlnaHQiLCJzdHJva2UiLCJOdW1iZXIiLCJqb2luIiwibWFwIiwidGFnIiwiYXR0cnMiLCJBcnJheSIsImlzQXJyYXkiLCJkaXNwbGF5TmFtZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/defaultAttributes.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ defaultAttributes; }\n/* harmony export */ });\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ var defaultAttributes = {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n};\n //# sourceMappingURL=defaultAttributes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vZGVmYXVsdEF0dHJpYnV0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBRUQsSUFBSUEsb0JBQW9CO0lBQ3RCQyxPQUFPO0lBQ1BDLE9BQU87SUFDUEMsUUFBUTtJQUNSQyxTQUFTO0lBQ1RDLE1BQU07SUFDTkMsUUFBUTtJQUNSQyxhQUFhO0lBQ2JDLGVBQWU7SUFDZkMsZ0JBQWdCO0FBQ2xCO0FBRXdDLENBQ3hDLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2RlZmF1bHRBdHRyaWJ1dGVzLmpzPzFkN2YiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMzQ0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbnZhciBkZWZhdWx0QXR0cmlidXRlcyA9IHtcbiAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgd2lkdGg6IDI0LFxuICBoZWlnaHQ6IDI0LFxuICB2aWV3Qm94OiBcIjAgMCAyNCAyNFwiLFxuICBmaWxsOiBcIm5vbmVcIixcbiAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICBzdHJva2VXaWR0aDogMixcbiAgc3Ryb2tlTGluZWNhcDogXCJyb3VuZFwiLFxuICBzdHJva2VMaW5lam9pbjogXCJyb3VuZFwiXG59O1xuXG5leHBvcnQgeyBkZWZhdWx0QXR0cmlidXRlcyBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWZhdWx0QXR0cmlidXRlcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJkZWZhdWx0QXR0cmlidXRlcyIsInhtbG5zIiwid2lkdGgiLCJoZWlnaHQiLCJ2aWV3Qm94IiwiZmlsbCIsInN0cm9rZSIsInN0cm9rZVdpZHRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/defaultAttributes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bell.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/bell.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Bell; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Bell = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Bell\", [\n    [\n        \"path\",\n        {\n            d: \"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\",\n            key: \"1qo2s2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M10.3 21a1.94 1.94 0 0 0 3.4 0\",\n            key: \"qgo35s\"\n        }\n    ]\n]);\n //# sourceMappingURL=bell.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYmVsbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLE9BQU9ELGdFQUFnQkEsQ0FBQyxRQUFRO0lBQ3BDO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQTZDQyxLQUFLO1FBQVM7S0FBRTtJQUMzRTtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFrQ0MsS0FBSztRQUFTO0tBQUU7Q0FDakU7QUFFMEIsQ0FDM0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvYmVsbC5qcz9hZDgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjM0NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgQmVsbCA9IGNyZWF0ZUx1Y2lkZUljb24oXCJCZWxsXCIsIFtcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTYgOGE2IDYgMCAwIDEgMTIgMGMwIDcgMyA5IDMgOUgzczMtMiAzLTlcIiwga2V5OiBcIjFxbzJzMlwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTAuMyAyMWExLjk0IDEuOTQgMCAwIDAgMy40IDBcIiwga2V5OiBcInFnbzM1c1wiIH1dXG5dKTtcblxuZXhwb3J0IHsgQmVsbCBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZWxsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJCZWxsIiwiZCIsImtleSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bell.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/moon.js":
/*!**********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/moon.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Moon; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Moon = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Moon\", [\n    [\n        \"path\",\n        {\n            d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\",\n            key: \"a7tn18\"\n        }\n    ]\n]);\n //# sourceMappingURL=moon.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvbW9vbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLE9BQU9ELGdFQUFnQkEsQ0FBQyxRQUFRO0lBQ3BDO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQXNDQyxLQUFLO1FBQVM7S0FBRTtDQUNyRTtBQUUwQixDQUMzQixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9tb29uLmpzP2VhOTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBsdWNpZGUtcmVhY3QgdjAuMzQ0LjAgLSBJU0NcbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBJU0MgbGljZW5zZS5cbiAqIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmltcG9ydCBjcmVhdGVMdWNpZGVJY29uIGZyb20gJy4uL2NyZWF0ZUx1Y2lkZUljb24uanMnO1xuXG5jb25zdCBNb29uID0gY3JlYXRlTHVjaWRlSWNvbihcIk1vb25cIiwgW1xuICBbXCJwYXRoXCIsIHsgZDogXCJNMTIgM2E2IDYgMCAwIDAgOSA5IDkgOSAwIDEgMS05LTlaXCIsIGtleTogXCJhN3RuMThcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IE1vb24gYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9vbi5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiTW9vbiIsImQiLCJrZXkiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/moon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js":
/*!************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/pencil.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Pencil; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Pencil = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Pencil\", [\n    [\n        \"path\",\n        {\n            d: \"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\",\n            key: \"5qss01\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m15 5 4 4\",\n            key: \"1mk7zo\"\n        }\n    ]\n]);\n //# sourceMappingURL=pencil.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvcGVuY2lsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFcUQ7QUFFdEQsTUFBTUMsU0FBU0QsZ0VBQWdCQSxDQUFDLFVBQVU7SUFDeEM7UUFBQztRQUFRO1lBQUVFLEdBQUc7WUFBb0RDLEtBQUs7UUFBUztLQUFFO0lBQ2xGO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQWFDLEtBQUs7UUFBUztLQUFFO0NBQzVDO0FBRTRCLENBQzdCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3BlbmNpbC5qcz84NDc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjM0NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgUGVuY2lsID0gY3JlYXRlTHVjaWRlSWNvbihcIlBlbmNpbFwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xNyAzYTIuODUgMi44MyAwIDEgMSA0IDRMNy41IDIwLjUgMiAyMmwxLjUtNS41WlwiLCBrZXk6IFwiNXFzczAxXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIm0xNSA1IDQgNFwiLCBrZXk6IFwiMW1rN3pvXCIgfV1cbl0pO1xuXG5leHBvcnQgeyBQZW5jaWwgYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGVuY2lsLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJQZW5jaWwiLCJkIiwia2V5IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sun.js":
/*!*********************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/sun.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Sun; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Sun = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Sun\", [\n    [\n        \"circle\",\n        {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"4\",\n            key: \"4exip2\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 2v2\",\n            key: \"tus03m\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M12 20v2\",\n            key: \"1lh1kg\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m4.93 4.93 1.41 1.41\",\n            key: \"149t6j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m17.66 17.66 1.41 1.41\",\n            key: \"ptbguv\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M2 12h2\",\n            key: \"1t8f8n\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M20 12h2\",\n            key: \"1q8mjw\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6.34 17.66-1.41 1.41\",\n            key: \"1m8zz5\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m19.07 4.93-1.41 1.41\",\n            key: \"1shlcs\"\n        }\n    ]\n]);\n //# sourceMappingURL=sun.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvc3VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0NBS0MsR0FFcUQ7QUFFdEQsTUFBTUMsTUFBTUQsZ0VBQWdCQSxDQUFDLE9BQU87SUFDbEM7UUFBQztRQUFVO1lBQUVFLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxHQUFHO1lBQUtDLEtBQUs7UUFBUztLQUFFO0lBQ3pEO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQVdELEtBQUs7UUFBUztLQUFFO0lBQ3pDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQVlELEtBQUs7UUFBUztLQUFFO0lBQzFDO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQXdCRCxLQUFLO1FBQVM7S0FBRTtJQUN0RDtRQUFDO1FBQVE7WUFBRUMsR0FBRztZQUEwQkQsS0FBSztRQUFTO0tBQUU7SUFDeEQ7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBV0QsS0FBSztRQUFTO0tBQUU7SUFDekM7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBWUQsS0FBSztRQUFTO0tBQUU7SUFDMUM7UUFBQztRQUFRO1lBQUVDLEdBQUc7WUFBeUJELEtBQUs7UUFBUztLQUFFO0lBQ3ZEO1FBQUM7UUFBUTtZQUFFQyxHQUFHO1lBQXlCRCxLQUFLO1FBQVM7S0FBRTtDQUN4RDtBQUV5QixDQUMxQiwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2x1Y2lkZS1yZWFjdC9kaXN0L2VzbS9pY29ucy9zdW4uanM/ZWQ1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4zNDQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFN1biA9IGNyZWF0ZUx1Y2lkZUljb24oXCJTdW5cIiwgW1xuICBbXCJjaXJjbGVcIiwgeyBjeDogXCIxMlwiLCBjeTogXCIxMlwiLCByOiBcIjRcIiwga2V5OiBcIjRleGlwMlwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTIgMnYyXCIsIGtleTogXCJ0dXMwM21cIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTEyIDIwdjJcIiwga2V5OiBcIjFsaDFrZ1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtNC45MyA0LjkzIDEuNDEgMS40MVwiLCBrZXk6IFwiMTQ5dDZqXCIgfV0sXG4gIFtcInBhdGhcIiwgeyBkOiBcIm0xNy42NiAxNy42NiAxLjQxIDEuNDFcIiwga2V5OiBcInB0Ymd1dlwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMiAxMmgyXCIsIGtleTogXCIxdDhmOG5cIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTIwIDEyaDJcIiwga2V5OiBcIjFxOG1qd1wiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtNi4zNCAxNy42Ni0xLjQxIDEuNDFcIiwga2V5OiBcIjFtOHp6NVwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtMTkuMDcgNC45My0xLjQxIDEuNDFcIiwga2V5OiBcIjFzaGxjc1wiIH1dXG5dKTtcblxuZXhwb3J0IHsgU3VuIGFzIGRlZmF1bHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1bi5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiU3VuIiwiY3giLCJjeSIsInIiLCJrZXkiLCJkIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sun.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/trash-2.js":
/*!*************************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/trash-2.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Trash2; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst Trash2 = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"Trash2\", [\n    [\n        \"path\",\n        {\n            d: \"M3 6h18\",\n            key: \"d0wm0j\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6\",\n            key: \"4alrt4\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2\",\n            key: \"v07s0e\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"10\",\n            x2: \"10\",\n            y1: \"11\",\n            y2: \"17\",\n            key: \"1uufr5\"\n        }\n    ],\n    [\n        \"line\",\n        {\n            x1: \"14\",\n            x2: \"14\",\n            y1: \"11\",\n            y2: \"17\",\n            key: \"xtxkd\"\n        }\n    ]\n]);\n //# sourceMappingURL=trash-2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvdHJhc2gtMi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLFNBQVNELGdFQUFnQkEsQ0FBQyxVQUFVO0lBQ3hDO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQVdDLEtBQUs7UUFBUztLQUFFO0lBQ3pDO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQXlDQyxLQUFLO1FBQVM7S0FBRTtJQUN2RTtRQUFDO1FBQVE7WUFBRUQsR0FBRztZQUFzQ0MsS0FBSztRQUFTO0tBQUU7SUFDcEU7UUFBQztRQUFRO1lBQUVDLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxJQUFJO1lBQU1DLElBQUk7WUFBTUosS0FBSztRQUFTO0tBQUU7SUFDbkU7UUFBQztRQUFRO1lBQUVDLElBQUk7WUFBTUMsSUFBSTtZQUFNQyxJQUFJO1lBQU1DLElBQUk7WUFBTUosS0FBSztRQUFRO0tBQUU7Q0FDbkU7QUFFNEIsQ0FDN0IsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMvdHJhc2gtMi5qcz8yNjQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2UgbHVjaWRlLXJlYWN0IHYwLjM0NC4wIC0gSVNDXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgSVNDIGxpY2Vuc2UuXG4gKiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pbXBvcnQgY3JlYXRlTHVjaWRlSWNvbiBmcm9tICcuLi9jcmVhdGVMdWNpZGVJY29uLmpzJztcblxuY29uc3QgVHJhc2gyID0gY3JlYXRlTHVjaWRlSWNvbihcIlRyYXNoMlwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0zIDZoMThcIiwga2V5OiBcImQwd20walwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJNMTkgNnYxNGMwIDEtMSAyLTIgMkg3Yy0xIDAtMi0xLTItMlY2XCIsIGtleTogXCI0YWxydDRcIiB9XSxcbiAgW1wicGF0aFwiLCB7IGQ6IFwiTTggNlY0YzAtMSAxLTIgMi0yaDRjMSAwIDIgMSAyIDJ2MlwiLCBrZXk6IFwidjA3czBlXCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxMFwiLCB4MjogXCIxMFwiLCB5MTogXCIxMVwiLCB5MjogXCIxN1wiLCBrZXk6IFwiMXV1ZnI1XCIgfV0sXG4gIFtcImxpbmVcIiwgeyB4MTogXCIxNFwiLCB4MjogXCIxNFwiLCB5MTogXCIxMVwiLCB5MjogXCIxN1wiLCBrZXk6IFwieHR4a2RcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IFRyYXNoMiBhcyBkZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFzaC0yLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNyZWF0ZUx1Y2lkZUljb24iLCJUcmFzaDIiLCJkIiwia2V5IiwieDEiLCJ4MiIsInkxIiwieTIiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/trash-2.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js":
/*!*******************************************************!*\
  !*** ./node_modules/lucide-react/dist/esm/icons/x.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ X; }\n/* harmony export */ });\n/* harmony import */ var _createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createLucideIcon.js */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/createLucideIcon.js\");\n/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */ \nconst X = (0,_createLucideIcon_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"X\", [\n    [\n        \"path\",\n        {\n            d: \"M18 6 6 18\",\n            key: \"1bl5f8\"\n        }\n    ],\n    [\n        \"path\",\n        {\n            d: \"m6 6 12 12\",\n            key: \"d8bk6v\"\n        }\n    ]\n]);\n //# sourceMappingURL=x.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sdWNpZGUtcmVhY3QvZGlzdC9lc20vaWNvbnMveC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztDQUtDLEdBRXFEO0FBRXRELE1BQU1DLElBQUlELGdFQUFnQkEsQ0FBQyxLQUFLO0lBQzlCO1FBQUM7UUFBUTtZQUFFRSxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0lBQzVDO1FBQUM7UUFBUTtZQUFFRCxHQUFHO1lBQWNDLEtBQUs7UUFBUztLQUFFO0NBQzdDO0FBRXVCLENBQ3hCLDZCQUE2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbHVjaWRlLXJlYWN0L2Rpc3QvZXNtL2ljb25zL3guanM/ZGY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIGx1Y2lkZS1yZWFjdCB2MC4zNDQuMCAtIElTQ1xuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIElTQyBsaWNlbnNlLlxuICogU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaW1wb3J0IGNyZWF0ZUx1Y2lkZUljb24gZnJvbSAnLi4vY3JlYXRlTHVjaWRlSWNvbi5qcyc7XG5cbmNvbnN0IFggPSBjcmVhdGVMdWNpZGVJY29uKFwiWFwiLCBbXG4gIFtcInBhdGhcIiwgeyBkOiBcIk0xOCA2IDYgMThcIiwga2V5OiBcIjFibDVmOFwiIH1dLFxuICBbXCJwYXRoXCIsIHsgZDogXCJtNiA2IDEyIDEyXCIsIGtleTogXCJkOGJrNnZcIiB9XVxuXSk7XG5cbmV4cG9ydCB7IFggYXMgZGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eC5qcy5tYXBcbiJdLCJuYW1lcyI6WyJjcmVhdGVMdWNpZGVJY29uIiwiWCIsImQiLCJrZXkiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/link.js":
/*!********************************************!*\
  !*** ./node_modules/next/dist/api/link.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* reexport default from dynamic */ _client_link__WEBPACK_IMPORTED_MODULE_0___default.a; }\n/* harmony export */ });\n/* harmony import */ var _client_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/link */ \"(app-pages-browser)/./node_modules/next/dist/client/link.js\");\n/* harmony import */ var _client_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_link__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_link__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_link__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n //# sourceMappingURL=link.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2xpbmsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlDO0FBQ1YsQ0FFL0IsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL2xpbmsuanM/MTMwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IH0gZnJvbSBcIi4uL2NsaWVudC9saW5rXCI7XG5leHBvcnQgKiBmcm9tIFwiLi4vY2xpZW50L2xpbmtcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGluay5qcy5tYXAiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/api/navigation.js":
/*!**************************************************!*\
  !*** ./node_modules/next/dist/api/navigation.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/navigation */ \"(app-pages-browser)/./node_modules/next/dist/client/components/navigation.js\");\n/* harmony import */ var _client_components_navigation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_client_components_navigation__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _client_components_navigation__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYXBpL25hdmlnYXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdELENBRWhELHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2FwaS9uYXZpZ2F0aW9uLmpzPzFkMjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4uL2NsaWVudC9jb21wb25lbnRzL25hdmlnYXRpb25cIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bmF2aWdhdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/api/navigation.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("var __dirname = \"/\";\n\n(function() {\n    var e = {\n        675: function(e, r) {\n            \"use strict\";\n            r.byteLength = byteLength;\n            r.toByteArray = toByteArray;\n            r.fromByteArray = fromByteArray;\n            var t = [];\n            var f = [];\n            var n = typeof Uint8Array !== \"undefined\" ? Uint8Array : Array;\n            var i = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            for(var o = 0, u = i.length; o < u; ++o){\n                t[o] = i[o];\n                f[i.charCodeAt(o)] = o;\n            }\n            f[\"-\".charCodeAt(0)] = 62;\n            f[\"_\".charCodeAt(0)] = 63;\n            function getLens(e) {\n                var r = e.length;\n                if (r % 4 > 0) {\n                    throw new Error(\"Invalid string. Length must be a multiple of 4\");\n                }\n                var t = e.indexOf(\"=\");\n                if (t === -1) t = r;\n                var f = t === r ? 0 : 4 - t % 4;\n                return [\n                    t,\n                    f\n                ];\n            }\n            function byteLength(e) {\n                var r = getLens(e);\n                var t = r[0];\n                var f = r[1];\n                return (t + f) * 3 / 4 - f;\n            }\n            function _byteLength(e, r, t) {\n                return (r + t) * 3 / 4 - t;\n            }\n            function toByteArray(e) {\n                var r;\n                var t = getLens(e);\n                var i = t[0];\n                var o = t[1];\n                var u = new n(_byteLength(e, i, o));\n                var a = 0;\n                var s = o > 0 ? i - 4 : i;\n                var h;\n                for(h = 0; h < s; h += 4){\n                    r = f[e.charCodeAt(h)] << 18 | f[e.charCodeAt(h + 1)] << 12 | f[e.charCodeAt(h + 2)] << 6 | f[e.charCodeAt(h + 3)];\n                    u[a++] = r >> 16 & 255;\n                    u[a++] = r >> 8 & 255;\n                    u[a++] = r & 255;\n                }\n                if (o === 2) {\n                    r = f[e.charCodeAt(h)] << 2 | f[e.charCodeAt(h + 1)] >> 4;\n                    u[a++] = r & 255;\n                }\n                if (o === 1) {\n                    r = f[e.charCodeAt(h)] << 10 | f[e.charCodeAt(h + 1)] << 4 | f[e.charCodeAt(h + 2)] >> 2;\n                    u[a++] = r >> 8 & 255;\n                    u[a++] = r & 255;\n                }\n                return u;\n            }\n            function tripletToBase64(e) {\n                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];\n            }\n            function encodeChunk(e, r, t) {\n                var f;\n                var n = [];\n                for(var i = r; i < t; i += 3){\n                    f = (e[i] << 16 & 16711680) + (e[i + 1] << 8 & 65280) + (e[i + 2] & 255);\n                    n.push(tripletToBase64(f));\n                }\n                return n.join(\"\");\n            }\n            function fromByteArray(e) {\n                var r;\n                var f = e.length;\n                var n = f % 3;\n                var i = [];\n                var o = 16383;\n                for(var u = 0, a = f - n; u < a; u += o){\n                    i.push(encodeChunk(e, u, u + o > a ? a : u + o));\n                }\n                if (n === 1) {\n                    r = e[f - 1];\n                    i.push(t[r >> 2] + t[r << 4 & 63] + \"==\");\n                } else if (n === 2) {\n                    r = (e[f - 2] << 8) + e[f - 1];\n                    i.push(t[r >> 10] + t[r >> 4 & 63] + t[r << 2 & 63] + \"=\");\n                }\n                return i.join(\"\");\n            }\n        },\n        72: function(e, r, t) {\n            \"use strict\";\n            /*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ var f = t(675);\n            var n = t(783);\n            var i = typeof Symbol === \"function\" && typeof Symbol.for === \"function\" ? Symbol.for(\"nodejs.util.inspect.custom\") : null;\n            r.Buffer = Buffer;\n            r.SlowBuffer = SlowBuffer;\n            r.INSPECT_MAX_BYTES = 50;\n            var o = 2147483647;\n            r.kMaxLength = o;\n            Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n            if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== \"undefined\" && typeof console.error === \"function\") {\n                console.error(\"This browser lacks typed array (Uint8Array) support which is required by \" + \"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");\n            }\n            function typedArraySupport() {\n                try {\n                    var e = new Uint8Array(1);\n                    var r = {\n                        foo: function() {\n                            return 42;\n                        }\n                    };\n                    Object.setPrototypeOf(r, Uint8Array.prototype);\n                    Object.setPrototypeOf(e, r);\n                    return e.foo() === 42;\n                } catch (e) {\n                    return false;\n                }\n            }\n            Object.defineProperty(Buffer.prototype, \"parent\", {\n                enumerable: true,\n                get: function() {\n                    if (!Buffer.isBuffer(this)) return undefined;\n                    return this.buffer;\n                }\n            });\n            Object.defineProperty(Buffer.prototype, \"offset\", {\n                enumerable: true,\n                get: function() {\n                    if (!Buffer.isBuffer(this)) return undefined;\n                    return this.byteOffset;\n                }\n            });\n            function createBuffer(e) {\n                if (e > o) {\n                    throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n                }\n                var r = new Uint8Array(e);\n                Object.setPrototypeOf(r, Buffer.prototype);\n                return r;\n            }\n            function Buffer(e, r, t) {\n                if (typeof e === \"number\") {\n                    if (typeof r === \"string\") {\n                        throw new TypeError('The \"string\" argument must be of type string. Received type number');\n                    }\n                    return allocUnsafe(e);\n                }\n                return from(e, r, t);\n            }\n            Buffer.poolSize = 8192;\n            function from(e, r, t) {\n                if (typeof e === \"string\") {\n                    return fromString(e, r);\n                }\n                if (ArrayBuffer.isView(e)) {\n                    return fromArrayLike(e);\n                }\n                if (e == null) {\n                    throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n                }\n                if (isInstance(e, ArrayBuffer) || e && isInstance(e.buffer, ArrayBuffer)) {\n                    return fromArrayBuffer(e, r, t);\n                }\n                if (typeof SharedArrayBuffer !== \"undefined\" && (isInstance(e, SharedArrayBuffer) || e && isInstance(e.buffer, SharedArrayBuffer))) {\n                    return fromArrayBuffer(e, r, t);\n                }\n                if (typeof e === \"number\") {\n                    throw new TypeError('The \"value\" argument must not be of type number. Received type number');\n                }\n                var f = e.valueOf && e.valueOf();\n                if (f != null && f !== e) {\n                    return Buffer.from(f, r, t);\n                }\n                var n = fromObject(e);\n                if (n) return n;\n                if (typeof Symbol !== \"undefined\" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] === \"function\") {\n                    return Buffer.from(e[Symbol.toPrimitive](\"string\"), r, t);\n                }\n                throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \" + \"or Array-like Object. Received type \" + typeof e);\n            }\n            Buffer.from = function(e, r, t) {\n                return from(e, r, t);\n            };\n            Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);\n            Object.setPrototypeOf(Buffer, Uint8Array);\n            function assertSize(e) {\n                if (typeof e !== \"number\") {\n                    throw new TypeError('\"size\" argument must be of type number');\n                } else if (e < 0) {\n                    throw new RangeError('The value \"' + e + '\" is invalid for option \"size\"');\n                }\n            }\n            function alloc(e, r, t) {\n                assertSize(e);\n                if (e <= 0) {\n                    return createBuffer(e);\n                }\n                if (r !== undefined) {\n                    return typeof t === \"string\" ? createBuffer(e).fill(r, t) : createBuffer(e).fill(r);\n                }\n                return createBuffer(e);\n            }\n            Buffer.alloc = function(e, r, t) {\n                return alloc(e, r, t);\n            };\n            function allocUnsafe(e) {\n                assertSize(e);\n                return createBuffer(e < 0 ? 0 : checked(e) | 0);\n            }\n            Buffer.allocUnsafe = function(e) {\n                return allocUnsafe(e);\n            };\n            Buffer.allocUnsafeSlow = function(e) {\n                return allocUnsafe(e);\n            };\n            function fromString(e, r) {\n                if (typeof r !== \"string\" || r === \"\") {\n                    r = \"utf8\";\n                }\n                if (!Buffer.isEncoding(r)) {\n                    throw new TypeError(\"Unknown encoding: \" + r);\n                }\n                var t = byteLength(e, r) | 0;\n                var f = createBuffer(t);\n                var n = f.write(e, r);\n                if (n !== t) {\n                    f = f.slice(0, n);\n                }\n                return f;\n            }\n            function fromArrayLike(e) {\n                var r = e.length < 0 ? 0 : checked(e.length) | 0;\n                var t = createBuffer(r);\n                for(var f = 0; f < r; f += 1){\n                    t[f] = e[f] & 255;\n                }\n                return t;\n            }\n            function fromArrayBuffer(e, r, t) {\n                if (r < 0 || e.byteLength < r) {\n                    throw new RangeError('\"offset\" is outside of buffer bounds');\n                }\n                if (e.byteLength < r + (t || 0)) {\n                    throw new RangeError('\"length\" is outside of buffer bounds');\n                }\n                var f;\n                if (r === undefined && t === undefined) {\n                    f = new Uint8Array(e);\n                } else if (t === undefined) {\n                    f = new Uint8Array(e, r);\n                } else {\n                    f = new Uint8Array(e, r, t);\n                }\n                Object.setPrototypeOf(f, Buffer.prototype);\n                return f;\n            }\n            function fromObject(e) {\n                if (Buffer.isBuffer(e)) {\n                    var r = checked(e.length) | 0;\n                    var t = createBuffer(r);\n                    if (t.length === 0) {\n                        return t;\n                    }\n                    e.copy(t, 0, 0, r);\n                    return t;\n                }\n                if (e.length !== undefined) {\n                    if (typeof e.length !== \"number\" || numberIsNaN(e.length)) {\n                        return createBuffer(0);\n                    }\n                    return fromArrayLike(e);\n                }\n                if (e.type === \"Buffer\" && Array.isArray(e.data)) {\n                    return fromArrayLike(e.data);\n                }\n            }\n            function checked(e) {\n                if (e >= o) {\n                    throw new RangeError(\"Attempt to allocate Buffer larger than maximum \" + \"size: 0x\" + o.toString(16) + \" bytes\");\n                }\n                return e | 0;\n            }\n            function SlowBuffer(e) {\n                if (+e != e) {\n                    e = 0;\n                }\n                return Buffer.alloc(+e);\n            }\n            Buffer.isBuffer = function isBuffer(e) {\n                return e != null && e._isBuffer === true && e !== Buffer.prototype;\n            };\n            Buffer.compare = function compare(e, r) {\n                if (isInstance(e, Uint8Array)) e = Buffer.from(e, e.offset, e.byteLength);\n                if (isInstance(r, Uint8Array)) r = Buffer.from(r, r.offset, r.byteLength);\n                if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) {\n                    throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');\n                }\n                if (e === r) return 0;\n                var t = e.length;\n                var f = r.length;\n                for(var n = 0, i = Math.min(t, f); n < i; ++n){\n                    if (e[n] !== r[n]) {\n                        t = e[n];\n                        f = r[n];\n                        break;\n                    }\n                }\n                if (t < f) return -1;\n                if (f < t) return 1;\n                return 0;\n            };\n            Buffer.isEncoding = function isEncoding(e) {\n                switch(String(e).toLowerCase()){\n                    case \"hex\":\n                    case \"utf8\":\n                    case \"utf-8\":\n                    case \"ascii\":\n                    case \"latin1\":\n                    case \"binary\":\n                    case \"base64\":\n                    case \"ucs2\":\n                    case \"ucs-2\":\n                    case \"utf16le\":\n                    case \"utf-16le\":\n                        return true;\n                    default:\n                        return false;\n                }\n            };\n            Buffer.concat = function concat(e, r) {\n                if (!Array.isArray(e)) {\n                    throw new TypeError('\"list\" argument must be an Array of Buffers');\n                }\n                if (e.length === 0) {\n                    return Buffer.alloc(0);\n                }\n                var t;\n                if (r === undefined) {\n                    r = 0;\n                    for(t = 0; t < e.length; ++t){\n                        r += e[t].length;\n                    }\n                }\n                var f = Buffer.allocUnsafe(r);\n                var n = 0;\n                for(t = 0; t < e.length; ++t){\n                    var i = e[t];\n                    if (isInstance(i, Uint8Array)) {\n                        i = Buffer.from(i);\n                    }\n                    if (!Buffer.isBuffer(i)) {\n                        throw new TypeError('\"list\" argument must be an Array of Buffers');\n                    }\n                    i.copy(f, n);\n                    n += i.length;\n                }\n                return f;\n            };\n            function byteLength(e, r) {\n                if (Buffer.isBuffer(e)) {\n                    return e.length;\n                }\n                if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) {\n                    return e.byteLength;\n                }\n                if (typeof e !== \"string\") {\n                    throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' + \"Received type \" + typeof e);\n                }\n                var t = e.length;\n                var f = arguments.length > 2 && arguments[2] === true;\n                if (!f && t === 0) return 0;\n                var n = false;\n                for(;;){\n                    switch(r){\n                        case \"ascii\":\n                        case \"latin1\":\n                        case \"binary\":\n                            return t;\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8ToBytes(e).length;\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return t * 2;\n                        case \"hex\":\n                            return t >>> 1;\n                        case \"base64\":\n                            return base64ToBytes(e).length;\n                        default:\n                            if (n) {\n                                return f ? -1 : utf8ToBytes(e).length;\n                            }\n                            r = (\"\" + r).toLowerCase();\n                            n = true;\n                    }\n                }\n            }\n            Buffer.byteLength = byteLength;\n            function slowToString(e, r, t) {\n                var f = false;\n                if (r === undefined || r < 0) {\n                    r = 0;\n                }\n                if (r > this.length) {\n                    return \"\";\n                }\n                if (t === undefined || t > this.length) {\n                    t = this.length;\n                }\n                if (t <= 0) {\n                    return \"\";\n                }\n                t >>>= 0;\n                r >>>= 0;\n                if (t <= r) {\n                    return \"\";\n                }\n                if (!e) e = \"utf8\";\n                while(true){\n                    switch(e){\n                        case \"hex\":\n                            return hexSlice(this, r, t);\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8Slice(this, r, t);\n                        case \"ascii\":\n                            return asciiSlice(this, r, t);\n                        case \"latin1\":\n                        case \"binary\":\n                            return latin1Slice(this, r, t);\n                        case \"base64\":\n                            return base64Slice(this, r, t);\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return utf16leSlice(this, r, t);\n                        default:\n                            if (f) throw new TypeError(\"Unknown encoding: \" + e);\n                            e = (e + \"\").toLowerCase();\n                            f = true;\n                    }\n                }\n            }\n            Buffer.prototype._isBuffer = true;\n            function swap(e, r, t) {\n                var f = e[r];\n                e[r] = e[t];\n                e[t] = f;\n            }\n            Buffer.prototype.swap16 = function swap16() {\n                var e = this.length;\n                if (e % 2 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 16-bits\");\n                }\n                for(var r = 0; r < e; r += 2){\n                    swap(this, r, r + 1);\n                }\n                return this;\n            };\n            Buffer.prototype.swap32 = function swap32() {\n                var e = this.length;\n                if (e % 4 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 32-bits\");\n                }\n                for(var r = 0; r < e; r += 4){\n                    swap(this, r, r + 3);\n                    swap(this, r + 1, r + 2);\n                }\n                return this;\n            };\n            Buffer.prototype.swap64 = function swap64() {\n                var e = this.length;\n                if (e % 8 !== 0) {\n                    throw new RangeError(\"Buffer size must be a multiple of 64-bits\");\n                }\n                for(var r = 0; r < e; r += 8){\n                    swap(this, r, r + 7);\n                    swap(this, r + 1, r + 6);\n                    swap(this, r + 2, r + 5);\n                    swap(this, r + 3, r + 4);\n                }\n                return this;\n            };\n            Buffer.prototype.toString = function toString() {\n                var e = this.length;\n                if (e === 0) return \"\";\n                if (arguments.length === 0) return utf8Slice(this, 0, e);\n                return slowToString.apply(this, arguments);\n            };\n            Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n            Buffer.prototype.equals = function equals(e) {\n                if (!Buffer.isBuffer(e)) throw new TypeError(\"Argument must be a Buffer\");\n                if (this === e) return true;\n                return Buffer.compare(this, e) === 0;\n            };\n            Buffer.prototype.inspect = function inspect() {\n                var e = \"\";\n                var t = r.INSPECT_MAX_BYTES;\n                e = this.toString(\"hex\", 0, t).replace(/(.{2})/g, \"$1 \").trim();\n                if (this.length > t) e += \" ... \";\n                return \"<Buffer \" + e + \">\";\n            };\n            if (i) {\n                Buffer.prototype[i] = Buffer.prototype.inspect;\n            }\n            Buffer.prototype.compare = function compare(e, r, t, f, n) {\n                if (isInstance(e, Uint8Array)) {\n                    e = Buffer.from(e, e.offset, e.byteLength);\n                }\n                if (!Buffer.isBuffer(e)) {\n                    throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. ' + \"Received type \" + typeof e);\n                }\n                if (r === undefined) {\n                    r = 0;\n                }\n                if (t === undefined) {\n                    t = e ? e.length : 0;\n                }\n                if (f === undefined) {\n                    f = 0;\n                }\n                if (n === undefined) {\n                    n = this.length;\n                }\n                if (r < 0 || t > e.length || f < 0 || n > this.length) {\n                    throw new RangeError(\"out of range index\");\n                }\n                if (f >= n && r >= t) {\n                    return 0;\n                }\n                if (f >= n) {\n                    return -1;\n                }\n                if (r >= t) {\n                    return 1;\n                }\n                r >>>= 0;\n                t >>>= 0;\n                f >>>= 0;\n                n >>>= 0;\n                if (this === e) return 0;\n                var i = n - f;\n                var o = t - r;\n                var u = Math.min(i, o);\n                var a = this.slice(f, n);\n                var s = e.slice(r, t);\n                for(var h = 0; h < u; ++h){\n                    if (a[h] !== s[h]) {\n                        i = a[h];\n                        o = s[h];\n                        break;\n                    }\n                }\n                if (i < o) return -1;\n                if (o < i) return 1;\n                return 0;\n            };\n            function bidirectionalIndexOf(e, r, t, f, n) {\n                if (e.length === 0) return -1;\n                if (typeof t === \"string\") {\n                    f = t;\n                    t = 0;\n                } else if (t > 2147483647) {\n                    t = 2147483647;\n                } else if (t < -2147483648) {\n                    t = -2147483648;\n                }\n                t = +t;\n                if (numberIsNaN(t)) {\n                    t = n ? 0 : e.length - 1;\n                }\n                if (t < 0) t = e.length + t;\n                if (t >= e.length) {\n                    if (n) return -1;\n                    else t = e.length - 1;\n                } else if (t < 0) {\n                    if (n) t = 0;\n                    else return -1;\n                }\n                if (typeof r === \"string\") {\n                    r = Buffer.from(r, f);\n                }\n                if (Buffer.isBuffer(r)) {\n                    if (r.length === 0) {\n                        return -1;\n                    }\n                    return arrayIndexOf(e, r, t, f, n);\n                } else if (typeof r === \"number\") {\n                    r = r & 255;\n                    if (typeof Uint8Array.prototype.indexOf === \"function\") {\n                        if (n) {\n                            return Uint8Array.prototype.indexOf.call(e, r, t);\n                        } else {\n                            return Uint8Array.prototype.lastIndexOf.call(e, r, t);\n                        }\n                    }\n                    return arrayIndexOf(e, [\n                        r\n                    ], t, f, n);\n                }\n                throw new TypeError(\"val must be string, number or Buffer\");\n            }\n            function arrayIndexOf(e, r, t, f, n) {\n                var i = 1;\n                var o = e.length;\n                var u = r.length;\n                if (f !== undefined) {\n                    f = String(f).toLowerCase();\n                    if (f === \"ucs2\" || f === \"ucs-2\" || f === \"utf16le\" || f === \"utf-16le\") {\n                        if (e.length < 2 || r.length < 2) {\n                            return -1;\n                        }\n                        i = 2;\n                        o /= 2;\n                        u /= 2;\n                        t /= 2;\n                    }\n                }\n                function read(e, r) {\n                    if (i === 1) {\n                        return e[r];\n                    } else {\n                        return e.readUInt16BE(r * i);\n                    }\n                }\n                var a;\n                if (n) {\n                    var s = -1;\n                    for(a = t; a < o; a++){\n                        if (read(e, a) === read(r, s === -1 ? 0 : a - s)) {\n                            if (s === -1) s = a;\n                            if (a - s + 1 === u) return s * i;\n                        } else {\n                            if (s !== -1) a -= a - s;\n                            s = -1;\n                        }\n                    }\n                } else {\n                    if (t + u > o) t = o - u;\n                    for(a = t; a >= 0; a--){\n                        var h = true;\n                        for(var c = 0; c < u; c++){\n                            if (read(e, a + c) !== read(r, c)) {\n                                h = false;\n                                break;\n                            }\n                        }\n                        if (h) return a;\n                    }\n                }\n                return -1;\n            }\n            Buffer.prototype.includes = function includes(e, r, t) {\n                return this.indexOf(e, r, t) !== -1;\n            };\n            Buffer.prototype.indexOf = function indexOf(e, r, t) {\n                return bidirectionalIndexOf(this, e, r, t, true);\n            };\n            Buffer.prototype.lastIndexOf = function lastIndexOf(e, r, t) {\n                return bidirectionalIndexOf(this, e, r, t, false);\n            };\n            function hexWrite(e, r, t, f) {\n                t = Number(t) || 0;\n                var n = e.length - t;\n                if (!f) {\n                    f = n;\n                } else {\n                    f = Number(f);\n                    if (f > n) {\n                        f = n;\n                    }\n                }\n                var i = r.length;\n                if (f > i / 2) {\n                    f = i / 2;\n                }\n                for(var o = 0; o < f; ++o){\n                    var u = parseInt(r.substr(o * 2, 2), 16);\n                    if (numberIsNaN(u)) return o;\n                    e[t + o] = u;\n                }\n                return o;\n            }\n            function utf8Write(e, r, t, f) {\n                return blitBuffer(utf8ToBytes(r, e.length - t), e, t, f);\n            }\n            function asciiWrite(e, r, t, f) {\n                return blitBuffer(asciiToBytes(r), e, t, f);\n            }\n            function latin1Write(e, r, t, f) {\n                return asciiWrite(e, r, t, f);\n            }\n            function base64Write(e, r, t, f) {\n                return blitBuffer(base64ToBytes(r), e, t, f);\n            }\n            function ucs2Write(e, r, t, f) {\n                return blitBuffer(utf16leToBytes(r, e.length - t), e, t, f);\n            }\n            Buffer.prototype.write = function write(e, r, t, f) {\n                if (r === undefined) {\n                    f = \"utf8\";\n                    t = this.length;\n                    r = 0;\n                } else if (t === undefined && typeof r === \"string\") {\n                    f = r;\n                    t = this.length;\n                    r = 0;\n                } else if (isFinite(r)) {\n                    r = r >>> 0;\n                    if (isFinite(t)) {\n                        t = t >>> 0;\n                        if (f === undefined) f = \"utf8\";\n                    } else {\n                        f = t;\n                        t = undefined;\n                    }\n                } else {\n                    throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");\n                }\n                var n = this.length - r;\n                if (t === undefined || t > n) t = n;\n                if (e.length > 0 && (t < 0 || r < 0) || r > this.length) {\n                    throw new RangeError(\"Attempt to write outside buffer bounds\");\n                }\n                if (!f) f = \"utf8\";\n                var i = false;\n                for(;;){\n                    switch(f){\n                        case \"hex\":\n                            return hexWrite(this, e, r, t);\n                        case \"utf8\":\n                        case \"utf-8\":\n                            return utf8Write(this, e, r, t);\n                        case \"ascii\":\n                            return asciiWrite(this, e, r, t);\n                        case \"latin1\":\n                        case \"binary\":\n                            return latin1Write(this, e, r, t);\n                        case \"base64\":\n                            return base64Write(this, e, r, t);\n                        case \"ucs2\":\n                        case \"ucs-2\":\n                        case \"utf16le\":\n                        case \"utf-16le\":\n                            return ucs2Write(this, e, r, t);\n                        default:\n                            if (i) throw new TypeError(\"Unknown encoding: \" + f);\n                            f = (\"\" + f).toLowerCase();\n                            i = true;\n                    }\n                }\n            };\n            Buffer.prototype.toJSON = function toJSON() {\n                return {\n                    type: \"Buffer\",\n                    data: Array.prototype.slice.call(this._arr || this, 0)\n                };\n            };\n            function base64Slice(e, r, t) {\n                if (r === 0 && t === e.length) {\n                    return f.fromByteArray(e);\n                } else {\n                    return f.fromByteArray(e.slice(r, t));\n                }\n            }\n            function utf8Slice(e, r, t) {\n                t = Math.min(e.length, t);\n                var f = [];\n                var n = r;\n                while(n < t){\n                    var i = e[n];\n                    var o = null;\n                    var u = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;\n                    if (n + u <= t) {\n                        var a, s, h, c;\n                        switch(u){\n                            case 1:\n                                if (i < 128) {\n                                    o = i;\n                                }\n                                break;\n                            case 2:\n                                a = e[n + 1];\n                                if ((a & 192) === 128) {\n                                    c = (i & 31) << 6 | a & 63;\n                                    if (c > 127) {\n                                        o = c;\n                                    }\n                                }\n                                break;\n                            case 3:\n                                a = e[n + 1];\n                                s = e[n + 2];\n                                if ((a & 192) === 128 && (s & 192) === 128) {\n                                    c = (i & 15) << 12 | (a & 63) << 6 | s & 63;\n                                    if (c > 2047 && (c < 55296 || c > 57343)) {\n                                        o = c;\n                                    }\n                                }\n                                break;\n                            case 4:\n                                a = e[n + 1];\n                                s = e[n + 2];\n                                h = e[n + 3];\n                                if ((a & 192) === 128 && (s & 192) === 128 && (h & 192) === 128) {\n                                    c = (i & 15) << 18 | (a & 63) << 12 | (s & 63) << 6 | h & 63;\n                                    if (c > 65535 && c < 1114112) {\n                                        o = c;\n                                    }\n                                }\n                        }\n                    }\n                    if (o === null) {\n                        o = 65533;\n                        u = 1;\n                    } else if (o > 65535) {\n                        o -= 65536;\n                        f.push(o >>> 10 & 1023 | 55296);\n                        o = 56320 | o & 1023;\n                    }\n                    f.push(o);\n                    n += u;\n                }\n                return decodeCodePointsArray(f);\n            }\n            var u = 4096;\n            function decodeCodePointsArray(e) {\n                var r = e.length;\n                if (r <= u) {\n                    return String.fromCharCode.apply(String, e);\n                }\n                var t = \"\";\n                var f = 0;\n                while(f < r){\n                    t += String.fromCharCode.apply(String, e.slice(f, f += u));\n                }\n                return t;\n            }\n            function asciiSlice(e, r, t) {\n                var f = \"\";\n                t = Math.min(e.length, t);\n                for(var n = r; n < t; ++n){\n                    f += String.fromCharCode(e[n] & 127);\n                }\n                return f;\n            }\n            function latin1Slice(e, r, t) {\n                var f = \"\";\n                t = Math.min(e.length, t);\n                for(var n = r; n < t; ++n){\n                    f += String.fromCharCode(e[n]);\n                }\n                return f;\n            }\n            function hexSlice(e, r, t) {\n                var f = e.length;\n                if (!r || r < 0) r = 0;\n                if (!t || t < 0 || t > f) t = f;\n                var n = \"\";\n                for(var i = r; i < t; ++i){\n                    n += s[e[i]];\n                }\n                return n;\n            }\n            function utf16leSlice(e, r, t) {\n                var f = e.slice(r, t);\n                var n = \"\";\n                for(var i = 0; i < f.length; i += 2){\n                    n += String.fromCharCode(f[i] + f[i + 1] * 256);\n                }\n                return n;\n            }\n            Buffer.prototype.slice = function slice(e, r) {\n                var t = this.length;\n                e = ~~e;\n                r = r === undefined ? t : ~~r;\n                if (e < 0) {\n                    e += t;\n                    if (e < 0) e = 0;\n                } else if (e > t) {\n                    e = t;\n                }\n                if (r < 0) {\n                    r += t;\n                    if (r < 0) r = 0;\n                } else if (r > t) {\n                    r = t;\n                }\n                if (r < e) r = e;\n                var f = this.subarray(e, r);\n                Object.setPrototypeOf(f, Buffer.prototype);\n                return f;\n            };\n            function checkOffset(e, r, t) {\n                if (e % 1 !== 0 || e < 0) throw new RangeError(\"offset is not uint\");\n                if (e + r > t) throw new RangeError(\"Trying to access beyond buffer length\");\n            }\n            Buffer.prototype.readUIntLE = function readUIntLE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = this[e];\n                var n = 1;\n                var i = 0;\n                while(++i < r && (n *= 256)){\n                    f += this[e + i] * n;\n                }\n                return f;\n            };\n            Buffer.prototype.readUIntBE = function readUIntBE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) {\n                    checkOffset(e, r, this.length);\n                }\n                var f = this[e + --r];\n                var n = 1;\n                while(r > 0 && (n *= 256)){\n                    f += this[e + --r] * n;\n                }\n                return f;\n            };\n            Buffer.prototype.readUInt8 = function readUInt8(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 1, this.length);\n                return this[e];\n            };\n            Buffer.prototype.readUInt16LE = function readUInt16LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                return this[e] | this[e + 1] << 8;\n            };\n            Buffer.prototype.readUInt16BE = function readUInt16BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                return this[e] << 8 | this[e + 1];\n            };\n            Buffer.prototype.readUInt32LE = function readUInt32LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;\n            };\n            Buffer.prototype.readUInt32BE = function readUInt32BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);\n            };\n            Buffer.prototype.readIntLE = function readIntLE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = this[e];\n                var n = 1;\n                var i = 0;\n                while(++i < r && (n *= 256)){\n                    f += this[e + i] * n;\n                }\n                n *= 128;\n                if (f >= n) f -= Math.pow(2, 8 * r);\n                return f;\n            };\n            Buffer.prototype.readIntBE = function readIntBE(e, r, t) {\n                e = e >>> 0;\n                r = r >>> 0;\n                if (!t) checkOffset(e, r, this.length);\n                var f = r;\n                var n = 1;\n                var i = this[e + --f];\n                while(f > 0 && (n *= 256)){\n                    i += this[e + --f] * n;\n                }\n                n *= 128;\n                if (i >= n) i -= Math.pow(2, 8 * r);\n                return i;\n            };\n            Buffer.prototype.readInt8 = function readInt8(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 1, this.length);\n                if (!(this[e] & 128)) return this[e];\n                return (255 - this[e] + 1) * -1;\n            };\n            Buffer.prototype.readInt16LE = function readInt16LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                var t = this[e] | this[e + 1] << 8;\n                return t & 32768 ? t | 4294901760 : t;\n            };\n            Buffer.prototype.readInt16BE = function readInt16BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 2, this.length);\n                var t = this[e + 1] | this[e] << 8;\n                return t & 32768 ? t | 4294901760 : t;\n            };\n            Buffer.prototype.readInt32LE = function readInt32LE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;\n            };\n            Buffer.prototype.readInt32BE = function readInt32BE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];\n            };\n            Buffer.prototype.readFloatLE = function readFloatLE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return n.read(this, e, true, 23, 4);\n            };\n            Buffer.prototype.readFloatBE = function readFloatBE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 4, this.length);\n                return n.read(this, e, false, 23, 4);\n            };\n            Buffer.prototype.readDoubleLE = function readDoubleLE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 8, this.length);\n                return n.read(this, e, true, 52, 8);\n            };\n            Buffer.prototype.readDoubleBE = function readDoubleBE(e, r) {\n                e = e >>> 0;\n                if (!r) checkOffset(e, 8, this.length);\n                return n.read(this, e, false, 52, 8);\n            };\n            function checkInt(e, r, t, f, n, i) {\n                if (!Buffer.isBuffer(e)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n                if (r > n || r < i) throw new RangeError('\"value\" argument is out of bounds');\n                if (t + f > e.length) throw new RangeError(\"Index out of range\");\n            }\n            Buffer.prototype.writeUIntLE = function writeUIntLE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                t = t >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t) - 1;\n                    checkInt(this, e, r, t, n, 0);\n                }\n                var i = 1;\n                var o = 0;\n                this[r] = e & 255;\n                while(++o < t && (i *= 256)){\n                    this[r + o] = e / i & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeUIntBE = function writeUIntBE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                t = t >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t) - 1;\n                    checkInt(this, e, r, t, n, 0);\n                }\n                var i = t - 1;\n                var o = 1;\n                this[r + i] = e & 255;\n                while(--i >= 0 && (o *= 256)){\n                    this[r + i] = e / o & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeUInt8 = function writeUInt8(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 1, 255, 0);\n                this[r] = e & 255;\n                return r + 1;\n            };\n            Buffer.prototype.writeUInt16LE = function writeUInt16LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 65535, 0);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                return r + 2;\n            };\n            Buffer.prototype.writeUInt16BE = function writeUInt16BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 65535, 0);\n                this[r] = e >>> 8;\n                this[r + 1] = e & 255;\n                return r + 2;\n            };\n            Buffer.prototype.writeUInt32LE = function writeUInt32LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n                this[r + 3] = e >>> 24;\n                this[r + 2] = e >>> 16;\n                this[r + 1] = e >>> 8;\n                this[r] = e & 255;\n                return r + 4;\n            };\n            Buffer.prototype.writeUInt32BE = function writeUInt32BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 4294967295, 0);\n                this[r] = e >>> 24;\n                this[r + 1] = e >>> 16;\n                this[r + 2] = e >>> 8;\n                this[r + 3] = e & 255;\n                return r + 4;\n            };\n            Buffer.prototype.writeIntLE = function writeIntLE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t - 1);\n                    checkInt(this, e, r, t, n - 1, -n);\n                }\n                var i = 0;\n                var o = 1;\n                var u = 0;\n                this[r] = e & 255;\n                while(++i < t && (o *= 256)){\n                    if (e < 0 && u === 0 && this[r + i - 1] !== 0) {\n                        u = 1;\n                    }\n                    this[r + i] = (e / o >> 0) - u & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeIntBE = function writeIntBE(e, r, t, f) {\n                e = +e;\n                r = r >>> 0;\n                if (!f) {\n                    var n = Math.pow(2, 8 * t - 1);\n                    checkInt(this, e, r, t, n - 1, -n);\n                }\n                var i = t - 1;\n                var o = 1;\n                var u = 0;\n                this[r + i] = e & 255;\n                while(--i >= 0 && (o *= 256)){\n                    if (e < 0 && u === 0 && this[r + i + 1] !== 0) {\n                        u = 1;\n                    }\n                    this[r + i] = (e / o >> 0) - u & 255;\n                }\n                return r + t;\n            };\n            Buffer.prototype.writeInt8 = function writeInt8(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 1, 127, -128);\n                if (e < 0) e = 255 + e + 1;\n                this[r] = e & 255;\n                return r + 1;\n            };\n            Buffer.prototype.writeInt16LE = function writeInt16LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 32767, -32768);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                return r + 2;\n            };\n            Buffer.prototype.writeInt16BE = function writeInt16BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 2, 32767, -32768);\n                this[r] = e >>> 8;\n                this[r + 1] = e & 255;\n                return r + 2;\n            };\n            Buffer.prototype.writeInt32LE = function writeInt32LE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n                this[r] = e & 255;\n                this[r + 1] = e >>> 8;\n                this[r + 2] = e >>> 16;\n                this[r + 3] = e >>> 24;\n                return r + 4;\n            };\n            Buffer.prototype.writeInt32BE = function writeInt32BE(e, r, t) {\n                e = +e;\n                r = r >>> 0;\n                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);\n                if (e < 0) e = 4294967295 + e + 1;\n                this[r] = e >>> 24;\n                this[r + 1] = e >>> 16;\n                this[r + 2] = e >>> 8;\n                this[r + 3] = e & 255;\n                return r + 4;\n            };\n            function checkIEEE754(e, r, t, f, n, i) {\n                if (t + f > e.length) throw new RangeError(\"Index out of range\");\n                if (t < 0) throw new RangeError(\"Index out of range\");\n            }\n            function writeFloat(e, r, t, f, i) {\n                r = +r;\n                t = t >>> 0;\n                if (!i) {\n                    checkIEEE754(e, r, t, 4, 34028234663852886e22, -34028234663852886e22);\n                }\n                n.write(e, r, t, f, 23, 4);\n                return t + 4;\n            }\n            Buffer.prototype.writeFloatLE = function writeFloatLE(e, r, t) {\n                return writeFloat(this, e, r, true, t);\n            };\n            Buffer.prototype.writeFloatBE = function writeFloatBE(e, r, t) {\n                return writeFloat(this, e, r, false, t);\n            };\n            function writeDouble(e, r, t, f, i) {\n                r = +r;\n                t = t >>> 0;\n                if (!i) {\n                    checkIEEE754(e, r, t, 8, 17976931348623157e292, -17976931348623157e292);\n                }\n                n.write(e, r, t, f, 52, 8);\n                return t + 8;\n            }\n            Buffer.prototype.writeDoubleLE = function writeDoubleLE(e, r, t) {\n                return writeDouble(this, e, r, true, t);\n            };\n            Buffer.prototype.writeDoubleBE = function writeDoubleBE(e, r, t) {\n                return writeDouble(this, e, r, false, t);\n            };\n            Buffer.prototype.copy = function copy(e, r, t, f) {\n                if (!Buffer.isBuffer(e)) throw new TypeError(\"argument should be a Buffer\");\n                if (!t) t = 0;\n                if (!f && f !== 0) f = this.length;\n                if (r >= e.length) r = e.length;\n                if (!r) r = 0;\n                if (f > 0 && f < t) f = t;\n                if (f === t) return 0;\n                if (e.length === 0 || this.length === 0) return 0;\n                if (r < 0) {\n                    throw new RangeError(\"targetStart out of bounds\");\n                }\n                if (t < 0 || t >= this.length) throw new RangeError(\"Index out of range\");\n                if (f < 0) throw new RangeError(\"sourceEnd out of bounds\");\n                if (f > this.length) f = this.length;\n                if (e.length - r < f - t) {\n                    f = e.length - r + t;\n                }\n                var n = f - t;\n                if (this === e && typeof Uint8Array.prototype.copyWithin === \"function\") {\n                    this.copyWithin(r, t, f);\n                } else if (this === e && t < r && r < f) {\n                    for(var i = n - 1; i >= 0; --i){\n                        e[i + r] = this[i + t];\n                    }\n                } else {\n                    Uint8Array.prototype.set.call(e, this.subarray(t, f), r);\n                }\n                return n;\n            };\n            Buffer.prototype.fill = function fill(e, r, t, f) {\n                if (typeof e === \"string\") {\n                    if (typeof r === \"string\") {\n                        f = r;\n                        r = 0;\n                        t = this.length;\n                    } else if (typeof t === \"string\") {\n                        f = t;\n                        t = this.length;\n                    }\n                    if (f !== undefined && typeof f !== \"string\") {\n                        throw new TypeError(\"encoding must be a string\");\n                    }\n                    if (typeof f === \"string\" && !Buffer.isEncoding(f)) {\n                        throw new TypeError(\"Unknown encoding: \" + f);\n                    }\n                    if (e.length === 1) {\n                        var n = e.charCodeAt(0);\n                        if (f === \"utf8\" && n < 128 || f === \"latin1\") {\n                            e = n;\n                        }\n                    }\n                } else if (typeof e === \"number\") {\n                    e = e & 255;\n                } else if (typeof e === \"boolean\") {\n                    e = Number(e);\n                }\n                if (r < 0 || this.length < r || this.length < t) {\n                    throw new RangeError(\"Out of range index\");\n                }\n                if (t <= r) {\n                    return this;\n                }\n                r = r >>> 0;\n                t = t === undefined ? this.length : t >>> 0;\n                if (!e) e = 0;\n                var i;\n                if (typeof e === \"number\") {\n                    for(i = r; i < t; ++i){\n                        this[i] = e;\n                    }\n                } else {\n                    var o = Buffer.isBuffer(e) ? e : Buffer.from(e, f);\n                    var u = o.length;\n                    if (u === 0) {\n                        throw new TypeError('The value \"' + e + '\" is invalid for argument \"value\"');\n                    }\n                    for(i = 0; i < t - r; ++i){\n                        this[i + r] = o[i % u];\n                    }\n                }\n                return this;\n            };\n            var a = /[^+/0-9A-Za-z-_]/g;\n            function base64clean(e) {\n                e = e.split(\"=\")[0];\n                e = e.trim().replace(a, \"\");\n                if (e.length < 2) return \"\";\n                while(e.length % 4 !== 0){\n                    e = e + \"=\";\n                }\n                return e;\n            }\n            function utf8ToBytes(e, r) {\n                r = r || Infinity;\n                var t;\n                var f = e.length;\n                var n = null;\n                var i = [];\n                for(var o = 0; o < f; ++o){\n                    t = e.charCodeAt(o);\n                    if (t > 55295 && t < 57344) {\n                        if (!n) {\n                            if (t > 56319) {\n                                if ((r -= 3) > -1) i.push(239, 191, 189);\n                                continue;\n                            } else if (o + 1 === f) {\n                                if ((r -= 3) > -1) i.push(239, 191, 189);\n                                continue;\n                            }\n                            n = t;\n                            continue;\n                        }\n                        if (t < 56320) {\n                            if ((r -= 3) > -1) i.push(239, 191, 189);\n                            n = t;\n                            continue;\n                        }\n                        t = (n - 55296 << 10 | t - 56320) + 65536;\n                    } else if (n) {\n                        if ((r -= 3) > -1) i.push(239, 191, 189);\n                    }\n                    n = null;\n                    if (t < 128) {\n                        if ((r -= 1) < 0) break;\n                        i.push(t);\n                    } else if (t < 2048) {\n                        if ((r -= 2) < 0) break;\n                        i.push(t >> 6 | 192, t & 63 | 128);\n                    } else if (t < 65536) {\n                        if ((r -= 3) < 0) break;\n                        i.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);\n                    } else if (t < 1114112) {\n                        if ((r -= 4) < 0) break;\n                        i.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);\n                    } else {\n                        throw new Error(\"Invalid code point\");\n                    }\n                }\n                return i;\n            }\n            function asciiToBytes(e) {\n                var r = [];\n                for(var t = 0; t < e.length; ++t){\n                    r.push(e.charCodeAt(t) & 255);\n                }\n                return r;\n            }\n            function utf16leToBytes(e, r) {\n                var t, f, n;\n                var i = [];\n                for(var o = 0; o < e.length; ++o){\n                    if ((r -= 2) < 0) break;\n                    t = e.charCodeAt(o);\n                    f = t >> 8;\n                    n = t % 256;\n                    i.push(n);\n                    i.push(f);\n                }\n                return i;\n            }\n            function base64ToBytes(e) {\n                return f.toByteArray(base64clean(e));\n            }\n            function blitBuffer(e, r, t, f) {\n                for(var n = 0; n < f; ++n){\n                    if (n + t >= r.length || n >= e.length) break;\n                    r[n + t] = e[n];\n                }\n                return n;\n            }\n            function isInstance(e, r) {\n                return e instanceof r || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === r.name;\n            }\n            function numberIsNaN(e) {\n                return e !== e;\n            }\n            var s = function() {\n                var e = \"0123456789abcdef\";\n                var r = new Array(256);\n                for(var t = 0; t < 16; ++t){\n                    var f = t * 16;\n                    for(var n = 0; n < 16; ++n){\n                        r[f + n] = e[t] + e[n];\n                    }\n                }\n                return r;\n            }();\n        },\n        783: function(e, r) {\n            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ r.read = function(e, r, t, f, n) {\n                var i, o;\n                var u = n * 8 - f - 1;\n                var a = (1 << u) - 1;\n                var s = a >> 1;\n                var h = -7;\n                var c = t ? n - 1 : 0;\n                var l = t ? -1 : 1;\n                var p = e[r + c];\n                c += l;\n                i = p & (1 << -h) - 1;\n                p >>= -h;\n                h += u;\n                for(; h > 0; i = i * 256 + e[r + c], c += l, h -= 8){}\n                o = i & (1 << -h) - 1;\n                i >>= -h;\n                h += f;\n                for(; h > 0; o = o * 256 + e[r + c], c += l, h -= 8){}\n                if (i === 0) {\n                    i = 1 - s;\n                } else if (i === a) {\n                    return o ? NaN : (p ? -1 : 1) * Infinity;\n                } else {\n                    o = o + Math.pow(2, f);\n                    i = i - s;\n                }\n                return (p ? -1 : 1) * o * Math.pow(2, i - f);\n            };\n            r.write = function(e, r, t, f, n, i) {\n                var o, u, a;\n                var s = i * 8 - n - 1;\n                var h = (1 << s) - 1;\n                var c = h >> 1;\n                var l = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n                var p = f ? 0 : i - 1;\n                var y = f ? 1 : -1;\n                var g = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;\n                r = Math.abs(r);\n                if (isNaN(r) || r === Infinity) {\n                    u = isNaN(r) ? 1 : 0;\n                    o = h;\n                } else {\n                    o = Math.floor(Math.log(r) / Math.LN2);\n                    if (r * (a = Math.pow(2, -o)) < 1) {\n                        o--;\n                        a *= 2;\n                    }\n                    if (o + c >= 1) {\n                        r += l / a;\n                    } else {\n                        r += l * Math.pow(2, 1 - c);\n                    }\n                    if (r * a >= 2) {\n                        o++;\n                        a /= 2;\n                    }\n                    if (o + c >= h) {\n                        u = 0;\n                        o = h;\n                    } else if (o + c >= 1) {\n                        u = (r * a - 1) * Math.pow(2, n);\n                        o = o + c;\n                    } else {\n                        u = r * Math.pow(2, c - 1) * Math.pow(2, n);\n                        o = 0;\n                    }\n                }\n                for(; n >= 8; e[t + p] = u & 255, p += y, u /= 256, n -= 8){}\n                o = o << n | u;\n                s += n;\n                for(; s > 0; e[t + p] = o & 255, p += y, o /= 256, s -= 8){}\n                e[t + p - y] |= g * 128;\n            };\n        }\n    };\n    var r = {};\n    function __nccwpck_require__(t) {\n        var f = r[t];\n        if (f !== undefined) {\n            return f.exports;\n        }\n        var n = r[t] = {\n            exports: {}\n        };\n        var i = true;\n        try {\n            e[t](n, n.exports, __nccwpck_require__);\n            i = false;\n        } finally{\n            if (i) delete r[t];\n        }\n        return n.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var t = __nccwpck_require__(72);\n    module.exports = t;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/quill/dist/quill.js":
/*!******************************************!*\
  !*** ./node_modules/quill/dist/quill.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n\n/*!\n * Quill Editor v1.3.7\n * https://quilljs.com/\n * Copyright (c) 2014, Jason Chen\n * Copyright (c) 2013, salesforce.com\n */ (function webpackUniversalModuleDefinition(root, factory) {\n    if (true) module.exports = factory();\n    else {}\n})(typeof self !== \"undefined\" ? self : void 0, function() {\n    return /******/ function(modules) {\n        /******/ // The module cache\n        /******/ var installedModules = {};\n        /******/ /******/ // The require function\n        /******/ function __nested_webpack_require_731__(moduleId) {\n            /******/ /******/ // Check if module is in cache\n            /******/ if (installedModules[moduleId]) {\n                /******/ return installedModules[moduleId].exports;\n            /******/ }\n            /******/ // Create a new module (and put it into the cache)\n            /******/ var module1 = installedModules[moduleId] = {\n                /******/ i: moduleId,\n                /******/ l: false,\n                /******/ exports: {}\n            };\n            /******/ /******/ // Execute the module function\n            /******/ modules[moduleId].call(module1.exports, module1, module1.exports, __nested_webpack_require_731__);\n            /******/ /******/ // Flag the module as loaded\n            /******/ module1.l = true;\n            /******/ /******/ // Return the exports of the module\n            /******/ return module1.exports;\n        /******/ }\n        /******/ /******/ /******/ // expose the modules object (__webpack_modules__)\n        /******/ __nested_webpack_require_731__.m = modules;\n        /******/ /******/ // expose the module cache\n        /******/ __nested_webpack_require_731__.c = installedModules;\n        /******/ /******/ // define getter function for harmony exports\n        /******/ __nested_webpack_require_731__.d = function(exports1, name, getter) {\n            /******/ if (!__nested_webpack_require_731__.o(exports1, name)) {\n                /******/ Object.defineProperty(exports1, name, {\n                    /******/ configurable: false,\n                    /******/ enumerable: true,\n                    /******/ get: getter\n                });\n            /******/ }\n        /******/ };\n        /******/ /******/ // getDefaultExport function for compatibility with non-harmony modules\n        /******/ __nested_webpack_require_731__.n = function(module1) {\n            /******/ var getter = module1 && module1.__esModule ? /******/ function getDefault() {\n                return module1[\"default\"];\n            } : /******/ function getModuleExports() {\n                return module1;\n            };\n            /******/ __nested_webpack_require_731__.d(getter, \"a\", getter);\n            /******/ return getter;\n        /******/ };\n        /******/ /******/ // Object.prototype.hasOwnProperty.call\n        /******/ __nested_webpack_require_731__.o = function(object, property) {\n            return Object.prototype.hasOwnProperty.call(object, property);\n        };\n        /******/ /******/ // __webpack_public_path__\n        /******/ __nested_webpack_require_731__.p = \"\";\n        /******/ /******/ // Load entry module and return exports\n        /******/ return __nested_webpack_require_731__(__nested_webpack_require_731__.s = 109);\n    /******/ }([\n        /* 0 */ /***/ function(module1, exports1, __nested_webpack_require_3420__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var container_1 = __nested_webpack_require_3420__(17);\n            var format_1 = __nested_webpack_require_3420__(18);\n            var leaf_1 = __nested_webpack_require_3420__(19);\n            var scroll_1 = __nested_webpack_require_3420__(45);\n            var inline_1 = __nested_webpack_require_3420__(46);\n            var block_1 = __nested_webpack_require_3420__(47);\n            var embed_1 = __nested_webpack_require_3420__(48);\n            var text_1 = __nested_webpack_require_3420__(49);\n            var attributor_1 = __nested_webpack_require_3420__(12);\n            var class_1 = __nested_webpack_require_3420__(32);\n            var style_1 = __nested_webpack_require_3420__(33);\n            var store_1 = __nested_webpack_require_3420__(31);\n            var Registry = __nested_webpack_require_3420__(1);\n            var Parchment = {\n                Scope: Registry.Scope,\n                create: Registry.create,\n                find: Registry.find,\n                query: Registry.query,\n                register: Registry.register,\n                Container: container_1.default,\n                Format: format_1.default,\n                Leaf: leaf_1.default,\n                Embed: embed_1.default,\n                Scroll: scroll_1.default,\n                Block: block_1.default,\n                Inline: inline_1.default,\n                Text: text_1.default,\n                Attributor: {\n                    Attribute: attributor_1.default,\n                    Class: class_1.default,\n                    Style: style_1.default,\n                    Store: store_1.default\n                }\n            };\n            exports1.default = Parchment;\n        /***/ },\n        /* 1 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var ParchmentError = /** @class */ function(_super) {\n                __extends(ParchmentError, _super);\n                function ParchmentError(message) {\n                    var _this = this;\n                    message = \"[Parchment] \" + message;\n                    _this = _super.call(this, message) || this;\n                    _this.message = message;\n                    _this.name = _this.constructor.name;\n                    return _this;\n                }\n                return ParchmentError;\n            }(Error);\n            exports1.ParchmentError = ParchmentError;\n            var attributes = {};\n            var classes = {};\n            var tags = {};\n            var types = {};\n            exports1.DATA_KEY = \"__blot\";\n            var Scope;\n            (function(Scope) {\n                Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n                Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n                Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n                Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n                Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n                Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n                Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n                Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n                Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n                Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n                Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n            })(Scope = exports1.Scope || (exports1.Scope = {}));\n            function create(input, value) {\n                var match = query(input);\n                if (match == null) {\n                    throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n                }\n                var BlotClass = match;\n                var node = // @ts-ignore\n                input instanceof Node || input[\"nodeType\"] === Node.TEXT_NODE ? input : BlotClass.create(value);\n                return new BlotClass(node, value);\n            }\n            exports1.create = create;\n            function find(node, bubble) {\n                if (bubble === void 0) {\n                    bubble = false;\n                }\n                if (node == null) return null;\n                // @ts-ignore\n                if (node[exports1.DATA_KEY] != null) return node[exports1.DATA_KEY].blot;\n                if (bubble) return find(node.parentNode, bubble);\n                return null;\n            }\n            exports1.find = find;\n            function query(query, scope) {\n                if (scope === void 0) {\n                    scope = Scope.ANY;\n                }\n                var match;\n                if (typeof query === \"string\") {\n                    match = types[query] || attributes[query];\n                // @ts-ignore\n                } else if (query instanceof Text || query[\"nodeType\"] === Node.TEXT_NODE) {\n                    match = types[\"text\"];\n                } else if (typeof query === \"number\") {\n                    if (query & Scope.LEVEL & Scope.BLOCK) {\n                        match = types[\"block\"];\n                    } else if (query & Scope.LEVEL & Scope.INLINE) {\n                        match = types[\"inline\"];\n                    }\n                } else if (query instanceof HTMLElement) {\n                    var names = (query.getAttribute(\"class\") || \"\").split(/\\s+/);\n                    for(var i in names){\n                        match = classes[names[i]];\n                        if (match) break;\n                    }\n                    match = match || tags[query.tagName];\n                }\n                if (match == null) return null;\n                // @ts-ignore\n                if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) return match;\n                return null;\n            }\n            exports1.query = query;\n            function register() {\n                var Definitions = [];\n                for(var _i = 0; _i < arguments.length; _i++){\n                    Definitions[_i] = arguments[_i];\n                }\n                if (Definitions.length > 1) {\n                    return Definitions.map(function(d) {\n                        return register(d);\n                    });\n                }\n                var Definition = Definitions[0];\n                if (typeof Definition.blotName !== \"string\" && typeof Definition.attrName !== \"string\") {\n                    throw new ParchmentError(\"Invalid definition\");\n                } else if (Definition.blotName === \"abstract\") {\n                    throw new ParchmentError(\"Cannot register abstract class\");\n                }\n                types[Definition.blotName || Definition.attrName] = Definition;\n                if (typeof Definition.keyName === \"string\") {\n                    attributes[Definition.keyName] = Definition;\n                } else {\n                    if (Definition.className != null) {\n                        classes[Definition.className] = Definition;\n                    }\n                    if (Definition.tagName != null) {\n                        if (Array.isArray(Definition.tagName)) {\n                            Definition.tagName = Definition.tagName.map(function(tagName) {\n                                return tagName.toUpperCase();\n                            });\n                        } else {\n                            Definition.tagName = Definition.tagName.toUpperCase();\n                        }\n                        var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [\n                            Definition.tagName\n                        ];\n                        tagNames.forEach(function(tag) {\n                            if (tags[tag] == null || Definition.className == null) {\n                                tags[tag] = Definition;\n                            }\n                        });\n                    }\n                }\n                return Definition;\n            }\n            exports1.register = register;\n        /***/ },\n        /* 2 */ /***/ function(module1, exports1, __nested_webpack_require_12144__) {\n            var diff = __nested_webpack_require_12144__(51);\n            var equal = __nested_webpack_require_12144__(11);\n            var extend = __nested_webpack_require_12144__(3);\n            var op = __nested_webpack_require_12144__(20);\n            var NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\n            var Delta = function(ops) {\n                // Assume we are given a well formed ops\n                if (Array.isArray(ops)) {\n                    this.ops = ops;\n                } else if (ops != null && Array.isArray(ops.ops)) {\n                    this.ops = ops.ops;\n                } else {\n                    this.ops = [];\n                }\n            };\n            Delta.prototype.insert = function(text, attributes) {\n                var newOp = {};\n                if (text.length === 0) return this;\n                newOp.insert = text;\n                if (attributes != null && typeof attributes === \"object\" && Object.keys(attributes).length > 0) {\n                    newOp.attributes = attributes;\n                }\n                return this.push(newOp);\n            };\n            Delta.prototype[\"delete\"] = function(length) {\n                if (length <= 0) return this;\n                return this.push({\n                    \"delete\": length\n                });\n            };\n            Delta.prototype.retain = function(length, attributes) {\n                if (length <= 0) return this;\n                var newOp = {\n                    retain: length\n                };\n                if (attributes != null && typeof attributes === \"object\" && Object.keys(attributes).length > 0) {\n                    newOp.attributes = attributes;\n                }\n                return this.push(newOp);\n            };\n            Delta.prototype.push = function(newOp) {\n                var index = this.ops.length;\n                var lastOp = this.ops[index - 1];\n                newOp = extend(true, {}, newOp);\n                if (typeof lastOp === \"object\") {\n                    if (typeof newOp[\"delete\"] === \"number\" && typeof lastOp[\"delete\"] === \"number\") {\n                        this.ops[index - 1] = {\n                            \"delete\": lastOp[\"delete\"] + newOp[\"delete\"]\n                        };\n                        return this;\n                    }\n                    // Since it does not matter if we insert before or after deleting at the same index,\n                    // always prefer to insert first\n                    if (typeof lastOp[\"delete\"] === \"number\" && newOp.insert != null) {\n                        index -= 1;\n                        lastOp = this.ops[index - 1];\n                        if (typeof lastOp !== \"object\") {\n                            this.ops.unshift(newOp);\n                            return this;\n                        }\n                    }\n                    if (equal(newOp.attributes, lastOp.attributes)) {\n                        if (typeof newOp.insert === \"string\" && typeof lastOp.insert === \"string\") {\n                            this.ops[index - 1] = {\n                                insert: lastOp.insert + newOp.insert\n                            };\n                            if (typeof newOp.attributes === \"object\") this.ops[index - 1].attributes = newOp.attributes;\n                            return this;\n                        } else if (typeof newOp.retain === \"number\" && typeof lastOp.retain === \"number\") {\n                            this.ops[index - 1] = {\n                                retain: lastOp.retain + newOp.retain\n                            };\n                            if (typeof newOp.attributes === \"object\") this.ops[index - 1].attributes = newOp.attributes;\n                            return this;\n                        }\n                    }\n                }\n                if (index === this.ops.length) {\n                    this.ops.push(newOp);\n                } else {\n                    this.ops.splice(index, 0, newOp);\n                }\n                return this;\n            };\n            Delta.prototype.chop = function() {\n                var lastOp = this.ops[this.ops.length - 1];\n                if (lastOp && lastOp.retain && !lastOp.attributes) {\n                    this.ops.pop();\n                }\n                return this;\n            };\n            Delta.prototype.filter = function(predicate) {\n                return this.ops.filter(predicate);\n            };\n            Delta.prototype.forEach = function(predicate) {\n                this.ops.forEach(predicate);\n            };\n            Delta.prototype.map = function(predicate) {\n                return this.ops.map(predicate);\n            };\n            Delta.prototype.partition = function(predicate) {\n                var passed = [], failed = [];\n                this.forEach(function(op) {\n                    var target = predicate(op) ? passed : failed;\n                    target.push(op);\n                });\n                return [\n                    passed,\n                    failed\n                ];\n            };\n            Delta.prototype.reduce = function(predicate, initial) {\n                return this.ops.reduce(predicate, initial);\n            };\n            Delta.prototype.changeLength = function() {\n                return this.reduce(function(length, elem) {\n                    if (elem.insert) {\n                        return length + op.length(elem);\n                    } else if (elem.delete) {\n                        return length - elem.delete;\n                    }\n                    return length;\n                }, 0);\n            };\n            Delta.prototype.length = function() {\n                return this.reduce(function(length, elem) {\n                    return length + op.length(elem);\n                }, 0);\n            };\n            Delta.prototype.slice = function(start, end) {\n                start = start || 0;\n                if (typeof end !== \"number\") end = Infinity;\n                var ops = [];\n                var iter = op.iterator(this.ops);\n                var index = 0;\n                while(index < end && iter.hasNext()){\n                    var nextOp;\n                    if (index < start) {\n                        nextOp = iter.next(start - index);\n                    } else {\n                        nextOp = iter.next(end - index);\n                        ops.push(nextOp);\n                    }\n                    index += op.length(nextOp);\n                }\n                return new Delta(ops);\n            };\n            Delta.prototype.compose = function(other) {\n                var thisIter = op.iterator(this.ops);\n                var otherIter = op.iterator(other.ops);\n                var ops = [];\n                var firstOther = otherIter.peek();\n                if (firstOther != null && typeof firstOther.retain === \"number\" && firstOther.attributes == null) {\n                    var firstLeft = firstOther.retain;\n                    while(thisIter.peekType() === \"insert\" && thisIter.peekLength() <= firstLeft){\n                        firstLeft -= thisIter.peekLength();\n                        ops.push(thisIter.next());\n                    }\n                    if (firstOther.retain - firstLeft > 0) {\n                        otherIter.next(firstOther.retain - firstLeft);\n                    }\n                }\n                var delta = new Delta(ops);\n                while(thisIter.hasNext() || otherIter.hasNext()){\n                    if (otherIter.peekType() === \"insert\") {\n                        delta.push(otherIter.next());\n                    } else if (thisIter.peekType() === \"delete\") {\n                        delta.push(thisIter.next());\n                    } else {\n                        var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n                        var thisOp = thisIter.next(length);\n                        var otherOp = otherIter.next(length);\n                        if (typeof otherOp.retain === \"number\") {\n                            var newOp = {};\n                            if (typeof thisOp.retain === \"number\") {\n                                newOp.retain = length;\n                            } else {\n                                newOp.insert = thisOp.insert;\n                            }\n                            // Preserve null when composing with a retain, otherwise remove it for inserts\n                            var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === \"number\");\n                            if (attributes) newOp.attributes = attributes;\n                            delta.push(newOp);\n                            // Optimization if rest of other is just retain\n                            if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {\n                                var rest = new Delta(thisIter.rest());\n                                return delta.concat(rest).chop();\n                            }\n                        // Other op should be delete, we could be an insert or retain\n                        // Insert + delete cancels out\n                        } else if (typeof otherOp[\"delete\"] === \"number\" && typeof thisOp.retain === \"number\") {\n                            delta.push(otherOp);\n                        }\n                    }\n                }\n                return delta.chop();\n            };\n            Delta.prototype.concat = function(other) {\n                var delta = new Delta(this.ops.slice());\n                if (other.ops.length > 0) {\n                    delta.push(other.ops[0]);\n                    delta.ops = delta.ops.concat(other.ops.slice(1));\n                }\n                return delta;\n            };\n            Delta.prototype.diff = function(other, index) {\n                if (this.ops === other.ops) {\n                    return new Delta();\n                }\n                var strings = [\n                    this,\n                    other\n                ].map(function(delta) {\n                    return delta.map(function(op) {\n                        if (op.insert != null) {\n                            return typeof op.insert === \"string\" ? op.insert : NULL_CHARACTER;\n                        }\n                        var prep = delta === other ? \"on\" : \"with\";\n                        throw new Error(\"diff() called \" + prep + \" non-document\");\n                    }).join(\"\");\n                });\n                var delta = new Delta();\n                var diffResult = diff(strings[0], strings[1], index);\n                var thisIter = op.iterator(this.ops);\n                var otherIter = op.iterator(other.ops);\n                diffResult.forEach(function(component) {\n                    var length = component[1].length;\n                    while(length > 0){\n                        var opLength = 0;\n                        switch(component[0]){\n                            case diff.INSERT:\n                                opLength = Math.min(otherIter.peekLength(), length);\n                                delta.push(otherIter.next(opLength));\n                                break;\n                            case diff.DELETE:\n                                opLength = Math.min(length, thisIter.peekLength());\n                                thisIter.next(opLength);\n                                delta[\"delete\"](opLength);\n                                break;\n                            case diff.EQUAL:\n                                opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n                                var thisOp = thisIter.next(opLength);\n                                var otherOp = otherIter.next(opLength);\n                                if (equal(thisOp.insert, otherOp.insert)) {\n                                    delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));\n                                } else {\n                                    delta.push(otherOp)[\"delete\"](opLength);\n                                }\n                                break;\n                        }\n                        length -= opLength;\n                    }\n                });\n                return delta.chop();\n            };\n            Delta.prototype.eachLine = function(predicate, newline) {\n                newline = newline || \"\\n\";\n                var iter = op.iterator(this.ops);\n                var line = new Delta();\n                var i = 0;\n                while(iter.hasNext()){\n                    if (iter.peekType() !== \"insert\") return;\n                    var thisOp = iter.peek();\n                    var start = op.length(thisOp) - iter.peekLength();\n                    var index = typeof thisOp.insert === \"string\" ? thisOp.insert.indexOf(newline, start) - start : -1;\n                    if (index < 0) {\n                        line.push(iter.next());\n                    } else if (index > 0) {\n                        line.push(iter.next(index));\n                    } else {\n                        if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n                            return;\n                        }\n                        i += 1;\n                        line = new Delta();\n                    }\n                }\n                if (line.length() > 0) {\n                    predicate(line, {}, i);\n                }\n            };\n            Delta.prototype.transform = function(other, priority) {\n                priority = !!priority;\n                if (typeof other === \"number\") {\n                    return this.transformPosition(other, priority);\n                }\n                var thisIter = op.iterator(this.ops);\n                var otherIter = op.iterator(other.ops);\n                var delta = new Delta();\n                while(thisIter.hasNext() || otherIter.hasNext()){\n                    if (thisIter.peekType() === \"insert\" && (priority || otherIter.peekType() !== \"insert\")) {\n                        delta.retain(op.length(thisIter.next()));\n                    } else if (otherIter.peekType() === \"insert\") {\n                        delta.push(otherIter.next());\n                    } else {\n                        var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\n                        var thisOp = thisIter.next(length);\n                        var otherOp = otherIter.next(length);\n                        if (thisOp[\"delete\"]) {\n                            continue;\n                        } else if (otherOp[\"delete\"]) {\n                            delta.push(otherOp);\n                        } else {\n                            // We retain either their retain or insert\n                            delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));\n                        }\n                    }\n                }\n                return delta.chop();\n            };\n            Delta.prototype.transformPosition = function(index, priority) {\n                priority = !!priority;\n                var thisIter = op.iterator(this.ops);\n                var offset = 0;\n                while(thisIter.hasNext() && offset <= index){\n                    var length = thisIter.peekLength();\n                    var nextType = thisIter.peekType();\n                    thisIter.next();\n                    if (nextType === \"delete\") {\n                        index -= Math.min(length, index - offset);\n                        continue;\n                    } else if (nextType === \"insert\" && (offset < index || !priority)) {\n                        index += length;\n                    }\n                    offset += length;\n                }\n                return index;\n            };\n            module1.exports = Delta;\n        /***/ },\n        /* 3 */ /***/ function(module1, exports1) {\n            \"use strict\";\n            var hasOwn = Object.prototype.hasOwnProperty;\n            var toStr = Object.prototype.toString;\n            var defineProperty = Object.defineProperty;\n            var gOPD = Object.getOwnPropertyDescriptor;\n            var isArray = function isArray(arr) {\n                if (typeof Array.isArray === \"function\") {\n                    return Array.isArray(arr);\n                }\n                return toStr.call(arr) === \"[object Array]\";\n            };\n            var isPlainObject = function isPlainObject(obj) {\n                if (!obj || toStr.call(obj) !== \"[object Object]\") {\n                    return false;\n                }\n                var hasOwnConstructor = hasOwn.call(obj, \"constructor\");\n                var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, \"isPrototypeOf\");\n                // Not own constructor property must be Object\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n                    return false;\n                }\n                // Own properties are enumerated firstly, so to speed up,\n                // if last one is own, then all properties are own.\n                var key;\n                for(key in obj){}\n                return typeof key === \"undefined\" || hasOwn.call(obj, key);\n            };\n            // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\n            var setProperty = function setProperty(target, options) {\n                if (defineProperty && options.name === \"__proto__\") {\n                    defineProperty(target, options.name, {\n                        enumerable: true,\n                        configurable: true,\n                        value: options.newValue,\n                        writable: true\n                    });\n                } else {\n                    target[options.name] = options.newValue;\n                }\n            };\n            // Return undefined instead of __proto__ if '__proto__' is not an own property\n            var getProperty = function getProperty(obj, name) {\n                if (name === \"__proto__\") {\n                    if (!hasOwn.call(obj, name)) {\n                        return void 0;\n                    } else if (gOPD) {\n                        // In early versions of node, obj['__proto__'] is buggy when obj has\n                        // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n                        return gOPD(obj, name).value;\n                    }\n                }\n                return obj[name];\n            };\n            module1.exports = function extend() {\n                var options, name, src, copy, copyIsArray, clone;\n                var target = arguments[0];\n                var i = 1;\n                var length = arguments.length;\n                var deep = false;\n                // Handle a deep copy situation\n                if (typeof target === \"boolean\") {\n                    deep = target;\n                    target = arguments[1] || {};\n                    // skip the boolean and the target\n                    i = 2;\n                }\n                if (target == null || typeof target !== \"object\" && typeof target !== \"function\") {\n                    target = {};\n                }\n                for(; i < length; ++i){\n                    options = arguments[i];\n                    // Only deal with non-null/undefined values\n                    if (options != null) {\n                        // Extend the base object\n                        for(name in options){\n                            src = getProperty(target, name);\n                            copy = getProperty(options, name);\n                            // Prevent never-ending loop\n                            if (target !== copy) {\n                                // Recurse if we're merging plain objects or arrays\n                                if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n                                    if (copyIsArray) {\n                                        copyIsArray = false;\n                                        clone = src && isArray(src) ? src : [];\n                                    } else {\n                                        clone = src && isPlainObject(src) ? src : {};\n                                    }\n                                    // Never move original objects, clone them\n                                    setProperty(target, {\n                                        name: name,\n                                        newValue: extend(deep, clone, copy)\n                                    });\n                                // Don't bring in undefined values\n                                } else if (typeof copy !== \"undefined\") {\n                                    setProperty(target, {\n                                        name: name,\n                                        newValue: copy\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n                // Return the modified object\n                return target;\n            };\n        /***/ },\n        /* 4 */ /***/ function(module1, exports1, __nested_webpack_require_33535__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.BlockEmbed = exports1.bubbleFormats = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _extend = __nested_webpack_require_33535__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _quillDelta = __nested_webpack_require_33535__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _parchment = __nested_webpack_require_33535__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _break = __nested_webpack_require_33535__(16);\n            var _break2 = _interopRequireDefault(_break);\n            var _inline = __nested_webpack_require_33535__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            var _text = __nested_webpack_require_33535__(7);\n            var _text2 = _interopRequireDefault(_text);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var NEWLINE_LENGTH = 1;\n            var BlockEmbed = function(_Parchment$Embed) {\n                _inherits(BlockEmbed, _Parchment$Embed);\n                function BlockEmbed() {\n                    _classCallCheck(this, BlockEmbed);\n                    return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));\n                }\n                _createClass(BlockEmbed, [\n                    {\n                        key: \"attach\",\n                        value: function attach() {\n                            _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), \"attach\", this).call(this);\n                            this.attributes = new _parchment2.default.Attributor.Store(this.domNode);\n                        }\n                    },\n                    {\n                        key: \"delta\",\n                        value: function delta() {\n                            return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));\n                        }\n                    },\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);\n                            if (attribute != null) {\n                                this.attributes.attribute(attribute, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"formatAt\",\n                        value: function formatAt(index, length, name, value) {\n                            this.format(name, value);\n                        }\n                    },\n                    {\n                        key: \"insertAt\",\n                        value: function insertAt(index, value, def) {\n                            if (typeof value === \"string\" && value.endsWith(\"\\n\")) {\n                                var block = _parchment2.default.create(Block.blotName);\n                                this.parent.insertBefore(block, index === 0 ? this : this.next);\n                                block.insertAt(0, value.slice(0, -1));\n                            } else {\n                                _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), \"insertAt\", this).call(this, index, value, def);\n                            }\n                        }\n                    }\n                ]);\n                return BlockEmbed;\n            }(_parchment2.default.Embed);\n            BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;\n            // It is important for cursor behavior BlockEmbeds use tags that are block level elements\n            var Block = function(_Parchment$Block) {\n                _inherits(Block, _Parchment$Block);\n                function Block(domNode) {\n                    _classCallCheck(this, Block);\n                    var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));\n                    _this2.cache = {};\n                    return _this2;\n                }\n                _createClass(Block, [\n                    {\n                        key: \"delta\",\n                        value: function delta() {\n                            if (this.cache.delta == null) {\n                                this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function(delta, leaf) {\n                                    if (leaf.length() === 0) {\n                                        return delta;\n                                    } else {\n                                        return delta.insert(leaf.value(), bubbleFormats(leaf));\n                                    }\n                                }, new _quillDelta2.default()).insert(\"\\n\", bubbleFormats(this));\n                            }\n                            return this.cache.delta;\n                        }\n                    },\n                    {\n                        key: \"deleteAt\",\n                        value: function deleteAt(index, length) {\n                            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"deleteAt\", this).call(this, index, length);\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"formatAt\",\n                        value: function formatAt(index, length, name, value) {\n                            if (length <= 0) return;\n                            if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {\n                                if (index + length === this.length()) {\n                                    this.format(name, value);\n                                }\n                            } else {\n                                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"formatAt\", this).call(this, index, Math.min(length, this.length() - index - 1), name, value);\n                            }\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"insertAt\",\n                        value: function insertAt(index, value, def) {\n                            if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"insertAt\", this).call(this, index, value, def);\n                            if (value.length === 0) return;\n                            var lines = value.split(\"\\n\");\n                            var text = lines.shift();\n                            if (text.length > 0) {\n                                if (index < this.length() - 1 || this.children.tail == null) {\n                                    _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"insertAt\", this).call(this, Math.min(index, this.length() - 1), text);\n                                } else {\n                                    this.children.tail.insertAt(this.children.tail.length(), text);\n                                }\n                                this.cache = {};\n                            }\n                            var block = this;\n                            lines.reduce(function(index, line) {\n                                block = block.split(index, true);\n                                block.insertAt(0, line);\n                                return line.length;\n                            }, index + text.length);\n                        }\n                    },\n                    {\n                        key: \"insertBefore\",\n                        value: function insertBefore(blot, ref) {\n                            var head = this.children.head;\n                            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"insertBefore\", this).call(this, blot, ref);\n                            if (head instanceof _break2.default) {\n                                head.remove();\n                            }\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"length\",\n                        value: function length() {\n                            if (this.cache.length == null) {\n                                this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"length\", this).call(this) + NEWLINE_LENGTH;\n                            }\n                            return this.cache.length;\n                        }\n                    },\n                    {\n                        key: \"moveChildren\",\n                        value: function moveChildren(target, ref) {\n                            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"moveChildren\", this).call(this, target, ref);\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"optimize\",\n                        value: function optimize(context) {\n                            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"optimize\", this).call(this, context);\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"path\",\n                        value: function path(index) {\n                            return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"path\", this).call(this, index, true);\n                        }\n                    },\n                    {\n                        key: \"removeChild\",\n                        value: function removeChild(child) {\n                            _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"removeChild\", this).call(this, child);\n                            this.cache = {};\n                        }\n                    },\n                    {\n                        key: \"split\",\n                        value: function split(index) {\n                            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                            if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n                                var clone = this.clone();\n                                if (index === 0) {\n                                    this.parent.insertBefore(clone, this);\n                                    return this;\n                                } else {\n                                    this.parent.insertBefore(clone, this.next);\n                                    return clone;\n                                }\n                            } else {\n                                var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), \"split\", this).call(this, index, force);\n                                this.cache = {};\n                                return next;\n                            }\n                        }\n                    }\n                ]);\n                return Block;\n            }(_parchment2.default.Block);\n            Block.blotName = \"block\";\n            Block.tagName = \"P\";\n            Block.defaultChild = \"break\";\n            Block.allowedChildren = [\n                _inline2.default,\n                _parchment2.default.Embed,\n                _text2.default\n            ];\n            function bubbleFormats(blot) {\n                var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                if (blot == null) return formats;\n                if (typeof blot.formats === \"function\") {\n                    formats = (0, _extend2.default)(formats, blot.formats());\n                }\n                if (blot.parent == null || blot.parent.blotName == \"scroll\" || blot.parent.statics.scope !== blot.statics.scope) {\n                    return formats;\n                }\n                return bubbleFormats(blot.parent, formats);\n            }\n            exports1.bubbleFormats = bubbleFormats;\n            exports1.BlockEmbed = BlockEmbed;\n            exports1.default = Block;\n        /***/ },\n        /* 5 */ /***/ function(module1, exports1, __nested_webpack_require_49266__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.overload = exports1.expandConfig = undefined;\n            var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            __nested_webpack_require_49266__(50);\n            var _quillDelta = __nested_webpack_require_49266__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _editor = __nested_webpack_require_49266__(14);\n            var _editor2 = _interopRequireDefault(_editor);\n            var _emitter3 = __nested_webpack_require_49266__(8);\n            var _emitter4 = _interopRequireDefault(_emitter3);\n            var _module = __nested_webpack_require_49266__(9);\n            var _module2 = _interopRequireDefault(_module);\n            var _parchment = __nested_webpack_require_49266__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _selection = __nested_webpack_require_49266__(15);\n            var _selection2 = _interopRequireDefault(_selection);\n            var _extend = __nested_webpack_require_49266__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _logger = __nested_webpack_require_49266__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            var _theme = __nested_webpack_require_49266__(34);\n            var _theme2 = _interopRequireDefault(_theme);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var debug = (0, _logger2.default)(\"quill\");\n            var Quill = function() {\n                _createClass(Quill, null, [\n                    {\n                        key: \"debug\",\n                        value: function debug(limit) {\n                            if (limit === true) {\n                                limit = \"log\";\n                            }\n                            _logger2.default.level(limit);\n                        }\n                    },\n                    {\n                        key: \"find\",\n                        value: function find(node) {\n                            return node.__quill || _parchment2.default.find(node);\n                        }\n                    },\n                    {\n                        key: \"import\",\n                        value: function _import(name) {\n                            if (this.imports[name] == null) {\n                                debug.error(\"Cannot import \" + name + \". Are you sure it was registered?\");\n                            }\n                            return this.imports[name];\n                        }\n                    },\n                    {\n                        key: \"register\",\n                        value: function register(path, target) {\n                            var _this = this;\n                            var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                            if (typeof path !== \"string\") {\n                                var name = path.attrName || path.blotName;\n                                if (typeof name === \"string\") {\n                                    // register(Blot | Attributor, overwrite)\n                                    this.register(\"formats/\" + name, path, target);\n                                } else {\n                                    Object.keys(path).forEach(function(key) {\n                                        _this.register(key, path[key], target);\n                                    });\n                                }\n                            } else {\n                                if (this.imports[path] != null && !overwrite) {\n                                    debug.warn(\"Overwriting \" + path + \" with\", target);\n                                }\n                                this.imports[path] = target;\n                                if ((path.startsWith(\"blots/\") || path.startsWith(\"formats/\")) && target.blotName !== \"abstract\") {\n                                    _parchment2.default.register(target);\n                                } else if (path.startsWith(\"modules\") && typeof target.register === \"function\") {\n                                    target.register();\n                                }\n                            }\n                        }\n                    }\n                ]);\n                function Quill(container) {\n                    var _this2 = this;\n                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                    _classCallCheck(this, Quill);\n                    this.options = expandConfig(container, options);\n                    this.container = this.options.container;\n                    if (this.container == null) {\n                        return debug.error(\"Invalid Quill container\", container);\n                    }\n                    if (this.options.debug) {\n                        Quill.debug(this.options.debug);\n                    }\n                    var html = this.container.innerHTML.trim();\n                    this.container.classList.add(\"ql-container\");\n                    this.container.innerHTML = \"\";\n                    this.container.__quill = this;\n                    this.root = this.addContainer(\"ql-editor\");\n                    this.root.classList.add(\"ql-blank\");\n                    this.root.setAttribute(\"data-gramm\", false);\n                    this.scrollingContainer = this.options.scrollingContainer || this.root;\n                    this.emitter = new _emitter4.default();\n                    this.scroll = _parchment2.default.create(this.root, {\n                        emitter: this.emitter,\n                        whitelist: this.options.formats\n                    });\n                    this.editor = new _editor2.default(this.scroll);\n                    this.selection = new _selection2.default(this.scroll, this.emitter);\n                    this.theme = new this.options.theme(this, this.options);\n                    this.keyboard = this.theme.addModule(\"keyboard\");\n                    this.clipboard = this.theme.addModule(\"clipboard\");\n                    this.history = this.theme.addModule(\"history\");\n                    this.theme.init();\n                    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type) {\n                        if (type === _emitter4.default.events.TEXT_CHANGE) {\n                            _this2.root.classList.toggle(\"ql-blank\", _this2.editor.isBlank());\n                        }\n                    });\n                    this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function(source, mutations) {\n                        var range = _this2.selection.lastRange;\n                        var index = range && range.length === 0 ? range.index : undefined;\n                        modify.call(_this2, function() {\n                            return _this2.editor.update(null, mutations, index);\n                        }, source);\n                    });\n                    var contents = this.clipboard.convert(\"<div class='ql-editor' style=\\\"white-space: normal;\\\">\" + html + \"<p><br></p></div>\");\n                    this.setContents(contents);\n                    this.history.clear();\n                    if (this.options.placeholder) {\n                        this.root.setAttribute(\"data-placeholder\", this.options.placeholder);\n                    }\n                    if (this.options.readOnly) {\n                        this.disable();\n                    }\n                }\n                _createClass(Quill, [\n                    {\n                        key: \"addContainer\",\n                        value: function addContainer(container) {\n                            var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                            if (typeof container === \"string\") {\n                                var className = container;\n                                container = document.createElement(\"div\");\n                                container.classList.add(className);\n                            }\n                            this.container.insertBefore(container, refNode);\n                            return container;\n                        }\n                    },\n                    {\n                        key: \"blur\",\n                        value: function blur() {\n                            this.selection.setRange(null);\n                        }\n                    },\n                    {\n                        key: \"deleteText\",\n                        value: function deleteText(index, length, source) {\n                            var _this3 = this;\n                            var _overload = overload(index, length, source);\n                            var _overload2 = _slicedToArray(_overload, 4);\n                            index = _overload2[0];\n                            length = _overload2[1];\n                            source = _overload2[3];\n                            return modify.call(this, function() {\n                                return _this3.editor.deleteText(index, length);\n                            }, source, index, -1 * length);\n                        }\n                    },\n                    {\n                        key: \"disable\",\n                        value: function disable() {\n                            this.enable(false);\n                        }\n                    },\n                    {\n                        key: \"enable\",\n                        value: function enable() {\n                            var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n                            this.scroll.enable(enabled);\n                            this.container.classList.toggle(\"ql-disabled\", !enabled);\n                        }\n                    },\n                    {\n                        key: \"focus\",\n                        value: function focus() {\n                            var scrollTop = this.scrollingContainer.scrollTop;\n                            this.selection.focus();\n                            this.scrollingContainer.scrollTop = scrollTop;\n                            this.scrollIntoView();\n                        }\n                    },\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            var _this4 = this;\n                            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;\n                            return modify.call(this, function() {\n                                var range = _this4.getSelection(true);\n                                var change = new _quillDelta2.default();\n                                if (range == null) {\n                                    return change;\n                                } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {\n                                    change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));\n                                } else if (range.length === 0) {\n                                    _this4.selection.format(name, value);\n                                    return change;\n                                } else {\n                                    change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));\n                                }\n                                _this4.setSelection(range, _emitter4.default.sources.SILENT);\n                                return change;\n                            }, source);\n                        }\n                    },\n                    {\n                        key: \"formatLine\",\n                        value: function formatLine(index, length, name, value, source) {\n                            var _this5 = this;\n                            var formats = void 0;\n                            var _overload3 = overload(index, length, name, value, source);\n                            var _overload4 = _slicedToArray(_overload3, 4);\n                            index = _overload4[0];\n                            length = _overload4[1];\n                            formats = _overload4[2];\n                            source = _overload4[3];\n                            return modify.call(this, function() {\n                                return _this5.editor.formatLine(index, length, formats);\n                            }, source, index, 0);\n                        }\n                    },\n                    {\n                        key: \"formatText\",\n                        value: function formatText(index, length, name, value, source) {\n                            var _this6 = this;\n                            var formats = void 0;\n                            var _overload5 = overload(index, length, name, value, source);\n                            var _overload6 = _slicedToArray(_overload5, 4);\n                            index = _overload6[0];\n                            length = _overload6[1];\n                            formats = _overload6[2];\n                            source = _overload6[3];\n                            return modify.call(this, function() {\n                                return _this6.editor.formatText(index, length, formats);\n                            }, source, index, 0);\n                        }\n                    },\n                    {\n                        key: \"getBounds\",\n                        value: function getBounds(index) {\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                            var bounds = void 0;\n                            if (typeof index === \"number\") {\n                                bounds = this.selection.getBounds(index, length);\n                            } else {\n                                bounds = this.selection.getBounds(index.index, index.length);\n                            }\n                            var containerBounds = this.container.getBoundingClientRect();\n                            return {\n                                bottom: bounds.bottom - containerBounds.top,\n                                height: bounds.height,\n                                left: bounds.left - containerBounds.left,\n                                right: bounds.right - containerBounds.left,\n                                top: bounds.top - containerBounds.top,\n                                width: bounds.width\n                            };\n                        }\n                    },\n                    {\n                        key: \"getContents\",\n                        value: function getContents() {\n                            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n                            var _overload7 = overload(index, length);\n                            var _overload8 = _slicedToArray(_overload7, 2);\n                            index = _overload8[0];\n                            length = _overload8[1];\n                            return this.editor.getContents(index, length);\n                        }\n                    },\n                    {\n                        key: \"getFormat\",\n                        value: function getFormat() {\n                            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                            if (typeof index === \"number\") {\n                                return this.editor.getFormat(index, length);\n                            } else {\n                                return this.editor.getFormat(index.index, index.length);\n                            }\n                        }\n                    },\n                    {\n                        key: \"getIndex\",\n                        value: function getIndex(blot) {\n                            return blot.offset(this.scroll);\n                        }\n                    },\n                    {\n                        key: \"getLength\",\n                        value: function getLength() {\n                            return this.scroll.length();\n                        }\n                    },\n                    {\n                        key: \"getLeaf\",\n                        value: function getLeaf(index) {\n                            return this.scroll.leaf(index);\n                        }\n                    },\n                    {\n                        key: \"getLine\",\n                        value: function getLine(index) {\n                            return this.scroll.line(index);\n                        }\n                    },\n                    {\n                        key: \"getLines\",\n                        value: function getLines() {\n                            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n                            if (typeof index !== \"number\") {\n                                return this.scroll.lines(index.index, index.length);\n                            } else {\n                                return this.scroll.lines(index, length);\n                            }\n                        }\n                    },\n                    {\n                        key: \"getModule\",\n                        value: function getModule(name) {\n                            return this.theme.modules[name];\n                        }\n                    },\n                    {\n                        key: \"getSelection\",\n                        value: function getSelection() {\n                            var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n                            if (focus) this.focus();\n                            this.update(); // Make sure we access getRange with editor in consistent state\n                            return this.selection.getRange()[0];\n                        }\n                    },\n                    {\n                        key: \"getText\",\n                        value: function getText() {\n                            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;\n                            var _overload9 = overload(index, length);\n                            var _overload10 = _slicedToArray(_overload9, 2);\n                            index = _overload10[0];\n                            length = _overload10[1];\n                            return this.editor.getText(index, length);\n                        }\n                    },\n                    {\n                        key: \"hasFocus\",\n                        value: function hasFocus() {\n                            return this.selection.hasFocus();\n                        }\n                    },\n                    {\n                        key: \"insertEmbed\",\n                        value: function insertEmbed(index, embed, value) {\n                            var _this7 = this;\n                            var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;\n                            return modify.call(this, function() {\n                                return _this7.editor.insertEmbed(index, embed, value);\n                            }, source, index);\n                        }\n                    },\n                    {\n                        key: \"insertText\",\n                        value: function insertText(index, text, name, value, source) {\n                            var _this8 = this;\n                            var formats = void 0;\n                            var _overload11 = overload(index, 0, name, value, source);\n                            var _overload12 = _slicedToArray(_overload11, 4);\n                            index = _overload12[0];\n                            formats = _overload12[2];\n                            source = _overload12[3];\n                            return modify.call(this, function() {\n                                return _this8.editor.insertText(index, text, formats);\n                            }, source, index, text.length);\n                        }\n                    },\n                    {\n                        key: \"isEnabled\",\n                        value: function isEnabled() {\n                            return !this.container.classList.contains(\"ql-disabled\");\n                        }\n                    },\n                    {\n                        key: \"off\",\n                        value: function off() {\n                            return this.emitter.off.apply(this.emitter, arguments);\n                        }\n                    },\n                    {\n                        key: \"on\",\n                        value: function on() {\n                            return this.emitter.on.apply(this.emitter, arguments);\n                        }\n                    },\n                    {\n                        key: \"once\",\n                        value: function once() {\n                            return this.emitter.once.apply(this.emitter, arguments);\n                        }\n                    },\n                    {\n                        key: \"pasteHTML\",\n                        value: function pasteHTML(index, html, source) {\n                            this.clipboard.dangerouslyPasteHTML(index, html, source);\n                        }\n                    },\n                    {\n                        key: \"removeFormat\",\n                        value: function removeFormat(index, length, source) {\n                            var _this9 = this;\n                            var _overload13 = overload(index, length, source);\n                            var _overload14 = _slicedToArray(_overload13, 4);\n                            index = _overload14[0];\n                            length = _overload14[1];\n                            source = _overload14[3];\n                            return modify.call(this, function() {\n                                return _this9.editor.removeFormat(index, length);\n                            }, source, index);\n                        }\n                    },\n                    {\n                        key: \"scrollIntoView\",\n                        value: function scrollIntoView() {\n                            this.selection.scrollIntoView(this.scrollingContainer);\n                        }\n                    },\n                    {\n                        key: \"setContents\",\n                        value: function setContents(delta) {\n                            var _this10 = this;\n                            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n                            return modify.call(this, function() {\n                                delta = new _quillDelta2.default(delta);\n                                var length = _this10.getLength();\n                                var deleted = _this10.editor.deleteText(0, length);\n                                var applied = _this10.editor.applyDelta(delta);\n                                var lastOp = applied.ops[applied.ops.length - 1];\n                                if (lastOp != null && typeof lastOp.insert === \"string\" && lastOp.insert[lastOp.insert.length - 1] === \"\\n\") {\n                                    _this10.editor.deleteText(_this10.getLength() - 1, 1);\n                                    applied.delete(1);\n                                }\n                                var ret = deleted.compose(applied);\n                                return ret;\n                            }, source);\n                        }\n                    },\n                    {\n                        key: \"setSelection\",\n                        value: function setSelection(index, length, source) {\n                            if (index == null) {\n                                this.selection.setRange(null, length || Quill.sources.API);\n                            } else {\n                                var _overload15 = overload(index, length, source);\n                                var _overload16 = _slicedToArray(_overload15, 4);\n                                index = _overload16[0];\n                                length = _overload16[1];\n                                source = _overload16[3];\n                                this.selection.setRange(new _selection.Range(index, length), source);\n                                if (source !== _emitter4.default.sources.SILENT) {\n                                    this.selection.scrollIntoView(this.scrollingContainer);\n                                }\n                            }\n                        }\n                    },\n                    {\n                        key: \"setText\",\n                        value: function setText(text) {\n                            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n                            var delta = new _quillDelta2.default().insert(text);\n                            return this.setContents(delta, source);\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update() {\n                            var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;\n                            var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n                            this.selection.update(source);\n                            return change;\n                        }\n                    },\n                    {\n                        key: \"updateContents\",\n                        value: function updateContents(delta) {\n                            var _this11 = this;\n                            var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;\n                            return modify.call(this, function() {\n                                delta = new _quillDelta2.default(delta);\n                                return _this11.editor.applyDelta(delta, source);\n                            }, source, true);\n                        }\n                    }\n                ]);\n                return Quill;\n            }();\n            Quill.DEFAULTS = {\n                bounds: null,\n                formats: null,\n                modules: {},\n                placeholder: \"\",\n                readOnly: false,\n                scrollingContainer: null,\n                strict: true,\n                theme: \"default\"\n            };\n            Quill.events = _emitter4.default.events;\n            Quill.sources = _emitter4.default.sources;\n            // eslint-disable-next-line no-undef\n            Quill.version =  false ? 0 : \"1.3.7\";\n            Quill.imports = {\n                \"delta\": _quillDelta2.default,\n                \"parchment\": _parchment2.default,\n                \"core/module\": _module2.default,\n                \"core/theme\": _theme2.default\n            };\n            function expandConfig(container, userConfig) {\n                userConfig = (0, _extend2.default)(true, {\n                    container: container,\n                    modules: {\n                        clipboard: true,\n                        keyboard: true,\n                        history: true\n                    }\n                }, userConfig);\n                if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\n                    userConfig.theme = _theme2.default;\n                } else {\n                    userConfig.theme = Quill.import(\"themes/\" + userConfig.theme);\n                    if (userConfig.theme == null) {\n                        throw new Error(\"Invalid theme \" + userConfig.theme + \". Did you register it?\");\n                    }\n                }\n                var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);\n                [\n                    themeConfig,\n                    userConfig\n                ].forEach(function(config) {\n                    config.modules = config.modules || {};\n                    Object.keys(config.modules).forEach(function(module1) {\n                        if (config.modules[module1] === true) {\n                            config.modules[module1] = {};\n                        }\n                    });\n                });\n                var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));\n                var moduleConfig = moduleNames.reduce(function(config, name) {\n                    var moduleClass = Quill.import(\"modules/\" + name);\n                    if (moduleClass == null) {\n                        debug.error(\"Cannot load \" + name + \" module. Are you sure you registered it?\");\n                    } else {\n                        config[name] = moduleClass.DEFAULTS || {};\n                    }\n                    return config;\n                }, {});\n                // Special case toolbar shorthand\n                if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {\n                    userConfig.modules.toolbar = {\n                        container: userConfig.modules.toolbar\n                    };\n                }\n                userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, {\n                    modules: moduleConfig\n                }, themeConfig, userConfig);\n                [\n                    \"bounds\",\n                    \"container\",\n                    \"scrollingContainer\"\n                ].forEach(function(key) {\n                    if (typeof userConfig[key] === \"string\") {\n                        userConfig[key] = document.querySelector(userConfig[key]);\n                    }\n                });\n                userConfig.modules = Object.keys(userConfig.modules).reduce(function(config, name) {\n                    if (userConfig.modules[name]) {\n                        config[name] = userConfig.modules[name];\n                    }\n                    return config;\n                }, {});\n                return userConfig;\n            }\n            // Handle selection preservation and TEXT_CHANGE emission\n            // common to modification APIs\n            function modify(modifier, source, index, shift) {\n                if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {\n                    return new _quillDelta2.default();\n                }\n                var range = index == null ? null : this.getSelection();\n                var oldDelta = this.editor.delta;\n                var change = modifier();\n                if (range != null) {\n                    if (index === true) index = range.index;\n                    if (shift == null) {\n                        range = shiftRange(range, change, source);\n                    } else if (shift !== 0) {\n                        range = shiftRange(range, index, shift, source);\n                    }\n                    this.setSelection(range, _emitter4.default.sources.SILENT);\n                }\n                if (change.length() > 0) {\n                    var _emitter;\n                    var args = [\n                        _emitter4.default.events.TEXT_CHANGE,\n                        change,\n                        oldDelta,\n                        source\n                    ];\n                    (_emitter = this.emitter).emit.apply(_emitter, [\n                        _emitter4.default.events.EDITOR_CHANGE\n                    ].concat(args));\n                    if (source !== _emitter4.default.sources.SILENT) {\n                        var _emitter2;\n                        (_emitter2 = this.emitter).emit.apply(_emitter2, args);\n                    }\n                }\n                return change;\n            }\n            function overload(index, length, name, value, source) {\n                var formats = {};\n                if (typeof index.index === \"number\" && typeof index.length === \"number\") {\n                    // Allow for throwaway end (used by insertText/insertEmbed)\n                    if (typeof length !== \"number\") {\n                        source = value, value = name, name = length, length = index.length, index = index.index;\n                    } else {\n                        length = index.length, index = index.index;\n                    }\n                } else if (typeof length !== \"number\") {\n                    source = value, value = name, name = length, length = 0;\n                }\n                // Handle format being object, two format name/value strings or excluded\n                if ((typeof name === \"undefined\" ? \"undefined\" : _typeof(name)) === \"object\") {\n                    formats = name;\n                    source = value;\n                } else if (typeof name === \"string\") {\n                    if (value != null) {\n                        formats[name] = value;\n                    } else {\n                        source = name;\n                    }\n                }\n                // Handle optional source\n                source = source || _emitter4.default.sources.API;\n                return [\n                    index,\n                    length,\n                    formats,\n                    source\n                ];\n            }\n            function shiftRange(range, index, length, source) {\n                if (range == null) return null;\n                var start = void 0, end = void 0;\n                if (index instanceof _quillDelta2.default) {\n                    var _map = [\n                        range.index,\n                        range.index + range.length\n                    ].map(function(pos) {\n                        return index.transformPosition(pos, source !== _emitter4.default.sources.USER);\n                    });\n                    var _map2 = _slicedToArray(_map, 2);\n                    start = _map2[0];\n                    end = _map2[1];\n                } else {\n                    var _map3 = [\n                        range.index,\n                        range.index + range.length\n                    ].map(function(pos) {\n                        if (pos < index || pos === index && source === _emitter4.default.sources.USER) return pos;\n                        if (length >= 0) {\n                            return pos + length;\n                        } else {\n                            return Math.max(index, pos + length);\n                        }\n                    });\n                    var _map4 = _slicedToArray(_map3, 2);\n                    start = _map4[0];\n                    end = _map4[1];\n                }\n                return new _selection.Range(start, end - start);\n            }\n            exports1.expandConfig = expandConfig;\n            exports1.overload = overload;\n            exports1.default = Quill;\n        /***/ },\n        /* 6 */ /***/ function(module1, exports1, __nested_webpack_require_88469__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _text = __nested_webpack_require_88469__(7);\n            var _text2 = _interopRequireDefault(_text);\n            var _parchment = __nested_webpack_require_88469__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Inline = function(_Parchment$Inline) {\n                _inherits(Inline, _Parchment$Inline);\n                function Inline() {\n                    _classCallCheck(this, Inline);\n                    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));\n                }\n                _createClass(Inline, [\n                    {\n                        key: \"formatAt\",\n                        value: function formatAt(index, length, name, value) {\n                            if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {\n                                var blot = this.isolate(index, length);\n                                if (value) {\n                                    blot.wrap(name, value);\n                                }\n                            } else {\n                                _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), \"formatAt\", this).call(this, index, length, name, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"optimize\",\n                        value: function optimize(context) {\n                            _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), \"optimize\", this).call(this, context);\n                            if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {\n                                var parent = this.parent.isolate(this.offset(), this.length());\n                                this.moveChildren(parent);\n                                parent.wrap(this);\n                            }\n                        }\n                    }\n                ], [\n                    {\n                        key: \"compare\",\n                        value: function compare(self1, other) {\n                            var selfIndex = Inline.order.indexOf(self1);\n                            var otherIndex = Inline.order.indexOf(other);\n                            if (selfIndex >= 0 || otherIndex >= 0) {\n                                return selfIndex - otherIndex;\n                            } else if (self1 === other) {\n                                return 0;\n                            } else if (self1 < other) {\n                                return -1;\n                            } else {\n                                return 1;\n                            }\n                        }\n                    }\n                ]);\n                return Inline;\n            }(_parchment2.default.Inline);\n            Inline.allowedChildren = [\n                Inline,\n                _parchment2.default.Embed,\n                _text2.default\n            ];\n            // Lower index means deeper in the DOM tree, since not found (-1) is for embeds\n            Inline.order = [\n                \"cursor\",\n                \"inline\",\n                \"underline\",\n                \"strike\",\n                \"italic\",\n                \"bold\",\n                \"script\",\n                \"link\",\n                \"code\" // Must be higher\n            ];\n            exports1.default = Inline;\n        /***/ },\n        /* 7 */ /***/ function(module1, exports1, __nested_webpack_require_95454__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _parchment = __nested_webpack_require_95454__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var TextBlot = function(_Parchment$Text) {\n                _inherits(TextBlot, _Parchment$Text);\n                function TextBlot() {\n                    _classCallCheck(this, TextBlot);\n                    return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));\n                }\n                return TextBlot;\n            }(_parchment2.default.Text);\n            exports1.default = TextBlot;\n        /***/ },\n        /* 8 */ /***/ function(module1, exports1, __nested_webpack_require_97760__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _eventemitter = __nested_webpack_require_97760__(54);\n            var _eventemitter2 = _interopRequireDefault(_eventemitter);\n            var _logger = __nested_webpack_require_97760__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var debug = (0, _logger2.default)(\"quill:events\");\n            var EVENTS = [\n                \"selectionchange\",\n                \"mousedown\",\n                \"mouseup\",\n                \"click\"\n            ];\n            EVENTS.forEach(function(eventName) {\n                document.addEventListener(eventName, function() {\n                    for(var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++){\n                        args[_key] = arguments[_key];\n                    }\n                    [].slice.call(document.querySelectorAll(\".ql-container\")).forEach(function(node) {\n                        // TODO use WeakMap\n                        if (node.__quill && node.__quill.emitter) {\n                            var _node$__quill$emitter;\n                            (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);\n                        }\n                    });\n                });\n            });\n            var Emitter = function(_EventEmitter) {\n                _inherits(Emitter, _EventEmitter);\n                function Emitter() {\n                    _classCallCheck(this, Emitter);\n                    var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));\n                    _this.listeners = {};\n                    _this.on(\"error\", debug.error);\n                    return _this;\n                }\n                _createClass(Emitter, [\n                    {\n                        key: \"emit\",\n                        value: function emit() {\n                            debug.log.apply(debug, arguments);\n                            _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), \"emit\", this).apply(this, arguments);\n                        }\n                    },\n                    {\n                        key: \"handleDOM\",\n                        value: function handleDOM(event) {\n                            for(var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                                args[_key2 - 1] = arguments[_key2];\n                            }\n                            (this.listeners[event.type] || []).forEach(function(_ref) {\n                                var node = _ref.node, handler = _ref.handler;\n                                if (event.target === node || node.contains(event.target)) {\n                                    handler.apply(undefined, [\n                                        event\n                                    ].concat(args));\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"listenDOM\",\n                        value: function listenDOM(eventName, node, handler) {\n                            if (!this.listeners[eventName]) {\n                                this.listeners[eventName] = [];\n                            }\n                            this.listeners[eventName].push({\n                                node: node,\n                                handler: handler\n                            });\n                        }\n                    }\n                ]);\n                return Emitter;\n            }(_eventemitter2.default);\n            Emitter.events = {\n                EDITOR_CHANGE: \"editor-change\",\n                SCROLL_BEFORE_UPDATE: \"scroll-before-update\",\n                SCROLL_OPTIMIZE: \"scroll-optimize\",\n                SCROLL_UPDATE: \"scroll-update\",\n                SELECTION_CHANGE: \"selection-change\",\n                TEXT_CHANGE: \"text-change\"\n            };\n            Emitter.sources = {\n                API: \"api\",\n                SILENT: \"silent\",\n                USER: \"user\"\n            };\n            exports1.default = Emitter;\n        /***/ },\n        /* 9 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var Module = function Module(quill) {\n                var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                _classCallCheck(this, Module);\n                this.quill = quill;\n                this.options = options;\n            };\n            Module.DEFAULTS = {};\n            exports1.default = Module;\n        /***/ },\n        /* 10 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var levels = [\n                \"error\",\n                \"warn\",\n                \"log\",\n                \"info\"\n            ];\n            var level = \"warn\";\n            function debug(method) {\n                if (levels.indexOf(method) <= levels.indexOf(level)) {\n                    var _console;\n                    for(var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                        args[_key - 1] = arguments[_key];\n                    }\n                    (_console = console)[method].apply(_console, args); // eslint-disable-line no-console\n                }\n            }\n            function namespace(ns) {\n                return levels.reduce(function(logger, method) {\n                    logger[method] = debug.bind(console, method, ns);\n                    return logger;\n                }, {});\n            }\n            debug.level = namespace.level = function(newLevel) {\n                level = newLevel;\n            };\n            exports1.default = namespace;\n        /***/ },\n        /* 11 */ /***/ function(module1, exports1, __nested_webpack_require_107450__) {\n            var pSlice = Array.prototype.slice;\n            var objectKeys = __nested_webpack_require_107450__(52);\n            var isArguments = __nested_webpack_require_107450__(53);\n            var deepEqual = module1.exports = function(actual, expected, opts) {\n                if (!opts) opts = {};\n                // 7.1. All identical values are equivalent, as determined by ===.\n                if (actual === expected) {\n                    return true;\n                } else if (actual instanceof Date && expected instanceof Date) {\n                    return actual.getTime() === expected.getTime();\n                // 7.3. Other pairs that do not both pass typeof value == 'object',\n                // equivalence is determined by ==.\n                } else if (!actual || !expected || typeof actual != \"object\" && typeof expected != \"object\") {\n                    return opts.strict ? actual === expected : actual == expected;\n                // 7.4. For all other Object pairs, including Array objects, equivalence is\n                // determined by having the same number of owned properties (as verified\n                // with Object.prototype.hasOwnProperty.call), the same set of keys\n                // (although not necessarily the same order), equivalent values for every\n                // corresponding key, and an identical 'prototype' property. Note: this\n                // accounts for both named and indexed properties on Arrays.\n                } else {\n                    return objEquiv(actual, expected, opts);\n                }\n            };\n            function isUndefinedOrNull(value) {\n                return value === null || value === undefined;\n            }\n            function isBuffer(x) {\n                if (!x || typeof x !== \"object\" || typeof x.length !== \"number\") return false;\n                if (typeof x.copy !== \"function\" || typeof x.slice !== \"function\") {\n                    return false;\n                }\n                if (x.length > 0 && typeof x[0] !== \"number\") return false;\n                return true;\n            }\n            function objEquiv(a, b, opts) {\n                var i, key;\n                if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false;\n                // an identical 'prototype' property.\n                if (a.prototype !== b.prototype) return false;\n                //~~~I've managed to break Object.keys through screwy arguments passing.\n                //   Converting to array solves the problem.\n                if (isArguments(a)) {\n                    if (!isArguments(b)) {\n                        return false;\n                    }\n                    a = pSlice.call(a);\n                    b = pSlice.call(b);\n                    return deepEqual(a, b, opts);\n                }\n                if (isBuffer(a)) {\n                    if (!isBuffer(b)) {\n                        return false;\n                    }\n                    if (a.length !== b.length) return false;\n                    for(i = 0; i < a.length; i++){\n                        if (a[i] !== b[i]) return false;\n                    }\n                    return true;\n                }\n                try {\n                    var ka = objectKeys(a), kb = objectKeys(b);\n                } catch (e) {\n                    return false;\n                }\n                // having the same number of owned properties (keys incorporates\n                // hasOwnProperty)\n                if (ka.length != kb.length) return false;\n                //the same set of keys (although not necessarily the same order),\n                ka.sort();\n                kb.sort();\n                //~~~cheap key test\n                for(i = ka.length - 1; i >= 0; i--){\n                    if (ka[i] != kb[i]) return false;\n                }\n                //equivalent values for every corresponding key, and\n                //~~~possibly expensive deep test\n                for(i = ka.length - 1; i >= 0; i--){\n                    key = ka[i];\n                    if (!deepEqual(a[key], b[key], opts)) return false;\n                }\n                return typeof a === typeof b;\n            }\n        /***/ },\n        /* 12 */ /***/ function(module1, exports1, __nested_webpack_require_111683__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var Registry = __nested_webpack_require_111683__(1);\n            var Attributor = /** @class */ function() {\n                function Attributor(attrName, keyName, options) {\n                    if (options === void 0) {\n                        options = {};\n                    }\n                    this.attrName = attrName;\n                    this.keyName = keyName;\n                    var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n                    if (options.scope != null) {\n                        // Ignore type bits, force attribute bit\n                        this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;\n                    } else {\n                        this.scope = Registry.Scope.ATTRIBUTE;\n                    }\n                    if (options.whitelist != null) this.whitelist = options.whitelist;\n                }\n                Attributor.keys = function(node) {\n                    return [].map.call(node.attributes, function(item) {\n                        return item.name;\n                    });\n                };\n                Attributor.prototype.add = function(node, value) {\n                    if (!this.canAdd(node, value)) return false;\n                    node.setAttribute(this.keyName, value);\n                    return true;\n                };\n                Attributor.prototype.canAdd = function(node, value) {\n                    var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n                    if (match == null) return false;\n                    if (this.whitelist == null) return true;\n                    if (typeof value === \"string\") {\n                        return this.whitelist.indexOf(value.replace(/[\"']/g, \"\")) > -1;\n                    } else {\n                        return this.whitelist.indexOf(value) > -1;\n                    }\n                };\n                Attributor.prototype.remove = function(node) {\n                    node.removeAttribute(this.keyName);\n                };\n                Attributor.prototype.value = function(node) {\n                    var value = node.getAttribute(this.keyName);\n                    if (this.canAdd(node, value) && value) {\n                        return value;\n                    }\n                    return \"\";\n                };\n                return Attributor;\n            }();\n            exports1.default = Attributor;\n        /***/ },\n        /* 13 */ /***/ function(module1, exports1, __nested_webpack_require_114341__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.Code = undefined;\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _quillDelta = __nested_webpack_require_114341__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _parchment = __nested_webpack_require_114341__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _block = __nested_webpack_require_114341__(4);\n            var _block2 = _interopRequireDefault(_block);\n            var _inline = __nested_webpack_require_114341__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            var _text = __nested_webpack_require_114341__(7);\n            var _text2 = _interopRequireDefault(_text);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Code = function(_Inline) {\n                _inherits(Code, _Inline);\n                function Code() {\n                    _classCallCheck(this, Code);\n                    return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));\n                }\n                return Code;\n            }(_inline2.default);\n            Code.blotName = \"code\";\n            Code.tagName = \"CODE\";\n            var CodeBlock = function(_Block) {\n                _inherits(CodeBlock, _Block);\n                function CodeBlock() {\n                    _classCallCheck(this, CodeBlock);\n                    return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));\n                }\n                _createClass(CodeBlock, [\n                    {\n                        key: \"delta\",\n                        value: function delta() {\n                            var _this3 = this;\n                            var text = this.domNode.textContent;\n                            if (text.endsWith(\"\\n\")) {\n                                // Should always be true\n                                text = text.slice(0, -1);\n                            }\n                            return text.split(\"\\n\").reduce(function(delta, frag) {\n                                return delta.insert(frag).insert(\"\\n\", _this3.formats());\n                            }, new _quillDelta2.default());\n                        }\n                    },\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (name === this.statics.blotName && value) return;\n                            var _descendant = this.descendant(_text2.default, this.length() - 1), _descendant2 = _slicedToArray(_descendant, 1), text = _descendant2[0];\n                            if (text != null) {\n                                text.deleteAt(text.length() - 1, 1);\n                            }\n                            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), \"format\", this).call(this, name, value);\n                        }\n                    },\n                    {\n                        key: \"formatAt\",\n                        value: function formatAt(index, length, name, value) {\n                            if (length === 0) return;\n                            if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {\n                                return;\n                            }\n                            var nextNewline = this.newlineIndex(index);\n                            if (nextNewline < 0 || nextNewline >= index + length) return;\n                            var prevNewline = this.newlineIndex(index, true) + 1;\n                            var isolateLength = nextNewline - prevNewline + 1;\n                            var blot = this.isolate(prevNewline, isolateLength);\n                            var next = blot.next;\n                            blot.format(name, value);\n                            if (next instanceof CodeBlock) {\n                                next.formatAt(0, index - prevNewline + length - isolateLength, name, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"insertAt\",\n                        value: function insertAt(index, value, def) {\n                            if (def != null) return;\n                            var _descendant3 = this.descendant(_text2.default, index), _descendant4 = _slicedToArray(_descendant3, 2), text = _descendant4[0], offset = _descendant4[1];\n                            text.insertAt(offset, value);\n                        }\n                    },\n                    {\n                        key: \"length\",\n                        value: function length() {\n                            var length = this.domNode.textContent.length;\n                            if (!this.domNode.textContent.endsWith(\"\\n\")) {\n                                return length + 1;\n                            }\n                            return length;\n                        }\n                    },\n                    {\n                        key: \"newlineIndex\",\n                        value: function newlineIndex(searchIndex) {\n                            var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                            if (!reverse) {\n                                var offset = this.domNode.textContent.slice(searchIndex).indexOf(\"\\n\");\n                                return offset > -1 ? searchIndex + offset : -1;\n                            } else {\n                                return this.domNode.textContent.slice(0, searchIndex).lastIndexOf(\"\\n\");\n                            }\n                        }\n                    },\n                    {\n                        key: \"optimize\",\n                        value: function optimize(context) {\n                            if (!this.domNode.textContent.endsWith(\"\\n\")) {\n                                this.appendChild(_parchment2.default.create(\"text\", \"\\n\"));\n                            }\n                            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), \"optimize\", this).call(this, context);\n                            var next = this.next;\n                            if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {\n                                next.optimize(context);\n                                next.moveChildren(this);\n                                next.remove();\n                            }\n                        }\n                    },\n                    {\n                        key: \"replace\",\n                        value: function replace(target) {\n                            _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), \"replace\", this).call(this, target);\n                            [].slice.call(this.domNode.querySelectorAll(\"*\")).forEach(function(node) {\n                                var blot = _parchment2.default.find(node);\n                                if (blot == null) {\n                                    node.parentNode.removeChild(node);\n                                } else if (blot instanceof _parchment2.default.Embed) {\n                                    blot.remove();\n                                } else {\n                                    blot.unwrap();\n                                }\n                            });\n                        }\n                    }\n                ], [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), \"create\", this).call(this, value);\n                            domNode.setAttribute(\"spellcheck\", false);\n                            return domNode;\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats() {\n                            return true;\n                        }\n                    }\n                ]);\n                return CodeBlock;\n            }(_block2.default);\n            CodeBlock.blotName = \"code-block\";\n            CodeBlock.tagName = \"PRE\";\n            CodeBlock.TAB = \"  \";\n            exports1.Code = Code;\n            exports1.default = CodeBlock;\n        /***/ },\n        /* 14 */ /***/ function(module1, exports1, __nested_webpack_require_127655__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _quillDelta = __nested_webpack_require_127655__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _op = __nested_webpack_require_127655__(20);\n            var _op2 = _interopRequireDefault(_op);\n            var _parchment = __nested_webpack_require_127655__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _code = __nested_webpack_require_127655__(13);\n            var _code2 = _interopRequireDefault(_code);\n            var _cursor = __nested_webpack_require_127655__(24);\n            var _cursor2 = _interopRequireDefault(_cursor);\n            var _block = __nested_webpack_require_127655__(4);\n            var _block2 = _interopRequireDefault(_block);\n            var _break = __nested_webpack_require_127655__(16);\n            var _break2 = _interopRequireDefault(_break);\n            var _clone = __nested_webpack_require_127655__(21);\n            var _clone2 = _interopRequireDefault(_clone);\n            var _deepEqual = __nested_webpack_require_127655__(11);\n            var _deepEqual2 = _interopRequireDefault(_deepEqual);\n            var _extend = __nested_webpack_require_127655__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var ASCII = /^[ -~]*$/;\n            var Editor = function() {\n                function Editor(scroll) {\n                    _classCallCheck(this, Editor);\n                    this.scroll = scroll;\n                    this.delta = this.getDelta();\n                }\n                _createClass(Editor, [\n                    {\n                        key: \"applyDelta\",\n                        value: function applyDelta(delta) {\n                            var _this = this;\n                            var consumeNextNewline = false;\n                            this.scroll.update();\n                            var scrollLength = this.scroll.length();\n                            this.scroll.batchStart();\n                            delta = normalizeDelta(delta);\n                            delta.reduce(function(index, op) {\n                                var length = op.retain || op.delete || op.insert.length || 1;\n                                var attributes = op.attributes || {};\n                                if (op.insert != null) {\n                                    if (typeof op.insert === \"string\") {\n                                        var text = op.insert;\n                                        if (text.endsWith(\"\\n\") && consumeNextNewline) {\n                                            consumeNextNewline = false;\n                                            text = text.slice(0, -1);\n                                        }\n                                        if (index >= scrollLength && !text.endsWith(\"\\n\")) {\n                                            consumeNextNewline = true;\n                                        }\n                                        _this.scroll.insertAt(index, text);\n                                        var _scroll$line = _this.scroll.line(index), _scroll$line2 = _slicedToArray(_scroll$line, 2), line = _scroll$line2[0], offset = _scroll$line2[1];\n                                        var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));\n                                        if (line instanceof _block2.default) {\n                                            var _line$descendant = line.descendant(_parchment2.default.Leaf, offset), _line$descendant2 = _slicedToArray(_line$descendant, 1), leaf = _line$descendant2[0];\n                                            formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));\n                                        }\n                                        attributes = _op2.default.attributes.diff(formats, attributes) || {};\n                                    } else if (_typeof(op.insert) === \"object\") {\n                                        var key = Object.keys(op.insert)[0]; // There should only be one key\n                                        if (key == null) return index;\n                                        _this.scroll.insertAt(index, key, op.insert[key]);\n                                    }\n                                    scrollLength += length;\n                                }\n                                Object.keys(attributes).forEach(function(name) {\n                                    _this.scroll.formatAt(index, length, name, attributes[name]);\n                                });\n                                return index + length;\n                            }, 0);\n                            delta.reduce(function(index, op) {\n                                if (typeof op.delete === \"number\") {\n                                    _this.scroll.deleteAt(index, op.delete);\n                                    return index;\n                                }\n                                return index + (op.retain || op.insert.length || 1);\n                            }, 0);\n                            this.scroll.batchEnd();\n                            return this.update(delta);\n                        }\n                    },\n                    {\n                        key: \"deleteText\",\n                        value: function deleteText(index, length) {\n                            this.scroll.deleteAt(index, length);\n                            return this.update(new _quillDelta2.default().retain(index).delete(length));\n                        }\n                    },\n                    {\n                        key: \"formatLine\",\n                        value: function formatLine(index, length) {\n                            var _this2 = this;\n                            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                            this.scroll.update();\n                            Object.keys(formats).forEach(function(format) {\n                                if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;\n                                var lines = _this2.scroll.lines(index, Math.max(length, 1));\n                                var lengthRemaining = length;\n                                lines.forEach(function(line) {\n                                    var lineLength = line.length();\n                                    if (!(line instanceof _code2.default)) {\n                                        line.format(format, formats[format]);\n                                    } else {\n                                        var codeIndex = index - line.offset(_this2.scroll);\n                                        var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;\n                                        line.formatAt(codeIndex, codeLength, format, formats[format]);\n                                    }\n                                    lengthRemaining -= lineLength;\n                                });\n                            });\n                            this.scroll.optimize();\n                            return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));\n                        }\n                    },\n                    {\n                        key: \"formatText\",\n                        value: function formatText(index, length) {\n                            var _this3 = this;\n                            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                            Object.keys(formats).forEach(function(format) {\n                                _this3.scroll.formatAt(index, length, format, formats[format]);\n                            });\n                            return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));\n                        }\n                    },\n                    {\n                        key: \"getContents\",\n                        value: function getContents(index, length) {\n                            return this.delta.slice(index, index + length);\n                        }\n                    },\n                    {\n                        key: \"getDelta\",\n                        value: function getDelta() {\n                            return this.scroll.lines().reduce(function(delta, line) {\n                                return delta.concat(line.delta());\n                            }, new _quillDelta2.default());\n                        }\n                    },\n                    {\n                        key: \"getFormat\",\n                        value: function getFormat(index) {\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                            var lines = [], leaves = [];\n                            if (length === 0) {\n                                this.scroll.path(index).forEach(function(path) {\n                                    var _path = _slicedToArray(path, 1), blot = _path[0];\n                                    if (blot instanceof _block2.default) {\n                                        lines.push(blot);\n                                    } else if (blot instanceof _parchment2.default.Leaf) {\n                                        leaves.push(blot);\n                                    }\n                                });\n                            } else {\n                                lines = this.scroll.lines(index, length);\n                                leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);\n                            }\n                            var formatsArr = [\n                                lines,\n                                leaves\n                            ].map(function(blots) {\n                                if (blots.length === 0) return {};\n                                var formats = (0, _block.bubbleFormats)(blots.shift());\n                                while(Object.keys(formats).length > 0){\n                                    var blot = blots.shift();\n                                    if (blot == null) return formats;\n                                    formats = combineFormats((0, _block.bubbleFormats)(blot), formats);\n                                }\n                                return formats;\n                            });\n                            return _extend2.default.apply(_extend2.default, formatsArr);\n                        }\n                    },\n                    {\n                        key: \"getText\",\n                        value: function getText(index, length) {\n                            return this.getContents(index, length).filter(function(op) {\n                                return typeof op.insert === \"string\";\n                            }).map(function(op) {\n                                return op.insert;\n                            }).join(\"\");\n                        }\n                    },\n                    {\n                        key: \"insertEmbed\",\n                        value: function insertEmbed(index, embed, value) {\n                            this.scroll.insertAt(index, embed, value);\n                            return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));\n                        }\n                    },\n                    {\n                        key: \"insertText\",\n                        value: function insertText(index, text) {\n                            var _this4 = this;\n                            var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                            text = text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n                            this.scroll.insertAt(index, text);\n                            Object.keys(formats).forEach(function(format) {\n                                _this4.scroll.formatAt(index, text.length, format, formats[format]);\n                            });\n                            return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));\n                        }\n                    },\n                    {\n                        key: \"isBlank\",\n                        value: function isBlank() {\n                            if (this.scroll.children.length == 0) return true;\n                            if (this.scroll.children.length > 1) return false;\n                            var block = this.scroll.children.head;\n                            if (block.statics.blotName !== _block2.default.blotName) return false;\n                            if (block.children.length > 1) return false;\n                            return block.children.head instanceof _break2.default;\n                        }\n                    },\n                    {\n                        key: \"removeFormat\",\n                        value: function removeFormat(index, length) {\n                            var text = this.getText(index, length);\n                            var _scroll$line3 = this.scroll.line(index + length), _scroll$line4 = _slicedToArray(_scroll$line3, 2), line = _scroll$line4[0], offset = _scroll$line4[1];\n                            var suffixLength = 0, suffix = new _quillDelta2.default();\n                            if (line != null) {\n                                if (!(line instanceof _code2.default)) {\n                                    suffixLength = line.length() - offset;\n                                } else {\n                                    suffixLength = line.newlineIndex(offset) - offset + 1;\n                                }\n                                suffix = line.delta().slice(offset, offset + suffixLength - 1).insert(\"\\n\");\n                            }\n                            var contents = this.getContents(index, length + suffixLength);\n                            var diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));\n                            var delta = new _quillDelta2.default().retain(index).concat(diff);\n                            return this.applyDelta(delta);\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update(change) {\n                            var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n                            var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n                            var oldDelta = this.delta;\n                            if (mutations.length === 1 && mutations[0].type === \"characterData\" && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {\n                                // Optimization for character changes\n                                var textBlot = _parchment2.default.find(mutations[0].target);\n                                var formats = (0, _block.bubbleFormats)(textBlot);\n                                var index = textBlot.offset(this.scroll);\n                                var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, \"\");\n                                var oldText = new _quillDelta2.default().insert(oldValue);\n                                var newText = new _quillDelta2.default().insert(textBlot.value());\n                                var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));\n                                change = diffDelta.reduce(function(delta, op) {\n                                    if (op.insert) {\n                                        return delta.insert(op.insert, formats);\n                                    } else {\n                                        return delta.push(op);\n                                    }\n                                }, new _quillDelta2.default());\n                                this.delta = oldDelta.compose(change);\n                            } else {\n                                this.delta = this.getDelta();\n                                if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {\n                                    change = oldDelta.diff(this.delta, cursorIndex);\n                                }\n                            }\n                            return change;\n                        }\n                    }\n                ]);\n                return Editor;\n            }();\n            function combineFormats(formats, combined) {\n                return Object.keys(combined).reduce(function(merged, name) {\n                    if (formats[name] == null) return merged;\n                    if (combined[name] === formats[name]) {\n                        merged[name] = combined[name];\n                    } else if (Array.isArray(combined[name])) {\n                        if (combined[name].indexOf(formats[name]) < 0) {\n                            merged[name] = combined[name].concat([\n                                formats[name]\n                            ]);\n                        }\n                    } else {\n                        merged[name] = [\n                            combined[name],\n                            formats[name]\n                        ];\n                    }\n                    return merged;\n                }, {});\n            }\n            function normalizeDelta(delta) {\n                return delta.reduce(function(delta, op) {\n                    if (op.insert === 1) {\n                        var attributes = (0, _clone2.default)(op.attributes);\n                        delete attributes[\"image\"];\n                        return delta.insert({\n                            image: op.attributes.image\n                        }, attributes);\n                    }\n                    if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {\n                        op = (0, _clone2.default)(op);\n                        if (op.attributes.list) {\n                            op.attributes.list = \"ordered\";\n                        } else {\n                            op.attributes.list = \"bullet\";\n                            delete op.attributes.bullet;\n                        }\n                    }\n                    if (typeof op.insert === \"string\") {\n                        var text = op.insert.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\\n\");\n                        return delta.insert(text, op.attributes);\n                    }\n                    return delta.push(op);\n                }, new _quillDelta2.default());\n            }\n            exports1.default = Editor;\n        /***/ },\n        /* 15 */ /***/ function(module1, exports1, __nested_webpack_require_150086__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.Range = undefined;\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _parchment = __nested_webpack_require_150086__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _clone = __nested_webpack_require_150086__(21);\n            var _clone2 = _interopRequireDefault(_clone);\n            var _deepEqual = __nested_webpack_require_150086__(11);\n            var _deepEqual2 = _interopRequireDefault(_deepEqual);\n            var _emitter3 = __nested_webpack_require_150086__(8);\n            var _emitter4 = _interopRequireDefault(_emitter3);\n            var _logger = __nested_webpack_require_150086__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                    for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++){\n                        arr2[i] = arr[i];\n                    }\n                    return arr2;\n                } else {\n                    return Array.from(arr);\n                }\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var debug = (0, _logger2.default)(\"quill:selection\");\n            var Range = function Range(index) {\n                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                _classCallCheck(this, Range);\n                this.index = index;\n                this.length = length;\n            };\n            var Selection = function() {\n                function Selection(scroll, emitter) {\n                    var _this = this;\n                    _classCallCheck(this, Selection);\n                    this.emitter = emitter;\n                    this.scroll = scroll;\n                    this.composing = false;\n                    this.mouseDown = false;\n                    this.root = this.scroll.domNode;\n                    this.cursor = _parchment2.default.create(\"cursor\", this);\n                    // savedRange is last non-null range\n                    this.lastRange = this.savedRange = new Range(0, 0);\n                    this.handleComposition();\n                    this.handleDragging();\n                    this.emitter.listenDOM(\"selectionchange\", document, function() {\n                        if (!_this.mouseDown) {\n                            setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);\n                        }\n                    });\n                    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function(type, delta) {\n                        if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {\n                            _this.update(_emitter4.default.sources.SILENT);\n                        }\n                    });\n                    this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function() {\n                        if (!_this.hasFocus()) return;\n                        var native = _this.getNativeRange();\n                        if (native == null) return;\n                        if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle\n                        // TODO unclear if this has negative side effects\n                        _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function() {\n                            try {\n                                _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);\n                            } catch (ignored) {}\n                        });\n                    });\n                    this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function(mutations, context) {\n                        if (context.range) {\n                            var _context$range = context.range, startNode = _context$range.startNode, startOffset = _context$range.startOffset, endNode = _context$range.endNode, endOffset = _context$range.endOffset;\n                            _this.setNativeRange(startNode, startOffset, endNode, endOffset);\n                        }\n                    });\n                    this.update(_emitter4.default.sources.SILENT);\n                }\n                _createClass(Selection, [\n                    {\n                        key: \"handleComposition\",\n                        value: function handleComposition() {\n                            var _this2 = this;\n                            this.root.addEventListener(\"compositionstart\", function() {\n                                _this2.composing = true;\n                            });\n                            this.root.addEventListener(\"compositionend\", function() {\n                                _this2.composing = false;\n                                if (_this2.cursor.parent) {\n                                    var range = _this2.cursor.restore();\n                                    if (!range) return;\n                                    setTimeout(function() {\n                                        _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);\n                                    }, 1);\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"handleDragging\",\n                        value: function handleDragging() {\n                            var _this3 = this;\n                            this.emitter.listenDOM(\"mousedown\", document.body, function() {\n                                _this3.mouseDown = true;\n                            });\n                            this.emitter.listenDOM(\"mouseup\", document.body, function() {\n                                _this3.mouseDown = false;\n                                _this3.update(_emitter4.default.sources.USER);\n                            });\n                        }\n                    },\n                    {\n                        key: \"focus\",\n                        value: function focus() {\n                            if (this.hasFocus()) return;\n                            this.root.focus();\n                            this.setRange(this.savedRange);\n                        }\n                    },\n                    {\n                        key: \"format\",\n                        value: function format(_format, value) {\n                            if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;\n                            this.scroll.update();\n                            var nativeRange = this.getNativeRange();\n                            if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK)) return;\n                            if (nativeRange.start.node !== this.cursor.textNode) {\n                                var blot = _parchment2.default.find(nativeRange.start.node, false);\n                                if (blot == null) return;\n                                // TODO Give blot ability to not split\n                                if (blot instanceof _parchment2.default.Leaf) {\n                                    var after = blot.split(nativeRange.start.offset);\n                                    blot.parent.insertBefore(this.cursor, after);\n                                } else {\n                                    blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n                                }\n                                this.cursor.attach();\n                            }\n                            this.cursor.format(_format, value);\n                            this.scroll.optimize();\n                            this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n                            this.update();\n                        }\n                    },\n                    {\n                        key: \"getBounds\",\n                        value: function getBounds(index) {\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n                            var scrollLength = this.scroll.length();\n                            index = Math.min(index, scrollLength - 1);\n                            length = Math.min(index + length, scrollLength - 1) - index;\n                            var node = void 0, _scroll$leaf = this.scroll.leaf(index), _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2), leaf = _scroll$leaf2[0], offset = _scroll$leaf2[1];\n                            if (leaf == null) return null;\n                            var _leaf$position = leaf.position(offset, true);\n                            var _leaf$position2 = _slicedToArray(_leaf$position, 2);\n                            node = _leaf$position2[0];\n                            offset = _leaf$position2[1];\n                            var range = document.createRange();\n                            if (length > 0) {\n                                range.setStart(node, offset);\n                                var _scroll$leaf3 = this.scroll.leaf(index + length);\n                                var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);\n                                leaf = _scroll$leaf4[0];\n                                offset = _scroll$leaf4[1];\n                                if (leaf == null) return null;\n                                var _leaf$position3 = leaf.position(offset, true);\n                                var _leaf$position4 = _slicedToArray(_leaf$position3, 2);\n                                node = _leaf$position4[0];\n                                offset = _leaf$position4[1];\n                                range.setEnd(node, offset);\n                                return range.getBoundingClientRect();\n                            } else {\n                                var side = \"left\";\n                                var rect = void 0;\n                                if (node instanceof Text) {\n                                    if (offset < node.data.length) {\n                                        range.setStart(node, offset);\n                                        range.setEnd(node, offset + 1);\n                                    } else {\n                                        range.setStart(node, offset - 1);\n                                        range.setEnd(node, offset);\n                                        side = \"right\";\n                                    }\n                                    rect = range.getBoundingClientRect();\n                                } else {\n                                    rect = leaf.domNode.getBoundingClientRect();\n                                    if (offset > 0) side = \"right\";\n                                }\n                                return {\n                                    bottom: rect.top + rect.height,\n                                    height: rect.height,\n                                    left: rect[side],\n                                    right: rect[side],\n                                    top: rect.top,\n                                    width: 0\n                                };\n                            }\n                        }\n                    },\n                    {\n                        key: \"getNativeRange\",\n                        value: function getNativeRange() {\n                            var selection = document.getSelection();\n                            if (selection == null || selection.rangeCount <= 0) return null;\n                            var nativeRange = selection.getRangeAt(0);\n                            if (nativeRange == null) return null;\n                            var range = this.normalizeNative(nativeRange);\n                            debug.info(\"getNativeRange\", range);\n                            return range;\n                        }\n                    },\n                    {\n                        key: \"getRange\",\n                        value: function getRange() {\n                            var normalized = this.getNativeRange();\n                            if (normalized == null) return [\n                                null,\n                                null\n                            ];\n                            var range = this.normalizedToRange(normalized);\n                            return [\n                                range,\n                                normalized\n                            ];\n                        }\n                    },\n                    {\n                        key: \"hasFocus\",\n                        value: function hasFocus() {\n                            return document.activeElement === this.root;\n                        }\n                    },\n                    {\n                        key: \"normalizedToRange\",\n                        value: function normalizedToRange(range) {\n                            var _this4 = this;\n                            var positions = [\n                                [\n                                    range.start.node,\n                                    range.start.offset\n                                ]\n                            ];\n                            if (!range.native.collapsed) {\n                                positions.push([\n                                    range.end.node,\n                                    range.end.offset\n                                ]);\n                            }\n                            var indexes = positions.map(function(position) {\n                                var _position = _slicedToArray(position, 2), node = _position[0], offset = _position[1];\n                                var blot = _parchment2.default.find(node, true);\n                                var index = blot.offset(_this4.scroll);\n                                if (offset === 0) {\n                                    return index;\n                                } else if (blot instanceof _parchment2.default.Container) {\n                                    return index + blot.length();\n                                } else {\n                                    return index + blot.index(node, offset);\n                                }\n                            });\n                            var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);\n                            var start = Math.min.apply(Math, [\n                                end\n                            ].concat(_toConsumableArray(indexes)));\n                            return new Range(start, end - start);\n                        }\n                    },\n                    {\n                        key: \"normalizeNative\",\n                        value: function normalizeNative(nativeRange) {\n                            if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {\n                                return null;\n                            }\n                            var range = {\n                                start: {\n                                    node: nativeRange.startContainer,\n                                    offset: nativeRange.startOffset\n                                },\n                                end: {\n                                    node: nativeRange.endContainer,\n                                    offset: nativeRange.endOffset\n                                },\n                                native: nativeRange\n                            };\n                            [\n                                range.start,\n                                range.end\n                            ].forEach(function(position) {\n                                var node = position.node, offset = position.offset;\n                                while(!(node instanceof Text) && node.childNodes.length > 0){\n                                    if (node.childNodes.length > offset) {\n                                        node = node.childNodes[offset];\n                                        offset = 0;\n                                    } else if (node.childNodes.length === offset) {\n                                        node = node.lastChild;\n                                        offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;\n                                    } else {\n                                        break;\n                                    }\n                                }\n                                position.node = node, position.offset = offset;\n                            });\n                            return range;\n                        }\n                    },\n                    {\n                        key: \"rangeToNative\",\n                        value: function rangeToNative(range) {\n                            var _this5 = this;\n                            var indexes = range.collapsed ? [\n                                range.index\n                            ] : [\n                                range.index,\n                                range.index + range.length\n                            ];\n                            var args = [];\n                            var scrollLength = this.scroll.length();\n                            indexes.forEach(function(index, i) {\n                                index = Math.min(scrollLength - 1, index);\n                                var node = void 0, _scroll$leaf5 = _this5.scroll.leaf(index), _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2), leaf = _scroll$leaf6[0], offset = _scroll$leaf6[1];\n                                var _leaf$position5 = leaf.position(offset, i !== 0);\n                                var _leaf$position6 = _slicedToArray(_leaf$position5, 2);\n                                node = _leaf$position6[0];\n                                offset = _leaf$position6[1];\n                                args.push(node, offset);\n                            });\n                            if (args.length < 2) {\n                                args = args.concat(args);\n                            }\n                            return args;\n                        }\n                    },\n                    {\n                        key: \"scrollIntoView\",\n                        value: function scrollIntoView(scrollingContainer) {\n                            var range = this.lastRange;\n                            if (range == null) return;\n                            var bounds = this.getBounds(range.index, range.length);\n                            if (bounds == null) return;\n                            var limit = this.scroll.length() - 1;\n                            var _scroll$line = this.scroll.line(Math.min(range.index, limit)), _scroll$line2 = _slicedToArray(_scroll$line, 1), first = _scroll$line2[0];\n                            var last = first;\n                            if (range.length > 0) {\n                                var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));\n                                var _scroll$line4 = _slicedToArray(_scroll$line3, 1);\n                                last = _scroll$line4[0];\n                            }\n                            if (first == null || last == null) return;\n                            var scrollBounds = scrollingContainer.getBoundingClientRect();\n                            if (bounds.top < scrollBounds.top) {\n                                scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;\n                            } else if (bounds.bottom > scrollBounds.bottom) {\n                                scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;\n                            }\n                        }\n                    },\n                    {\n                        key: \"setNativeRange\",\n                        value: function setNativeRange(startNode, startOffset) {\n                            var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;\n                            var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;\n                            var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n                            debug.info(\"setNativeRange\", startNode, startOffset, endNode, endOffset);\n                            if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {\n                                return;\n                            }\n                            var selection = document.getSelection();\n                            if (selection == null) return;\n                            if (startNode != null) {\n                                if (!this.hasFocus()) this.root.focus();\n                                var native = (this.getNativeRange() || {}).native;\n                                if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {\n                                    if (startNode.tagName == \"BR\") {\n                                        startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);\n                                        startNode = startNode.parentNode;\n                                    }\n                                    if (endNode.tagName == \"BR\") {\n                                        endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);\n                                        endNode = endNode.parentNode;\n                                    }\n                                    var range = document.createRange();\n                                    range.setStart(startNode, startOffset);\n                                    range.setEnd(endNode, endOffset);\n                                    selection.removeAllRanges();\n                                    selection.addRange(range);\n                                }\n                            } else {\n                                selection.removeAllRanges();\n                                this.root.blur();\n                                document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)\n                            }\n                        }\n                    },\n                    {\n                        key: \"setRange\",\n                        value: function setRange(range) {\n                            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;\n                            if (typeof force === \"string\") {\n                                source = force;\n                                force = false;\n                            }\n                            debug.info(\"setRange\", range);\n                            if (range != null) {\n                                var args = this.rangeToNative(range);\n                                this.setNativeRange.apply(this, _toConsumableArray(args).concat([\n                                    force\n                                ]));\n                            } else {\n                                this.setNativeRange(null);\n                            }\n                            this.update(source);\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update() {\n                            var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;\n                            var oldRange = this.lastRange;\n                            var _getRange = this.getRange(), _getRange2 = _slicedToArray(_getRange, 2), lastRange = _getRange2[0], nativeRange = _getRange2[1];\n                            this.lastRange = lastRange;\n                            if (this.lastRange != null) {\n                                this.savedRange = this.lastRange;\n                            }\n                            if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {\n                                var _emitter;\n                                if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {\n                                    this.cursor.restore();\n                                }\n                                var args = [\n                                    _emitter4.default.events.SELECTION_CHANGE,\n                                    (0, _clone2.default)(this.lastRange),\n                                    (0, _clone2.default)(oldRange),\n                                    source\n                                ];\n                                (_emitter = this.emitter).emit.apply(_emitter, [\n                                    _emitter4.default.events.EDITOR_CHANGE\n                                ].concat(args));\n                                if (source !== _emitter4.default.sources.SILENT) {\n                                    var _emitter2;\n                                    (_emitter2 = this.emitter).emit.apply(_emitter2, args);\n                                }\n                            }\n                        }\n                    }\n                ]);\n                return Selection;\n            }();\n            function contains(parent, descendant) {\n                try {\n                    // Firefox inserts inaccessible nodes around video elements\n                    descendant.parentNode;\n                } catch (e) {\n                    return false;\n                }\n                // IE11 has bug with Text nodes\n                // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect\n                if (descendant instanceof Text) {\n                    descendant = descendant.parentNode;\n                }\n                return parent.contains(descendant);\n            }\n            exports1.Range = Range;\n            exports1.default = Selection;\n        /***/ },\n        /* 16 */ /***/ function(module1, exports1, __nested_webpack_require_179379__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_179379__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Break = function(_Parchment$Embed) {\n                _inherits(Break, _Parchment$Embed);\n                function Break() {\n                    _classCallCheck(this, Break);\n                    return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));\n                }\n                _createClass(Break, [\n                    {\n                        key: \"insertInto\",\n                        value: function insertInto(parent, ref) {\n                            if (parent.children.length === 0) {\n                                _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), \"insertInto\", this).call(this, parent, ref);\n                            } else {\n                                this.remove();\n                            }\n                        }\n                    },\n                    {\n                        key: \"length\",\n                        value: function length() {\n                            return 0;\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value() {\n                            return \"\";\n                        }\n                    }\n                ], [\n                    {\n                        key: \"value\",\n                        value: function value() {\n                            return undefined;\n                        }\n                    }\n                ]);\n                return Break;\n            }(_parchment2.default.Embed);\n            Break.blotName = \"break\";\n            Break.tagName = \"BR\";\n            exports1.default = Break;\n        /***/ },\n        /* 17 */ /***/ function(module1, exports1, __nested_webpack_require_184658__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var linked_list_1 = __nested_webpack_require_184658__(44);\n            var shadow_1 = __nested_webpack_require_184658__(30);\n            var Registry = __nested_webpack_require_184658__(1);\n            var ContainerBlot = /** @class */ function(_super) {\n                __extends(ContainerBlot, _super);\n                function ContainerBlot(domNode) {\n                    var _this = _super.call(this, domNode) || this;\n                    _this.build();\n                    return _this;\n                }\n                ContainerBlot.prototype.appendChild = function(other) {\n                    this.insertBefore(other);\n                };\n                ContainerBlot.prototype.attach = function() {\n                    _super.prototype.attach.call(this);\n                    this.children.forEach(function(child) {\n                        child.attach();\n                    });\n                };\n                ContainerBlot.prototype.build = function() {\n                    var _this = this;\n                    this.children = new linked_list_1.default();\n                    // Need to be reversed for if DOM nodes already in order\n                    [].slice.call(this.domNode.childNodes).reverse().forEach(function(node) {\n                        try {\n                            var child = makeBlot(node);\n                            _this.insertBefore(child, _this.children.head || undefined);\n                        } catch (err) {\n                            if (err instanceof Registry.ParchmentError) return;\n                            else throw err;\n                        }\n                    });\n                };\n                ContainerBlot.prototype.deleteAt = function(index, length) {\n                    if (index === 0 && length === this.length()) {\n                        return this.remove();\n                    }\n                    this.children.forEachAt(index, length, function(child, offset, length) {\n                        child.deleteAt(offset, length);\n                    });\n                };\n                ContainerBlot.prototype.descendant = function(criteria, index) {\n                    var _a = this.children.find(index), child = _a[0], offset = _a[1];\n                    if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n                        return [\n                            child,\n                            offset\n                        ];\n                    } else if (child instanceof ContainerBlot) {\n                        return child.descendant(criteria, offset);\n                    } else {\n                        return [\n                            null,\n                            -1\n                        ];\n                    }\n                };\n                ContainerBlot.prototype.descendants = function(criteria, index, length) {\n                    if (index === void 0) {\n                        index = 0;\n                    }\n                    if (length === void 0) {\n                        length = Number.MAX_VALUE;\n                    }\n                    var descendants = [];\n                    var lengthLeft = length;\n                    this.children.forEachAt(index, length, function(child, index, length) {\n                        if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n                            descendants.push(child);\n                        }\n                        if (child instanceof ContainerBlot) {\n                            descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n                        }\n                        lengthLeft -= length;\n                    });\n                    return descendants;\n                };\n                ContainerBlot.prototype.detach = function() {\n                    this.children.forEach(function(child) {\n                        child.detach();\n                    });\n                    _super.prototype.detach.call(this);\n                };\n                ContainerBlot.prototype.formatAt = function(index, length, name, value) {\n                    this.children.forEachAt(index, length, function(child, offset, length) {\n                        child.formatAt(offset, length, name, value);\n                    });\n                };\n                ContainerBlot.prototype.insertAt = function(index, value, def) {\n                    var _a = this.children.find(index), child = _a[0], offset = _a[1];\n                    if (child) {\n                        child.insertAt(offset, value, def);\n                    } else {\n                        var blot = def == null ? Registry.create(\"text\", value) : Registry.create(value, def);\n                        this.appendChild(blot);\n                    }\n                };\n                ContainerBlot.prototype.insertBefore = function(childBlot, refBlot) {\n                    if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function(child) {\n                        return childBlot instanceof child;\n                    })) {\n                        throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n                    }\n                    childBlot.insertInto(this, refBlot);\n                };\n                ContainerBlot.prototype.length = function() {\n                    return this.children.reduce(function(memo, child) {\n                        return memo + child.length();\n                    }, 0);\n                };\n                ContainerBlot.prototype.moveChildren = function(targetParent, refNode) {\n                    this.children.forEach(function(child) {\n                        targetParent.insertBefore(child, refNode);\n                    });\n                };\n                ContainerBlot.prototype.optimize = function(context) {\n                    _super.prototype.optimize.call(this, context);\n                    if (this.children.length === 0) {\n                        if (this.statics.defaultChild != null) {\n                            var child = Registry.create(this.statics.defaultChild);\n                            this.appendChild(child);\n                            child.optimize(context);\n                        } else {\n                            this.remove();\n                        }\n                    }\n                };\n                ContainerBlot.prototype.path = function(index, inclusive) {\n                    if (inclusive === void 0) {\n                        inclusive = false;\n                    }\n                    var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];\n                    var position = [\n                        [\n                            this,\n                            index\n                        ]\n                    ];\n                    if (child instanceof ContainerBlot) {\n                        return position.concat(child.path(offset, inclusive));\n                    } else if (child != null) {\n                        position.push([\n                            child,\n                            offset\n                        ]);\n                    }\n                    return position;\n                };\n                ContainerBlot.prototype.removeChild = function(child) {\n                    this.children.remove(child);\n                };\n                ContainerBlot.prototype.replace = function(target) {\n                    if (target instanceof ContainerBlot) {\n                        target.moveChildren(this);\n                    }\n                    _super.prototype.replace.call(this, target);\n                };\n                ContainerBlot.prototype.split = function(index, force) {\n                    if (force === void 0) {\n                        force = false;\n                    }\n                    if (!force) {\n                        if (index === 0) return this;\n                        if (index === this.length()) return this.next;\n                    }\n                    var after = this.clone();\n                    this.parent.insertBefore(after, this.next);\n                    this.children.forEachAt(index, this.length(), function(child, offset, length) {\n                        child = child.split(offset, force);\n                        after.appendChild(child);\n                    });\n                    return after;\n                };\n                ContainerBlot.prototype.unwrap = function() {\n                    this.moveChildren(this.parent, this.next);\n                    this.remove();\n                };\n                ContainerBlot.prototype.update = function(mutations, context) {\n                    var _this = this;\n                    var addedNodes = [];\n                    var removedNodes = [];\n                    mutations.forEach(function(mutation) {\n                        if (mutation.target === _this.domNode && mutation.type === \"childList\") {\n                            addedNodes.push.apply(addedNodes, mutation.addedNodes);\n                            removedNodes.push.apply(removedNodes, mutation.removedNodes);\n                        }\n                    });\n                    removedNodes.forEach(function(node) {\n                        // Check node has actually been removed\n                        // One exception is Chrome does not immediately remove IFRAMEs\n                        // from DOM but MutationRecord is correct in its reported removal\n                        if (node.parentNode != null && // @ts-ignore\n                        node.tagName !== \"IFRAME\" && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                            return;\n                        }\n                        var blot = Registry.find(node);\n                        if (blot == null) return;\n                        if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n                            blot.detach();\n                        }\n                    });\n                    addedNodes.filter(function(node) {\n                        return node.parentNode == _this.domNode;\n                    }).sort(function(a, b) {\n                        if (a === b) return 0;\n                        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                            return 1;\n                        }\n                        return -1;\n                    }).forEach(function(node) {\n                        var refBlot = null;\n                        if (node.nextSibling != null) {\n                            refBlot = Registry.find(node.nextSibling);\n                        }\n                        var blot = makeBlot(node);\n                        if (blot.next != refBlot || blot.next == null) {\n                            if (blot.parent != null) {\n                                blot.parent.removeChild(_this);\n                            }\n                            _this.insertBefore(blot, refBlot || undefined);\n                        }\n                    });\n                };\n                return ContainerBlot;\n            }(shadow_1.default);\n            function makeBlot(node) {\n                var blot = Registry.find(node);\n                if (blot == null) {\n                    try {\n                        blot = Registry.create(node);\n                    } catch (e) {\n                        blot = Registry.create(Registry.Scope.INLINE);\n                        [].slice.call(node.childNodes).forEach(function(child) {\n                            // @ts-ignore\n                            blot.domNode.appendChild(child);\n                        });\n                        if (node.parentNode) {\n                            node.parentNode.replaceChild(blot.domNode, node);\n                        }\n                        blot.attach();\n                    }\n                }\n                return blot;\n            }\n            exports1.default = ContainerBlot;\n        /***/ },\n        /* 18 */ /***/ function(module1, exports1, __nested_webpack_require_197722__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var attributor_1 = __nested_webpack_require_197722__(12);\n            var store_1 = __nested_webpack_require_197722__(31);\n            var container_1 = __nested_webpack_require_197722__(17);\n            var Registry = __nested_webpack_require_197722__(1);\n            var FormatBlot = /** @class */ function(_super) {\n                __extends(FormatBlot, _super);\n                function FormatBlot(domNode) {\n                    var _this = _super.call(this, domNode) || this;\n                    _this.attributes = new store_1.default(_this.domNode);\n                    return _this;\n                }\n                FormatBlot.formats = function(domNode) {\n                    if (typeof this.tagName === \"string\") {\n                        return true;\n                    } else if (Array.isArray(this.tagName)) {\n                        return domNode.tagName.toLowerCase();\n                    }\n                    return undefined;\n                };\n                FormatBlot.prototype.format = function(name, value) {\n                    var format = Registry.query(name);\n                    if (format instanceof attributor_1.default) {\n                        this.attributes.attribute(format, value);\n                    } else if (value) {\n                        if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n                            this.replaceWith(name, value);\n                        }\n                    }\n                };\n                FormatBlot.prototype.formats = function() {\n                    var formats = this.attributes.values();\n                    var format = this.statics.formats(this.domNode);\n                    if (format != null) {\n                        formats[this.statics.blotName] = format;\n                    }\n                    return formats;\n                };\n                FormatBlot.prototype.replaceWith = function(name, value) {\n                    var replacement = _super.prototype.replaceWith.call(this, name, value);\n                    this.attributes.copy(replacement);\n                    return replacement;\n                };\n                FormatBlot.prototype.update = function(mutations, context) {\n                    var _this = this;\n                    _super.prototype.update.call(this, mutations, context);\n                    if (mutations.some(function(mutation) {\n                        return mutation.target === _this.domNode && mutation.type === \"attributes\";\n                    })) {\n                        this.attributes.build();\n                    }\n                };\n                FormatBlot.prototype.wrap = function(name, value) {\n                    var wrapper = _super.prototype.wrap.call(this, name, value);\n                    if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n                        this.attributes.move(wrapper);\n                    }\n                    return wrapper;\n                };\n                return FormatBlot;\n            }(container_1.default);\n            exports1.default = FormatBlot;\n        /***/ },\n        /* 19 */ /***/ function(module1, exports1, __nested_webpack_require_201739__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var shadow_1 = __nested_webpack_require_201739__(30);\n            var Registry = __nested_webpack_require_201739__(1);\n            var LeafBlot = /** @class */ function(_super) {\n                __extends(LeafBlot, _super);\n                function LeafBlot() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                LeafBlot.value = function(domNode) {\n                    return true;\n                };\n                LeafBlot.prototype.index = function(node, offset) {\n                    if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                        return Math.min(offset, 1);\n                    }\n                    return -1;\n                };\n                LeafBlot.prototype.position = function(index, inclusive) {\n                    var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n                    if (index > 0) offset += 1;\n                    return [\n                        this.parent.domNode,\n                        offset\n                    ];\n                };\n                LeafBlot.prototype.value = function() {\n                    var _a;\n                    return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n                };\n                LeafBlot.scope = Registry.Scope.INLINE_BLOT;\n                return LeafBlot;\n            }(shadow_1.default);\n            exports1.default = LeafBlot;\n        /***/ },\n        /* 20 */ /***/ function(module1, exports1, __nested_webpack_require_204201__) {\n            var equal = __nested_webpack_require_204201__(11);\n            var extend = __nested_webpack_require_204201__(3);\n            var lib = {\n                attributes: {\n                    compose: function(a, b, keepNull) {\n                        if (typeof a !== \"object\") a = {};\n                        if (typeof b !== \"object\") b = {};\n                        var attributes = extend(true, {}, b);\n                        if (!keepNull) {\n                            attributes = Object.keys(attributes).reduce(function(copy, key) {\n                                if (attributes[key] != null) {\n                                    copy[key] = attributes[key];\n                                }\n                                return copy;\n                            }, {});\n                        }\n                        for(var key in a){\n                            if (a[key] !== undefined && b[key] === undefined) {\n                                attributes[key] = a[key];\n                            }\n                        }\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\n                    },\n                    diff: function(a, b) {\n                        if (typeof a !== \"object\") a = {};\n                        if (typeof b !== \"object\") b = {};\n                        var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function(attributes, key) {\n                            if (!equal(a[key], b[key])) {\n                                attributes[key] = b[key] === undefined ? null : b[key];\n                            }\n                            return attributes;\n                        }, {});\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\n                    },\n                    transform: function(a, b, priority) {\n                        if (typeof a !== \"object\") return b;\n                        if (typeof b !== \"object\") return undefined;\n                        if (!priority) return b; // b simply overwrites us without priority\n                        var attributes = Object.keys(b).reduce(function(attributes, key) {\n                            if (a[key] === undefined) attributes[key] = b[key]; // null is a valid value\n                            return attributes;\n                        }, {});\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\n                    }\n                },\n                iterator: function(ops) {\n                    return new Iterator(ops);\n                },\n                length: function(op) {\n                    if (typeof op[\"delete\"] === \"number\") {\n                        return op[\"delete\"];\n                    } else if (typeof op.retain === \"number\") {\n                        return op.retain;\n                    } else {\n                        return typeof op.insert === \"string\" ? op.insert.length : 1;\n                    }\n                }\n            };\n            function Iterator(ops) {\n                this.ops = ops;\n                this.index = 0;\n                this.offset = 0;\n            }\n            ;\n            Iterator.prototype.hasNext = function() {\n                return this.peekLength() < Infinity;\n            };\n            Iterator.prototype.next = function(length) {\n                if (!length) length = Infinity;\n                var nextOp = this.ops[this.index];\n                if (nextOp) {\n                    var offset = this.offset;\n                    var opLength = lib.length(nextOp);\n                    if (length >= opLength - offset) {\n                        length = opLength - offset;\n                        this.index += 1;\n                        this.offset = 0;\n                    } else {\n                        this.offset += length;\n                    }\n                    if (typeof nextOp[\"delete\"] === \"number\") {\n                        return {\n                            \"delete\": length\n                        };\n                    } else {\n                        var retOp = {};\n                        if (nextOp.attributes) {\n                            retOp.attributes = nextOp.attributes;\n                        }\n                        if (typeof nextOp.retain === \"number\") {\n                            retOp.retain = length;\n                        } else if (typeof nextOp.insert === \"string\") {\n                            retOp.insert = nextOp.insert.substr(offset, length);\n                        } else {\n                            // offset should === 0, length should === 1\n                            retOp.insert = nextOp.insert;\n                        }\n                        return retOp;\n                    }\n                } else {\n                    return {\n                        retain: Infinity\n                    };\n                }\n            };\n            Iterator.prototype.peek = function() {\n                return this.ops[this.index];\n            };\n            Iterator.prototype.peekLength = function() {\n                if (this.ops[this.index]) {\n                    // Should never return 0 if our index is being managed correctly\n                    return lib.length(this.ops[this.index]) - this.offset;\n                } else {\n                    return Infinity;\n                }\n            };\n            Iterator.prototype.peekType = function() {\n                if (this.ops[this.index]) {\n                    if (typeof this.ops[this.index][\"delete\"] === \"number\") {\n                        return \"delete\";\n                    } else if (typeof this.ops[this.index].retain === \"number\") {\n                        return \"retain\";\n                    } else {\n                        return \"insert\";\n                    }\n                }\n                return \"retain\";\n            };\n            Iterator.prototype.rest = function() {\n                if (!this.hasNext()) {\n                    return [];\n                } else if (this.offset === 0) {\n                    return this.ops.slice(this.index);\n                } else {\n                    var offset = this.offset;\n                    var index = this.index;\n                    var next = this.next();\n                    var rest = this.ops.slice(this.index);\n                    this.offset = offset;\n                    this.index = index;\n                    return [\n                        next\n                    ].concat(rest);\n                }\n            };\n            module1.exports = lib;\n        /***/ },\n        /* 21 */ /***/ function(module1, exports1) {\n            var clone = function() {\n                \"use strict\";\n                function _instanceof(obj, type) {\n                    return type != null && obj instanceof type;\n                }\n                var nativeMap;\n                try {\n                    nativeMap = Map;\n                } catch (_) {\n                    // maybe a reference error because no `Map`. Give it a dummy value that no\n                    // value will ever be an instanceof.\n                    nativeMap = function() {};\n                }\n                var nativeSet;\n                try {\n                    nativeSet = Set;\n                } catch (_) {\n                    nativeSet = function() {};\n                }\n                var nativePromise;\n                try {\n                    nativePromise = Promise;\n                } catch (_) {\n                    nativePromise = function() {};\n                }\n                /**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/ function clone(parent, circular, depth, prototype, includeNonEnumerable) {\n                    if (typeof circular === \"object\") {\n                        depth = circular.depth;\n                        prototype = circular.prototype;\n                        includeNonEnumerable = circular.includeNonEnumerable;\n                        circular = circular.circular;\n                    }\n                    // maintain two arrays for circular references, where corresponding parents\n                    // and children have the same index\n                    var allParents = [];\n                    var allChildren = [];\n                    var useBuffer = typeof Buffer != \"undefined\";\n                    if (typeof circular == \"undefined\") circular = true;\n                    if (typeof depth == \"undefined\") depth = Infinity;\n                    // recurse this function so we don't reset allParents and allChildren\n                    function _clone(parent, depth) {\n                        // cloning null always returns null\n                        if (parent === null) return null;\n                        if (depth === 0) return parent;\n                        var child;\n                        var proto;\n                        if (typeof parent != \"object\") {\n                            return parent;\n                        }\n                        if (_instanceof(parent, nativeMap)) {\n                            child = new nativeMap();\n                        } else if (_instanceof(parent, nativeSet)) {\n                            child = new nativeSet();\n                        } else if (_instanceof(parent, nativePromise)) {\n                            child = new nativePromise(function(resolve, reject) {\n                                parent.then(function(value) {\n                                    resolve(_clone(value, depth - 1));\n                                }, function(err) {\n                                    reject(_clone(err, depth - 1));\n                                });\n                            });\n                        } else if (clone.__isArray(parent)) {\n                            child = [];\n                        } else if (clone.__isRegExp(parent)) {\n                            child = new RegExp(parent.source, __getRegExpFlags(parent));\n                            if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n                        } else if (clone.__isDate(parent)) {\n                            child = new Date(parent.getTime());\n                        } else if (useBuffer && Buffer.isBuffer(parent)) {\n                            if (Buffer.allocUnsafe) {\n                                // Node.js >= 4.5.0\n                                child = Buffer.allocUnsafe(parent.length);\n                            } else {\n                                // Older Node.js versions\n                                child = new Buffer(parent.length);\n                            }\n                            parent.copy(child);\n                            return child;\n                        } else if (_instanceof(parent, Error)) {\n                            child = Object.create(parent);\n                        } else {\n                            if (typeof prototype == \"undefined\") {\n                                proto = Object.getPrototypeOf(parent);\n                                child = Object.create(proto);\n                            } else {\n                                child = Object.create(prototype);\n                                proto = prototype;\n                            }\n                        }\n                        if (circular) {\n                            var index = allParents.indexOf(parent);\n                            if (index != -1) {\n                                return allChildren[index];\n                            }\n                            allParents.push(parent);\n                            allChildren.push(child);\n                        }\n                        if (_instanceof(parent, nativeMap)) {\n                            parent.forEach(function(value, key) {\n                                var keyChild = _clone(key, depth - 1);\n                                var valueChild = _clone(value, depth - 1);\n                                child.set(keyChild, valueChild);\n                            });\n                        }\n                        if (_instanceof(parent, nativeSet)) {\n                            parent.forEach(function(value) {\n                                var entryChild = _clone(value, depth - 1);\n                                child.add(entryChild);\n                            });\n                        }\n                        for(var i in parent){\n                            var attrs;\n                            if (proto) {\n                                attrs = Object.getOwnPropertyDescriptor(proto, i);\n                            }\n                            if (attrs && attrs.set == null) {\n                                continue;\n                            }\n                            child[i] = _clone(parent[i], depth - 1);\n                        }\n                        if (Object.getOwnPropertySymbols) {\n                            var symbols = Object.getOwnPropertySymbols(parent);\n                            for(var i = 0; i < symbols.length; i++){\n                                // Don't need to worry about cloning a symbol because it is a primitive,\n                                // like a number or string.\n                                var symbol = symbols[i];\n                                var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n                                if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n                                    continue;\n                                }\n                                child[symbol] = _clone(parent[symbol], depth - 1);\n                                if (!descriptor.enumerable) {\n                                    Object.defineProperty(child, symbol, {\n                                        enumerable: false\n                                    });\n                                }\n                            }\n                        }\n                        if (includeNonEnumerable) {\n                            var allPropertyNames = Object.getOwnPropertyNames(parent);\n                            for(var i = 0; i < allPropertyNames.length; i++){\n                                var propertyName = allPropertyNames[i];\n                                var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n                                if (descriptor && descriptor.enumerable) {\n                                    continue;\n                                }\n                                child[propertyName] = _clone(parent[propertyName], depth - 1);\n                                Object.defineProperty(child, propertyName, {\n                                    enumerable: false\n                                });\n                            }\n                        }\n                        return child;\n                    }\n                    return _clone(parent, depth);\n                }\n                /**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */ clone.clonePrototype = function clonePrototype(parent) {\n                    if (parent === null) return null;\n                    var c = function() {};\n                    c.prototype = parent;\n                    return new c();\n                };\n                // private utility functions\n                function __objToStr(o) {\n                    return Object.prototype.toString.call(o);\n                }\n                clone.__objToStr = __objToStr;\n                function __isDate(o) {\n                    return typeof o === \"object\" && __objToStr(o) === \"[object Date]\";\n                }\n                clone.__isDate = __isDate;\n                function __isArray(o) {\n                    return typeof o === \"object\" && __objToStr(o) === \"[object Array]\";\n                }\n                clone.__isArray = __isArray;\n                function __isRegExp(o) {\n                    return typeof o === \"object\" && __objToStr(o) === \"[object RegExp]\";\n                }\n                clone.__isRegExp = __isRegExp;\n                function __getRegExpFlags(re) {\n                    var flags = \"\";\n                    if (re.global) flags += \"g\";\n                    if (re.ignoreCase) flags += \"i\";\n                    if (re.multiline) flags += \"m\";\n                    return flags;\n                }\n                clone.__getRegExpFlags = __getRegExpFlags;\n                return clone;\n            }();\n            if (typeof module1 === \"object\" && module1.exports) {\n                module1.exports = clone;\n            }\n        /***/ },\n        /* 22 */ /***/ function(module1, exports1, __nested_webpack_require_222007__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_222007__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _emitter = __nested_webpack_require_222007__(8);\n            var _emitter2 = _interopRequireDefault(_emitter);\n            var _block = __nested_webpack_require_222007__(4);\n            var _block2 = _interopRequireDefault(_block);\n            var _break = __nested_webpack_require_222007__(16);\n            var _break2 = _interopRequireDefault(_break);\n            var _code = __nested_webpack_require_222007__(13);\n            var _code2 = _interopRequireDefault(_code);\n            var _container = __nested_webpack_require_222007__(25);\n            var _container2 = _interopRequireDefault(_container);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            function isLine(blot) {\n                return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;\n            }\n            var Scroll = function(_Parchment$Scroll) {\n                _inherits(Scroll, _Parchment$Scroll);\n                function Scroll(domNode, config) {\n                    _classCallCheck(this, Scroll);\n                    var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));\n                    _this.emitter = config.emitter;\n                    if (Array.isArray(config.whitelist)) {\n                        _this.whitelist = config.whitelist.reduce(function(whitelist, format) {\n                            whitelist[format] = true;\n                            return whitelist;\n                        }, {});\n                    }\n                    // Some reason fixes composition issues with character languages in Windows/Chrome, Safari\n                    _this.domNode.addEventListener(\"DOMNodeInserted\", function() {});\n                    _this.optimize();\n                    _this.enable();\n                    return _this;\n                }\n                _createClass(Scroll, [\n                    {\n                        key: \"batchStart\",\n                        value: function batchStart() {\n                            this.batch = true;\n                        }\n                    },\n                    {\n                        key: \"batchEnd\",\n                        value: function batchEnd() {\n                            this.batch = false;\n                            this.optimize();\n                        }\n                    },\n                    {\n                        key: \"deleteAt\",\n                        value: function deleteAt(index, length) {\n                            var _line = this.line(index), _line2 = _slicedToArray(_line, 2), first = _line2[0], offset = _line2[1];\n                            var _line3 = this.line(index + length), _line4 = _slicedToArray(_line3, 1), last = _line4[0];\n                            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"deleteAt\", this).call(this, index, length);\n                            if (last != null && first !== last && offset > 0) {\n                                if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {\n                                    this.optimize();\n                                    return;\n                                }\n                                if (first instanceof _code2.default) {\n                                    var newlineIndex = first.newlineIndex(first.length(), true);\n                                    if (newlineIndex > -1) {\n                                        first = first.split(newlineIndex + 1);\n                                        if (first === last) {\n                                            this.optimize();\n                                            return;\n                                        }\n                                    }\n                                } else if (last instanceof _code2.default) {\n                                    var _newlineIndex = last.newlineIndex(0);\n                                    if (_newlineIndex > -1) {\n                                        last.split(_newlineIndex + 1);\n                                    }\n                                }\n                                var ref = last.children.head instanceof _break2.default ? null : last.children.head;\n                                first.moveChildren(last, ref);\n                                first.remove();\n                            }\n                            this.optimize();\n                        }\n                    },\n                    {\n                        key: \"enable\",\n                        value: function enable() {\n                            var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n                            this.domNode.setAttribute(\"contenteditable\", enabled);\n                        }\n                    },\n                    {\n                        key: \"formatAt\",\n                        value: function formatAt(index, length, format, value) {\n                            if (this.whitelist != null && !this.whitelist[format]) return;\n                            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"formatAt\", this).call(this, index, length, format, value);\n                            this.optimize();\n                        }\n                    },\n                    {\n                        key: \"insertAt\",\n                        value: function insertAt(index, value, def) {\n                            if (def != null && this.whitelist != null && !this.whitelist[value]) return;\n                            if (index >= this.length()) {\n                                if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {\n                                    var blot = _parchment2.default.create(this.statics.defaultChild);\n                                    this.appendChild(blot);\n                                    if (def == null && value.endsWith(\"\\n\")) {\n                                        value = value.slice(0, -1);\n                                    }\n                                    blot.insertAt(0, value, def);\n                                } else {\n                                    var embed = _parchment2.default.create(value, def);\n                                    this.appendChild(embed);\n                                }\n                            } else {\n                                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"insertAt\", this).call(this, index, value, def);\n                            }\n                            this.optimize();\n                        }\n                    },\n                    {\n                        key: \"insertBefore\",\n                        value: function insertBefore(blot, ref) {\n                            if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {\n                                var wrapper = _parchment2.default.create(this.statics.defaultChild);\n                                wrapper.appendChild(blot);\n                                blot = wrapper;\n                            }\n                            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"insertBefore\", this).call(this, blot, ref);\n                        }\n                    },\n                    {\n                        key: \"leaf\",\n                        value: function leaf(index) {\n                            return this.path(index).pop() || [\n                                null,\n                                -1\n                            ];\n                        }\n                    },\n                    {\n                        key: \"line\",\n                        value: function line(index) {\n                            if (index === this.length()) {\n                                return this.line(index - 1);\n                            }\n                            return this.descendant(isLine, index);\n                        }\n                    },\n                    {\n                        key: \"lines\",\n                        value: function lines() {\n                            var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n                            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n                            var getLines = function getLines(blot, index, length) {\n                                var lines = [], lengthLeft = length;\n                                blot.children.forEachAt(index, length, function(child, index, length) {\n                                    if (isLine(child)) {\n                                        lines.push(child);\n                                    } else if (child instanceof _parchment2.default.Container) {\n                                        lines = lines.concat(getLines(child, index, lengthLeft));\n                                    }\n                                    lengthLeft -= length;\n                                });\n                                return lines;\n                            };\n                            return getLines(this, index, length);\n                        }\n                    },\n                    {\n                        key: \"optimize\",\n                        value: function optimize() {\n                            var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n                            var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                            if (this.batch === true) return;\n                            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"optimize\", this).call(this, mutations, context);\n                            if (mutations.length > 0) {\n                                this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);\n                            }\n                        }\n                    },\n                    {\n                        key: \"path\",\n                        value: function path(index) {\n                            return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"path\", this).call(this, index).slice(1); // Exclude self\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update(mutations) {\n                            if (this.batch === true) return;\n                            var source = _emitter2.default.sources.USER;\n                            if (typeof mutations === \"string\") {\n                                source = mutations;\n                            }\n                            if (!Array.isArray(mutations)) {\n                                mutations = this.observer.takeRecords();\n                            }\n                            if (mutations.length > 0) {\n                                this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);\n                            }\n                            _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), \"update\", this).call(this, mutations.concat([])); // pass copy\n                            if (mutations.length > 0) {\n                                this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);\n                            }\n                        }\n                    }\n                ]);\n                return Scroll;\n            }(_parchment2.default.Scroll);\n            Scroll.blotName = \"scroll\";\n            Scroll.className = \"ql-editor\";\n            Scroll.tagName = \"DIV\";\n            Scroll.defaultChild = \"block\";\n            Scroll.allowedChildren = [\n                _block2.default,\n                _block.BlockEmbed,\n                _container2.default\n            ];\n            exports1.default = Scroll;\n        /***/ },\n        /* 23 */ /***/ function(module1, exports1, __nested_webpack_require_238923__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.SHORTKEY = exports1.default = undefined;\n            var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _clone = __nested_webpack_require_238923__(21);\n            var _clone2 = _interopRequireDefault(_clone);\n            var _deepEqual = __nested_webpack_require_238923__(11);\n            var _deepEqual2 = _interopRequireDefault(_deepEqual);\n            var _extend = __nested_webpack_require_238923__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _quillDelta = __nested_webpack_require_238923__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _op = __nested_webpack_require_238923__(20);\n            var _op2 = _interopRequireDefault(_op);\n            var _parchment = __nested_webpack_require_238923__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_238923__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _logger = __nested_webpack_require_238923__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            var _module = __nested_webpack_require_238923__(9);\n            var _module2 = _interopRequireDefault(_module);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var debug = (0, _logger2.default)(\"quill:keyboard\");\n            var SHORTKEY = /Mac/i.test(navigator.platform) ? \"metaKey\" : \"ctrlKey\";\n            var Keyboard = function(_Module) {\n                _inherits(Keyboard, _Module);\n                _createClass(Keyboard, null, [\n                    {\n                        key: \"match\",\n                        value: function match(evt, binding) {\n                            binding = normalize(binding);\n                            if ([\n                                \"altKey\",\n                                \"ctrlKey\",\n                                \"metaKey\",\n                                \"shiftKey\"\n                            ].some(function(key) {\n                                return !!binding[key] !== evt[key] && binding[key] !== null;\n                            })) {\n                                return false;\n                            }\n                            return binding.key === (evt.which || evt.keyCode);\n                        }\n                    }\n                ]);\n                function Keyboard(quill, options) {\n                    _classCallCheck(this, Keyboard);\n                    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));\n                    _this.bindings = {};\n                    Object.keys(_this.options.bindings).forEach(function(name) {\n                        if (name === \"list autofill\" && quill.scroll.whitelist != null && !quill.scroll.whitelist[\"list\"]) {\n                            return;\n                        }\n                        if (_this.options.bindings[name]) {\n                            _this.addBinding(_this.options.bindings[name]);\n                        }\n                    });\n                    _this.addBinding({\n                        key: Keyboard.keys.ENTER,\n                        shiftKey: null\n                    }, handleEnter);\n                    _this.addBinding({\n                        key: Keyboard.keys.ENTER,\n                        metaKey: null,\n                        ctrlKey: null,\n                        altKey: null\n                    }, function() {});\n                    if (/Firefox/i.test(navigator.userAgent)) {\n                        // Need to handle delete and backspace for Firefox in the general case #1171\n                        _this.addBinding({\n                            key: Keyboard.keys.BACKSPACE\n                        }, {\n                            collapsed: true\n                        }, handleBackspace);\n                        _this.addBinding({\n                            key: Keyboard.keys.DELETE\n                        }, {\n                            collapsed: true\n                        }, handleDelete);\n                    } else {\n                        _this.addBinding({\n                            key: Keyboard.keys.BACKSPACE\n                        }, {\n                            collapsed: true,\n                            prefix: /^.?$/\n                        }, handleBackspace);\n                        _this.addBinding({\n                            key: Keyboard.keys.DELETE\n                        }, {\n                            collapsed: true,\n                            suffix: /^.?$/\n                        }, handleDelete);\n                    }\n                    _this.addBinding({\n                        key: Keyboard.keys.BACKSPACE\n                    }, {\n                        collapsed: false\n                    }, handleDeleteRange);\n                    _this.addBinding({\n                        key: Keyboard.keys.DELETE\n                    }, {\n                        collapsed: false\n                    }, handleDeleteRange);\n                    _this.addBinding({\n                        key: Keyboard.keys.BACKSPACE,\n                        altKey: null,\n                        ctrlKey: null,\n                        metaKey: null,\n                        shiftKey: null\n                    }, {\n                        collapsed: true,\n                        offset: 0\n                    }, handleBackspace);\n                    _this.listen();\n                    return _this;\n                }\n                _createClass(Keyboard, [\n                    {\n                        key: \"addBinding\",\n                        value: function addBinding(key) {\n                            var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n                            var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n                            var binding = normalize(key);\n                            if (binding == null || binding.key == null) {\n                                return debug.warn(\"Attempted to add invalid keyboard binding\", binding);\n                            }\n                            if (typeof context === \"function\") {\n                                context = {\n                                    handler: context\n                                };\n                            }\n                            if (typeof handler === \"function\") {\n                                handler = {\n                                    handler: handler\n                                };\n                            }\n                            binding = (0, _extend2.default)(binding, context, handler);\n                            this.bindings[binding.key] = this.bindings[binding.key] || [];\n                            this.bindings[binding.key].push(binding);\n                        }\n                    },\n                    {\n                        key: \"listen\",\n                        value: function listen() {\n                            var _this2 = this;\n                            this.quill.root.addEventListener(\"keydown\", function(evt) {\n                                if (evt.defaultPrevented) return;\n                                var which = evt.which || evt.keyCode;\n                                var bindings = (_this2.bindings[which] || []).filter(function(binding) {\n                                    return Keyboard.match(evt, binding);\n                                });\n                                if (bindings.length === 0) return;\n                                var range = _this2.quill.getSelection();\n                                if (range == null || !_this2.quill.hasFocus()) return;\n                                var _quill$getLine = _this2.quill.getLine(range.index), _quill$getLine2 = _slicedToArray(_quill$getLine, 2), line = _quill$getLine2[0], offset = _quill$getLine2[1];\n                                var _quill$getLeaf = _this2.quill.getLeaf(range.index), _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2), leafStart = _quill$getLeaf2[0], offsetStart = _quill$getLeaf2[1];\n                                var _ref = range.length === 0 ? [\n                                    leafStart,\n                                    offsetStart\n                                ] : _this2.quill.getLeaf(range.index + range.length), _ref2 = _slicedToArray(_ref, 2), leafEnd = _ref2[0], offsetEnd = _ref2[1];\n                                var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : \"\";\n                                var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : \"\";\n                                var curContext = {\n                                    collapsed: range.length === 0,\n                                    empty: range.length === 0 && line.length() <= 1,\n                                    format: _this2.quill.getFormat(range),\n                                    offset: offset,\n                                    prefix: prefixText,\n                                    suffix: suffixText\n                                };\n                                var prevented = bindings.some(function(binding) {\n                                    if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;\n                                    if (binding.empty != null && binding.empty !== curContext.empty) return false;\n                                    if (binding.offset != null && binding.offset !== curContext.offset) return false;\n                                    if (Array.isArray(binding.format)) {\n                                        // any format is present\n                                        if (binding.format.every(function(name) {\n                                            return curContext.format[name] == null;\n                                        })) {\n                                            return false;\n                                        }\n                                    } else if (_typeof(binding.format) === \"object\") {\n                                        // all formats must match\n                                        if (!Object.keys(binding.format).every(function(name) {\n                                            if (binding.format[name] === true) return curContext.format[name] != null;\n                                            if (binding.format[name] === false) return curContext.format[name] == null;\n                                            return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);\n                                        })) {\n                                            return false;\n                                        }\n                                    }\n                                    if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;\n                                    if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;\n                                    return binding.handler.call(_this2, range, curContext) !== true;\n                                });\n                                if (prevented) {\n                                    evt.preventDefault();\n                                }\n                            });\n                        }\n                    }\n                ]);\n                return Keyboard;\n            }(_module2.default);\n            Keyboard.keys = {\n                BACKSPACE: 8,\n                TAB: 9,\n                ENTER: 13,\n                ESCAPE: 27,\n                LEFT: 37,\n                UP: 38,\n                RIGHT: 39,\n                DOWN: 40,\n                DELETE: 46\n            };\n            Keyboard.DEFAULTS = {\n                bindings: {\n                    \"bold\": makeFormatHandler(\"bold\"),\n                    \"italic\": makeFormatHandler(\"italic\"),\n                    \"underline\": makeFormatHandler(\"underline\"),\n                    \"indent\": {\n                        // highlight tab or tab at beginning of list, indent or blockquote\n                        key: Keyboard.keys.TAB,\n                        format: [\n                            \"blockquote\",\n                            \"indent\",\n                            \"list\"\n                        ],\n                        handler: function handler(range, context) {\n                            if (context.collapsed && context.offset !== 0) return true;\n                            this.quill.format(\"indent\", \"+1\", _quill2.default.sources.USER);\n                        }\n                    },\n                    \"outdent\": {\n                        key: Keyboard.keys.TAB,\n                        shiftKey: true,\n                        format: [\n                            \"blockquote\",\n                            \"indent\",\n                            \"list\"\n                        ],\n                        // highlight tab or tab at beginning of list, indent or blockquote\n                        handler: function handler(range, context) {\n                            if (context.collapsed && context.offset !== 0) return true;\n                            this.quill.format(\"indent\", \"-1\", _quill2.default.sources.USER);\n                        }\n                    },\n                    \"outdent backspace\": {\n                        key: Keyboard.keys.BACKSPACE,\n                        collapsed: true,\n                        shiftKey: null,\n                        metaKey: null,\n                        ctrlKey: null,\n                        altKey: null,\n                        format: [\n                            \"indent\",\n                            \"list\"\n                        ],\n                        offset: 0,\n                        handler: function handler(range, context) {\n                            if (context.format.indent != null) {\n                                this.quill.format(\"indent\", \"-1\", _quill2.default.sources.USER);\n                            } else if (context.format.list != null) {\n                                this.quill.format(\"list\", false, _quill2.default.sources.USER);\n                            }\n                        }\n                    },\n                    \"indent code-block\": makeCodeBlockHandler(true),\n                    \"outdent code-block\": makeCodeBlockHandler(false),\n                    \"remove tab\": {\n                        key: Keyboard.keys.TAB,\n                        shiftKey: true,\n                        collapsed: true,\n                        prefix: /\\t$/,\n                        handler: function handler(range) {\n                            this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);\n                        }\n                    },\n                    \"tab\": {\n                        key: Keyboard.keys.TAB,\n                        handler: function handler(range) {\n                            this.quill.history.cutoff();\n                            var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert(\"\t\");\n                            this.quill.updateContents(delta, _quill2.default.sources.USER);\n                            this.quill.history.cutoff();\n                            this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n                        }\n                    },\n                    \"list empty enter\": {\n                        key: Keyboard.keys.ENTER,\n                        collapsed: true,\n                        format: [\n                            \"list\"\n                        ],\n                        empty: true,\n                        handler: function handler(range, context) {\n                            this.quill.format(\"list\", false, _quill2.default.sources.USER);\n                            if (context.format.indent) {\n                                this.quill.format(\"indent\", false, _quill2.default.sources.USER);\n                            }\n                        }\n                    },\n                    \"checklist enter\": {\n                        key: Keyboard.keys.ENTER,\n                        collapsed: true,\n                        format: {\n                            list: \"checked\"\n                        },\n                        handler: function handler(range) {\n                            var _quill$getLine3 = this.quill.getLine(range.index), _quill$getLine4 = _slicedToArray(_quill$getLine3, 2), line = _quill$getLine4[0], offset = _quill$getLine4[1];\n                            var formats = (0, _extend2.default)({}, line.formats(), {\n                                list: \"checked\"\n                            });\n                            var delta = new _quillDelta2.default().retain(range.index).insert(\"\\n\", formats).retain(line.length() - offset - 1).retain(1, {\n                                list: \"unchecked\"\n                            });\n                            this.quill.updateContents(delta, _quill2.default.sources.USER);\n                            this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n                            this.quill.scrollIntoView();\n                        }\n                    },\n                    \"header enter\": {\n                        key: Keyboard.keys.ENTER,\n                        collapsed: true,\n                        format: [\n                            \"header\"\n                        ],\n                        suffix: /^$/,\n                        handler: function handler(range, context) {\n                            var _quill$getLine5 = this.quill.getLine(range.index), _quill$getLine6 = _slicedToArray(_quill$getLine5, 2), line = _quill$getLine6[0], offset = _quill$getLine6[1];\n                            var delta = new _quillDelta2.default().retain(range.index).insert(\"\\n\", context.format).retain(line.length() - offset - 1).retain(1, {\n                                header: null\n                            });\n                            this.quill.updateContents(delta, _quill2.default.sources.USER);\n                            this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n                            this.quill.scrollIntoView();\n                        }\n                    },\n                    \"list autofill\": {\n                        key: \" \",\n                        collapsed: true,\n                        format: {\n                            list: false\n                        },\n                        prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n                        handler: function handler(range, context) {\n                            var length = context.prefix.length;\n                            var _quill$getLine7 = this.quill.getLine(range.index), _quill$getLine8 = _slicedToArray(_quill$getLine7, 2), line = _quill$getLine8[0], offset = _quill$getLine8[1];\n                            if (offset > length) return true;\n                            var value = void 0;\n                            switch(context.prefix.trim()){\n                                case \"[]\":\n                                case \"[ ]\":\n                                    value = \"unchecked\";\n                                    break;\n                                case \"[x]\":\n                                    value = \"checked\";\n                                    break;\n                                case \"-\":\n                                case \"*\":\n                                    value = \"bullet\";\n                                    break;\n                                default:\n                                    value = \"ordered\";\n                            }\n                            this.quill.insertText(range.index, \" \", _quill2.default.sources.USER);\n                            this.quill.history.cutoff();\n                            var delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, {\n                                list: value\n                            });\n                            this.quill.updateContents(delta, _quill2.default.sources.USER);\n                            this.quill.history.cutoff();\n                            this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);\n                        }\n                    },\n                    \"code exit\": {\n                        key: Keyboard.keys.ENTER,\n                        collapsed: true,\n                        format: [\n                            \"code-block\"\n                        ],\n                        prefix: /\\n\\n$/,\n                        suffix: /^\\s+$/,\n                        handler: function handler(range) {\n                            var _quill$getLine9 = this.quill.getLine(range.index), _quill$getLine10 = _slicedToArray(_quill$getLine9, 2), line = _quill$getLine10[0], offset = _quill$getLine10[1];\n                            var delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, {\n                                \"code-block\": null\n                            }).delete(1);\n                            this.quill.updateContents(delta, _quill2.default.sources.USER);\n                        }\n                    },\n                    \"embed left\": makeEmbedArrowHandler(Keyboard.keys.LEFT, false),\n                    \"embed left shift\": makeEmbedArrowHandler(Keyboard.keys.LEFT, true),\n                    \"embed right\": makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),\n                    \"embed right shift\": makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)\n                }\n            };\n            function makeEmbedArrowHandler(key, shiftKey) {\n                var _ref3;\n                var where = key === Keyboard.keys.LEFT ? \"prefix\" : \"suffix\";\n                return _ref3 = {\n                    key: key,\n                    shiftKey: shiftKey,\n                    altKey: null\n                }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, \"handler\", function handler(range) {\n                    var index = range.index;\n                    if (key === Keyboard.keys.RIGHT) {\n                        index += range.length + 1;\n                    }\n                    var _quill$getLeaf3 = this.quill.getLeaf(index), _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1), leaf = _quill$getLeaf4[0];\n                    if (!(leaf instanceof _parchment2.default.Embed)) return true;\n                    if (key === Keyboard.keys.LEFT) {\n                        if (shiftKey) {\n                            this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);\n                        } else {\n                            this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);\n                        }\n                    } else {\n                        if (shiftKey) {\n                            this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);\n                        } else {\n                            this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);\n                        }\n                    }\n                    return false;\n                }), _ref3;\n            }\n            function handleBackspace(range, context) {\n                if (range.index === 0 || this.quill.getLength() <= 1) return;\n                var _quill$getLine11 = this.quill.getLine(range.index), _quill$getLine12 = _slicedToArray(_quill$getLine11, 1), line = _quill$getLine12[0];\n                var formats = {};\n                if (context.offset === 0) {\n                    var _quill$getLine13 = this.quill.getLine(range.index - 1), _quill$getLine14 = _slicedToArray(_quill$getLine13, 1), prev = _quill$getLine14[0];\n                    if (prev != null && prev.length() > 1) {\n                        var curFormats = line.formats();\n                        var prevFormats = this.quill.getFormat(range.index - 1, 1);\n                        formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};\n                    }\n                }\n                // Check for astral symbols\n                var length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix) ? 2 : 1;\n                this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);\n                if (Object.keys(formats).length > 0) {\n                    this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);\n                }\n                this.quill.focus();\n            }\n            function handleDelete(range, context) {\n                // Check for astral symbols\n                var length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix) ? 2 : 1;\n                if (range.index >= this.quill.getLength() - length) return;\n                var formats = {}, nextLength = 0;\n                var _quill$getLine15 = this.quill.getLine(range.index), _quill$getLine16 = _slicedToArray(_quill$getLine15, 1), line = _quill$getLine16[0];\n                if (context.offset >= line.length() - 1) {\n                    var _quill$getLine17 = this.quill.getLine(range.index + 1), _quill$getLine18 = _slicedToArray(_quill$getLine17, 1), next = _quill$getLine18[0];\n                    if (next) {\n                        var curFormats = line.formats();\n                        var nextFormats = this.quill.getFormat(range.index, 1);\n                        formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};\n                        nextLength = next.length();\n                    }\n                }\n                this.quill.deleteText(range.index, length, _quill2.default.sources.USER);\n                if (Object.keys(formats).length > 0) {\n                    this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);\n                }\n            }\n            function handleDeleteRange(range) {\n                var lines = this.quill.getLines(range);\n                var formats = {};\n                if (lines.length > 1) {\n                    var firstFormats = lines[0].formats();\n                    var lastFormats = lines[lines.length - 1].formats();\n                    formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};\n                }\n                this.quill.deleteText(range, _quill2.default.sources.USER);\n                if (Object.keys(formats).length > 0) {\n                    this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);\n                }\n                this.quill.setSelection(range.index, _quill2.default.sources.SILENT);\n                this.quill.focus();\n            }\n            function handleEnter(range, context) {\n                var _this3 = this;\n                if (range.length > 0) {\n                    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change\n                }\n                var lineFormats = Object.keys(context.format).reduce(function(lineFormats, format) {\n                    if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {\n                        lineFormats[format] = context.format[format];\n                    }\n                    return lineFormats;\n                }, {});\n                this.quill.insertText(range.index, \"\\n\", lineFormats, _quill2.default.sources.USER);\n                // Earlier scroll.deleteAt might have messed up our selection,\n                // so insertText's built in selection preservation is not reliable\n                this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);\n                this.quill.focus();\n                Object.keys(context.format).forEach(function(name) {\n                    if (lineFormats[name] != null) return;\n                    if (Array.isArray(context.format[name])) return;\n                    if (name === \"link\") return;\n                    _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);\n                });\n            }\n            function makeCodeBlockHandler(indent) {\n                return {\n                    key: Keyboard.keys.TAB,\n                    shiftKey: !indent,\n                    format: {\n                        \"code-block\": true\n                    },\n                    handler: function handler(range) {\n                        var CodeBlock = _parchment2.default.query(\"code-block\");\n                        var index = range.index, length = range.length;\n                        var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), block = _quill$scroll$descend2[0], offset = _quill$scroll$descend2[1];\n                        if (block == null) return;\n                        var scrollIndex = this.quill.getIndex(block);\n                        var start = block.newlineIndex(offset, true) + 1;\n                        var end = block.newlineIndex(scrollIndex + offset + length);\n                        var lines = block.domNode.textContent.slice(start, end).split(\"\\n\");\n                        offset = 0;\n                        lines.forEach(function(line, i) {\n                            if (indent) {\n                                block.insertAt(start + offset, CodeBlock.TAB);\n                                offset += CodeBlock.TAB.length;\n                                if (i === 0) {\n                                    index += CodeBlock.TAB.length;\n                                } else {\n                                    length += CodeBlock.TAB.length;\n                                }\n                            } else if (line.startsWith(CodeBlock.TAB)) {\n                                block.deleteAt(start + offset, CodeBlock.TAB.length);\n                                offset -= CodeBlock.TAB.length;\n                                if (i === 0) {\n                                    index -= CodeBlock.TAB.length;\n                                } else {\n                                    length -= CodeBlock.TAB.length;\n                                }\n                            }\n                            offset += line.length + 1;\n                        });\n                        this.quill.update(_quill2.default.sources.USER);\n                        this.quill.setSelection(index, length, _quill2.default.sources.SILENT);\n                    }\n                };\n            }\n            function makeFormatHandler(format) {\n                return {\n                    key: format[0].toUpperCase(),\n                    shortKey: true,\n                    handler: function handler(range, context) {\n                        this.quill.format(format, !context.format[format], _quill2.default.sources.USER);\n                    }\n                };\n            }\n            function normalize(binding) {\n                if (typeof binding === \"string\" || typeof binding === \"number\") {\n                    return normalize({\n                        key: binding\n                    });\n                }\n                if ((typeof binding === \"undefined\" ? \"undefined\" : _typeof(binding)) === \"object\") {\n                    binding = (0, _clone2.default)(binding, false);\n                }\n                if (typeof binding.key === \"string\") {\n                    if (Keyboard.keys[binding.key.toUpperCase()] != null) {\n                        binding.key = Keyboard.keys[binding.key.toUpperCase()];\n                    } else if (binding.key.length === 1) {\n                        binding.key = binding.key.toUpperCase().charCodeAt(0);\n                    } else {\n                        return null;\n                    }\n                }\n                if (binding.shortKey) {\n                    binding[SHORTKEY] = binding.shortKey;\n                    delete binding.shortKey;\n                }\n                return binding;\n            }\n            exports1.default = Keyboard;\n            exports1.SHORTKEY = SHORTKEY;\n        /***/ },\n        /* 24 */ /***/ function(module1, exports1, __nested_webpack_require_275926__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _parchment = __nested_webpack_require_275926__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _text = __nested_webpack_require_275926__(7);\n            var _text2 = _interopRequireDefault(_text);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Cursor = function(_Parchment$Embed) {\n                _inherits(Cursor, _Parchment$Embed);\n                _createClass(Cursor, null, [\n                    {\n                        key: \"value\",\n                        value: function value() {\n                            return undefined;\n                        }\n                    }\n                ]);\n                function Cursor(domNode, selection) {\n                    _classCallCheck(this, Cursor);\n                    var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));\n                    _this.selection = selection;\n                    _this.textNode = document.createTextNode(Cursor.CONTENTS);\n                    _this.domNode.appendChild(_this.textNode);\n                    _this._length = 0;\n                    return _this;\n                }\n                _createClass(Cursor, [\n                    {\n                        key: \"detach\",\n                        value: function detach() {\n                            // super.detach() will also clear domNode.__blot\n                            if (this.parent != null) this.parent.removeChild(this);\n                        }\n                    },\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (this._length !== 0) {\n                                return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), \"format\", this).call(this, name, value);\n                            }\n                            var target = this, index = 0;\n                            while(target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT){\n                                index += target.offset(target.parent);\n                                target = target.parent;\n                            }\n                            if (target != null) {\n                                this._length = Cursor.CONTENTS.length;\n                                target.optimize();\n                                target.formatAt(index, Cursor.CONTENTS.length, name, value);\n                                this._length = 0;\n                            }\n                        }\n                    },\n                    {\n                        key: \"index\",\n                        value: function index(node, offset) {\n                            if (node === this.textNode) return 0;\n                            return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), \"index\", this).call(this, node, offset);\n                        }\n                    },\n                    {\n                        key: \"length\",\n                        value: function length() {\n                            return this._length;\n                        }\n                    },\n                    {\n                        key: \"position\",\n                        value: function position() {\n                            return [\n                                this.textNode,\n                                this.textNode.data.length\n                            ];\n                        }\n                    },\n                    {\n                        key: \"remove\",\n                        value: function remove() {\n                            _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), \"remove\", this).call(this);\n                            this.parent = null;\n                        }\n                    },\n                    {\n                        key: \"restore\",\n                        value: function restore() {\n                            if (this.selection.composing || this.parent == null) return;\n                            var textNode = this.textNode;\n                            var range = this.selection.getNativeRange();\n                            var restoreText = void 0, start = void 0, end = void 0;\n                            if (range != null && range.start.node === textNode && range.end.node === textNode) {\n                                var _ref = [\n                                    textNode,\n                                    range.start.offset,\n                                    range.end.offset\n                                ];\n                                restoreText = _ref[0];\n                                start = _ref[1];\n                                end = _ref[2];\n                            }\n                            // Link format will insert text outside of anchor tag\n                            while(this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode){\n                                this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);\n                            }\n                            if (this.textNode.data !== Cursor.CONTENTS) {\n                                var text = this.textNode.data.split(Cursor.CONTENTS).join(\"\");\n                                if (this.next instanceof _text2.default) {\n                                    restoreText = this.next.domNode;\n                                    this.next.insertAt(0, text);\n                                    this.textNode.data = Cursor.CONTENTS;\n                                } else {\n                                    this.textNode.data = text;\n                                    this.parent.insertBefore(_parchment2.default.create(this.textNode), this);\n                                    this.textNode = document.createTextNode(Cursor.CONTENTS);\n                                    this.domNode.appendChild(this.textNode);\n                                }\n                            }\n                            this.remove();\n                            if (start != null) {\n                                var _map = [\n                                    start,\n                                    end\n                                ].map(function(offset) {\n                                    return Math.max(0, Math.min(restoreText.data.length, offset - 1));\n                                });\n                                var _map2 = _slicedToArray(_map, 2);\n                                start = _map2[0];\n                                end = _map2[1];\n                                return {\n                                    startNode: restoreText,\n                                    startOffset: start,\n                                    endNode: restoreText,\n                                    endOffset: end\n                                };\n                            }\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update(mutations, context) {\n                            var _this2 = this;\n                            if (mutations.some(function(mutation) {\n                                return mutation.type === \"characterData\" && mutation.target === _this2.textNode;\n                            })) {\n                                var range = this.restore();\n                                if (range) context.range = range;\n                            }\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value() {\n                            return \"\";\n                        }\n                    }\n                ]);\n                return Cursor;\n            }(_parchment2.default.Embed);\n            Cursor.blotName = \"cursor\";\n            Cursor.className = \"ql-cursor\";\n            Cursor.tagName = \"span\";\n            Cursor.CONTENTS = \"\\uFEFF\"; // Zero width no break space\n            exports1.default = Cursor;\n        /***/ },\n        /* 25 */ /***/ function(module1, exports1, __nested_webpack_require_288843__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _parchment = __nested_webpack_require_288843__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _block = __nested_webpack_require_288843__(4);\n            var _block2 = _interopRequireDefault(_block);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Container = function(_Parchment$Container) {\n                _inherits(Container, _Parchment$Container);\n                function Container() {\n                    _classCallCheck(this, Container);\n                    return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));\n                }\n                return Container;\n            }(_parchment2.default.Container);\n            Container.allowedChildren = [\n                _block2.default,\n                _block.BlockEmbed,\n                Container\n            ];\n            exports1.default = Container;\n        /***/ },\n        /* 26 */ /***/ function(module1, exports1, __nested_webpack_require_291431__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.ColorStyle = exports1.ColorClass = exports1.ColorAttributor = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_291431__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ColorAttributor = function(_Parchment$Attributor) {\n                _inherits(ColorAttributor, _Parchment$Attributor);\n                function ColorAttributor() {\n                    _classCallCheck(this, ColorAttributor);\n                    return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));\n                }\n                _createClass(ColorAttributor, [\n                    {\n                        key: \"value\",\n                        value: function value(domNode) {\n                            var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), \"value\", this).call(this, domNode);\n                            if (!value.startsWith(\"rgb(\")) return value;\n                            value = value.replace(/^[^\\d]+/, \"\").replace(/[^\\d]+$/, \"\");\n                            return \"#\" + value.split(\",\").map(function(component) {\n                                return (\"00\" + parseInt(component).toString(16)).slice(-2);\n                            }).join(\"\");\n                        }\n                    }\n                ]);\n                return ColorAttributor;\n            }(_parchment2.default.Attributor.Style);\n            var ColorClass = new _parchment2.default.Attributor.Class(\"color\", \"ql-color\", {\n                scope: _parchment2.default.Scope.INLINE\n            });\n            var ColorStyle = new ColorAttributor(\"color\", \"color\", {\n                scope: _parchment2.default.Scope.INLINE\n            });\n            exports1.ColorAttributor = ColorAttributor;\n            exports1.ColorClass = ColorClass;\n            exports1.ColorStyle = ColorStyle;\n        /***/ },\n        /* 27 */ /***/ function(module1, exports1, __nested_webpack_require_296833__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.sanitize = exports1.default = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _inline = __nested_webpack_require_296833__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Link = function(_Inline) {\n                _inherits(Link, _Inline);\n                function Link() {\n                    _classCallCheck(this, Link);\n                    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));\n                }\n                _createClass(Link, [\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), \"format\", this).call(this, name, value);\n                            value = this.constructor.sanitize(value);\n                            this.domNode.setAttribute(\"href\", value);\n                        }\n                    }\n                ], [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), \"create\", this).call(this, value);\n                            value = this.sanitize(value);\n                            node.setAttribute(\"href\", value);\n                            node.setAttribute(\"rel\", \"noopener noreferrer\");\n                            node.setAttribute(\"target\", \"_blank\");\n                            return node;\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            return domNode.getAttribute(\"href\");\n                        }\n                    },\n                    {\n                        key: \"sanitize\",\n                        value: function sanitize(url) {\n                            return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n                        }\n                    }\n                ]);\n                return Link;\n            }(_inline2.default);\n            Link.blotName = \"link\";\n            Link.tagName = \"A\";\n            Link.SANITIZED_URL = \"about:blank\";\n            Link.PROTOCOL_WHITELIST = [\n                \"http\",\n                \"https\",\n                \"mailto\",\n                \"tel\"\n            ];\n            function _sanitize(url, protocols) {\n                var anchor = document.createElement(\"a\");\n                anchor.href = url;\n                var protocol = anchor.href.slice(0, anchor.href.indexOf(\":\"));\n                return protocols.indexOf(protocol) > -1;\n            }\n            exports1.default = Link;\n            exports1.sanitize = _sanitize;\n        /***/ },\n        /* 28 */ /***/ function(module1, exports1, __nested_webpack_require_303158__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _keyboard = __nested_webpack_require_303158__(23);\n            var _keyboard2 = _interopRequireDefault(_keyboard);\n            var _dropdown = __nested_webpack_require_303158__(107);\n            var _dropdown2 = _interopRequireDefault(_dropdown);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var optionsCounter = 0;\n            function toggleAriaAttribute(element, attribute) {\n                element.setAttribute(attribute, !(element.getAttribute(attribute) === \"true\"));\n            }\n            var Picker = function() {\n                function Picker(select) {\n                    var _this = this;\n                    _classCallCheck(this, Picker);\n                    this.select = select;\n                    this.container = document.createElement(\"span\");\n                    this.buildPicker();\n                    this.select.style.display = \"none\";\n                    this.select.parentNode.insertBefore(this.container, this.select);\n                    this.label.addEventListener(\"mousedown\", function() {\n                        _this.togglePicker();\n                    });\n                    this.label.addEventListener(\"keydown\", function(event) {\n                        switch(event.keyCode){\n                            // Allows the \"Enter\" key to open the picker\n                            case _keyboard2.default.keys.ENTER:\n                                _this.togglePicker();\n                                break;\n                            // Allows the \"Escape\" key to close the picker\n                            case _keyboard2.default.keys.ESCAPE:\n                                _this.escape();\n                                event.preventDefault();\n                                break;\n                            default:\n                        }\n                    });\n                    this.select.addEventListener(\"change\", this.update.bind(this));\n                }\n                _createClass(Picker, [\n                    {\n                        key: \"togglePicker\",\n                        value: function togglePicker() {\n                            this.container.classList.toggle(\"ql-expanded\");\n                            // Toggle aria-expanded and aria-hidden to make the picker accessible\n                            toggleAriaAttribute(this.label, \"aria-expanded\");\n                            toggleAriaAttribute(this.options, \"aria-hidden\");\n                        }\n                    },\n                    {\n                        key: \"buildItem\",\n                        value: function buildItem(option) {\n                            var _this2 = this;\n                            var item = document.createElement(\"span\");\n                            item.tabIndex = \"0\";\n                            item.setAttribute(\"role\", \"button\");\n                            item.classList.add(\"ql-picker-item\");\n                            if (option.hasAttribute(\"value\")) {\n                                item.setAttribute(\"data-value\", option.getAttribute(\"value\"));\n                            }\n                            if (option.textContent) {\n                                item.setAttribute(\"data-label\", option.textContent);\n                            }\n                            item.addEventListener(\"click\", function() {\n                                _this2.selectItem(item, true);\n                            });\n                            item.addEventListener(\"keydown\", function(event) {\n                                switch(event.keyCode){\n                                    // Allows the \"Enter\" key to select an item\n                                    case _keyboard2.default.keys.ENTER:\n                                        _this2.selectItem(item, true);\n                                        event.preventDefault();\n                                        break;\n                                    // Allows the \"Escape\" key to close the picker\n                                    case _keyboard2.default.keys.ESCAPE:\n                                        _this2.escape();\n                                        event.preventDefault();\n                                        break;\n                                    default:\n                                }\n                            });\n                            return item;\n                        }\n                    },\n                    {\n                        key: \"buildLabel\",\n                        value: function buildLabel() {\n                            var label = document.createElement(\"span\");\n                            label.classList.add(\"ql-picker-label\");\n                            label.innerHTML = _dropdown2.default;\n                            label.tabIndex = \"0\";\n                            label.setAttribute(\"role\", \"button\");\n                            label.setAttribute(\"aria-expanded\", \"false\");\n                            this.container.appendChild(label);\n                            return label;\n                        }\n                    },\n                    {\n                        key: \"buildOptions\",\n                        value: function buildOptions() {\n                            var _this3 = this;\n                            var options = document.createElement(\"span\");\n                            options.classList.add(\"ql-picker-options\");\n                            // Don't want screen readers to read this until options are visible\n                            options.setAttribute(\"aria-hidden\", \"true\");\n                            options.tabIndex = \"-1\";\n                            // Need a unique id for aria-controls\n                            options.id = \"ql-picker-options-\" + optionsCounter;\n                            optionsCounter += 1;\n                            this.label.setAttribute(\"aria-controls\", options.id);\n                            this.options = options;\n                            [].slice.call(this.select.options).forEach(function(option) {\n                                var item = _this3.buildItem(option);\n                                options.appendChild(item);\n                                if (option.selected === true) {\n                                    _this3.selectItem(item);\n                                }\n                            });\n                            this.container.appendChild(options);\n                        }\n                    },\n                    {\n                        key: \"buildPicker\",\n                        value: function buildPicker() {\n                            var _this4 = this;\n                            [].slice.call(this.select.attributes).forEach(function(item) {\n                                _this4.container.setAttribute(item.name, item.value);\n                            });\n                            this.container.classList.add(\"ql-picker\");\n                            this.label = this.buildLabel();\n                            this.buildOptions();\n                        }\n                    },\n                    {\n                        key: \"escape\",\n                        value: function escape() {\n                            var _this5 = this;\n                            // Close menu and return focus to trigger label\n                            this.close();\n                            // Need setTimeout for accessibility to ensure that the browser executes\n                            // focus on the next process thread and after any DOM content changes\n                            setTimeout(function() {\n                                return _this5.label.focus();\n                            }, 1);\n                        }\n                    },\n                    {\n                        key: \"close\",\n                        value: function close() {\n                            this.container.classList.remove(\"ql-expanded\");\n                            this.label.setAttribute(\"aria-expanded\", \"false\");\n                            this.options.setAttribute(\"aria-hidden\", \"true\");\n                        }\n                    },\n                    {\n                        key: \"selectItem\",\n                        value: function selectItem(item) {\n                            var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n                            var selected = this.container.querySelector(\".ql-selected\");\n                            if (item === selected) return;\n                            if (selected != null) {\n                                selected.classList.remove(\"ql-selected\");\n                            }\n                            if (item == null) return;\n                            item.classList.add(\"ql-selected\");\n                            this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);\n                            if (item.hasAttribute(\"data-value\")) {\n                                this.label.setAttribute(\"data-value\", item.getAttribute(\"data-value\"));\n                            } else {\n                                this.label.removeAttribute(\"data-value\");\n                            }\n                            if (item.hasAttribute(\"data-label\")) {\n                                this.label.setAttribute(\"data-label\", item.getAttribute(\"data-label\"));\n                            } else {\n                                this.label.removeAttribute(\"data-label\");\n                            }\n                            if (trigger) {\n                                if (typeof Event === \"function\") {\n                                    this.select.dispatchEvent(new Event(\"change\"));\n                                } else if ((typeof Event === \"undefined\" ? \"undefined\" : _typeof(Event)) === \"object\") {\n                                    // IE11\n                                    var event = document.createEvent(\"Event\");\n                                    event.initEvent(\"change\", true, true);\n                                    this.select.dispatchEvent(event);\n                                }\n                                this.close();\n                            }\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update() {\n                            var option = void 0;\n                            if (this.select.selectedIndex > -1) {\n                                var item = this.container.querySelector(\".ql-picker-options\").children[this.select.selectedIndex];\n                                option = this.select.options[this.select.selectedIndex];\n                                this.selectItem(item);\n                            } else {\n                                this.selectItem(null);\n                            }\n                            var isActive = option != null && option !== this.select.querySelector(\"option[selected]\");\n                            this.label.classList.toggle(\"ql-active\", isActive);\n                        }\n                    }\n                ]);\n                return Picker;\n            }();\n            exports1.default = Picker;\n        /***/ },\n        /* 29 */ /***/ function(module1, exports1, __nested_webpack_require_316188__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _parchment = __nested_webpack_require_316188__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_316188__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _block = __nested_webpack_require_316188__(4);\n            var _block2 = _interopRequireDefault(_block);\n            var _break = __nested_webpack_require_316188__(16);\n            var _break2 = _interopRequireDefault(_break);\n            var _container = __nested_webpack_require_316188__(25);\n            var _container2 = _interopRequireDefault(_container);\n            var _cursor = __nested_webpack_require_316188__(24);\n            var _cursor2 = _interopRequireDefault(_cursor);\n            var _embed = __nested_webpack_require_316188__(35);\n            var _embed2 = _interopRequireDefault(_embed);\n            var _inline = __nested_webpack_require_316188__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            var _scroll = __nested_webpack_require_316188__(22);\n            var _scroll2 = _interopRequireDefault(_scroll);\n            var _text = __nested_webpack_require_316188__(7);\n            var _text2 = _interopRequireDefault(_text);\n            var _clipboard = __nested_webpack_require_316188__(55);\n            var _clipboard2 = _interopRequireDefault(_clipboard);\n            var _history = __nested_webpack_require_316188__(42);\n            var _history2 = _interopRequireDefault(_history);\n            var _keyboard = __nested_webpack_require_316188__(23);\n            var _keyboard2 = _interopRequireDefault(_keyboard);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            _quill2.default.register({\n                \"blots/block\": _block2.default,\n                \"blots/block/embed\": _block.BlockEmbed,\n                \"blots/break\": _break2.default,\n                \"blots/container\": _container2.default,\n                \"blots/cursor\": _cursor2.default,\n                \"blots/embed\": _embed2.default,\n                \"blots/inline\": _inline2.default,\n                \"blots/scroll\": _scroll2.default,\n                \"blots/text\": _text2.default,\n                \"modules/clipboard\": _clipboard2.default,\n                \"modules/history\": _history2.default,\n                \"modules/keyboard\": _keyboard2.default\n            });\n            _parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);\n            exports1.default = _quill2.default;\n        /***/ },\n        /* 30 */ /***/ function(module1, exports1, __nested_webpack_require_318905__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var Registry = __nested_webpack_require_318905__(1);\n            var ShadowBlot = /** @class */ function() {\n                function ShadowBlot(domNode) {\n                    this.domNode = domNode;\n                    // @ts-ignore\n                    this.domNode[Registry.DATA_KEY] = {\n                        blot: this\n                    };\n                }\n                Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n                    // Hack for accessing inherited static methods\n                    get: function() {\n                        return this.constructor;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ShadowBlot.create = function(value) {\n                    if (this.tagName == null) {\n                        throw new Registry.ParchmentError(\"Blot definition missing tagName\");\n                    }\n                    var node;\n                    if (Array.isArray(this.tagName)) {\n                        if (typeof value === \"string\") {\n                            value = value.toUpperCase();\n                            if (parseInt(value).toString() === value) {\n                                value = parseInt(value);\n                            }\n                        }\n                        if (typeof value === \"number\") {\n                            node = document.createElement(this.tagName[value - 1]);\n                        } else if (this.tagName.indexOf(value) > -1) {\n                            node = document.createElement(value);\n                        } else {\n                            node = document.createElement(this.tagName[0]);\n                        }\n                    } else {\n                        node = document.createElement(this.tagName);\n                    }\n                    if (this.className) {\n                        node.classList.add(this.className);\n                    }\n                    return node;\n                };\n                ShadowBlot.prototype.attach = function() {\n                    if (this.parent != null) {\n                        this.scroll = this.parent.scroll;\n                    }\n                };\n                ShadowBlot.prototype.clone = function() {\n                    var domNode = this.domNode.cloneNode(false);\n                    return Registry.create(domNode);\n                };\n                ShadowBlot.prototype.detach = function() {\n                    if (this.parent != null) this.parent.removeChild(this);\n                    // @ts-ignore\n                    delete this.domNode[Registry.DATA_KEY];\n                };\n                ShadowBlot.prototype.deleteAt = function(index, length) {\n                    var blot = this.isolate(index, length);\n                    blot.remove();\n                };\n                ShadowBlot.prototype.formatAt = function(index, length, name, value) {\n                    var blot = this.isolate(index, length);\n                    if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n                        blot.wrap(name, value);\n                    } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n                        var parent = Registry.create(this.statics.scope);\n                        blot.wrap(parent);\n                        parent.format(name, value);\n                    }\n                };\n                ShadowBlot.prototype.insertAt = function(index, value, def) {\n                    var blot = def == null ? Registry.create(\"text\", value) : Registry.create(value, def);\n                    var ref = this.split(index);\n                    this.parent.insertBefore(blot, ref);\n                };\n                ShadowBlot.prototype.insertInto = function(parentBlot, refBlot) {\n                    if (refBlot === void 0) {\n                        refBlot = null;\n                    }\n                    if (this.parent != null) {\n                        this.parent.children.remove(this);\n                    }\n                    var refDomNode = null;\n                    parentBlot.children.insertBefore(this, refBlot);\n                    if (refBlot != null) {\n                        refDomNode = refBlot.domNode;\n                    }\n                    if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {\n                        parentBlot.domNode.insertBefore(this.domNode, refDomNode);\n                    }\n                    this.parent = parentBlot;\n                    this.attach();\n                };\n                ShadowBlot.prototype.isolate = function(index, length) {\n                    var target = this.split(index);\n                    target.split(length);\n                    return target;\n                };\n                ShadowBlot.prototype.length = function() {\n                    return 1;\n                };\n                ShadowBlot.prototype.offset = function(root) {\n                    if (root === void 0) {\n                        root = this.parent;\n                    }\n                    if (this.parent == null || this == root) return 0;\n                    return this.parent.children.offset(this) + this.parent.offset(root);\n                };\n                ShadowBlot.prototype.optimize = function(context) {\n                    // TODO clean up once we use WeakMap\n                    // @ts-ignore\n                    if (this.domNode[Registry.DATA_KEY] != null) {\n                        // @ts-ignore\n                        delete this.domNode[Registry.DATA_KEY].mutations;\n                    }\n                };\n                ShadowBlot.prototype.remove = function() {\n                    if (this.domNode.parentNode != null) {\n                        this.domNode.parentNode.removeChild(this.domNode);\n                    }\n                    this.detach();\n                };\n                ShadowBlot.prototype.replace = function(target) {\n                    if (target.parent == null) return;\n                    target.parent.insertBefore(this, target.next);\n                    target.remove();\n                };\n                ShadowBlot.prototype.replaceWith = function(name, value) {\n                    var replacement = typeof name === \"string\" ? Registry.create(name, value) : name;\n                    replacement.replace(this);\n                    return replacement;\n                };\n                ShadowBlot.prototype.split = function(index, force) {\n                    return index === 0 ? this : this.next;\n                };\n                ShadowBlot.prototype.update = function(mutations, context) {\n                // Nothing to do by default\n                };\n                ShadowBlot.prototype.wrap = function(name, value) {\n                    var wrapper = typeof name === \"string\" ? Registry.create(name, value) : name;\n                    if (this.parent != null) {\n                        this.parent.insertBefore(wrapper, this.next);\n                    }\n                    wrapper.appendChild(this);\n                    return wrapper;\n                };\n                ShadowBlot.blotName = \"abstract\";\n                return ShadowBlot;\n            }();\n            exports1.default = ShadowBlot;\n        /***/ },\n        /* 31 */ /***/ function(module1, exports1, __nested_webpack_require_326438__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var attributor_1 = __nested_webpack_require_326438__(12);\n            var class_1 = __nested_webpack_require_326438__(32);\n            var style_1 = __nested_webpack_require_326438__(33);\n            var Registry = __nested_webpack_require_326438__(1);\n            var AttributorStore = /** @class */ function() {\n                function AttributorStore(domNode) {\n                    this.attributes = {};\n                    this.domNode = domNode;\n                    this.build();\n                }\n                AttributorStore.prototype.attribute = function(attribute, value) {\n                    // verb\n                    if (value) {\n                        if (attribute.add(this.domNode, value)) {\n                            if (attribute.value(this.domNode) != null) {\n                                this.attributes[attribute.attrName] = attribute;\n                            } else {\n                                delete this.attributes[attribute.attrName];\n                            }\n                        }\n                    } else {\n                        attribute.remove(this.domNode);\n                        delete this.attributes[attribute.attrName];\n                    }\n                };\n                AttributorStore.prototype.build = function() {\n                    var _this = this;\n                    this.attributes = {};\n                    var attributes = attributor_1.default.keys(this.domNode);\n                    var classes = class_1.default.keys(this.domNode);\n                    var styles = style_1.default.keys(this.domNode);\n                    attributes.concat(classes).concat(styles).forEach(function(name) {\n                        var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n                        if (attr instanceof attributor_1.default) {\n                            _this.attributes[attr.attrName] = attr;\n                        }\n                    });\n                };\n                AttributorStore.prototype.copy = function(target) {\n                    var _this = this;\n                    Object.keys(this.attributes).forEach(function(key) {\n                        var value = _this.attributes[key].value(_this.domNode);\n                        target.format(key, value);\n                    });\n                };\n                AttributorStore.prototype.move = function(target) {\n                    var _this = this;\n                    this.copy(target);\n                    Object.keys(this.attributes).forEach(function(key) {\n                        _this.attributes[key].remove(_this.domNode);\n                    });\n                    this.attributes = {};\n                };\n                AttributorStore.prototype.values = function() {\n                    var _this = this;\n                    return Object.keys(this.attributes).reduce(function(attributes, name) {\n                        attributes[name] = _this.attributes[name].value(_this.domNode);\n                        return attributes;\n                    }, {});\n                };\n                return AttributorStore;\n            }();\n            exports1.default = AttributorStore;\n        /***/ },\n        /* 32 */ /***/ function(module1, exports1, __nested_webpack_require_329783__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var attributor_1 = __nested_webpack_require_329783__(12);\n            function match(node, prefix) {\n                var className = node.getAttribute(\"class\") || \"\";\n                return className.split(/\\s+/).filter(function(name) {\n                    return name.indexOf(prefix + \"-\") === 0;\n                });\n            }\n            var ClassAttributor = /** @class */ function(_super) {\n                __extends(ClassAttributor, _super);\n                function ClassAttributor() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                ClassAttributor.keys = function(node) {\n                    return (node.getAttribute(\"class\") || \"\").split(/\\s+/).map(function(name) {\n                        return name.split(\"-\").slice(0, -1).join(\"-\");\n                    });\n                };\n                ClassAttributor.prototype.add = function(node, value) {\n                    if (!this.canAdd(node, value)) return false;\n                    this.remove(node);\n                    node.classList.add(this.keyName + \"-\" + value);\n                    return true;\n                };\n                ClassAttributor.prototype.remove = function(node) {\n                    var matches = match(node, this.keyName);\n                    matches.forEach(function(name) {\n                        node.classList.remove(name);\n                    });\n                    if (node.classList.length === 0) {\n                        node.removeAttribute(\"class\");\n                    }\n                };\n                ClassAttributor.prototype.value = function(node) {\n                    var result = match(node, this.keyName)[0] || \"\";\n                    var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n                    return this.canAdd(node, value) ? value : \"\";\n                };\n                return ClassAttributor;\n            }(attributor_1.default);\n            exports1.default = ClassAttributor;\n        /***/ },\n        /* 33 */ /***/ function(module1, exports1, __nested_webpack_require_332722__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var attributor_1 = __nested_webpack_require_332722__(12);\n            function camelize(name) {\n                var parts = name.split(\"-\");\n                var rest = parts.slice(1).map(function(part) {\n                    return part[0].toUpperCase() + part.slice(1);\n                }).join(\"\");\n                return parts[0] + rest;\n            }\n            var StyleAttributor = /** @class */ function(_super) {\n                __extends(StyleAttributor, _super);\n                function StyleAttributor() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                StyleAttributor.keys = function(node) {\n                    return (node.getAttribute(\"style\") || \"\").split(\";\").map(function(value) {\n                        var arr = value.split(\":\");\n                        return arr[0].trim();\n                    });\n                };\n                StyleAttributor.prototype.add = function(node, value) {\n                    if (!this.canAdd(node, value)) return false;\n                    // @ts-ignore\n                    node.style[camelize(this.keyName)] = value;\n                    return true;\n                };\n                StyleAttributor.prototype.remove = function(node) {\n                    // @ts-ignore\n                    node.style[camelize(this.keyName)] = \"\";\n                    if (!node.getAttribute(\"style\")) {\n                        node.removeAttribute(\"style\");\n                    }\n                };\n                StyleAttributor.prototype.value = function(node) {\n                    // @ts-ignore\n                    var value = node.style[camelize(this.keyName)];\n                    return this.canAdd(node, value) ? value : \"\";\n                };\n                return StyleAttributor;\n            }(attributor_1.default);\n            exports1.default = StyleAttributor;\n        /***/ },\n        /* 34 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var Theme = function() {\n                function Theme(quill, options) {\n                    _classCallCheck(this, Theme);\n                    this.quill = quill;\n                    this.options = options;\n                    this.modules = {};\n                }\n                _createClass(Theme, [\n                    {\n                        key: \"init\",\n                        value: function init() {\n                            var _this = this;\n                            Object.keys(this.options.modules).forEach(function(name) {\n                                if (_this.modules[name] == null) {\n                                    _this.addModule(name);\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"addModule\",\n                        value: function addModule(name) {\n                            var moduleClass = this.quill.constructor.import(\"modules/\" + name);\n                            this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});\n                            return this.modules[name];\n                        }\n                    }\n                ]);\n                return Theme;\n            }();\n            Theme.DEFAULTS = {\n                modules: {}\n            };\n            Theme.themes = {\n                \"default\": Theme\n            };\n            exports1.default = Theme;\n        /***/ },\n        /* 35 */ /***/ function(module1, exports1, __nested_webpack_require_338354__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_338354__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _text = __nested_webpack_require_338354__(7);\n            var _text2 = _interopRequireDefault(_text);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var GUARD_TEXT = \"\\uFEFF\";\n            var Embed = function(_Parchment$Embed) {\n                _inherits(Embed, _Parchment$Embed);\n                function Embed(node) {\n                    _classCallCheck(this, Embed);\n                    var _this = _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(this, node));\n                    _this.contentNode = document.createElement(\"span\");\n                    _this.contentNode.setAttribute(\"contenteditable\", false);\n                    [].slice.call(_this.domNode.childNodes).forEach(function(childNode) {\n                        _this.contentNode.appendChild(childNode);\n                    });\n                    _this.leftGuard = document.createTextNode(GUARD_TEXT);\n                    _this.rightGuard = document.createTextNode(GUARD_TEXT);\n                    _this.domNode.appendChild(_this.leftGuard);\n                    _this.domNode.appendChild(_this.contentNode);\n                    _this.domNode.appendChild(_this.rightGuard);\n                    return _this;\n                }\n                _createClass(Embed, [\n                    {\n                        key: \"index\",\n                        value: function index(node, offset) {\n                            if (node === this.leftGuard) return 0;\n                            if (node === this.rightGuard) return 1;\n                            return _get(Embed.prototype.__proto__ || Object.getPrototypeOf(Embed.prototype), \"index\", this).call(this, node, offset);\n                        }\n                    },\n                    {\n                        key: \"restore\",\n                        value: function restore(node) {\n                            var range = void 0, textNode = void 0;\n                            var text = node.data.split(GUARD_TEXT).join(\"\");\n                            if (node === this.leftGuard) {\n                                if (this.prev instanceof _text2.default) {\n                                    var prevLength = this.prev.length();\n                                    this.prev.insertAt(prevLength, text);\n                                    range = {\n                                        startNode: this.prev.domNode,\n                                        startOffset: prevLength + text.length\n                                    };\n                                } else {\n                                    textNode = document.createTextNode(text);\n                                    this.parent.insertBefore(_parchment2.default.create(textNode), this);\n                                    range = {\n                                        startNode: textNode,\n                                        startOffset: text.length\n                                    };\n                                }\n                            } else if (node === this.rightGuard) {\n                                if (this.next instanceof _text2.default) {\n                                    this.next.insertAt(0, text);\n                                    range = {\n                                        startNode: this.next.domNode,\n                                        startOffset: text.length\n                                    };\n                                } else {\n                                    textNode = document.createTextNode(text);\n                                    this.parent.insertBefore(_parchment2.default.create(textNode), this.next);\n                                    range = {\n                                        startNode: textNode,\n                                        startOffset: text.length\n                                    };\n                                }\n                            }\n                            node.data = GUARD_TEXT;\n                            return range;\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update(mutations, context) {\n                            var _this2 = this;\n                            mutations.forEach(function(mutation) {\n                                if (mutation.type === \"characterData\" && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {\n                                    var range = _this2.restore(mutation.target);\n                                    if (range) context.range = range;\n                                }\n                            });\n                        }\n                    }\n                ]);\n                return Embed;\n            }(_parchment2.default.Embed);\n            exports1.default = Embed;\n        /***/ },\n        /* 36 */ /***/ function(module1, exports1, __nested_webpack_require_346729__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.AlignStyle = exports1.AlignClass = exports1.AlignAttribute = undefined;\n            var _parchment = __nested_webpack_require_346729__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            var config = {\n                scope: _parchment2.default.Scope.BLOCK,\n                whitelist: [\n                    \"right\",\n                    \"center\",\n                    \"justify\"\n                ]\n            };\n            var AlignAttribute = new _parchment2.default.Attributor.Attribute(\"align\", \"align\", config);\n            var AlignClass = new _parchment2.default.Attributor.Class(\"align\", \"ql-align\", config);\n            var AlignStyle = new _parchment2.default.Attributor.Style(\"align\", \"text-align\", config);\n            exports1.AlignAttribute = AlignAttribute;\n            exports1.AlignClass = AlignClass;\n            exports1.AlignStyle = AlignStyle;\n        /***/ },\n        /* 37 */ /***/ function(module1, exports1, __nested_webpack_require_348021__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.BackgroundStyle = exports1.BackgroundClass = undefined;\n            var _parchment = __nested_webpack_require_348021__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _color = __nested_webpack_require_348021__(26);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            var BackgroundClass = new _parchment2.default.Attributor.Class(\"background\", \"ql-bg\", {\n                scope: _parchment2.default.Scope.INLINE\n            });\n            var BackgroundStyle = new _color.ColorAttributor(\"background\", \"background-color\", {\n                scope: _parchment2.default.Scope.INLINE\n            });\n            exports1.BackgroundClass = BackgroundClass;\n            exports1.BackgroundStyle = BackgroundStyle;\n        /***/ },\n        /* 38 */ /***/ function(module1, exports1, __nested_webpack_require_349113__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.DirectionStyle = exports1.DirectionClass = exports1.DirectionAttribute = undefined;\n            var _parchment = __nested_webpack_require_349113__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            var config = {\n                scope: _parchment2.default.Scope.BLOCK,\n                whitelist: [\n                    \"rtl\"\n                ]\n            };\n            var DirectionAttribute = new _parchment2.default.Attributor.Attribute(\"direction\", \"dir\", config);\n            var DirectionClass = new _parchment2.default.Attributor.Class(\"direction\", \"ql-direction\", config);\n            var DirectionStyle = new _parchment2.default.Attributor.Style(\"direction\", \"direction\", config);\n            exports1.DirectionAttribute = DirectionAttribute;\n            exports1.DirectionClass = DirectionClass;\n            exports1.DirectionStyle = DirectionStyle;\n        /***/ },\n        /* 39 */ /***/ function(module1, exports1, __nested_webpack_require_350403__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.FontClass = exports1.FontStyle = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_350403__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var config = {\n                scope: _parchment2.default.Scope.INLINE,\n                whitelist: [\n                    \"serif\",\n                    \"monospace\"\n                ]\n            };\n            var FontClass = new _parchment2.default.Attributor.Class(\"font\", \"ql-font\", config);\n            var FontStyleAttributor = function(_Parchment$Attributor) {\n                _inherits(FontStyleAttributor, _Parchment$Attributor);\n                function FontStyleAttributor() {\n                    _classCallCheck(this, FontStyleAttributor);\n                    return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));\n                }\n                _createClass(FontStyleAttributor, [\n                    {\n                        key: \"value\",\n                        value: function value(node) {\n                            return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), \"value\", this).call(this, node).replace(/[\"']/g, \"\");\n                        }\n                    }\n                ]);\n                return FontStyleAttributor;\n            }(_parchment2.default.Attributor.Style);\n            var FontStyle = new FontStyleAttributor(\"font\", \"font-family\", config);\n            exports1.FontStyle = FontStyle;\n            exports1.FontClass = FontClass;\n        /***/ },\n        /* 40 */ /***/ function(module1, exports1, __nested_webpack_require_355469__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.SizeStyle = exports1.SizeClass = undefined;\n            var _parchment = __nested_webpack_require_355469__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            var SizeClass = new _parchment2.default.Attributor.Class(\"size\", \"ql-size\", {\n                scope: _parchment2.default.Scope.INLINE,\n                whitelist: [\n                    \"small\",\n                    \"large\",\n                    \"huge\"\n                ]\n            });\n            var SizeStyle = new _parchment2.default.Attributor.Style(\"size\", \"font-size\", {\n                scope: _parchment2.default.Scope.INLINE,\n                whitelist: [\n                    \"10px\",\n                    \"18px\",\n                    \"32px\"\n                ]\n            });\n            exports1.SizeClass = SizeClass;\n            exports1.SizeStyle = SizeStyle;\n        /***/ },\n        /* 41 */ /***/ function(module1, exports1, __nested_webpack_require_356724__) {\n            \"use strict\";\n            module1.exports = {\n                \"align\": {\n                    \"\": __nested_webpack_require_356724__(76),\n                    \"center\": __nested_webpack_require_356724__(77),\n                    \"right\": __nested_webpack_require_356724__(78),\n                    \"justify\": __nested_webpack_require_356724__(79)\n                },\n                \"background\": __nested_webpack_require_356724__(80),\n                \"blockquote\": __nested_webpack_require_356724__(81),\n                \"bold\": __nested_webpack_require_356724__(82),\n                \"clean\": __nested_webpack_require_356724__(83),\n                \"code\": __nested_webpack_require_356724__(58),\n                \"code-block\": __nested_webpack_require_356724__(58),\n                \"color\": __nested_webpack_require_356724__(84),\n                \"direction\": {\n                    \"\": __nested_webpack_require_356724__(85),\n                    \"rtl\": __nested_webpack_require_356724__(86)\n                },\n                \"float\": {\n                    \"center\": __nested_webpack_require_356724__(87),\n                    \"full\": __nested_webpack_require_356724__(88),\n                    \"left\": __nested_webpack_require_356724__(89),\n                    \"right\": __nested_webpack_require_356724__(90)\n                },\n                \"formula\": __nested_webpack_require_356724__(91),\n                \"header\": {\n                    \"1\": __nested_webpack_require_356724__(92),\n                    \"2\": __nested_webpack_require_356724__(93)\n                },\n                \"italic\": __nested_webpack_require_356724__(94),\n                \"image\": __nested_webpack_require_356724__(95),\n                \"indent\": {\n                    \"+1\": __nested_webpack_require_356724__(96),\n                    \"-1\": __nested_webpack_require_356724__(97)\n                },\n                \"link\": __nested_webpack_require_356724__(98),\n                \"list\": {\n                    \"ordered\": __nested_webpack_require_356724__(99),\n                    \"bullet\": __nested_webpack_require_356724__(100),\n                    \"check\": __nested_webpack_require_356724__(101)\n                },\n                \"script\": {\n                    \"sub\": __nested_webpack_require_356724__(102),\n                    \"super\": __nested_webpack_require_356724__(103)\n                },\n                \"strike\": __nested_webpack_require_356724__(104),\n                \"underline\": __nested_webpack_require_356724__(105),\n                \"video\": __nested_webpack_require_356724__(106)\n            };\n        /***/ },\n        /* 42 */ /***/ function(module1, exports1, __nested_webpack_require_358938__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.getLastChangeIndex = exports1.default = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _parchment = __nested_webpack_require_358938__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_358938__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _module = __nested_webpack_require_358938__(9);\n            var _module2 = _interopRequireDefault(_module);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var History = function(_Module) {\n                _inherits(History, _Module);\n                function History(quill, options) {\n                    _classCallCheck(this, History);\n                    var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));\n                    _this.lastRecorded = 0;\n                    _this.ignoreChange = false;\n                    _this.clear();\n                    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(eventName, delta, oldDelta, source) {\n                        if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange) return;\n                        if (!_this.options.userOnly || source === _quill2.default.sources.USER) {\n                            _this.record(delta, oldDelta);\n                        } else {\n                            _this.transform(delta);\n                        }\n                    });\n                    _this.quill.keyboard.addBinding({\n                        key: \"Z\",\n                        shortKey: true\n                    }, _this.undo.bind(_this));\n                    _this.quill.keyboard.addBinding({\n                        key: \"Z\",\n                        shortKey: true,\n                        shiftKey: true\n                    }, _this.redo.bind(_this));\n                    if (/Win/i.test(navigator.platform)) {\n                        _this.quill.keyboard.addBinding({\n                            key: \"Y\",\n                            shortKey: true\n                        }, _this.redo.bind(_this));\n                    }\n                    return _this;\n                }\n                _createClass(History, [\n                    {\n                        key: \"change\",\n                        value: function change(source, dest) {\n                            if (this.stack[source].length === 0) return;\n                            var delta = this.stack[source].pop();\n                            this.stack[dest].push(delta);\n                            this.lastRecorded = 0;\n                            this.ignoreChange = true;\n                            this.quill.updateContents(delta[source], _quill2.default.sources.USER);\n                            this.ignoreChange = false;\n                            var index = getLastChangeIndex(delta[source]);\n                            this.quill.setSelection(index);\n                        }\n                    },\n                    {\n                        key: \"clear\",\n                        value: function clear() {\n                            this.stack = {\n                                undo: [],\n                                redo: []\n                            };\n                        }\n                    },\n                    {\n                        key: \"cutoff\",\n                        value: function cutoff() {\n                            this.lastRecorded = 0;\n                        }\n                    },\n                    {\n                        key: \"record\",\n                        value: function record(changeDelta, oldDelta) {\n                            if (changeDelta.ops.length === 0) return;\n                            this.stack.redo = [];\n                            var undoDelta = this.quill.getContents().diff(oldDelta);\n                            var timestamp = Date.now();\n                            if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\n                                var delta = this.stack.undo.pop();\n                                undoDelta = undoDelta.compose(delta.undo);\n                                changeDelta = delta.redo.compose(changeDelta);\n                            } else {\n                                this.lastRecorded = timestamp;\n                            }\n                            this.stack.undo.push({\n                                redo: changeDelta,\n                                undo: undoDelta\n                            });\n                            if (this.stack.undo.length > this.options.maxStack) {\n                                this.stack.undo.shift();\n                            }\n                        }\n                    },\n                    {\n                        key: \"redo\",\n                        value: function redo() {\n                            this.change(\"redo\", \"undo\");\n                        }\n                    },\n                    {\n                        key: \"transform\",\n                        value: function transform(delta) {\n                            this.stack.undo.forEach(function(change) {\n                                change.undo = delta.transform(change.undo, true);\n                                change.redo = delta.transform(change.redo, true);\n                            });\n                            this.stack.redo.forEach(function(change) {\n                                change.undo = delta.transform(change.undo, true);\n                                change.redo = delta.transform(change.redo, true);\n                            });\n                        }\n                    },\n                    {\n                        key: \"undo\",\n                        value: function undo() {\n                            this.change(\"undo\", \"redo\");\n                        }\n                    }\n                ]);\n                return History;\n            }(_module2.default);\n            History.DEFAULTS = {\n                delay: 1000,\n                maxStack: 100,\n                userOnly: false\n            };\n            function endsWithNewlineChange(delta) {\n                var lastOp = delta.ops[delta.ops.length - 1];\n                if (lastOp == null) return false;\n                if (lastOp.insert != null) {\n                    return typeof lastOp.insert === \"string\" && lastOp.insert.endsWith(\"\\n\");\n                }\n                if (lastOp.attributes != null) {\n                    return Object.keys(lastOp.attributes).some(function(attr) {\n                        return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;\n                    });\n                }\n                return false;\n            }\n            function getLastChangeIndex(delta) {\n                var deleteLength = delta.reduce(function(length, op) {\n                    length += op.delete || 0;\n                    return length;\n                }, 0);\n                var changeIndex = delta.length() - deleteLength;\n                if (endsWithNewlineChange(delta)) {\n                    changeIndex -= 1;\n                }\n                return changeIndex;\n            }\n            exports1.default = History;\n            exports1.getLastChangeIndex = getLastChangeIndex;\n        /***/ },\n        /* 43 */ /***/ function(module1, exports1, __nested_webpack_require_368774__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.BaseTooltip = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _extend = __nested_webpack_require_368774__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _quillDelta = __nested_webpack_require_368774__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _emitter = __nested_webpack_require_368774__(8);\n            var _emitter2 = _interopRequireDefault(_emitter);\n            var _keyboard = __nested_webpack_require_368774__(23);\n            var _keyboard2 = _interopRequireDefault(_keyboard);\n            var _theme = __nested_webpack_require_368774__(34);\n            var _theme2 = _interopRequireDefault(_theme);\n            var _colorPicker = __nested_webpack_require_368774__(59);\n            var _colorPicker2 = _interopRequireDefault(_colorPicker);\n            var _iconPicker = __nested_webpack_require_368774__(60);\n            var _iconPicker2 = _interopRequireDefault(_iconPicker);\n            var _picker = __nested_webpack_require_368774__(28);\n            var _picker2 = _interopRequireDefault(_picker);\n            var _tooltip = __nested_webpack_require_368774__(61);\n            var _tooltip2 = _interopRequireDefault(_tooltip);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ALIGNS = [\n                false,\n                \"center\",\n                \"right\",\n                \"justify\"\n            ];\n            var COLORS = [\n                \"#000000\",\n                \"#e60000\",\n                \"#ff9900\",\n                \"#ffff00\",\n                \"#008a00\",\n                \"#0066cc\",\n                \"#9933ff\",\n                \"#ffffff\",\n                \"#facccc\",\n                \"#ffebcc\",\n                \"#ffffcc\",\n                \"#cce8cc\",\n                \"#cce0f5\",\n                \"#ebd6ff\",\n                \"#bbbbbb\",\n                \"#f06666\",\n                \"#ffc266\",\n                \"#ffff66\",\n                \"#66b966\",\n                \"#66a3e0\",\n                \"#c285ff\",\n                \"#888888\",\n                \"#a10000\",\n                \"#b26b00\",\n                \"#b2b200\",\n                \"#006100\",\n                \"#0047b2\",\n                \"#6b24b2\",\n                \"#444444\",\n                \"#5c0000\",\n                \"#663d00\",\n                \"#666600\",\n                \"#003700\",\n                \"#002966\",\n                \"#3d1466\"\n            ];\n            var FONTS = [\n                false,\n                \"serif\",\n                \"monospace\"\n            ];\n            var HEADERS = [\n                \"1\",\n                \"2\",\n                \"3\",\n                false\n            ];\n            var SIZES = [\n                \"small\",\n                false,\n                \"large\",\n                \"huge\"\n            ];\n            var BaseTheme = function(_Theme) {\n                _inherits(BaseTheme, _Theme);\n                function BaseTheme(quill, options) {\n                    _classCallCheck(this, BaseTheme);\n                    var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));\n                    var listener = function listener(e) {\n                        if (!document.body.contains(quill.root)) {\n                            return document.body.removeEventListener(\"click\", listener);\n                        }\n                        if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {\n                            _this.tooltip.hide();\n                        }\n                        if (_this.pickers != null) {\n                            _this.pickers.forEach(function(picker) {\n                                if (!picker.container.contains(e.target)) {\n                                    picker.close();\n                                }\n                            });\n                        }\n                    };\n                    quill.emitter.listenDOM(\"click\", document.body, listener);\n                    return _this;\n                }\n                _createClass(BaseTheme, [\n                    {\n                        key: \"addModule\",\n                        value: function addModule(name) {\n                            var module1 = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), \"addModule\", this).call(this, name);\n                            if (name === \"toolbar\") {\n                                this.extendToolbar(module1);\n                            }\n                            return module1;\n                        }\n                    },\n                    {\n                        key: \"buildButtons\",\n                        value: function buildButtons(buttons, icons) {\n                            buttons.forEach(function(button) {\n                                var className = button.getAttribute(\"class\") || \"\";\n                                className.split(/\\s+/).forEach(function(name) {\n                                    if (!name.startsWith(\"ql-\")) return;\n                                    name = name.slice(\"ql-\".length);\n                                    if (icons[name] == null) return;\n                                    if (name === \"direction\") {\n                                        button.innerHTML = icons[name][\"\"] + icons[name][\"rtl\"];\n                                    } else if (typeof icons[name] === \"string\") {\n                                        button.innerHTML = icons[name];\n                                    } else {\n                                        var value = button.value || \"\";\n                                        if (value != null && icons[name][value]) {\n                                            button.innerHTML = icons[name][value];\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                    },\n                    {\n                        key: \"buildPickers\",\n                        value: function buildPickers(selects, icons) {\n                            var _this2 = this;\n                            this.pickers = selects.map(function(select) {\n                                if (select.classList.contains(\"ql-align\")) {\n                                    if (select.querySelector(\"option\") == null) {\n                                        fillSelect(select, ALIGNS);\n                                    }\n                                    return new _iconPicker2.default(select, icons.align);\n                                } else if (select.classList.contains(\"ql-background\") || select.classList.contains(\"ql-color\")) {\n                                    var format = select.classList.contains(\"ql-background\") ? \"background\" : \"color\";\n                                    if (select.querySelector(\"option\") == null) {\n                                        fillSelect(select, COLORS, format === \"background\" ? \"#ffffff\" : \"#000000\");\n                                    }\n                                    return new _colorPicker2.default(select, icons[format]);\n                                } else {\n                                    if (select.querySelector(\"option\") == null) {\n                                        if (select.classList.contains(\"ql-font\")) {\n                                            fillSelect(select, FONTS);\n                                        } else if (select.classList.contains(\"ql-header\")) {\n                                            fillSelect(select, HEADERS);\n                                        } else if (select.classList.contains(\"ql-size\")) {\n                                            fillSelect(select, SIZES);\n                                        }\n                                    }\n                                    return new _picker2.default(select);\n                                }\n                            });\n                            var update = function update() {\n                                _this2.pickers.forEach(function(picker) {\n                                    picker.update();\n                                });\n                            };\n                            this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);\n                        }\n                    }\n                ]);\n                return BaseTheme;\n            }(_theme2.default);\n            BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {\n                modules: {\n                    toolbar: {\n                        handlers: {\n                            formula: function formula() {\n                                this.quill.theme.tooltip.edit(\"formula\");\n                            },\n                            image: function image() {\n                                var _this3 = this;\n                                var fileInput = this.container.querySelector(\"input.ql-image[type=file]\");\n                                if (fileInput == null) {\n                                    fileInput = document.createElement(\"input\");\n                                    fileInput.setAttribute(\"type\", \"file\");\n                                    fileInput.setAttribute(\"accept\", \"image/png, image/gif, image/jpeg, image/bmp, image/x-icon\");\n                                    fileInput.classList.add(\"ql-image\");\n                                    fileInput.addEventListener(\"change\", function() {\n                                        if (fileInput.files != null && fileInput.files[0] != null) {\n                                            var reader = new FileReader();\n                                            reader.onload = function(e) {\n                                                var range = _this3.quill.getSelection(true);\n                                                _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({\n                                                    image: e.target.result\n                                                }), _emitter2.default.sources.USER);\n                                                _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);\n                                                fileInput.value = \"\";\n                                            };\n                                            reader.readAsDataURL(fileInput.files[0]);\n                                        }\n                                    });\n                                    this.container.appendChild(fileInput);\n                                }\n                                fileInput.click();\n                            },\n                            video: function video() {\n                                this.quill.theme.tooltip.edit(\"video\");\n                            }\n                        }\n                    }\n                }\n            });\n            var BaseTooltip = function(_Tooltip) {\n                _inherits(BaseTooltip, _Tooltip);\n                function BaseTooltip(quill, boundsContainer) {\n                    _classCallCheck(this, BaseTooltip);\n                    var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));\n                    _this4.textbox = _this4.root.querySelector('input[type=\"text\"]');\n                    _this4.listen();\n                    return _this4;\n                }\n                _createClass(BaseTooltip, [\n                    {\n                        key: \"listen\",\n                        value: function listen() {\n                            var _this5 = this;\n                            this.textbox.addEventListener(\"keydown\", function(event) {\n                                if (_keyboard2.default.match(event, \"enter\")) {\n                                    _this5.save();\n                                    event.preventDefault();\n                                } else if (_keyboard2.default.match(event, \"escape\")) {\n                                    _this5.cancel();\n                                    event.preventDefault();\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"cancel\",\n                        value: function cancel() {\n                            this.hide();\n                        }\n                    },\n                    {\n                        key: \"edit\",\n                        value: function edit() {\n                            var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"link\";\n                            var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n                            this.root.classList.remove(\"ql-hidden\");\n                            this.root.classList.add(\"ql-editing\");\n                            if (preview != null) {\n                                this.textbox.value = preview;\n                            } else if (mode !== this.root.getAttribute(\"data-mode\")) {\n                                this.textbox.value = \"\";\n                            }\n                            this.position(this.quill.getBounds(this.quill.selection.savedRange));\n                            this.textbox.select();\n                            this.textbox.setAttribute(\"placeholder\", this.textbox.getAttribute(\"data-\" + mode) || \"\");\n                            this.root.setAttribute(\"data-mode\", mode);\n                        }\n                    },\n                    {\n                        key: \"restoreFocus\",\n                        value: function restoreFocus() {\n                            var scrollTop = this.quill.scrollingContainer.scrollTop;\n                            this.quill.focus();\n                            this.quill.scrollingContainer.scrollTop = scrollTop;\n                        }\n                    },\n                    {\n                        key: \"save\",\n                        value: function save() {\n                            var value = this.textbox.value;\n                            switch(this.root.getAttribute(\"data-mode\")){\n                                case \"link\":\n                                    {\n                                        var scrollTop = this.quill.root.scrollTop;\n                                        if (this.linkRange) {\n                                            this.quill.formatText(this.linkRange, \"link\", value, _emitter2.default.sources.USER);\n                                            delete this.linkRange;\n                                        } else {\n                                            this.restoreFocus();\n                                            this.quill.format(\"link\", value, _emitter2.default.sources.USER);\n                                        }\n                                        this.quill.root.scrollTop = scrollTop;\n                                        break;\n                                    }\n                                case \"video\":\n                                    {\n                                        value = extractVideoUrl(value);\n                                    }\n                                case \"formula\":\n                                    {\n                                        if (!value) break;\n                                        var range = this.quill.getSelection(true);\n                                        if (range != null) {\n                                            var index = range.index + range.length;\n                                            this.quill.insertEmbed(index, this.root.getAttribute(\"data-mode\"), value, _emitter2.default.sources.USER);\n                                            if (this.root.getAttribute(\"data-mode\") === \"formula\") {\n                                                this.quill.insertText(index + 1, \" \", _emitter2.default.sources.USER);\n                                            }\n                                            this.quill.setSelection(index + 2, _emitter2.default.sources.USER);\n                                        }\n                                        break;\n                                    }\n                                default:\n                            }\n                            this.textbox.value = \"\";\n                            this.hide();\n                        }\n                    }\n                ]);\n                return BaseTooltip;\n            }(_tooltip2.default);\n            function extractVideoUrl(url) {\n                var match = url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n                if (match) {\n                    return (match[1] || \"https\") + \"://www.youtube.com/embed/\" + match[2] + \"?showinfo=0\";\n                }\n                if (match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/)) {\n                    // eslint-disable-line no-cond-assign\n                    return (match[1] || \"https\") + \"://player.vimeo.com/video/\" + match[2] + \"/\";\n                }\n                return url;\n            }\n            function fillSelect(select, values) {\n                var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n                values.forEach(function(value) {\n                    var option = document.createElement(\"option\");\n                    if (value === defaultValue) {\n                        option.setAttribute(\"selected\", \"selected\");\n                    } else {\n                        option.setAttribute(\"value\", value);\n                    }\n                    select.appendChild(option);\n                });\n            }\n            exports1.BaseTooltip = BaseTooltip;\n            exports1.default = BaseTheme;\n        /***/ },\n        /* 44 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var LinkedList = /** @class */ function() {\n                function LinkedList() {\n                    this.head = this.tail = null;\n                    this.length = 0;\n                }\n                LinkedList.prototype.append = function() {\n                    var nodes = [];\n                    for(var _i = 0; _i < arguments.length; _i++){\n                        nodes[_i] = arguments[_i];\n                    }\n                    this.insertBefore(nodes[0], null);\n                    if (nodes.length > 1) {\n                        this.append.apply(this, nodes.slice(1));\n                    }\n                };\n                LinkedList.prototype.contains = function(node) {\n                    var cur, next = this.iterator();\n                    while(cur = next()){\n                        if (cur === node) return true;\n                    }\n                    return false;\n                };\n                LinkedList.prototype.insertBefore = function(node, refNode) {\n                    if (!node) return;\n                    node.next = refNode;\n                    if (refNode != null) {\n                        node.prev = refNode.prev;\n                        if (refNode.prev != null) {\n                            refNode.prev.next = node;\n                        }\n                        refNode.prev = node;\n                        if (refNode === this.head) {\n                            this.head = node;\n                        }\n                    } else if (this.tail != null) {\n                        this.tail.next = node;\n                        node.prev = this.tail;\n                        this.tail = node;\n                    } else {\n                        node.prev = null;\n                        this.head = this.tail = node;\n                    }\n                    this.length += 1;\n                };\n                LinkedList.prototype.offset = function(target) {\n                    var index = 0, cur = this.head;\n                    while(cur != null){\n                        if (cur === target) return index;\n                        index += cur.length();\n                        cur = cur.next;\n                    }\n                    return -1;\n                };\n                LinkedList.prototype.remove = function(node) {\n                    if (!this.contains(node)) return;\n                    if (node.prev != null) node.prev.next = node.next;\n                    if (node.next != null) node.next.prev = node.prev;\n                    if (node === this.head) this.head = node.next;\n                    if (node === this.tail) this.tail = node.prev;\n                    this.length -= 1;\n                };\n                LinkedList.prototype.iterator = function(curNode) {\n                    if (curNode === void 0) {\n                        curNode = this.head;\n                    }\n                    // TODO use yield when we can\n                    return function() {\n                        var ret = curNode;\n                        if (curNode != null) curNode = curNode.next;\n                        return ret;\n                    };\n                };\n                LinkedList.prototype.find = function(index, inclusive) {\n                    if (inclusive === void 0) {\n                        inclusive = false;\n                    }\n                    var cur, next = this.iterator();\n                    while(cur = next()){\n                        var length = cur.length();\n                        if (index < length || inclusive && index === length && (cur.next == null || cur.next.length() !== 0)) {\n                            return [\n                                cur,\n                                index\n                            ];\n                        }\n                        index -= length;\n                    }\n                    return [\n                        null,\n                        0\n                    ];\n                };\n                LinkedList.prototype.forEach = function(callback) {\n                    var cur, next = this.iterator();\n                    while(cur = next()){\n                        callback(cur);\n                    }\n                };\n                LinkedList.prototype.forEachAt = function(index, length, callback) {\n                    if (length <= 0) return;\n                    var _a = this.find(index), startNode = _a[0], offset = _a[1];\n                    var cur, curIndex = index - offset, next = this.iterator(startNode);\n                    while((cur = next()) && curIndex < index + length){\n                        var curLength = cur.length();\n                        if (index > curIndex) {\n                            callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n                        } else {\n                            callback(cur, 0, Math.min(curLength, index + length - curIndex));\n                        }\n                        curIndex += curLength;\n                    }\n                };\n                LinkedList.prototype.map = function(callback) {\n                    return this.reduce(function(memo, cur) {\n                        memo.push(callback(cur));\n                        return memo;\n                    }, []);\n                };\n                LinkedList.prototype.reduce = function(callback, memo) {\n                    var cur, next = this.iterator();\n                    while(cur = next()){\n                        memo = callback(memo, cur);\n                    }\n                    return memo;\n                };\n                return LinkedList;\n            }();\n            exports1.default = LinkedList;\n        /***/ },\n        /* 45 */ /***/ function(module1, exports1, __nested_webpack_require_396182__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var container_1 = __nested_webpack_require_396182__(17);\n            var Registry = __nested_webpack_require_396182__(1);\n            var OBSERVER_CONFIG = {\n                attributes: true,\n                characterData: true,\n                characterDataOldValue: true,\n                childList: true,\n                subtree: true\n            };\n            var MAX_OPTIMIZE_ITERATIONS = 100;\n            var ScrollBlot = /** @class */ function(_super) {\n                __extends(ScrollBlot, _super);\n                function ScrollBlot(node) {\n                    var _this = _super.call(this, node) || this;\n                    _this.scroll = _this;\n                    _this.observer = new MutationObserver(function(mutations) {\n                        _this.update(mutations);\n                    });\n                    _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n                    _this.attach();\n                    return _this;\n                }\n                ScrollBlot.prototype.detach = function() {\n                    _super.prototype.detach.call(this);\n                    this.observer.disconnect();\n                };\n                ScrollBlot.prototype.deleteAt = function(index, length) {\n                    this.update();\n                    if (index === 0 && length === this.length()) {\n                        this.children.forEach(function(child) {\n                            child.remove();\n                        });\n                    } else {\n                        _super.prototype.deleteAt.call(this, index, length);\n                    }\n                };\n                ScrollBlot.prototype.formatAt = function(index, length, name, value) {\n                    this.update();\n                    _super.prototype.formatAt.call(this, index, length, name, value);\n                };\n                ScrollBlot.prototype.insertAt = function(index, value, def) {\n                    this.update();\n                    _super.prototype.insertAt.call(this, index, value, def);\n                };\n                ScrollBlot.prototype.optimize = function(mutations, context) {\n                    var _this = this;\n                    if (mutations === void 0) {\n                        mutations = [];\n                    }\n                    if (context === void 0) {\n                        context = {};\n                    }\n                    _super.prototype.optimize.call(this, context);\n                    // We must modify mutations directly, cannot make copy and then modify\n                    var records = [].slice.call(this.observer.takeRecords());\n                    // Array.push currently seems to be implemented by a non-tail recursive function\n                    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n                    while(records.length > 0)mutations.push(records.pop());\n                    // TODO use WeakMap\n                    var mark = function(blot, markParent) {\n                        if (markParent === void 0) {\n                            markParent = true;\n                        }\n                        if (blot == null || blot === _this) return;\n                        if (blot.domNode.parentNode == null) return;\n                        // @ts-ignore\n                        if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                            // @ts-ignore\n                            blot.domNode[Registry.DATA_KEY].mutations = [];\n                        }\n                        if (markParent) mark(blot.parent);\n                    };\n                    var optimize = function(blot) {\n                        // Post-order traversal\n                        if (// @ts-ignore\n                        blot.domNode[Registry.DATA_KEY] == null || // @ts-ignore\n                        blot.domNode[Registry.DATA_KEY].mutations == null) {\n                            return;\n                        }\n                        if (blot instanceof container_1.default) {\n                            blot.children.forEach(optimize);\n                        }\n                        blot.optimize(context);\n                    };\n                    var remaining = mutations;\n                    for(var i = 0; remaining.length > 0; i += 1){\n                        if (i >= MAX_OPTIMIZE_ITERATIONS) {\n                            throw new Error(\"[Parchment] Maximum optimize iterations reached\");\n                        }\n                        remaining.forEach(function(mutation) {\n                            var blot = Registry.find(mutation.target, true);\n                            if (blot == null) return;\n                            if (blot.domNode === mutation.target) {\n                                if (mutation.type === \"childList\") {\n                                    mark(Registry.find(mutation.previousSibling, false));\n                                    [].forEach.call(mutation.addedNodes, function(node) {\n                                        var child = Registry.find(node, false);\n                                        mark(child, false);\n                                        if (child instanceof container_1.default) {\n                                            child.children.forEach(function(grandChild) {\n                                                mark(grandChild, false);\n                                            });\n                                        }\n                                    });\n                                } else if (mutation.type === \"attributes\") {\n                                    mark(blot.prev);\n                                }\n                            }\n                            mark(blot);\n                        });\n                        this.children.forEach(optimize);\n                        remaining = [].slice.call(this.observer.takeRecords());\n                        records = remaining.slice();\n                        while(records.length > 0)mutations.push(records.pop());\n                    }\n                };\n                ScrollBlot.prototype.update = function(mutations, context) {\n                    var _this = this;\n                    if (context === void 0) {\n                        context = {};\n                    }\n                    mutations = mutations || this.observer.takeRecords();\n                    // TODO use WeakMap\n                    mutations.map(function(mutation) {\n                        var blot = Registry.find(mutation.target, true);\n                        if (blot == null) return null;\n                        // @ts-ignore\n                        if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                            // @ts-ignore\n                            blot.domNode[Registry.DATA_KEY].mutations = [\n                                mutation\n                            ];\n                            return blot;\n                        } else {\n                            // @ts-ignore\n                            blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n                            return null;\n                        }\n                    }).forEach(function(blot) {\n                        if (blot == null || blot === _this || //@ts-ignore\n                        blot.domNode[Registry.DATA_KEY] == null) return;\n                        // @ts-ignore\n                        blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);\n                    });\n                    // @ts-ignore\n                    if (this.domNode[Registry.DATA_KEY].mutations != null) {\n                        // @ts-ignore\n                        _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);\n                    }\n                    this.optimize(mutations, context);\n                };\n                ScrollBlot.blotName = \"scroll\";\n                ScrollBlot.defaultChild = \"block\";\n                ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\n                ScrollBlot.tagName = \"DIV\";\n                return ScrollBlot;\n            }(container_1.default);\n            exports1.default = ScrollBlot;\n        /***/ },\n        /* 46 */ /***/ function(module1, exports1, __nested_webpack_require_405318__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var format_1 = __nested_webpack_require_405318__(18);\n            var Registry = __nested_webpack_require_405318__(1);\n            // Shallow object comparison\n            function isEqual(obj1, obj2) {\n                if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\n                // @ts-ignore\n                for(var prop in obj1){\n                    // @ts-ignore\n                    if (obj1[prop] !== obj2[prop]) return false;\n                }\n                return true;\n            }\n            var InlineBlot = /** @class */ function(_super) {\n                __extends(InlineBlot, _super);\n                function InlineBlot() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                InlineBlot.formats = function(domNode) {\n                    if (domNode.tagName === InlineBlot.tagName) return undefined;\n                    return _super.formats.call(this, domNode);\n                };\n                InlineBlot.prototype.format = function(name, value) {\n                    var _this = this;\n                    if (name === this.statics.blotName && !value) {\n                        this.children.forEach(function(child) {\n                            if (!(child instanceof format_1.default)) {\n                                child = child.wrap(InlineBlot.blotName, true);\n                            }\n                            _this.attributes.copy(child);\n                        });\n                        this.unwrap();\n                    } else {\n                        _super.prototype.format.call(this, name, value);\n                    }\n                };\n                InlineBlot.prototype.formatAt = function(index, length, name, value) {\n                    if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n                        var blot = this.isolate(index, length);\n                        blot.format(name, value);\n                    } else {\n                        _super.prototype.formatAt.call(this, index, length, name, value);\n                    }\n                };\n                InlineBlot.prototype.optimize = function(context) {\n                    _super.prototype.optimize.call(this, context);\n                    var formats = this.formats();\n                    if (Object.keys(formats).length === 0) {\n                        return this.unwrap(); // unformatted span\n                    }\n                    var next = this.next;\n                    if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n                        next.moveChildren(this);\n                        next.remove();\n                    }\n                };\n                InlineBlot.blotName = \"inline\";\n                InlineBlot.scope = Registry.Scope.INLINE_BLOT;\n                InlineBlot.tagName = \"SPAN\";\n                return InlineBlot;\n            }(format_1.default);\n            exports1.default = InlineBlot;\n        /***/ },\n        /* 47 */ /***/ function(module1, exports1, __nested_webpack_require_409272__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var format_1 = __nested_webpack_require_409272__(18);\n            var Registry = __nested_webpack_require_409272__(1);\n            var BlockBlot = /** @class */ function(_super) {\n                __extends(BlockBlot, _super);\n                function BlockBlot() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                BlockBlot.formats = function(domNode) {\n                    var tagName = Registry.query(BlockBlot.blotName).tagName;\n                    if (domNode.tagName === tagName) return undefined;\n                    return _super.formats.call(this, domNode);\n                };\n                BlockBlot.prototype.format = function(name, value) {\n                    if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n                        return;\n                    } else if (name === this.statics.blotName && !value) {\n                        this.replaceWith(BlockBlot.blotName);\n                    } else {\n                        _super.prototype.format.call(this, name, value);\n                    }\n                };\n                BlockBlot.prototype.formatAt = function(index, length, name, value) {\n                    if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n                        this.format(name, value);\n                    } else {\n                        _super.prototype.formatAt.call(this, index, length, name, value);\n                    }\n                };\n                BlockBlot.prototype.insertAt = function(index, value, def) {\n                    if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n                        // Insert text or inline\n                        _super.prototype.insertAt.call(this, index, value, def);\n                    } else {\n                        var after = this.split(index);\n                        var blot = Registry.create(value, def);\n                        after.parent.insertBefore(blot, after);\n                    }\n                };\n                BlockBlot.prototype.update = function(mutations, context) {\n                    if (navigator.userAgent.match(/Trident/)) {\n                        this.build();\n                    } else {\n                        _super.prototype.update.call(this, mutations, context);\n                    }\n                };\n                BlockBlot.blotName = \"block\";\n                BlockBlot.scope = Registry.Scope.BLOCK_BLOT;\n                BlockBlot.tagName = \"P\";\n                return BlockBlot;\n            }(format_1.default);\n            exports1.default = BlockBlot;\n        /***/ },\n        /* 48 */ /***/ function(module1, exports1, __nested_webpack_require_412820__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var leaf_1 = __nested_webpack_require_412820__(19);\n            var EmbedBlot = /** @class */ function(_super) {\n                __extends(EmbedBlot, _super);\n                function EmbedBlot() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                EmbedBlot.formats = function(domNode) {\n                    return undefined;\n                };\n                EmbedBlot.prototype.format = function(name, value) {\n                    // super.formatAt wraps, which is what we want in general,\n                    // but this allows subclasses to overwrite for formats\n                    // that just apply to particular embeds\n                    _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n                };\n                EmbedBlot.prototype.formatAt = function(index, length, name, value) {\n                    if (index === 0 && length === this.length()) {\n                        this.format(name, value);\n                    } else {\n                        _super.prototype.formatAt.call(this, index, length, name, value);\n                    }\n                };\n                EmbedBlot.prototype.formats = function() {\n                    return this.statics.formats(this.domNode);\n                };\n                return EmbedBlot;\n            }(leaf_1.default);\n            exports1.default = EmbedBlot;\n        /***/ },\n        /* 49 */ /***/ function(module1, exports1, __nested_webpack_require_415170__) {\n            \"use strict\";\n            var __extends = this && this.__extends || function() {\n                var extendStatics = Object.setPrototypeOf || ({\n                    __proto__: []\n                }) instanceof Array && function(d, b) {\n                    d.__proto__ = b;\n                } || function(d, b) {\n                    for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n                };\n                return function(d, b) {\n                    extendStatics(d, b);\n                    function __() {\n                        this.constructor = d;\n                    }\n                    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n                };\n            }();\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var leaf_1 = __nested_webpack_require_415170__(19);\n            var Registry = __nested_webpack_require_415170__(1);\n            var TextBlot = /** @class */ function(_super) {\n                __extends(TextBlot, _super);\n                function TextBlot(node) {\n                    var _this = _super.call(this, node) || this;\n                    _this.text = _this.statics.value(_this.domNode);\n                    return _this;\n                }\n                TextBlot.create = function(value) {\n                    return document.createTextNode(value);\n                };\n                TextBlot.value = function(domNode) {\n                    var text = domNode.data;\n                    // @ts-ignore\n                    if (text[\"normalize\"]) text = text[\"normalize\"]();\n                    return text;\n                };\n                TextBlot.prototype.deleteAt = function(index, length) {\n                    this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n                };\n                TextBlot.prototype.index = function(node, offset) {\n                    if (this.domNode === node) {\n                        return offset;\n                    }\n                    return -1;\n                };\n                TextBlot.prototype.insertAt = function(index, value, def) {\n                    if (def == null) {\n                        this.text = this.text.slice(0, index) + value + this.text.slice(index);\n                        this.domNode.data = this.text;\n                    } else {\n                        _super.prototype.insertAt.call(this, index, value, def);\n                    }\n                };\n                TextBlot.prototype.length = function() {\n                    return this.text.length;\n                };\n                TextBlot.prototype.optimize = function(context) {\n                    _super.prototype.optimize.call(this, context);\n                    this.text = this.statics.value(this.domNode);\n                    if (this.text.length === 0) {\n                        this.remove();\n                    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n                        this.insertAt(this.length(), this.next.value());\n                        this.next.remove();\n                    }\n                };\n                TextBlot.prototype.position = function(index, inclusive) {\n                    if (inclusive === void 0) {\n                        inclusive = false;\n                    }\n                    return [\n                        this.domNode,\n                        index\n                    ];\n                };\n                TextBlot.prototype.split = function(index, force) {\n                    if (force === void 0) {\n                        force = false;\n                    }\n                    if (!force) {\n                        if (index === 0) return this;\n                        if (index === this.length()) return this.next;\n                    }\n                    var after = Registry.create(this.domNode.splitText(index));\n                    this.parent.insertBefore(after, this.next);\n                    this.text = this.statics.value(this.domNode);\n                    return after;\n                };\n                TextBlot.prototype.update = function(mutations, context) {\n                    var _this = this;\n                    if (mutations.some(function(mutation) {\n                        return mutation.type === \"characterData\" && mutation.target === _this.domNode;\n                    })) {\n                        this.text = this.statics.value(this.domNode);\n                    }\n                };\n                TextBlot.prototype.value = function() {\n                    return this.text;\n                };\n                TextBlot.blotName = \"text\";\n                TextBlot.scope = Registry.Scope.INLINE_BLOT;\n                return TextBlot;\n            }(leaf_1.default);\n            exports1.default = TextBlot;\n        /***/ },\n        /* 50 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            var elem = document.createElement(\"div\");\n            elem.classList.toggle(\"test-class\", false);\n            if (elem.classList.contains(\"test-class\")) {\n                var _toggle = DOMTokenList.prototype.toggle;\n                DOMTokenList.prototype.toggle = function(token, force) {\n                    if (arguments.length > 1 && !this.contains(token) === !force) {\n                        return force;\n                    } else {\n                        return _toggle.call(this, token);\n                    }\n                };\n            }\n            if (!String.prototype.startsWith) {\n                String.prototype.startsWith = function(searchString, position) {\n                    position = position || 0;\n                    return this.substr(position, searchString.length) === searchString;\n                };\n            }\n            if (!String.prototype.endsWith) {\n                String.prototype.endsWith = function(searchString, position) {\n                    var subjectString = this.toString();\n                    if (typeof position !== \"number\" || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\n                        position = subjectString.length;\n                    }\n                    position -= searchString.length;\n                    var lastIndex = subjectString.indexOf(searchString, position);\n                    return lastIndex !== -1 && lastIndex === position;\n                };\n            }\n            if (!Array.prototype.find) {\n                Object.defineProperty(Array.prototype, \"find\", {\n                    value: function value(predicate) {\n                        if (this === null) {\n                            throw new TypeError(\"Array.prototype.find called on null or undefined\");\n                        }\n                        if (typeof predicate !== \"function\") {\n                            throw new TypeError(\"predicate must be a function\");\n                        }\n                        var list = Object(this);\n                        var length = list.length >>> 0;\n                        var thisArg = arguments[1];\n                        var value;\n                        for(var i = 0; i < length; i++){\n                            value = list[i];\n                            if (predicate.call(thisArg, value, i, list)) {\n                                return value;\n                            }\n                        }\n                        return undefined;\n                    }\n                });\n            }\n            document.addEventListener(\"DOMContentLoaded\", function() {\n                // Disable resizing in Firefox\n                document.execCommand(\"enableObjectResizing\", false, false);\n                // Disable automatic linkifying in IE11\n                document.execCommand(\"autoUrlDetect\", false, false);\n            });\n        /***/ },\n        /* 51 */ /***/ function(module1, exports1) {\n            /**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */ var DIFF_DELETE = -1;\n            var DIFF_INSERT = 1;\n            var DIFF_EQUAL = 0;\n            /**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int} cursor_pos Expected edit position in text1 (optional)\n * @return {Array} Array of diff tuples.\n */ function diff_main(text1, text2, cursor_pos) {\n                // Check for equality (speedup).\n                if (text1 == text2) {\n                    if (text1) {\n                        return [\n                            [\n                                DIFF_EQUAL,\n                                text1\n                            ]\n                        ];\n                    }\n                    return [];\n                }\n                // Check cursor_pos within bounds\n                if (cursor_pos < 0 || text1.length < cursor_pos) {\n                    cursor_pos = null;\n                }\n                // Trim off common prefix (speedup).\n                var commonlength = diff_commonPrefix(text1, text2);\n                var commonprefix = text1.substring(0, commonlength);\n                text1 = text1.substring(commonlength);\n                text2 = text2.substring(commonlength);\n                // Trim off common suffix (speedup).\n                commonlength = diff_commonSuffix(text1, text2);\n                var commonsuffix = text1.substring(text1.length - commonlength);\n                text1 = text1.substring(0, text1.length - commonlength);\n                text2 = text2.substring(0, text2.length - commonlength);\n                // Compute the diff on the middle block.\n                var diffs = diff_compute_(text1, text2);\n                // Restore the prefix and suffix.\n                if (commonprefix) {\n                    diffs.unshift([\n                        DIFF_EQUAL,\n                        commonprefix\n                    ]);\n                }\n                if (commonsuffix) {\n                    diffs.push([\n                        DIFF_EQUAL,\n                        commonsuffix\n                    ]);\n                }\n                diff_cleanupMerge(diffs);\n                if (cursor_pos != null) {\n                    diffs = fix_cursor(diffs, cursor_pos);\n                }\n                diffs = fix_emoji(diffs);\n                return diffs;\n            }\n            ;\n            /**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */ function diff_compute_(text1, text2) {\n                var diffs;\n                if (!text1) {\n                    // Just add some text (speedup).\n                    return [\n                        [\n                            DIFF_INSERT,\n                            text2\n                        ]\n                    ];\n                }\n                if (!text2) {\n                    // Just delete some text (speedup).\n                    return [\n                        [\n                            DIFF_DELETE,\n                            text1\n                        ]\n                    ];\n                }\n                var longtext = text1.length > text2.length ? text1 : text2;\n                var shorttext = text1.length > text2.length ? text2 : text1;\n                var i = longtext.indexOf(shorttext);\n                if (i != -1) {\n                    // Shorter text is inside the longer text (speedup).\n                    diffs = [\n                        [\n                            DIFF_INSERT,\n                            longtext.substring(0, i)\n                        ],\n                        [\n                            DIFF_EQUAL,\n                            shorttext\n                        ],\n                        [\n                            DIFF_INSERT,\n                            longtext.substring(i + shorttext.length)\n                        ]\n                    ];\n                    // Swap insertions for deletions if diff is reversed.\n                    if (text1.length > text2.length) {\n                        diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n                    }\n                    return diffs;\n                }\n                if (shorttext.length == 1) {\n                    // Single character string.\n                    // After the previous speedup, the character can't be an equality.\n                    return [\n                        [\n                            DIFF_DELETE,\n                            text1\n                        ],\n                        [\n                            DIFF_INSERT,\n                            text2\n                        ]\n                    ];\n                }\n                // Check to see if the problem can be split in two.\n                var hm = diff_halfMatch_(text1, text2);\n                if (hm) {\n                    // A half-match was found, sort out the return data.\n                    var text1_a = hm[0];\n                    var text1_b = hm[1];\n                    var text2_a = hm[2];\n                    var text2_b = hm[3];\n                    var mid_common = hm[4];\n                    // Send both pairs off for separate processing.\n                    var diffs_a = diff_main(text1_a, text2_a);\n                    var diffs_b = diff_main(text1_b, text2_b);\n                    // Merge the results.\n                    return diffs_a.concat([\n                        [\n                            DIFF_EQUAL,\n                            mid_common\n                        ]\n                    ], diffs_b);\n                }\n                return diff_bisect_(text1, text2);\n            }\n            ;\n            /**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */ function diff_bisect_(text1, text2) {\n                // Cache the text lengths to prevent multiple calls.\n                var text1_length = text1.length;\n                var text2_length = text2.length;\n                var max_d = Math.ceil((text1_length + text2_length) / 2);\n                var v_offset = max_d;\n                var v_length = 2 * max_d;\n                var v1 = new Array(v_length);\n                var v2 = new Array(v_length);\n                // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n                // integers and undefined.\n                for(var x = 0; x < v_length; x++){\n                    v1[x] = -1;\n                    v2[x] = -1;\n                }\n                v1[v_offset + 1] = 0;\n                v2[v_offset + 1] = 0;\n                var delta = text1_length - text2_length;\n                // If the total number of characters is odd, then the front path will collide\n                // with the reverse path.\n                var front = delta % 2 != 0;\n                // Offsets for start and end of k loop.\n                // Prevents mapping of space beyond the grid.\n                var k1start = 0;\n                var k1end = 0;\n                var k2start = 0;\n                var k2end = 0;\n                for(var d = 0; d < max_d; d++){\n                    // Walk the front path one step.\n                    for(var k1 = -d + k1start; k1 <= d - k1end; k1 += 2){\n                        var k1_offset = v_offset + k1;\n                        var x1;\n                        if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {\n                            x1 = v1[k1_offset + 1];\n                        } else {\n                            x1 = v1[k1_offset - 1] + 1;\n                        }\n                        var y1 = x1 - k1;\n                        while(x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)){\n                            x1++;\n                            y1++;\n                        }\n                        v1[k1_offset] = x1;\n                        if (x1 > text1_length) {\n                            // Ran off the right of the graph.\n                            k1end += 2;\n                        } else if (y1 > text2_length) {\n                            // Ran off the bottom of the graph.\n                            k1start += 2;\n                        } else if (front) {\n                            var k2_offset = v_offset + delta - k1;\n                            if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n                                // Mirror x2 onto top-left coordinate system.\n                                var x2 = text1_length - v2[k2_offset];\n                                if (x1 >= x2) {\n                                    // Overlap detected.\n                                    return diff_bisectSplit_(text1, text2, x1, y1);\n                                }\n                            }\n                        }\n                    }\n                    // Walk the reverse path one step.\n                    for(var k2 = -d + k2start; k2 <= d - k2end; k2 += 2){\n                        var k2_offset = v_offset + k2;\n                        var x2;\n                        if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {\n                            x2 = v2[k2_offset + 1];\n                        } else {\n                            x2 = v2[k2_offset - 1] + 1;\n                        }\n                        var y2 = x2 - k2;\n                        while(x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)){\n                            x2++;\n                            y2++;\n                        }\n                        v2[k2_offset] = x2;\n                        if (x2 > text1_length) {\n                            // Ran off the left of the graph.\n                            k2end += 2;\n                        } else if (y2 > text2_length) {\n                            // Ran off the top of the graph.\n                            k2start += 2;\n                        } else if (!front) {\n                            var k1_offset = v_offset + delta - k2;\n                            if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n                                var x1 = v1[k1_offset];\n                                var y1 = v_offset + x1 - k1_offset;\n                                // Mirror x2 onto top-left coordinate system.\n                                x2 = text1_length - x2;\n                                if (x1 >= x2) {\n                                    // Overlap detected.\n                                    return diff_bisectSplit_(text1, text2, x1, y1);\n                                }\n                            }\n                        }\n                    }\n                }\n                // Diff took too long and hit the deadline or\n                // number of diffs equals number of characters, no commonality at all.\n                return [\n                    [\n                        DIFF_DELETE,\n                        text1\n                    ],\n                    [\n                        DIFF_INSERT,\n                        text2\n                    ]\n                ];\n            }\n            ;\n            /**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */ function diff_bisectSplit_(text1, text2, x, y) {\n                var text1a = text1.substring(0, x);\n                var text2a = text2.substring(0, y);\n                var text1b = text1.substring(x);\n                var text2b = text2.substring(y);\n                // Compute both diffs serially.\n                var diffs = diff_main(text1a, text2a);\n                var diffsb = diff_main(text1b, text2b);\n                return diffs.concat(diffsb);\n            }\n            ;\n            /**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */ function diff_commonPrefix(text1, text2) {\n                // Quick check for common null cases.\n                if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n                    return 0;\n                }\n                // Binary search.\n                // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n                var pointermin = 0;\n                var pointermax = Math.min(text1.length, text2.length);\n                var pointermid = pointermax;\n                var pointerstart = 0;\n                while(pointermin < pointermid){\n                    if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {\n                        pointermin = pointermid;\n                        pointerstart = pointermin;\n                    } else {\n                        pointermax = pointermid;\n                    }\n                    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n                }\n                return pointermid;\n            }\n            ;\n            /**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */ function diff_commonSuffix(text1, text2) {\n                // Quick check for common null cases.\n                if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n                    return 0;\n                }\n                // Binary search.\n                // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n                var pointermin = 0;\n                var pointermax = Math.min(text1.length, text2.length);\n                var pointermid = pointermax;\n                var pointerend = 0;\n                while(pointermin < pointermid){\n                    if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n                        pointermin = pointermid;\n                        pointerend = pointermin;\n                    } else {\n                        pointermax = pointermid;\n                    }\n                    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n                }\n                return pointermid;\n            }\n            ;\n            /**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */ function diff_halfMatch_(text1, text2) {\n                var longtext = text1.length > text2.length ? text1 : text2;\n                var shorttext = text1.length > text2.length ? text2 : text1;\n                if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n                    return null; // Pointless.\n                }\n                /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */ function diff_halfMatchI_(longtext, shorttext, i) {\n                    // Start with a 1/4 length substring at position i as a seed.\n                    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n                    var j = -1;\n                    var best_common = \"\";\n                    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n                    while((j = shorttext.indexOf(seed, j + 1)) != -1){\n                        var prefixLength = diff_commonPrefix(longtext.substring(i), shorttext.substring(j));\n                        var suffixLength = diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));\n                        if (best_common.length < suffixLength + prefixLength) {\n                            best_common = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n                            best_longtext_a = longtext.substring(0, i - suffixLength);\n                            best_longtext_b = longtext.substring(i + prefixLength);\n                            best_shorttext_a = shorttext.substring(0, j - suffixLength);\n                            best_shorttext_b = shorttext.substring(j + prefixLength);\n                        }\n                    }\n                    if (best_common.length * 2 >= longtext.length) {\n                        return [\n                            best_longtext_a,\n                            best_longtext_b,\n                            best_shorttext_a,\n                            best_shorttext_b,\n                            best_common\n                        ];\n                    } else {\n                        return null;\n                    }\n                }\n                // First check if the second quarter is the seed for a half-match.\n                var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n                // Check again based on the third quarter.\n                var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n                var hm;\n                if (!hm1 && !hm2) {\n                    return null;\n                } else if (!hm2) {\n                    hm = hm1;\n                } else if (!hm1) {\n                    hm = hm2;\n                } else {\n                    // Both matched.  Select the longest.\n                    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n                }\n                // A half-match was found, sort out the return data.\n                var text1_a, text1_b, text2_a, text2_b;\n                if (text1.length > text2.length) {\n                    text1_a = hm[0];\n                    text1_b = hm[1];\n                    text2_a = hm[2];\n                    text2_b = hm[3];\n                } else {\n                    text2_a = hm[0];\n                    text2_b = hm[1];\n                    text1_a = hm[2];\n                    text1_b = hm[3];\n                }\n                var mid_common = hm[4];\n                return [\n                    text1_a,\n                    text1_b,\n                    text2_a,\n                    text2_b,\n                    mid_common\n                ];\n            }\n            ;\n            /**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n */ function diff_cleanupMerge(diffs) {\n                diffs.push([\n                    DIFF_EQUAL,\n                    \"\"\n                ]); // Add a dummy entry at the end.\n                var pointer = 0;\n                var count_delete = 0;\n                var count_insert = 0;\n                var text_delete = \"\";\n                var text_insert = \"\";\n                var commonlength;\n                while(pointer < diffs.length){\n                    switch(diffs[pointer][0]){\n                        case DIFF_INSERT:\n                            count_insert++;\n                            text_insert += diffs[pointer][1];\n                            pointer++;\n                            break;\n                        case DIFF_DELETE:\n                            count_delete++;\n                            text_delete += diffs[pointer][1];\n                            pointer++;\n                            break;\n                        case DIFF_EQUAL:\n                            // Upon reaching an equality, check for prior redundancies.\n                            if (count_delete + count_insert > 1) {\n                                if (count_delete !== 0 && count_insert !== 0) {\n                                    // Factor out any common prefixies.\n                                    commonlength = diff_commonPrefix(text_insert, text_delete);\n                                    if (commonlength !== 0) {\n                                        if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {\n                                            diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);\n                                        } else {\n                                            diffs.splice(0, 0, [\n                                                DIFF_EQUAL,\n                                                text_insert.substring(0, commonlength)\n                                            ]);\n                                            pointer++;\n                                        }\n                                        text_insert = text_insert.substring(commonlength);\n                                        text_delete = text_delete.substring(commonlength);\n                                    }\n                                    // Factor out any common suffixies.\n                                    commonlength = diff_commonSuffix(text_insert, text_delete);\n                                    if (commonlength !== 0) {\n                                        diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n                                        text_insert = text_insert.substring(0, text_insert.length - commonlength);\n                                        text_delete = text_delete.substring(0, text_delete.length - commonlength);\n                                    }\n                                }\n                                // Delete the offending records and add the merged ones.\n                                if (count_delete === 0) {\n                                    diffs.splice(pointer - count_insert, count_delete + count_insert, [\n                                        DIFF_INSERT,\n                                        text_insert\n                                    ]);\n                                } else if (count_insert === 0) {\n                                    diffs.splice(pointer - count_delete, count_delete + count_insert, [\n                                        DIFF_DELETE,\n                                        text_delete\n                                    ]);\n                                } else {\n                                    diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [\n                                        DIFF_DELETE,\n                                        text_delete\n                                    ], [\n                                        DIFF_INSERT,\n                                        text_insert\n                                    ]);\n                                }\n                                pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n                            } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n                                // Merge this equality with the previous one.\n                                diffs[pointer - 1][1] += diffs[pointer][1];\n                                diffs.splice(pointer, 1);\n                            } else {\n                                pointer++;\n                            }\n                            count_insert = 0;\n                            count_delete = 0;\n                            text_delete = \"\";\n                            text_insert = \"\";\n                            break;\n                    }\n                }\n                if (diffs[diffs.length - 1][1] === \"\") {\n                    diffs.pop(); // Remove the dummy entry at the end.\n                }\n                // Second pass: look for single edits surrounded on both sides by equalities\n                // which can be shifted sideways to eliminate an equality.\n                // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n                var changes = false;\n                pointer = 1;\n                // Intentionally ignore the first and last element (don't need checking).\n                while(pointer < diffs.length - 1){\n                    if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {\n                        // This is a single edit surrounded by equalities.\n                        if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n                            // Shift the edit over the previous equality.\n                            diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n                            diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n                            diffs.splice(pointer - 1, 1);\n                            changes = true;\n                        } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {\n                            // Shift the edit over the next equality.\n                            diffs[pointer - 1][1] += diffs[pointer + 1][1];\n                            diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];\n                            diffs.splice(pointer + 1, 1);\n                            changes = true;\n                        }\n                    }\n                    pointer++;\n                }\n                // If shifts were made, the diff needs reordering and another shift sweep.\n                if (changes) {\n                    diff_cleanupMerge(diffs);\n                }\n            }\n            ;\n            var diff = diff_main;\n            diff.INSERT = DIFF_INSERT;\n            diff.DELETE = DIFF_DELETE;\n            diff.EQUAL = DIFF_EQUAL;\n            module1.exports = diff;\n            /*\n * Modify a diff such that the cursor position points to the start of a change:\n * E.g.\n *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)\n *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]\n *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)\n *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} A tuple [cursor location in the modified diff, modified diff]\n */ function cursor_normalize_diff(diffs, cursor_pos) {\n                if (cursor_pos === 0) {\n                    return [\n                        DIFF_EQUAL,\n                        diffs\n                    ];\n                }\n                for(var current_pos = 0, i = 0; i < diffs.length; i++){\n                    var d = diffs[i];\n                    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {\n                        var next_pos = current_pos + d[1].length;\n                        if (cursor_pos === next_pos) {\n                            return [\n                                i + 1,\n                                diffs\n                            ];\n                        } else if (cursor_pos < next_pos) {\n                            // copy to prevent side effects\n                            diffs = diffs.slice();\n                            // split d into two diff changes\n                            var split_pos = cursor_pos - current_pos;\n                            var d_left = [\n                                d[0],\n                                d[1].slice(0, split_pos)\n                            ];\n                            var d_right = [\n                                d[0],\n                                d[1].slice(split_pos)\n                            ];\n                            diffs.splice(i, 1, d_left, d_right);\n                            return [\n                                i + 1,\n                                diffs\n                            ];\n                        } else {\n                            current_pos = next_pos;\n                        }\n                    }\n                }\n                throw new Error(\"cursor_pos is out of bounds!\");\n            }\n            /*\n * Modify a diff such that the edit position is \"shifted\" to the proposed edit location (cursor_position).\n *\n * Case 1)\n *   Check if a naive shift is possible:\n *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)\n *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result\n * Case 2)\n *   Check if the following shifts are possible:\n *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']\n *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']\n *         ^            ^\n *         d          d_next\n *\n * @param {Array} diffs Array of diff tuples\n * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!\n * @return {Array} Array of diff tuples\n */ function fix_cursor(diffs, cursor_pos) {\n                var norm = cursor_normalize_diff(diffs, cursor_pos);\n                var ndiffs = norm[1];\n                var cursor_pointer = norm[0];\n                var d = ndiffs[cursor_pointer];\n                var d_next = ndiffs[cursor_pointer + 1];\n                if (d == null) {\n                    // Text was deleted from end of original string,\n                    // cursor is now out of bounds in new string\n                    return diffs;\n                } else if (d[0] !== DIFF_EQUAL) {\n                    // A modification happened at the cursor location.\n                    // This is the expected outcome, so we can return the original diff.\n                    return diffs;\n                } else {\n                    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {\n                        // Case 1)\n                        // It is possible to perform a naive shift\n                        ndiffs.splice(cursor_pointer, 2, d_next, d);\n                        return merge_tuples(ndiffs, cursor_pointer, 2);\n                    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {\n                        // Case 2)\n                        // d[1] is a prefix of d_next[1]\n                        // We can assume that d_next[0] !== 0, since d[0] === 0\n                        // Shift edit locations..\n                        ndiffs.splice(cursor_pointer, 2, [\n                            d_next[0],\n                            d[1]\n                        ], [\n                            0,\n                            d[1]\n                        ]);\n                        var suffix = d_next[1].slice(d[1].length);\n                        if (suffix.length > 0) {\n                            ndiffs.splice(cursor_pointer + 2, 0, [\n                                d_next[0],\n                                suffix\n                            ]);\n                        }\n                        return merge_tuples(ndiffs, cursor_pointer, 3);\n                    } else {\n                        // Not possible to perform any modification\n                        return diffs;\n                    }\n                }\n            }\n            /*\n * Check diff did not split surrogate pairs.\n * Ex. [0, '\\uD83D'], [-1, '\\uDC36'], [1, '\\uDC2F'] -> [-1, '\\uD83D\\uDC36'], [1, '\\uD83D\\uDC2F']\n *     '\\uD83D\\uDC36' === '🐶', '\\uD83D\\uDC2F' === '🐯'\n *\n * @param {Array} diffs Array of diff tuples\n * @return {Array} Array of diff tuples\n */ function fix_emoji(diffs) {\n                var compact = false;\n                var starts_with_pair_end = function(str) {\n                    return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;\n                };\n                var ends_with_pair_start = function(str) {\n                    return str.charCodeAt(str.length - 1) >= 0xD800 && str.charCodeAt(str.length - 1) <= 0xDBFF;\n                };\n                for(var i = 2; i < diffs.length; i += 1){\n                    if (diffs[i - 2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i - 2][1]) && diffs[i - 1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i - 1][1]) && diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {\n                        compact = true;\n                        diffs[i - 1][1] = diffs[i - 2][1].slice(-1) + diffs[i - 1][1];\n                        diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];\n                        diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);\n                    }\n                }\n                if (!compact) {\n                    return diffs;\n                }\n                var fixed_diffs = [];\n                for(var i = 0; i < diffs.length; i += 1){\n                    if (diffs[i][1].length > 0) {\n                        fixed_diffs.push(diffs[i]);\n                    }\n                }\n                return fixed_diffs;\n            }\n            /*\n * Try to merge tuples with their neigbors in a given range.\n * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']\n *\n * @param {Array} diffs Array of diff tuples.\n * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).\n * @param {Int} length Number of consecutive elements to check.\n * @return {Array} Array of merged diff tuples.\n */ function merge_tuples(diffs, start, length) {\n                // Check from (start-1) to (start+length).\n                for(var i = start + length - 1; i >= 0 && i >= start - 1; i--){\n                    if (i + 1 < diffs.length) {\n                        var left_d = diffs[i];\n                        var right_d = diffs[i + 1];\n                        if (left_d[0] === right_d[1]) {\n                            diffs.splice(i, 2, [\n                                left_d[0],\n                                left_d[1] + right_d[1]\n                            ]);\n                        }\n                    }\n                }\n                return diffs;\n            }\n        /***/ },\n        /* 52 */ /***/ function(module1, exports1) {\n            exports1 = module1.exports = typeof Object.keys === \"function\" ? Object.keys : shim;\n            exports1.shim = shim;\n            function shim(obj) {\n                var keys = [];\n                for(var key in obj)keys.push(key);\n                return keys;\n            }\n        /***/ },\n        /* 53 */ /***/ function(module1, exports1) {\n            var supportsArgumentsClass = function() {\n                return Object.prototype.toString.call(arguments);\n            }() == \"[object Arguments]\";\n            exports1 = module1.exports = supportsArgumentsClass ? supported : unsupported;\n            exports1.supported = supported;\n            function supported(object) {\n                return Object.prototype.toString.call(object) == \"[object Arguments]\";\n            }\n            ;\n            exports1.unsupported = unsupported;\n            function unsupported(object) {\n                return object && typeof object == \"object\" && typeof object.length == \"number\" && Object.prototype.hasOwnProperty.call(object, \"callee\") && !Object.prototype.propertyIsEnumerable.call(object, \"callee\") || false;\n            }\n            ;\n        /***/ },\n        /* 54 */ /***/ function(module1, exports1) {\n            \"use strict\";\n            var has = Object.prototype.hasOwnProperty, prefix = \"~\";\n            /**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */ function Events() {}\n            //\n            // We try to not inherit from `Object.prototype`. In some engines creating an\n            // instance in this way is faster than calling `Object.create(null)` directly.\n            // If `Object.create(null)` is not supported we prefix the event names with a\n            // character to make sure that the built-in object properties are not\n            // overridden or used as an attack vector.\n            //\n            if (Object.create) {\n                Events.prototype = Object.create(null);\n                //\n                // This hack is needed because the `__proto__` property is still inherited in\n                // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n                //\n                if (!new Events().__proto__) prefix = false;\n            }\n            /**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */ function EE(fn, context, once) {\n                this.fn = fn;\n                this.context = context;\n                this.once = once || false;\n            }\n            /**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */ function EventEmitter() {\n                this._events = new Events();\n                this._eventsCount = 0;\n            }\n            /**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */ EventEmitter.prototype.eventNames = function eventNames() {\n                var names = [], events, name;\n                if (this._eventsCount === 0) return names;\n                for(name in events = this._events){\n                    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n                }\n                if (Object.getOwnPropertySymbols) {\n                    return names.concat(Object.getOwnPropertySymbols(events));\n                }\n                return names;\n            };\n            /**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */ EventEmitter.prototype.listeners = function listeners(event, exists) {\n                var evt = prefix ? prefix + event : event, available = this._events[evt];\n                if (exists) return !!available;\n                if (!available) return [];\n                if (available.fn) return [\n                    available.fn\n                ];\n                for(var i = 0, l = available.length, ee = new Array(l); i < l; i++){\n                    ee[i] = available[i].fn;\n                }\n                return ee;\n            };\n            /**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n                var evt = prefix ? prefix + event : event;\n                if (!this._events[evt]) return false;\n                var listeners = this._events[evt], len = arguments.length, args, i;\n                if (listeners.fn) {\n                    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n                    switch(len){\n                        case 1:\n                            return listeners.fn.call(listeners.context), true;\n                        case 2:\n                            return listeners.fn.call(listeners.context, a1), true;\n                        case 3:\n                            return listeners.fn.call(listeners.context, a1, a2), true;\n                        case 4:\n                            return listeners.fn.call(listeners.context, a1, a2, a3), true;\n                        case 5:\n                            return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n                        case 6:\n                            return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n                    }\n                    for(i = 1, args = new Array(len - 1); i < len; i++){\n                        args[i - 1] = arguments[i];\n                    }\n                    listeners.fn.apply(listeners.context, args);\n                } else {\n                    var length = listeners.length, j;\n                    for(i = 0; i < length; i++){\n                        if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n                        switch(len){\n                            case 1:\n                                listeners[i].fn.call(listeners[i].context);\n                                break;\n                            case 2:\n                                listeners[i].fn.call(listeners[i].context, a1);\n                                break;\n                            case 3:\n                                listeners[i].fn.call(listeners[i].context, a1, a2);\n                                break;\n                            case 4:\n                                listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                                break;\n                            default:\n                                if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){\n                                    args[j - 1] = arguments[j];\n                                }\n                                listeners[i].fn.apply(listeners[i].context, args);\n                        }\n                    }\n                }\n                return true;\n            };\n            /**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */ EventEmitter.prototype.on = function on(event, fn, context) {\n                var listener = new EE(fn, context || this), evt = prefix ? prefix + event : event;\n                if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n                else if (!this._events[evt].fn) this._events[evt].push(listener);\n                else this._events[evt] = [\n                    this._events[evt],\n                    listener\n                ];\n                return this;\n            };\n            /**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */ EventEmitter.prototype.once = function once(event, fn, context) {\n                var listener = new EE(fn, context || this, true), evt = prefix ? prefix + event : event;\n                if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n                else if (!this._events[evt].fn) this._events[evt].push(listener);\n                else this._events[evt] = [\n                    this._events[evt],\n                    listener\n                ];\n                return this;\n            };\n            /**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n                var evt = prefix ? prefix + event : event;\n                if (!this._events[evt]) return this;\n                if (!fn) {\n                    if (--this._eventsCount === 0) this._events = new Events();\n                    else delete this._events[evt];\n                    return this;\n                }\n                var listeners = this._events[evt];\n                if (listeners.fn) {\n                    if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n                        if (--this._eventsCount === 0) this._events = new Events();\n                        else delete this._events[evt];\n                    }\n                } else {\n                    for(var i = 0, events = [], length = listeners.length; i < length; i++){\n                        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n                            events.push(listeners[i]);\n                        }\n                    }\n                    //\n                    // Reset the array, or remove it completely if we have no more listeners.\n                    //\n                    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n                    else if (--this._eventsCount === 0) this._events = new Events();\n                    else delete this._events[evt];\n                }\n                return this;\n            };\n            /**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n                var evt;\n                if (event) {\n                    evt = prefix ? prefix + event : event;\n                    if (this._events[evt]) {\n                        if (--this._eventsCount === 0) this._events = new Events();\n                        else delete this._events[evt];\n                    }\n                } else {\n                    this._events = new Events();\n                    this._eventsCount = 0;\n                }\n                return this;\n            };\n            //\n            // Alias methods names because people roll like that.\n            //\n            EventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            //\n            // This function doesn't apply anymore.\n            //\n            EventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n                return this;\n            };\n            //\n            // Expose the prefix.\n            //\n            EventEmitter.prefixed = prefix;\n            //\n            // Allow `EventEmitter` to be imported as module namespace.\n            //\n            EventEmitter.EventEmitter = EventEmitter;\n            //\n            // Expose the module.\n            //\n            if (\"undefined\" !== typeof module1) {\n                module1.exports = EventEmitter;\n            }\n        /***/ },\n        /* 55 */ /***/ function(module1, exports1, __nested_webpack_require_472657__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.matchText = exports1.matchSpacing = exports1.matchNewline = exports1.matchBlot = exports1.matchAttributor = exports1.default = undefined;\n            var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n                return typeof obj;\n            } : function(obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n            };\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _extend2 = __nested_webpack_require_472657__(3);\n            var _extend3 = _interopRequireDefault(_extend2);\n            var _quillDelta = __nested_webpack_require_472657__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _parchment = __nested_webpack_require_472657__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_472657__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _logger = __nested_webpack_require_472657__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            var _module = __nested_webpack_require_472657__(9);\n            var _module2 = _interopRequireDefault(_module);\n            var _align = __nested_webpack_require_472657__(36);\n            var _background = __nested_webpack_require_472657__(37);\n            var _code = __nested_webpack_require_472657__(13);\n            var _code2 = _interopRequireDefault(_code);\n            var _color = __nested_webpack_require_472657__(26);\n            var _direction = __nested_webpack_require_472657__(38);\n            var _font = __nested_webpack_require_472657__(39);\n            var _size = __nested_webpack_require_472657__(40);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var debug = (0, _logger2.default)(\"quill:clipboard\");\n            var DOM_KEY = \"__ql-matcher\";\n            var CLIPBOARD_CONFIG = [\n                [\n                    Node.TEXT_NODE,\n                    matchText\n                ],\n                [\n                    Node.TEXT_NODE,\n                    matchNewline\n                ],\n                [\n                    \"br\",\n                    matchBreak\n                ],\n                [\n                    Node.ELEMENT_NODE,\n                    matchNewline\n                ],\n                [\n                    Node.ELEMENT_NODE,\n                    matchBlot\n                ],\n                [\n                    Node.ELEMENT_NODE,\n                    matchSpacing\n                ],\n                [\n                    Node.ELEMENT_NODE,\n                    matchAttributor\n                ],\n                [\n                    Node.ELEMENT_NODE,\n                    matchStyles\n                ],\n                [\n                    \"li\",\n                    matchIndent\n                ],\n                [\n                    \"b\",\n                    matchAlias.bind(matchAlias, \"bold\")\n                ],\n                [\n                    \"i\",\n                    matchAlias.bind(matchAlias, \"italic\")\n                ],\n                [\n                    \"style\",\n                    matchIgnore\n                ]\n            ];\n            var ATTRIBUTE_ATTRIBUTORS = [\n                _align.AlignAttribute,\n                _direction.DirectionAttribute\n            ].reduce(function(memo, attr) {\n                memo[attr.keyName] = attr;\n                return memo;\n            }, {});\n            var STYLE_ATTRIBUTORS = [\n                _align.AlignStyle,\n                _background.BackgroundStyle,\n                _color.ColorStyle,\n                _direction.DirectionStyle,\n                _font.FontStyle,\n                _size.SizeStyle\n            ].reduce(function(memo, attr) {\n                memo[attr.keyName] = attr;\n                return memo;\n            }, {});\n            var Clipboard = function(_Module) {\n                _inherits(Clipboard, _Module);\n                function Clipboard(quill, options) {\n                    _classCallCheck(this, Clipboard);\n                    var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));\n                    _this.quill.root.addEventListener(\"paste\", _this.onPaste.bind(_this));\n                    _this.container = _this.quill.addContainer(\"ql-clipboard\");\n                    _this.container.setAttribute(\"contenteditable\", true);\n                    _this.container.setAttribute(\"tabindex\", -1);\n                    _this.matchers = [];\n                    CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function(_ref) {\n                        var _ref2 = _slicedToArray(_ref, 2), selector = _ref2[0], matcher = _ref2[1];\n                        if (!options.matchVisual && matcher === matchSpacing) return;\n                        _this.addMatcher(selector, matcher);\n                    });\n                    return _this;\n                }\n                _createClass(Clipboard, [\n                    {\n                        key: \"addMatcher\",\n                        value: function addMatcher(selector, matcher) {\n                            this.matchers.push([\n                                selector,\n                                matcher\n                            ]);\n                        }\n                    },\n                    {\n                        key: \"convert\",\n                        value: function convert(html) {\n                            if (typeof html === \"string\") {\n                                this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, \"><\"); // Remove spaces between tags\n                                return this.convert();\n                            }\n                            var formats = this.quill.getFormat(this.quill.selection.savedRange.index);\n                            if (formats[_code2.default.blotName]) {\n                                var text = this.container.innerText;\n                                this.container.innerHTML = \"\";\n                                return new _quillDelta2.default().insert(text, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));\n                            }\n                            var _prepareMatching = this.prepareMatching(), _prepareMatching2 = _slicedToArray(_prepareMatching, 2), elementMatchers = _prepareMatching2[0], textMatchers = _prepareMatching2[1];\n                            var delta = traverse(this.container, elementMatchers, textMatchers);\n                            // Remove trailing newline\n                            if (deltaEndsWith(delta, \"\\n\") && delta.ops[delta.ops.length - 1].attributes == null) {\n                                delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));\n                            }\n                            debug.log(\"convert\", this.container.innerHTML, delta);\n                            this.container.innerHTML = \"\";\n                            return delta;\n                        }\n                    },\n                    {\n                        key: \"dangerouslyPasteHTML\",\n                        value: function dangerouslyPasteHTML(index, html) {\n                            var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2.default.sources.API;\n                            if (typeof index === \"string\") {\n                                this.quill.setContents(this.convert(index), html);\n                                this.quill.setSelection(0, _quill2.default.sources.SILENT);\n                            } else {\n                                var paste = this.convert(html);\n                                this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);\n                                this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);\n                            }\n                        }\n                    },\n                    {\n                        key: \"onPaste\",\n                        value: function onPaste(e) {\n                            var _this2 = this;\n                            if (e.defaultPrevented || !this.quill.isEnabled()) return;\n                            var range = this.quill.getSelection();\n                            var delta = new _quillDelta2.default().retain(range.index);\n                            var scrollTop = this.quill.scrollingContainer.scrollTop;\n                            this.container.focus();\n                            this.quill.selection.update(_quill2.default.sources.SILENT);\n                            setTimeout(function() {\n                                delta = delta.concat(_this2.convert()).delete(range.length);\n                                _this2.quill.updateContents(delta, _quill2.default.sources.USER);\n                                // range.length contributes to delta.length()\n                                _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);\n                                _this2.quill.scrollingContainer.scrollTop = scrollTop;\n                                _this2.quill.focus();\n                            }, 1);\n                        }\n                    },\n                    {\n                        key: \"prepareMatching\",\n                        value: function prepareMatching() {\n                            var _this3 = this;\n                            var elementMatchers = [], textMatchers = [];\n                            this.matchers.forEach(function(pair) {\n                                var _pair = _slicedToArray(pair, 2), selector = _pair[0], matcher = _pair[1];\n                                switch(selector){\n                                    case Node.TEXT_NODE:\n                                        textMatchers.push(matcher);\n                                        break;\n                                    case Node.ELEMENT_NODE:\n                                        elementMatchers.push(matcher);\n                                        break;\n                                    default:\n                                        [].forEach.call(_this3.container.querySelectorAll(selector), function(node) {\n                                            // TODO use weakmap\n                                            node[DOM_KEY] = node[DOM_KEY] || [];\n                                            node[DOM_KEY].push(matcher);\n                                        });\n                                        break;\n                                }\n                            });\n                            return [\n                                elementMatchers,\n                                textMatchers\n                            ];\n                        }\n                    }\n                ]);\n                return Clipboard;\n            }(_module2.default);\n            Clipboard.DEFAULTS = {\n                matchers: [],\n                matchVisual: true\n            };\n            function applyFormat(delta, format, value) {\n                if ((typeof format === \"undefined\" ? \"undefined\" : _typeof(format)) === \"object\") {\n                    return Object.keys(format).reduce(function(delta, key) {\n                        return applyFormat(delta, key, format[key]);\n                    }, delta);\n                } else {\n                    return delta.reduce(function(delta, op) {\n                        if (op.attributes && op.attributes[format]) {\n                            return delta.push(op);\n                        } else {\n                            return delta.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));\n                        }\n                    }, new _quillDelta2.default());\n                }\n            }\n            function computeStyle(node) {\n                if (node.nodeType !== Node.ELEMENT_NODE) return {};\n                var DOM_KEY = \"__ql-computed-style\";\n                return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));\n            }\n            function deltaEndsWith(delta, text) {\n                var endText = \"\";\n                for(var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i){\n                    var op = delta.ops[i];\n                    if (typeof op.insert !== \"string\") break;\n                    endText = op.insert + endText;\n                }\n                return endText.slice(-1 * text.length) === text;\n            }\n            function isLine(node) {\n                if (node.childNodes.length === 0) return false; // Exclude embed blocks\n                var style = computeStyle(node);\n                return [\n                    \"block\",\n                    \"list-item\"\n                ].indexOf(style.display) > -1;\n            }\n            function traverse(node, elementMatchers, textMatchers) {\n                // Post-order\n                if (node.nodeType === node.TEXT_NODE) {\n                    return textMatchers.reduce(function(delta, matcher) {\n                        return matcher(node, delta);\n                    }, new _quillDelta2.default());\n                } else if (node.nodeType === node.ELEMENT_NODE) {\n                    return [].reduce.call(node.childNodes || [], function(delta, childNode) {\n                        var childrenDelta = traverse(childNode, elementMatchers, textMatchers);\n                        if (childNode.nodeType === node.ELEMENT_NODE) {\n                            childrenDelta = elementMatchers.reduce(function(childrenDelta, matcher) {\n                                return matcher(childNode, childrenDelta);\n                            }, childrenDelta);\n                            childrenDelta = (childNode[DOM_KEY] || []).reduce(function(childrenDelta, matcher) {\n                                return matcher(childNode, childrenDelta);\n                            }, childrenDelta);\n                        }\n                        return delta.concat(childrenDelta);\n                    }, new _quillDelta2.default());\n                } else {\n                    return new _quillDelta2.default();\n                }\n            }\n            function matchAlias(format, node, delta) {\n                return applyFormat(delta, format, true);\n            }\n            function matchAttributor(node, delta) {\n                var attributes = _parchment2.default.Attributor.Attribute.keys(node);\n                var classes = _parchment2.default.Attributor.Class.keys(node);\n                var styles = _parchment2.default.Attributor.Style.keys(node);\n                var formats = {};\n                attributes.concat(classes).concat(styles).forEach(function(name) {\n                    var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);\n                    if (attr != null) {\n                        formats[attr.attrName] = attr.value(node);\n                        if (formats[attr.attrName]) return;\n                    }\n                    attr = ATTRIBUTE_ATTRIBUTORS[name];\n                    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n                        formats[attr.attrName] = attr.value(node) || undefined;\n                    }\n                    attr = STYLE_ATTRIBUTORS[name];\n                    if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n                        attr = STYLE_ATTRIBUTORS[name];\n                        formats[attr.attrName] = attr.value(node) || undefined;\n                    }\n                });\n                if (Object.keys(formats).length > 0) {\n                    delta = applyFormat(delta, formats);\n                }\n                return delta;\n            }\n            function matchBlot(node, delta) {\n                var match = _parchment2.default.query(node);\n                if (match == null) return delta;\n                if (match.prototype instanceof _parchment2.default.Embed) {\n                    var embed = {};\n                    var value = match.value(node);\n                    if (value != null) {\n                        embed[match.blotName] = value;\n                        delta = new _quillDelta2.default().insert(embed, match.formats(node));\n                    }\n                } else if (typeof match.formats === \"function\") {\n                    delta = applyFormat(delta, match.blotName, match.formats(node));\n                }\n                return delta;\n            }\n            function matchBreak(node, delta) {\n                if (!deltaEndsWith(delta, \"\\n\")) {\n                    delta.insert(\"\\n\");\n                }\n                return delta;\n            }\n            function matchIgnore() {\n                return new _quillDelta2.default();\n            }\n            function matchIndent(node, delta) {\n                var match = _parchment2.default.query(node);\n                if (match == null || match.blotName !== \"list-item\" || !deltaEndsWith(delta, \"\\n\")) {\n                    return delta;\n                }\n                var indent = -1, parent = node.parentNode;\n                while(!parent.classList.contains(\"ql-clipboard\")){\n                    if ((_parchment2.default.query(parent) || {}).blotName === \"list\") {\n                        indent += 1;\n                    }\n                    parent = parent.parentNode;\n                }\n                if (indent <= 0) return delta;\n                return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, {\n                    indent: indent\n                }));\n            }\n            function matchNewline(node, delta) {\n                if (!deltaEndsWith(delta, \"\\n\")) {\n                    if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {\n                        delta.insert(\"\\n\");\n                    }\n                }\n                return delta;\n            }\n            function matchSpacing(node, delta) {\n                if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, \"\\n\\n\")) {\n                    var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);\n                    if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {\n                        delta.insert(\"\\n\");\n                    }\n                }\n                return delta;\n            }\n            function matchStyles(node, delta) {\n                var formats = {};\n                var style = node.style || {};\n                if (style.fontStyle && computeStyle(node).fontStyle === \"italic\") {\n                    formats.italic = true;\n                }\n                if (style.fontWeight && (computeStyle(node).fontWeight.startsWith(\"bold\") || parseInt(computeStyle(node).fontWeight) >= 700)) {\n                    formats.bold = true;\n                }\n                if (Object.keys(formats).length > 0) {\n                    delta = applyFormat(delta, formats);\n                }\n                if (parseFloat(style.textIndent || 0) > 0) {\n                    // Could be 0.5in\n                    delta = new _quillDelta2.default().insert(\"\t\").concat(delta);\n                }\n                return delta;\n            }\n            function matchText(node, delta) {\n                var text = node.data;\n                // Word represents empty line with <o:p>&nbsp;</o:p>\n                if (node.parentNode.tagName === \"O:P\") {\n                    return delta.insert(text.trim());\n                }\n                if (text.trim().length === 0 && node.parentNode.classList.contains(\"ql-clipboard\")) {\n                    return delta;\n                }\n                if (!computeStyle(node.parentNode).whiteSpace.startsWith(\"pre\")) {\n                    // eslint-disable-next-line func-style\n                    var replacer = function replacer(collapse, match) {\n                        match = match.replace(/[^\\u00a0]/g, \"\"); // \\u00a0 is nbsp;\n                        return match.length < 1 && collapse ? \" \" : match;\n                    };\n                    text = text.replace(/\\r\\n/g, \" \").replace(/\\n/g, \" \");\n                    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n                    if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {\n                        text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n                    }\n                    if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {\n                        text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n                    }\n                }\n                return delta.insert(text);\n            }\n            exports1.default = Clipboard;\n            exports1.matchAttributor = matchAttributor;\n            exports1.matchBlot = matchBlot;\n            exports1.matchNewline = matchNewline;\n            exports1.matchSpacing = matchSpacing;\n            exports1.matchText = matchText;\n        /***/ },\n        /* 56 */ /***/ function(module1, exports1, __nested_webpack_require_498245__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _inline = __nested_webpack_require_498245__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Bold = function(_Inline) {\n                _inherits(Bold, _Inline);\n                function Bold() {\n                    _classCallCheck(this, Bold);\n                    return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));\n                }\n                _createClass(Bold, [\n                    {\n                        key: \"optimize\",\n                        value: function optimize(context) {\n                            _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), \"optimize\", this).call(this, context);\n                            if (this.domNode.tagName !== this.statics.tagName[0]) {\n                                this.replaceWith(this.statics.blotName);\n                            }\n                        }\n                    }\n                ], [\n                    {\n                        key: \"create\",\n                        value: function create() {\n                            return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), \"create\", this).call(this);\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats() {\n                            return true;\n                        }\n                    }\n                ]);\n                return Bold;\n            }(_inline2.default);\n            Bold.blotName = \"bold\";\n            Bold.tagName = [\n                \"STRONG\",\n                \"B\"\n            ];\n            exports1.default = Bold;\n        /***/ },\n        /* 57 */ /***/ function(module1, exports1, __nested_webpack_require_503400__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.addControls = exports1.default = undefined;\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _quillDelta = __nested_webpack_require_503400__(2);\n            var _quillDelta2 = _interopRequireDefault(_quillDelta);\n            var _parchment = __nested_webpack_require_503400__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_503400__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _logger = __nested_webpack_require_503400__(10);\n            var _logger2 = _interopRequireDefault(_logger);\n            var _module = __nested_webpack_require_503400__(9);\n            var _module2 = _interopRequireDefault(_module);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var debug = (0, _logger2.default)(\"quill:toolbar\");\n            var Toolbar = function(_Module) {\n                _inherits(Toolbar, _Module);\n                function Toolbar(quill, options) {\n                    _classCallCheck(this, Toolbar);\n                    var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));\n                    if (Array.isArray(_this.options.container)) {\n                        var container = document.createElement(\"div\");\n                        addControls(container, _this.options.container);\n                        quill.container.parentNode.insertBefore(container, quill.container);\n                        _this.container = container;\n                    } else if (typeof _this.options.container === \"string\") {\n                        _this.container = document.querySelector(_this.options.container);\n                    } else {\n                        _this.container = _this.options.container;\n                    }\n                    if (!(_this.container instanceof HTMLElement)) {\n                        var _ret;\n                        return _ret = debug.error(\"Container required for toolbar\", _this.options), _possibleConstructorReturn(_this, _ret);\n                    }\n                    _this.container.classList.add(\"ql-toolbar\");\n                    _this.controls = [];\n                    _this.handlers = {};\n                    Object.keys(_this.options.handlers).forEach(function(format) {\n                        _this.addHandler(format, _this.options.handlers[format]);\n                    });\n                    [].forEach.call(_this.container.querySelectorAll(\"button, select\"), function(input) {\n                        _this.attach(input);\n                    });\n                    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function(type, range) {\n                        if (type === _quill2.default.events.SELECTION_CHANGE) {\n                            _this.update(range);\n                        }\n                    });\n                    _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {\n                        var _this$quill$selection = _this.quill.selection.getRange(), _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1), range = _this$quill$selection2[0]; // quill.getSelection triggers update\n                        _this.update(range);\n                    });\n                    return _this;\n                }\n                _createClass(Toolbar, [\n                    {\n                        key: \"addHandler\",\n                        value: function addHandler(format, handler) {\n                            this.handlers[format] = handler;\n                        }\n                    },\n                    {\n                        key: \"attach\",\n                        value: function attach(input) {\n                            var _this2 = this;\n                            var format = [].find.call(input.classList, function(className) {\n                                return className.indexOf(\"ql-\") === 0;\n                            });\n                            if (!format) return;\n                            format = format.slice(\"ql-\".length);\n                            if (input.tagName === \"BUTTON\") {\n                                input.setAttribute(\"type\", \"button\");\n                            }\n                            if (this.handlers[format] == null) {\n                                if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {\n                                    debug.warn(\"ignoring attaching to disabled format\", format, input);\n                                    return;\n                                }\n                                if (_parchment2.default.query(format) == null) {\n                                    debug.warn(\"ignoring attaching to nonexistent format\", format, input);\n                                    return;\n                                }\n                            }\n                            var eventName = input.tagName === \"SELECT\" ? \"change\" : \"click\";\n                            input.addEventListener(eventName, function(e) {\n                                var value = void 0;\n                                if (input.tagName === \"SELECT\") {\n                                    if (input.selectedIndex < 0) return;\n                                    var selected = input.options[input.selectedIndex];\n                                    if (selected.hasAttribute(\"selected\")) {\n                                        value = false;\n                                    } else {\n                                        value = selected.value || false;\n                                    }\n                                } else {\n                                    if (input.classList.contains(\"ql-active\")) {\n                                        value = false;\n                                    } else {\n                                        value = input.value || !input.hasAttribute(\"value\");\n                                    }\n                                    e.preventDefault();\n                                }\n                                _this2.quill.focus();\n                                var _quill$selection$getR = _this2.quill.selection.getRange(), _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1), range = _quill$selection$getR2[0];\n                                if (_this2.handlers[format] != null) {\n                                    _this2.handlers[format].call(_this2, value);\n                                } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {\n                                    value = prompt(\"Enter \" + format);\n                                    if (!value) return;\n                                    _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);\n                                } else {\n                                    _this2.quill.format(format, value, _quill2.default.sources.USER);\n                                }\n                                _this2.update(range);\n                            });\n                            // TODO use weakmap\n                            this.controls.push([\n                                format,\n                                input\n                            ]);\n                        }\n                    },\n                    {\n                        key: \"update\",\n                        value: function update(range) {\n                            var formats = range == null ? {} : this.quill.getFormat(range);\n                            this.controls.forEach(function(pair) {\n                                var _pair = _slicedToArray(pair, 2), format = _pair[0], input = _pair[1];\n                                if (input.tagName === \"SELECT\") {\n                                    var option = void 0;\n                                    if (range == null) {\n                                        option = null;\n                                    } else if (formats[format] == null) {\n                                        option = input.querySelector(\"option[selected]\");\n                                    } else if (!Array.isArray(formats[format])) {\n                                        var value = formats[format];\n                                        if (typeof value === \"string\") {\n                                            value = value.replace(/\\\"/g, '\\\\\"');\n                                        }\n                                        option = input.querySelector('option[value=\"' + value + '\"]');\n                                    }\n                                    if (option == null) {\n                                        input.value = \"\"; // TODO make configurable?\n                                        input.selectedIndex = -1;\n                                    } else {\n                                        option.selected = true;\n                                    }\n                                } else {\n                                    if (range == null) {\n                                        input.classList.remove(\"ql-active\");\n                                    } else if (input.hasAttribute(\"value\")) {\n                                        // both being null should match (default values)\n                                        // '1' should match with 1 (headers)\n                                        var isActive = formats[format] === input.getAttribute(\"value\") || formats[format] != null && formats[format].toString() === input.getAttribute(\"value\") || formats[format] == null && !input.getAttribute(\"value\");\n                                        input.classList.toggle(\"ql-active\", isActive);\n                                    } else {\n                                        input.classList.toggle(\"ql-active\", formats[format] != null);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                ]);\n                return Toolbar;\n            }(_module2.default);\n            Toolbar.DEFAULTS = {};\n            function addButton(container, format, value) {\n                var input = document.createElement(\"button\");\n                input.setAttribute(\"type\", \"button\");\n                input.classList.add(\"ql-\" + format);\n                if (value != null) {\n                    input.value = value;\n                }\n                container.appendChild(input);\n            }\n            function addControls(container, groups) {\n                if (!Array.isArray(groups[0])) {\n                    groups = [\n                        groups\n                    ];\n                }\n                groups.forEach(function(controls) {\n                    var group = document.createElement(\"span\");\n                    group.classList.add(\"ql-formats\");\n                    controls.forEach(function(control) {\n                        if (typeof control === \"string\") {\n                            addButton(group, control);\n                        } else {\n                            var format = Object.keys(control)[0];\n                            var value = control[format];\n                            if (Array.isArray(value)) {\n                                addSelect(group, format, value);\n                            } else {\n                                addButton(group, format, value);\n                            }\n                        }\n                    });\n                    container.appendChild(group);\n                });\n            }\n            function addSelect(container, format, values) {\n                var input = document.createElement(\"select\");\n                input.classList.add(\"ql-\" + format);\n                values.forEach(function(value) {\n                    var option = document.createElement(\"option\");\n                    if (value !== false) {\n                        option.setAttribute(\"value\", value);\n                    } else {\n                        option.setAttribute(\"selected\", \"selected\");\n                    }\n                    input.appendChild(option);\n                });\n                container.appendChild(input);\n            }\n            Toolbar.DEFAULTS = {\n                container: null,\n                handlers: {\n                    clean: function clean() {\n                        var _this3 = this;\n                        var range = this.quill.getSelection();\n                        if (range == null) return;\n                        if (range.length == 0) {\n                            var formats = this.quill.getFormat();\n                            Object.keys(formats).forEach(function(name) {\n                                // Clean functionality in existing apps only clean inline formats\n                                if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {\n                                    _this3.quill.format(name, false);\n                                }\n                            });\n                        } else {\n                            this.quill.removeFormat(range, _quill2.default.sources.USER);\n                        }\n                    },\n                    direction: function direction(value) {\n                        var align = this.quill.getFormat()[\"align\"];\n                        if (value === \"rtl\" && align == null) {\n                            this.quill.format(\"align\", \"right\", _quill2.default.sources.USER);\n                        } else if (!value && align === \"right\") {\n                            this.quill.format(\"align\", false, _quill2.default.sources.USER);\n                        }\n                        this.quill.format(\"direction\", value, _quill2.default.sources.USER);\n                    },\n                    indent: function indent(value) {\n                        var range = this.quill.getSelection();\n                        var formats = this.quill.getFormat(range);\n                        var indent = parseInt(formats.indent || 0);\n                        if (value === \"+1\" || value === \"-1\") {\n                            var modifier = value === \"+1\" ? 1 : -1;\n                            if (formats.direction === \"rtl\") modifier *= -1;\n                            this.quill.format(\"indent\", indent + modifier, _quill2.default.sources.USER);\n                        }\n                    },\n                    link: function link(value) {\n                        if (value === true) {\n                            value = prompt(\"Enter link URL:\");\n                        }\n                        this.quill.format(\"link\", value, _quill2.default.sources.USER);\n                    },\n                    list: function list(value) {\n                        var range = this.quill.getSelection();\n                        var formats = this.quill.getFormat(range);\n                        if (value === \"check\") {\n                            if (formats[\"list\"] === \"checked\" || formats[\"list\"] === \"unchecked\") {\n                                this.quill.format(\"list\", false, _quill2.default.sources.USER);\n                            } else {\n                                this.quill.format(\"list\", \"unchecked\", _quill2.default.sources.USER);\n                            }\n                        } else {\n                            this.quill.format(\"list\", value, _quill2.default.sources.USER);\n                        }\n                    }\n                }\n            };\n            exports1.default = Toolbar;\n            exports1.addControls = addControls;\n        /***/ },\n        /* 58 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <polyline class=\"ql-even ql-stroke\" points=\"5 7 3 9 5 11\"></polyline> <polyline class=\"ql-even ql-stroke\" points=\"13 7 15 9 13 11\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>';\n        /***/ },\n        /* 59 */ /***/ function(module1, exports1, __nested_webpack_require_523754__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _picker = __nested_webpack_require_523754__(28);\n            var _picker2 = _interopRequireDefault(_picker);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ColorPicker = function(_Picker) {\n                _inherits(ColorPicker, _Picker);\n                function ColorPicker(select, label) {\n                    _classCallCheck(this, ColorPicker);\n                    var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));\n                    _this.label.innerHTML = label;\n                    _this.container.classList.add(\"ql-color-picker\");\n                    [].slice.call(_this.container.querySelectorAll(\".ql-picker-item\"), 0, 7).forEach(function(item) {\n                        item.classList.add(\"ql-primary\");\n                    });\n                    return _this;\n                }\n                _createClass(ColorPicker, [\n                    {\n                        key: \"buildItem\",\n                        value: function buildItem(option) {\n                            var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), \"buildItem\", this).call(this, option);\n                            item.style.backgroundColor = option.getAttribute(\"value\") || \"\";\n                            return item;\n                        }\n                    },\n                    {\n                        key: \"selectItem\",\n                        value: function selectItem(item, trigger) {\n                            _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), \"selectItem\", this).call(this, item, trigger);\n                            var colorLabel = this.label.querySelector(\".ql-color-label\");\n                            var value = item ? item.getAttribute(\"data-value\") || \"\" : \"\";\n                            if (colorLabel) {\n                                if (colorLabel.tagName === \"line\") {\n                                    colorLabel.style.stroke = value;\n                                } else {\n                                    colorLabel.style.fill = value;\n                                }\n                            }\n                        }\n                    }\n                ]);\n                return ColorPicker;\n            }(_picker2.default);\n            exports1.default = ColorPicker;\n        /***/ },\n        /* 60 */ /***/ function(module1, exports1, __nested_webpack_require_529569__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _picker = __nested_webpack_require_529569__(28);\n            var _picker2 = _interopRequireDefault(_picker);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var IconPicker = function(_Picker) {\n                _inherits(IconPicker, _Picker);\n                function IconPicker(select, icons) {\n                    _classCallCheck(this, IconPicker);\n                    var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));\n                    _this.container.classList.add(\"ql-icon-picker\");\n                    [].forEach.call(_this.container.querySelectorAll(\".ql-picker-item\"), function(item) {\n                        item.innerHTML = icons[item.getAttribute(\"data-value\") || \"\"];\n                    });\n                    _this.defaultItem = _this.container.querySelector(\".ql-selected\");\n                    _this.selectItem(_this.defaultItem);\n                    return _this;\n                }\n                _createClass(IconPicker, [\n                    {\n                        key: \"selectItem\",\n                        value: function selectItem(item, trigger) {\n                            _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), \"selectItem\", this).call(this, item, trigger);\n                            item = item || this.defaultItem;\n                            this.label.innerHTML = item.innerHTML;\n                        }\n                    }\n                ]);\n                return IconPicker;\n            }(_picker2.default);\n            exports1.default = IconPicker;\n        /***/ },\n        /* 61 */ /***/ function(module1, exports1, __webpack_require__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            var Tooltip = function() {\n                function Tooltip(quill, boundsContainer) {\n                    var _this = this;\n                    _classCallCheck(this, Tooltip);\n                    this.quill = quill;\n                    this.boundsContainer = boundsContainer || document.body;\n                    this.root = quill.addContainer(\"ql-tooltip\");\n                    this.root.innerHTML = this.constructor.TEMPLATE;\n                    if (this.quill.root === this.quill.scrollingContainer) {\n                        this.quill.root.addEventListener(\"scroll\", function() {\n                            _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + \"px\";\n                        });\n                    }\n                    this.hide();\n                }\n                _createClass(Tooltip, [\n                    {\n                        key: \"hide\",\n                        value: function hide() {\n                            this.root.classList.add(\"ql-hidden\");\n                        }\n                    },\n                    {\n                        key: \"position\",\n                        value: function position(reference) {\n                            var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n                            // root.scrollTop should be 0 if scrollContainer !== root\n                            var top = reference.bottom + this.quill.root.scrollTop;\n                            this.root.style.left = left + \"px\";\n                            this.root.style.top = top + \"px\";\n                            this.root.classList.remove(\"ql-flip\");\n                            var containerBounds = this.boundsContainer.getBoundingClientRect();\n                            var rootBounds = this.root.getBoundingClientRect();\n                            var shift = 0;\n                            if (rootBounds.right > containerBounds.right) {\n                                shift = containerBounds.right - rootBounds.right;\n                                this.root.style.left = left + shift + \"px\";\n                            }\n                            if (rootBounds.left < containerBounds.left) {\n                                shift = containerBounds.left - rootBounds.left;\n                                this.root.style.left = left + shift + \"px\";\n                            }\n                            if (rootBounds.bottom > containerBounds.bottom) {\n                                var height = rootBounds.bottom - rootBounds.top;\n                                var verticalShift = reference.bottom - reference.top + height;\n                                this.root.style.top = top - verticalShift + \"px\";\n                                this.root.classList.add(\"ql-flip\");\n                            }\n                            return shift;\n                        }\n                    },\n                    {\n                        key: \"show\",\n                        value: function show() {\n                            this.root.classList.remove(\"ql-editing\");\n                            this.root.classList.remove(\"ql-hidden\");\n                        }\n                    }\n                ]);\n                return Tooltip;\n            }();\n            exports1.default = Tooltip;\n        /***/ },\n        /* 62 */ /***/ function(module1, exports1, __nested_webpack_require_539245__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _slicedToArray = function() {\n                function sliceIterator(arr, i) {\n                    var _arr = [];\n                    var _n = true;\n                    var _d = false;\n                    var _e = undefined;\n                    try {\n                        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n                            _arr.push(_s.value);\n                            if (i && _arr.length === i) break;\n                        }\n                    } catch (err) {\n                        _d = true;\n                        _e = err;\n                    } finally{\n                        try {\n                            if (!_n && _i[\"return\"]) _i[\"return\"]();\n                        } finally{\n                            if (_d) throw _e;\n                        }\n                    }\n                    return _arr;\n                }\n                return function(arr, i) {\n                    if (Array.isArray(arr)) {\n                        return arr;\n                    } else if (Symbol.iterator in Object(arr)) {\n                        return sliceIterator(arr, i);\n                    } else {\n                        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n                    }\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _extend = __nested_webpack_require_539245__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _emitter = __nested_webpack_require_539245__(8);\n            var _emitter2 = _interopRequireDefault(_emitter);\n            var _base = __nested_webpack_require_539245__(43);\n            var _base2 = _interopRequireDefault(_base);\n            var _link = __nested_webpack_require_539245__(27);\n            var _link2 = _interopRequireDefault(_link);\n            var _selection = __nested_webpack_require_539245__(15);\n            var _icons = __nested_webpack_require_539245__(41);\n            var _icons2 = _interopRequireDefault(_icons);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var TOOLBAR_CONFIG = [\n                [\n                    {\n                        header: [\n                            \"1\",\n                            \"2\",\n                            \"3\",\n                            false\n                        ]\n                    }\n                ],\n                [\n                    \"bold\",\n                    \"italic\",\n                    \"underline\",\n                    \"link\"\n                ],\n                [\n                    {\n                        list: \"ordered\"\n                    },\n                    {\n                        list: \"bullet\"\n                    }\n                ],\n                [\n                    \"clean\"\n                ]\n            ];\n            var SnowTheme = function(_BaseTheme) {\n                _inherits(SnowTheme, _BaseTheme);\n                function SnowTheme(quill, options) {\n                    _classCallCheck(this, SnowTheme);\n                    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n                        options.modules.toolbar.container = TOOLBAR_CONFIG;\n                    }\n                    var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));\n                    _this.quill.container.classList.add(\"ql-snow\");\n                    return _this;\n                }\n                _createClass(SnowTheme, [\n                    {\n                        key: \"extendToolbar\",\n                        value: function extendToolbar(toolbar) {\n                            toolbar.container.classList.add(\"ql-snow\");\n                            this.buildButtons([].slice.call(toolbar.container.querySelectorAll(\"button\")), _icons2.default);\n                            this.buildPickers([].slice.call(toolbar.container.querySelectorAll(\"select\")), _icons2.default);\n                            this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n                            if (toolbar.container.querySelector(\".ql-link\")) {\n                                this.quill.keyboard.addBinding({\n                                    key: \"K\",\n                                    shortKey: true\n                                }, function(range, context) {\n                                    toolbar.handlers[\"link\"].call(toolbar, !context.format.link);\n                                });\n                            }\n                        }\n                    }\n                ]);\n                return SnowTheme;\n            }(_base2.default);\n            SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\n                modules: {\n                    toolbar: {\n                        handlers: {\n                            link: function link(value) {\n                                if (value) {\n                                    var range = this.quill.getSelection();\n                                    if (range == null || range.length == 0) return;\n                                    var preview = this.quill.getText(range);\n                                    if (/^\\S+@\\S+\\.\\S+$/.test(preview) && preview.indexOf(\"mailto:\") !== 0) {\n                                        preview = \"mailto:\" + preview;\n                                    }\n                                    var tooltip = this.quill.theme.tooltip;\n                                    tooltip.edit(\"link\", preview);\n                                } else {\n                                    this.quill.format(\"link\", false);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            var SnowTooltip = function(_BaseTooltip) {\n                _inherits(SnowTooltip, _BaseTooltip);\n                function SnowTooltip(quill, bounds) {\n                    _classCallCheck(this, SnowTooltip);\n                    var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));\n                    _this2.preview = _this2.root.querySelector(\"a.ql-preview\");\n                    return _this2;\n                }\n                _createClass(SnowTooltip, [\n                    {\n                        key: \"listen\",\n                        value: function listen() {\n                            var _this3 = this;\n                            _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), \"listen\", this).call(this);\n                            this.root.querySelector(\"a.ql-action\").addEventListener(\"click\", function(event) {\n                                if (_this3.root.classList.contains(\"ql-editing\")) {\n                                    _this3.save();\n                                } else {\n                                    _this3.edit(\"link\", _this3.preview.textContent);\n                                }\n                                event.preventDefault();\n                            });\n                            this.root.querySelector(\"a.ql-remove\").addEventListener(\"click\", function(event) {\n                                if (_this3.linkRange != null) {\n                                    var range = _this3.linkRange;\n                                    _this3.restoreFocus();\n                                    _this3.quill.formatText(range, \"link\", false, _emitter2.default.sources.USER);\n                                    delete _this3.linkRange;\n                                }\n                                event.preventDefault();\n                                _this3.hide();\n                            });\n                            this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function(range, oldRange, source) {\n                                if (range == null) return;\n                                if (range.length === 0 && source === _emitter2.default.sources.USER) {\n                                    var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index), _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2), link = _quill$scroll$descend2[0], offset = _quill$scroll$descend2[1];\n                                    if (link != null) {\n                                        _this3.linkRange = new _selection.Range(range.index - offset, link.length());\n                                        var preview = _link2.default.formats(link.domNode);\n                                        _this3.preview.textContent = preview;\n                                        _this3.preview.setAttribute(\"href\", preview);\n                                        _this3.show();\n                                        _this3.position(_this3.quill.getBounds(_this3.linkRange));\n                                        return;\n                                    }\n                                } else {\n                                    delete _this3.linkRange;\n                                }\n                                _this3.hide();\n                            });\n                        }\n                    },\n                    {\n                        key: \"show\",\n                        value: function show() {\n                            _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), \"show\", this).call(this);\n                            this.root.removeAttribute(\"data-mode\");\n                        }\n                    }\n                ]);\n                return SnowTooltip;\n            }(_base.BaseTooltip);\n            SnowTooltip.TEMPLATE = [\n                '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n                '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n                '<a class=\"ql-action\"></a>',\n                '<a class=\"ql-remove\"></a>'\n            ].join(\"\");\n            exports1.default = SnowTheme;\n        /***/ },\n        /* 63 */ /***/ function(module1, exports1, __nested_webpack_require_552749__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _core = __nested_webpack_require_552749__(29);\n            var _core2 = _interopRequireDefault(_core);\n            var _align = __nested_webpack_require_552749__(36);\n            var _direction = __nested_webpack_require_552749__(38);\n            var _indent = __nested_webpack_require_552749__(64);\n            var _blockquote = __nested_webpack_require_552749__(65);\n            var _blockquote2 = _interopRequireDefault(_blockquote);\n            var _header = __nested_webpack_require_552749__(66);\n            var _header2 = _interopRequireDefault(_header);\n            var _list = __nested_webpack_require_552749__(67);\n            var _list2 = _interopRequireDefault(_list);\n            var _background = __nested_webpack_require_552749__(37);\n            var _color = __nested_webpack_require_552749__(26);\n            var _font = __nested_webpack_require_552749__(39);\n            var _size = __nested_webpack_require_552749__(40);\n            var _bold = __nested_webpack_require_552749__(56);\n            var _bold2 = _interopRequireDefault(_bold);\n            var _italic = __nested_webpack_require_552749__(68);\n            var _italic2 = _interopRequireDefault(_italic);\n            var _link = __nested_webpack_require_552749__(27);\n            var _link2 = _interopRequireDefault(_link);\n            var _script = __nested_webpack_require_552749__(69);\n            var _script2 = _interopRequireDefault(_script);\n            var _strike = __nested_webpack_require_552749__(70);\n            var _strike2 = _interopRequireDefault(_strike);\n            var _underline = __nested_webpack_require_552749__(71);\n            var _underline2 = _interopRequireDefault(_underline);\n            var _image = __nested_webpack_require_552749__(72);\n            var _image2 = _interopRequireDefault(_image);\n            var _video = __nested_webpack_require_552749__(73);\n            var _video2 = _interopRequireDefault(_video);\n            var _code = __nested_webpack_require_552749__(13);\n            var _code2 = _interopRequireDefault(_code);\n            var _formula = __nested_webpack_require_552749__(74);\n            var _formula2 = _interopRequireDefault(_formula);\n            var _syntax = __nested_webpack_require_552749__(75);\n            var _syntax2 = _interopRequireDefault(_syntax);\n            var _toolbar = __nested_webpack_require_552749__(57);\n            var _toolbar2 = _interopRequireDefault(_toolbar);\n            var _icons = __nested_webpack_require_552749__(41);\n            var _icons2 = _interopRequireDefault(_icons);\n            var _picker = __nested_webpack_require_552749__(28);\n            var _picker2 = _interopRequireDefault(_picker);\n            var _colorPicker = __nested_webpack_require_552749__(59);\n            var _colorPicker2 = _interopRequireDefault(_colorPicker);\n            var _iconPicker = __nested_webpack_require_552749__(60);\n            var _iconPicker2 = _interopRequireDefault(_iconPicker);\n            var _tooltip = __nested_webpack_require_552749__(61);\n            var _tooltip2 = _interopRequireDefault(_tooltip);\n            var _bubble = __nested_webpack_require_552749__(108);\n            var _bubble2 = _interopRequireDefault(_bubble);\n            var _snow = __nested_webpack_require_552749__(62);\n            var _snow2 = _interopRequireDefault(_snow);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            _core2.default.register({\n                \"attributors/attribute/direction\": _direction.DirectionAttribute,\n                \"attributors/class/align\": _align.AlignClass,\n                \"attributors/class/background\": _background.BackgroundClass,\n                \"attributors/class/color\": _color.ColorClass,\n                \"attributors/class/direction\": _direction.DirectionClass,\n                \"attributors/class/font\": _font.FontClass,\n                \"attributors/class/size\": _size.SizeClass,\n                \"attributors/style/align\": _align.AlignStyle,\n                \"attributors/style/background\": _background.BackgroundStyle,\n                \"attributors/style/color\": _color.ColorStyle,\n                \"attributors/style/direction\": _direction.DirectionStyle,\n                \"attributors/style/font\": _font.FontStyle,\n                \"attributors/style/size\": _size.SizeStyle\n            }, true);\n            _core2.default.register({\n                \"formats/align\": _align.AlignClass,\n                \"formats/direction\": _direction.DirectionClass,\n                \"formats/indent\": _indent.IndentClass,\n                \"formats/background\": _background.BackgroundStyle,\n                \"formats/color\": _color.ColorStyle,\n                \"formats/font\": _font.FontClass,\n                \"formats/size\": _size.SizeClass,\n                \"formats/blockquote\": _blockquote2.default,\n                \"formats/code-block\": _code2.default,\n                \"formats/header\": _header2.default,\n                \"formats/list\": _list2.default,\n                \"formats/bold\": _bold2.default,\n                \"formats/code\": _code.Code,\n                \"formats/italic\": _italic2.default,\n                \"formats/link\": _link2.default,\n                \"formats/script\": _script2.default,\n                \"formats/strike\": _strike2.default,\n                \"formats/underline\": _underline2.default,\n                \"formats/image\": _image2.default,\n                \"formats/video\": _video2.default,\n                \"formats/list/item\": _list.ListItem,\n                \"modules/formula\": _formula2.default,\n                \"modules/syntax\": _syntax2.default,\n                \"modules/toolbar\": _toolbar2.default,\n                \"themes/bubble\": _bubble2.default,\n                \"themes/snow\": _snow2.default,\n                \"ui/icons\": _icons2.default,\n                \"ui/picker\": _picker2.default,\n                \"ui/icon-picker\": _iconPicker2.default,\n                \"ui/color-picker\": _colorPicker2.default,\n                \"ui/tooltip\": _tooltip2.default\n            }, true);\n            exports1.default = _core2.default;\n        /***/ },\n        /* 64 */ /***/ function(module1, exports1, __nested_webpack_require_558721__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.IndentClass = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_558721__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var IdentAttributor = function(_Parchment$Attributor) {\n                _inherits(IdentAttributor, _Parchment$Attributor);\n                function IdentAttributor() {\n                    _classCallCheck(this, IdentAttributor);\n                    return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));\n                }\n                _createClass(IdentAttributor, [\n                    {\n                        key: \"add\",\n                        value: function add(node, value) {\n                            if (value === \"+1\" || value === \"-1\") {\n                                var indent = this.value(node) || 0;\n                                value = value === \"+1\" ? indent + 1 : indent - 1;\n                            }\n                            if (value === 0) {\n                                this.remove(node);\n                                return true;\n                            } else {\n                                return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), \"add\", this).call(this, node, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"canAdd\",\n                        value: function canAdd(node, value) {\n                            return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), \"canAdd\", this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), \"canAdd\", this).call(this, node, parseInt(value));\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value(node) {\n                            return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), \"value\", this).call(this, node)) || undefined; // Don't return NaN\n                        }\n                    }\n                ]);\n                return IdentAttributor;\n            }(_parchment2.default.Attributor.Class);\n            var IndentClass = new IdentAttributor(\"indent\", \"ql-indent\", {\n                scope: _parchment2.default.Scope.BLOCK,\n                whitelist: [\n                    1,\n                    2,\n                    3,\n                    4,\n                    5,\n                    6,\n                    7,\n                    8\n                ]\n            });\n            exports1.IndentClass = IndentClass;\n        /***/ },\n        /* 65 */ /***/ function(module1, exports1, __nested_webpack_require_564983__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _block = __nested_webpack_require_564983__(4);\n            var _block2 = _interopRequireDefault(_block);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Blockquote = function(_Block) {\n                _inherits(Blockquote, _Block);\n                function Blockquote() {\n                    _classCallCheck(this, Blockquote);\n                    return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));\n                }\n                return Blockquote;\n            }(_block2.default);\n            Blockquote.blotName = \"blockquote\";\n            Blockquote.tagName = \"blockquote\";\n            exports1.default = Blockquote;\n        /***/ },\n        /* 66 */ /***/ function(module1, exports1, __nested_webpack_require_567362__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _block = __nested_webpack_require_567362__(4);\n            var _block2 = _interopRequireDefault(_block);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Header = function(_Block) {\n                _inherits(Header, _Block);\n                function Header() {\n                    _classCallCheck(this, Header);\n                    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n                }\n                _createClass(Header, null, [\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            return this.tagName.indexOf(domNode.tagName) + 1;\n                        }\n                    }\n                ]);\n                return Header;\n            }(_block2.default);\n            Header.blotName = \"header\";\n            Header.tagName = [\n                \"H1\",\n                \"H2\",\n                \"H3\",\n                \"H4\",\n                \"H5\",\n                \"H6\"\n            ];\n            exports1.default = Header;\n        /***/ },\n        /* 67 */ /***/ function(module1, exports1, __nested_webpack_require_571012__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.ListItem = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_571012__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _block = __nested_webpack_require_571012__(4);\n            var _block2 = _interopRequireDefault(_block);\n            var _container = __nested_webpack_require_571012__(25);\n            var _container2 = _interopRequireDefault(_container);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _defineProperty(obj, key, value) {\n                if (key in obj) {\n                    Object.defineProperty(obj, key, {\n                        value: value,\n                        enumerable: true,\n                        configurable: true,\n                        writable: true\n                    });\n                } else {\n                    obj[key] = value;\n                }\n                return obj;\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ListItem = function(_Block) {\n                _inherits(ListItem, _Block);\n                function ListItem() {\n                    _classCallCheck(this, ListItem);\n                    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));\n                }\n                _createClass(ListItem, [\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (name === List.blotName && !value) {\n                                this.replaceWith(_parchment2.default.create(this.statics.scope));\n                            } else {\n                                _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), \"format\", this).call(this, name, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"remove\",\n                        value: function remove() {\n                            if (this.prev == null && this.next == null) {\n                                this.parent.remove();\n                            } else {\n                                _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), \"remove\", this).call(this);\n                            }\n                        }\n                    },\n                    {\n                        key: \"replaceWith\",\n                        value: function replaceWith(name, value) {\n                            this.parent.isolate(this.offset(this.parent), this.length());\n                            if (name === this.parent.statics.blotName) {\n                                this.parent.replaceWith(name, value);\n                                return this;\n                            } else {\n                                this.parent.unwrap();\n                                return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), \"replaceWith\", this).call(this, name, value);\n                            }\n                        }\n                    }\n                ], [\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), \"formats\", this).call(this, domNode);\n                        }\n                    }\n                ]);\n                return ListItem;\n            }(_block2.default);\n            ListItem.blotName = \"list-item\";\n            ListItem.tagName = \"LI\";\n            var List = function(_Container) {\n                _inherits(List, _Container);\n                _createClass(List, null, [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var tagName = value === \"ordered\" ? \"OL\" : \"UL\";\n                            var node = _get(List.__proto__ || Object.getPrototypeOf(List), \"create\", this).call(this, tagName);\n                            if (value === \"checked\" || value === \"unchecked\") {\n                                node.setAttribute(\"data-checked\", value === \"checked\");\n                            }\n                            return node;\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            if (domNode.tagName === \"OL\") return \"ordered\";\n                            if (domNode.tagName === \"UL\") {\n                                if (domNode.hasAttribute(\"data-checked\")) {\n                                    return domNode.getAttribute(\"data-checked\") === \"true\" ? \"checked\" : \"unchecked\";\n                                } else {\n                                    return \"bullet\";\n                                }\n                            }\n                            return undefined;\n                        }\n                    }\n                ]);\n                function List(domNode) {\n                    _classCallCheck(this, List);\n                    var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));\n                    var listEventHandler = function listEventHandler(e) {\n                        if (e.target.parentNode !== domNode) return;\n                        var format = _this2.statics.formats(domNode);\n                        var blot = _parchment2.default.find(e.target);\n                        if (format === \"checked\") {\n                            blot.format(\"list\", \"unchecked\");\n                        } else if (format === \"unchecked\") {\n                            blot.format(\"list\", \"checked\");\n                        }\n                    };\n                    domNode.addEventListener(\"touchstart\", listEventHandler);\n                    domNode.addEventListener(\"mousedown\", listEventHandler);\n                    return _this2;\n                }\n                _createClass(List, [\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (this.children.length > 0) {\n                                this.children.tail.format(name, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats() {\n                            // We don't inherit from FormatBlot\n                            return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));\n                        }\n                    },\n                    {\n                        key: \"insertBefore\",\n                        value: function insertBefore(blot, ref) {\n                            if (blot instanceof ListItem) {\n                                _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), \"insertBefore\", this).call(this, blot, ref);\n                            } else {\n                                var index = ref == null ? this.length() : ref.offset(this);\n                                var after = this.split(index);\n                                after.parent.insertBefore(blot, after);\n                            }\n                        }\n                    },\n                    {\n                        key: \"optimize\",\n                        value: function optimize(context) {\n                            _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), \"optimize\", this).call(this, context);\n                            var next = this.next;\n                            if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute(\"data-checked\") === this.domNode.getAttribute(\"data-checked\")) {\n                                next.moveChildren(this);\n                                next.remove();\n                            }\n                        }\n                    },\n                    {\n                        key: \"replace\",\n                        value: function replace(target) {\n                            if (target.statics.blotName !== this.statics.blotName) {\n                                var item = _parchment2.default.create(this.statics.defaultChild);\n                                target.moveChildren(item);\n                                this.appendChild(item);\n                            }\n                            _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), \"replace\", this).call(this, target);\n                        }\n                    }\n                ]);\n                return List;\n            }(_container2.default);\n            List.blotName = \"list\";\n            List.scope = _parchment2.default.Scope.BLOCK_BLOT;\n            List.tagName = [\n                \"OL\",\n                \"UL\"\n            ];\n            List.defaultChild = \"list-item\";\n            List.allowedChildren = [\n                ListItem\n            ];\n            exports1.ListItem = ListItem;\n            exports1.default = List;\n        /***/ },\n        /* 68 */ /***/ function(module1, exports1, __nested_webpack_require_583767__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _bold = __nested_webpack_require_583767__(56);\n            var _bold2 = _interopRequireDefault(_bold);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Italic = function(_Bold) {\n                _inherits(Italic, _Bold);\n                function Italic() {\n                    _classCallCheck(this, Italic);\n                    return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));\n                }\n                return Italic;\n            }(_bold2.default);\n            Italic.blotName = \"italic\";\n            Italic.tagName = [\n                \"EM\",\n                \"I\"\n            ];\n            exports1.default = Italic;\n        /***/ },\n        /* 69 */ /***/ function(module1, exports1, __nested_webpack_require_586142__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _inline = __nested_webpack_require_586142__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Script = function(_Inline) {\n                _inherits(Script, _Inline);\n                function Script() {\n                    _classCallCheck(this, Script);\n                    return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));\n                }\n                _createClass(Script, null, [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            if (value === \"super\") {\n                                return document.createElement(\"sup\");\n                            } else if (value === \"sub\") {\n                                return document.createElement(\"sub\");\n                            } else {\n                                return _get(Script.__proto__ || Object.getPrototypeOf(Script), \"create\", this).call(this, value);\n                            }\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            if (domNode.tagName === \"SUB\") return \"sub\";\n                            if (domNode.tagName === \"SUP\") return \"super\";\n                            return undefined;\n                        }\n                    }\n                ]);\n                return Script;\n            }(_inline2.default);\n            Script.blotName = \"script\";\n            Script.tagName = [\n                \"SUB\",\n                \"SUP\"\n            ];\n            exports1.default = Script;\n        /***/ },\n        /* 70 */ /***/ function(module1, exports1, __nested_webpack_require_591306__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _inline = __nested_webpack_require_591306__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Strike = function(_Inline) {\n                _inherits(Strike, _Inline);\n                function Strike() {\n                    _classCallCheck(this, Strike);\n                    return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));\n                }\n                return Strike;\n            }(_inline2.default);\n            Strike.blotName = \"strike\";\n            Strike.tagName = \"S\";\n            exports1.default = Strike;\n        /***/ },\n        /* 71 */ /***/ function(module1, exports1, __nested_webpack_require_593638__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _inline = __nested_webpack_require_593638__(6);\n            var _inline2 = _interopRequireDefault(_inline);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var Underline = function(_Inline) {\n                _inherits(Underline, _Inline);\n                function Underline() {\n                    _classCallCheck(this, Underline);\n                    return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));\n                }\n                return Underline;\n            }(_inline2.default);\n            Underline.blotName = \"underline\";\n            Underline.tagName = \"U\";\n            exports1.default = Underline;\n        /***/ },\n        /* 72 */ /***/ function(module1, exports1, __nested_webpack_require_596003__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_596003__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _link = __nested_webpack_require_596003__(27);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ATTRIBUTES = [\n                \"alt\",\n                \"height\",\n                \"width\"\n            ];\n            var Image = function(_Parchment$Embed) {\n                _inherits(Image, _Parchment$Embed);\n                function Image() {\n                    _classCallCheck(this, Image);\n                    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));\n                }\n                _createClass(Image, [\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (ATTRIBUTES.indexOf(name) > -1) {\n                                if (value) {\n                                    this.domNode.setAttribute(name, value);\n                                } else {\n                                    this.domNode.removeAttribute(name);\n                                }\n                            } else {\n                                _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), \"format\", this).call(this, name, value);\n                            }\n                        }\n                    }\n                ], [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), \"create\", this).call(this, value);\n                            if (typeof value === \"string\") {\n                                node.setAttribute(\"src\", this.sanitize(value));\n                            }\n                            return node;\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            return ATTRIBUTES.reduce(function(formats, attribute) {\n                                if (domNode.hasAttribute(attribute)) {\n                                    formats[attribute] = domNode.getAttribute(attribute);\n                                }\n                                return formats;\n                            }, {});\n                        }\n                    },\n                    {\n                        key: \"match\",\n                        value: function match(url) {\n                            return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n                        }\n                    },\n                    {\n                        key: \"sanitize\",\n                        value: function sanitize(url) {\n                            return (0, _link.sanitize)(url, [\n                                \"http\",\n                                \"https\",\n                                \"data\"\n                            ]) ? url : \"//:0\";\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value(domNode) {\n                            return domNode.getAttribute(\"src\");\n                        }\n                    }\n                ]);\n                return Image;\n            }(_parchment2.default.Embed);\n            Image.blotName = \"image\";\n            Image.tagName = \"IMG\";\n            exports1.default = Image;\n        /***/ },\n        /* 73 */ /***/ function(module1, exports1, __nested_webpack_require_602992__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _block = __nested_webpack_require_602992__(4);\n            var _link = __nested_webpack_require_602992__(27);\n            var _link2 = _interopRequireDefault(_link);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var ATTRIBUTES = [\n                \"height\",\n                \"width\"\n            ];\n            var Video = function(_BlockEmbed) {\n                _inherits(Video, _BlockEmbed);\n                function Video() {\n                    _classCallCheck(this, Video);\n                    return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));\n                }\n                _createClass(Video, [\n                    {\n                        key: \"format\",\n                        value: function format(name, value) {\n                            if (ATTRIBUTES.indexOf(name) > -1) {\n                                if (value) {\n                                    this.domNode.setAttribute(name, value);\n                                } else {\n                                    this.domNode.removeAttribute(name);\n                                }\n                            } else {\n                                _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), \"format\", this).call(this, name, value);\n                            }\n                        }\n                    }\n                ], [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), \"create\", this).call(this, value);\n                            node.setAttribute(\"frameborder\", \"0\");\n                            node.setAttribute(\"allowfullscreen\", true);\n                            node.setAttribute(\"src\", this.sanitize(value));\n                            return node;\n                        }\n                    },\n                    {\n                        key: \"formats\",\n                        value: function formats(domNode) {\n                            return ATTRIBUTES.reduce(function(formats, attribute) {\n                                if (domNode.hasAttribute(attribute)) {\n                                    formats[attribute] = domNode.getAttribute(attribute);\n                                }\n                                return formats;\n                            }, {});\n                        }\n                    },\n                    {\n                        key: \"sanitize\",\n                        value: function sanitize(url) {\n                            return _link2.default.sanitize(url);\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value(domNode) {\n                            return domNode.getAttribute(\"src\");\n                        }\n                    }\n                ]);\n                return Video;\n            }(_block.BlockEmbed);\n            Video.blotName = \"video\";\n            Video.className = \"ql-video\";\n            Video.tagName = \"IFRAME\";\n            exports1.default = Video;\n        /***/ },\n        /* 74 */ /***/ function(module1, exports1, __nested_webpack_require_609584__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.FormulaBlot = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _embed = __nested_webpack_require_609584__(35);\n            var _embed2 = _interopRequireDefault(_embed);\n            var _quill = __nested_webpack_require_609584__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _module = __nested_webpack_require_609584__(9);\n            var _module2 = _interopRequireDefault(_module);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var FormulaBlot = function(_Embed) {\n                _inherits(FormulaBlot, _Embed);\n                function FormulaBlot() {\n                    _classCallCheck(this, FormulaBlot);\n                    return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));\n                }\n                _createClass(FormulaBlot, null, [\n                    {\n                        key: \"create\",\n                        value: function create(value) {\n                            var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), \"create\", this).call(this, value);\n                            if (typeof value === \"string\") {\n                                window.katex.render(value, node, {\n                                    throwOnError: false,\n                                    errorColor: \"#f00\"\n                                });\n                                node.setAttribute(\"data-value\", value);\n                            }\n                            return node;\n                        }\n                    },\n                    {\n                        key: \"value\",\n                        value: function value(domNode) {\n                            return domNode.getAttribute(\"data-value\");\n                        }\n                    }\n                ]);\n                return FormulaBlot;\n            }(_embed2.default);\n            FormulaBlot.blotName = \"formula\";\n            FormulaBlot.className = \"ql-formula\";\n            FormulaBlot.tagName = \"SPAN\";\n            var Formula = function(_Module) {\n                _inherits(Formula, _Module);\n                _createClass(Formula, null, [\n                    {\n                        key: \"register\",\n                        value: function register() {\n                            _quill2.default.register(FormulaBlot, true);\n                        }\n                    }\n                ]);\n                function Formula() {\n                    _classCallCheck(this, Formula);\n                    var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));\n                    if (window.katex == null) {\n                        throw new Error(\"Formula module requires KaTeX.\");\n                    }\n                    return _this2;\n                }\n                return Formula;\n            }(_module2.default);\n            exports1.FormulaBlot = FormulaBlot;\n            exports1.default = Formula;\n        /***/ },\n        /* 75 */ /***/ function(module1, exports1, __nested_webpack_require_615984__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.CodeToken = exports1.CodeBlock = undefined;\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _parchment = __nested_webpack_require_615984__(0);\n            var _parchment2 = _interopRequireDefault(_parchment);\n            var _quill = __nested_webpack_require_615984__(5);\n            var _quill2 = _interopRequireDefault(_quill);\n            var _module = __nested_webpack_require_615984__(9);\n            var _module2 = _interopRequireDefault(_module);\n            var _code = __nested_webpack_require_615984__(13);\n            var _code2 = _interopRequireDefault(_code);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var SyntaxCodeBlock = function(_CodeBlock) {\n                _inherits(SyntaxCodeBlock, _CodeBlock);\n                function SyntaxCodeBlock() {\n                    _classCallCheck(this, SyntaxCodeBlock);\n                    return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));\n                }\n                _createClass(SyntaxCodeBlock, [\n                    {\n                        key: \"replaceWith\",\n                        value: function replaceWith(block) {\n                            this.domNode.textContent = this.domNode.textContent;\n                            this.attach();\n                            _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), \"replaceWith\", this).call(this, block);\n                        }\n                    },\n                    {\n                        key: \"highlight\",\n                        value: function highlight(_highlight) {\n                            var text = this.domNode.textContent;\n                            if (this.cachedText !== text) {\n                                if (text.trim().length > 0 || this.cachedText == null) {\n                                    this.domNode.innerHTML = _highlight(text);\n                                    this.domNode.normalize();\n                                    this.attach();\n                                }\n                                this.cachedText = text;\n                            }\n                        }\n                    }\n                ]);\n                return SyntaxCodeBlock;\n            }(_code2.default);\n            SyntaxCodeBlock.className = \"ql-syntax\";\n            var CodeToken = new _parchment2.default.Attributor.Class(\"token\", \"hljs\", {\n                scope: _parchment2.default.Scope.INLINE\n            });\n            var Syntax = function(_Module) {\n                _inherits(Syntax, _Module);\n                _createClass(Syntax, null, [\n                    {\n                        key: \"register\",\n                        value: function register() {\n                            _quill2.default.register(CodeToken, true);\n                            _quill2.default.register(SyntaxCodeBlock, true);\n                        }\n                    }\n                ]);\n                function Syntax(quill, options) {\n                    _classCallCheck(this, Syntax);\n                    var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));\n                    if (typeof _this2.options.highlight !== \"function\") {\n                        throw new Error(\"Syntax module requires highlight.js. Please include the library on the page before Quill.\");\n                    }\n                    var timer = null;\n                    _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function() {\n                        clearTimeout(timer);\n                        timer = setTimeout(function() {\n                            _this2.highlight();\n                            timer = null;\n                        }, _this2.options.interval);\n                    });\n                    _this2.highlight();\n                    return _this2;\n                }\n                _createClass(Syntax, [\n                    {\n                        key: \"highlight\",\n                        value: function highlight() {\n                            var _this3 = this;\n                            if (this.quill.selection.composing) return;\n                            this.quill.update(_quill2.default.sources.USER);\n                            var range = this.quill.getSelection();\n                            this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function(code) {\n                                code.highlight(_this3.options.highlight);\n                            });\n                            this.quill.update(_quill2.default.sources.SILENT);\n                            if (range != null) {\n                                this.quill.setSelection(range, _quill2.default.sources.SILENT);\n                            }\n                        }\n                    }\n                ]);\n                return Syntax;\n            }(_module2.default);\n            Syntax.DEFAULTS = {\n                highlight: function() {\n                    if (window.hljs == null) return null;\n                    return function(text) {\n                        var result = window.hljs.highlightAuto(text);\n                        return result.value;\n                    };\n                }(),\n                interval: 1000\n            };\n            exports1.CodeBlock = SyntaxCodeBlock;\n            exports1.CodeToken = CodeToken;\n            exports1.default = Syntax;\n        /***/ },\n        /* 76 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>';\n        /***/ },\n        /* 77 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>';\n        /***/ },\n        /* 78 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>';\n        /***/ },\n        /* 79 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>';\n        /***/ },\n        /* 80 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <g class=\"ql-fill ql-color-label\"> <polygon points=\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\"6.817 5 6 5 6 6 6.38 6 6.817 5\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\"4.63 10 4 10 4 11 4.192 11 4.63 10\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\"12 6.868 12 6 11.62 6 12 6.868\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\"12.933 9 13 9 13 8 12.495 8 12.933 9\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\"5.5 13 9 5 12.5 13\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>';\n        /***/ },\n        /* 81 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=4 y=5></rect> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=11 y=5></rect> <path class=\"ql-even ql-fill ql-stroke\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\"ql-even ql-fill ql-stroke\" d=M14,8c0,4.031-3,5-3,5></path> </svg>';\n        /***/ },\n        /* 82 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>';\n        /***/ },\n        /* 83 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>';\n        /***/ },\n        /* 84 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=\"ql-color-label ql-stroke ql-transparent\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\"5.5 11 9 3 12.5 11\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>';\n        /***/ },\n        /* 85 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"3 11 5 9 3 7 3 11\"></polygon> <line class=\"ql-stroke ql-fill\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>';\n        /***/ },\n        /* 86 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"15 12 13 10 15 8 15 12\"></polygon> <line class=\"ql-stroke ql-fill\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>';\n        /***/ },\n        /* 87 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>';\n        /***/ },\n        /* 88 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>';\n        /***/ },\n        /* 89 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>';\n        /***/ },\n        /* 90 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\"translate(24 18) rotate(-180)\"/> </svg>';\n        /***/ },\n        /* 91 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>';\n        /***/ },\n        /* 92 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>';\n        /***/ },\n        /* 93 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>';\n        /***/ },\n        /* 94 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>';\n        /***/ },\n        /* 95 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>';\n        /***/ },\n        /* 96 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\"ql-fill ql-stroke\" points=\"3 7 3 11 5 9 3 7\"></polyline> </svg>';\n        /***/ },\n        /* 97 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"5 7 5 11 3 9 5 7\"></polyline> </svg>';\n        /***/ },\n        /* 98 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\"ql-even ql-stroke\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\"ql-even ql-stroke\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>';\n        /***/ },\n        /* 99 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\"ql-stroke ql-thin\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\"ql-stroke ql-thin\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\"ql-stroke ql-thin\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>';\n        /***/ },\n        /* 100 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>';\n        /***/ },\n        /* 101 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\"3 4 4 5 6 3\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\"3 14 4 15 6 13\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"3 9 4 10 6 8\"></polyline> </svg>';\n        /***/ },\n        /* 102 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>';\n        /***/ },\n        /* 103 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>';\n        /***/ },\n        /* 104 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <line class=\"ql-stroke ql-thin\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>';\n        /***/ },\n        /* 105 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>';\n        /***/ },\n        /* 106 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>';\n        /***/ },\n        /* 107 */ /***/ function(module1, exports1) {\n            module1.exports = '<svg viewbox=\"0 0 18 18\"> <polygon class=ql-stroke points=\"7 11 9 13 11 11 7 11\"></polygon> <polygon class=ql-stroke points=\"7 7 9 5 11 7 7 7\"></polygon> </svg>';\n        /***/ },\n        /* 108 */ /***/ function(module1, exports1, __nested_webpack_require_642536__) {\n            \"use strict\";\n            Object.defineProperty(exports1, \"__esModule\", {\n                value: true\n            });\n            exports1.default = exports1.BubbleTooltip = undefined;\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;\n                var desc = Object.getOwnPropertyDescriptor(object, property);\n                if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);\n                    if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;\n                    if (getter === undefined) {\n                        return undefined;\n                    }\n                    return getter.call(receiver);\n                }\n            };\n            var _createClass = function() {\n                function defineProperties(target, props) {\n                    for(var i = 0; i < props.length; i++){\n                        var descriptor = props[i];\n                        descriptor.enumerable = descriptor.enumerable || false;\n                        descriptor.configurable = true;\n                        if (\"value\" in descriptor) descriptor.writable = true;\n                        Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }\n                return function(Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                    if (staticProps) defineProperties(Constructor, staticProps);\n                    return Constructor;\n                };\n            }();\n            var _extend = __nested_webpack_require_642536__(3);\n            var _extend2 = _interopRequireDefault(_extend);\n            var _emitter = __nested_webpack_require_642536__(8);\n            var _emitter2 = _interopRequireDefault(_emitter);\n            var _base = __nested_webpack_require_642536__(43);\n            var _base2 = _interopRequireDefault(_base);\n            var _selection = __nested_webpack_require_642536__(15);\n            var _icons = __nested_webpack_require_642536__(41);\n            var _icons2 = _interopRequireDefault(_icons);\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : {\n                    default: obj\n                };\n            }\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n            function _possibleConstructorReturn(self1, call) {\n                if (!self1) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n                return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self1;\n            }\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n                }\n                subClass.prototype = Object.create(superClass && superClass.prototype, {\n                    constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                    }\n                });\n                if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n            var TOOLBAR_CONFIG = [\n                [\n                    \"bold\",\n                    \"italic\",\n                    \"link\"\n                ],\n                [\n                    {\n                        header: 1\n                    },\n                    {\n                        header: 2\n                    },\n                    \"blockquote\"\n                ]\n            ];\n            var BubbleTheme = function(_BaseTheme) {\n                _inherits(BubbleTheme, _BaseTheme);\n                function BubbleTheme(quill, options) {\n                    _classCallCheck(this, BubbleTheme);\n                    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {\n                        options.modules.toolbar.container = TOOLBAR_CONFIG;\n                    }\n                    var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));\n                    _this.quill.container.classList.add(\"ql-bubble\");\n                    return _this;\n                }\n                _createClass(BubbleTheme, [\n                    {\n                        key: \"extendToolbar\",\n                        value: function extendToolbar(toolbar) {\n                            this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n                            this.tooltip.root.appendChild(toolbar.container);\n                            this.buildButtons([].slice.call(toolbar.container.querySelectorAll(\"button\")), _icons2.default);\n                            this.buildPickers([].slice.call(toolbar.container.querySelectorAll(\"select\")), _icons2.default);\n                        }\n                    }\n                ]);\n                return BubbleTheme;\n            }(_base2.default);\n            BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {\n                modules: {\n                    toolbar: {\n                        handlers: {\n                            link: function link(value) {\n                                if (!value) {\n                                    this.quill.format(\"link\", false);\n                                } else {\n                                    this.quill.theme.tooltip.edit();\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            var BubbleTooltip = function(_BaseTooltip) {\n                _inherits(BubbleTooltip, _BaseTooltip);\n                function BubbleTooltip(quill, bounds) {\n                    _classCallCheck(this, BubbleTooltip);\n                    var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));\n                    _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function(type, range, oldRange, source) {\n                        if (type !== _emitter2.default.events.SELECTION_CHANGE) return;\n                        if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {\n                            _this2.show();\n                            // Lock our width so we will expand beyond our offsetParent boundaries\n                            _this2.root.style.left = \"0px\";\n                            _this2.root.style.width = \"\";\n                            _this2.root.style.width = _this2.root.offsetWidth + \"px\";\n                            var lines = _this2.quill.getLines(range.index, range.length);\n                            if (lines.length === 1) {\n                                _this2.position(_this2.quill.getBounds(range));\n                            } else {\n                                var lastLine = lines[lines.length - 1];\n                                var index = _this2.quill.getIndex(lastLine);\n                                var length = Math.min(lastLine.length() - 1, range.index + range.length - index);\n                                var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));\n                                _this2.position(_bounds);\n                            }\n                        } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {\n                            _this2.hide();\n                        }\n                    });\n                    return _this2;\n                }\n                _createClass(BubbleTooltip, [\n                    {\n                        key: \"listen\",\n                        value: function listen() {\n                            var _this3 = this;\n                            _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), \"listen\", this).call(this);\n                            this.root.querySelector(\".ql-close\").addEventListener(\"click\", function() {\n                                _this3.root.classList.remove(\"ql-editing\");\n                            });\n                            this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function() {\n                                // Let selection be restored by toolbar handlers before repositioning\n                                setTimeout(function() {\n                                    if (_this3.root.classList.contains(\"ql-hidden\")) return;\n                                    var range = _this3.quill.getSelection();\n                                    if (range != null) {\n                                        _this3.position(_this3.quill.getBounds(range));\n                                    }\n                                }, 1);\n                            });\n                        }\n                    },\n                    {\n                        key: \"cancel\",\n                        value: function cancel() {\n                            this.show();\n                        }\n                    },\n                    {\n                        key: \"position\",\n                        value: function position(reference) {\n                            var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), \"position\", this).call(this, reference);\n                            var arrow = this.root.querySelector(\".ql-tooltip-arrow\");\n                            arrow.style.marginLeft = \"\";\n                            if (shift === 0) return shift;\n                            arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + \"px\";\n                        }\n                    }\n                ]);\n                return BubbleTooltip;\n            }(_base.BaseTooltip);\n            BubbleTooltip.TEMPLATE = [\n                '<span class=\"ql-tooltip-arrow\"></span>',\n                '<div class=\"ql-tooltip-editor\">',\n                '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n                '<a class=\"ql-close\"></a>',\n                \"</div>\"\n            ].join(\"\");\n            exports1.BubbleTooltip = BubbleTooltip;\n            exports1.default = BubbleTheme;\n        /***/ },\n        /* 109 */ /***/ function(module1, exports1, __nested_webpack_require_653689__) {\n            module1.exports = __nested_webpack_require_653689__(63);\n        /***/ }\n    ])[\"default\"];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9xdWlsbC9kaXN0L3F1aWxsLmpzIiwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7O0NBS0MsR0FDQSxVQUFTQSxpQ0FBaUNDLElBQUksRUFBRUMsT0FBTztJQUN2RCxJQUFHLElBQWlELEVBQ25ERSxPQUFPRCxPQUFPLEdBQUdEO1NBQ2IsRUFLc0JBO0FBQzVCLEdBQUcsT0FBT0ssU0FBUyxjQUFjQSxPQUFPLFFBQU07SUFDOUMsT0FBZ0IsTUFBSCxHQUFJLFNBQVNDLE9BQU87UUFDakMsTUFBTSxHQUFJLG1CQUFtQjtRQUM3QixNQUFNLEdBQUksSUFBSUMsbUJBQW1CLENBQUM7UUFDbEMsTUFBTSxHQUNOLE1BQU0sR0FBSSx1QkFBdUI7UUFDakMsTUFBTSxHQUFJLFNBQVNDLDhCQUFtQkEsQ0FBQ0MsUUFBUTtZQUMvQyxNQUFNLEdBQ04sTUFBTSxHQUFLLDhCQUE4QjtZQUN6QyxNQUFNLEdBQUssSUFBR0YsZ0JBQWdCLENBQUNFLFNBQVMsRUFBRTtnQkFDMUMsTUFBTSxHQUFNLE9BQU9GLGdCQUFnQixDQUFDRSxTQUFTLENBQUNSLE9BQU87WUFDckQsTUFBTSxHQUFLO1lBQ1gsTUFBTSxHQUFLLGtEQUFrRDtZQUM3RCxNQUFNLEdBQUssSUFBSUMsVUFBU0ssZ0JBQWdCLENBQUNFLFNBQVMsR0FBRztnQkFDckQsTUFBTSxHQUFNQyxHQUFHRDtnQkFDZixNQUFNLEdBQU1FLEdBQUc7Z0JBQ2YsTUFBTSxHQUFNVixTQUFTLENBQUM7WUFDWDtZQUNYLE1BQU0sR0FDTixNQUFNLEdBQUssOEJBQThCO1lBQ3pDLE1BQU0sR0FBS0ssT0FBTyxDQUFDRyxTQUFTLENBQUNHLElBQUksQ0FBQ1YsUUFBT0QsT0FBTyxFQUFFQyxTQUFRQSxRQUFPRCxPQUFPLEVBQUVPLDhCQUFtQkE7WUFDN0YsTUFBTSxHQUNOLE1BQU0sR0FBSyw0QkFBNEI7WUFDdkMsTUFBTSxHQUFLTixRQUFPUyxDQUFDLEdBQUc7WUFDdEIsTUFBTSxH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OzRCQUN4QnNsQyxNQUFNcmUsS0FBSyxDQUFDc2UsVUFBVSxHQUFHLENBQUMsSUFBSXZsQyxRQUFRc2xDLE1BQU16RixXQUFXLEdBQUcsSUFBSTt3QkFDaEU7b0JBQ0Y7aUJBQUU7Z0JBRUYsT0FBT3FGO1lBQ1QsRUFBRWpGLE1BQU0zVCxXQUFXO1lBRW5CNFksY0FBY3ZGLFFBQVEsR0FBRztnQkFBQztnQkFBMEM7Z0JBQW1DO2dCQUFvRztnQkFBNEI7YUFBUyxDQUFDN2xDLElBQUksQ0FBQztZQUV0UG5MLFNBQVF1MkMsYUFBYSxHQUFHQTtZQUN4QnYyQyxTQUFRc0QsT0FBTyxHQUFHa3pDO1FBRWxCLEdBQUcsR0FBRztRQUNOLE9BQU8sR0FDUCxHQUFHLEdBQUksU0FBU3YyQyxPQUFNLEVBQUVELFFBQU8sRUFBRU8saUNBQW1CO1lBRXBETixRQUFPRCxPQUFPLEdBQUdPLGlDQUFtQkEsQ0FBQztRQUdyQyxHQUFHLEdBQUc7S0FDSSxDQUFDLENBQUMsVUFBVTtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcXVpbGwvZGlzdC9xdWlsbC5qcz85OWY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogUXVpbGwgRWRpdG9yIHYxLjMuN1xuICogaHR0cHM6Ly9xdWlsbGpzLmNvbS9cbiAqIENvcHlyaWdodCAoYykgMjAxNCwgSmFzb24gQ2hlblxuICogQ29weXJpZ2h0IChjKSAyMDEzLCBzYWxlc2ZvcmNlLmNvbVxuICovXG4oZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJRdWlsbFwiXSA9IGZhY3RvcnkoKTtcblx0ZWxzZVxuXHRcdHJvb3RbXCJRdWlsbFwiXSA9IGZhY3RvcnkoKTtcbn0pKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJyA/IHNlbGYgOiB0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAvKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4vKioqKioqLyBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4vKioqKioqLyBcdFx0XHRcdGdldDogZ2V0dGVyXG4vKioqKioqLyBcdFx0XHR9KTtcbi8qKioqKiovIFx0XHR9XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTA5KTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKFtcbi8qIDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBjb250YWluZXJfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTcpO1xudmFyIGZvcm1hdF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOCk7XG52YXIgbGVhZl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOSk7XG52YXIgc2Nyb2xsXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQ1KTtcbnZhciBpbmxpbmVfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNDYpO1xudmFyIGJsb2NrXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQ3KTtcbnZhciBlbWJlZF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0OCk7XG52YXIgdGV4dF8xID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0OSk7XG52YXIgYXR0cmlidXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XG52YXIgY2xhc3NfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMzIpO1xudmFyIHN0eWxlXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMzKTtcbnZhciBzdG9yZV8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMSk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIFBhcmNobWVudCA9IHtcbiAgICBTY29wZTogUmVnaXN0cnkuU2NvcGUsXG4gICAgY3JlYXRlOiBSZWdpc3RyeS5jcmVhdGUsXG4gICAgZmluZDogUmVnaXN0cnkuZmluZCxcbiAgICBxdWVyeTogUmVnaXN0cnkucXVlcnksXG4gICAgcmVnaXN0ZXI6IFJlZ2lzdHJ5LnJlZ2lzdGVyLFxuICAgIENvbnRhaW5lcjogY29udGFpbmVyXzEuZGVmYXVsdCxcbiAgICBGb3JtYXQ6IGZvcm1hdF8xLmRlZmF1bHQsXG4gICAgTGVhZjogbGVhZl8xLmRlZmF1bHQsXG4gICAgRW1iZWQ6IGVtYmVkXzEuZGVmYXVsdCxcbiAgICBTY3JvbGw6IHNjcm9sbF8xLmRlZmF1bHQsXG4gICAgQmxvY2s6IGJsb2NrXzEuZGVmYXVsdCxcbiAgICBJbmxpbmU6IGlubGluZV8xLmRlZmF1bHQsXG4gICAgVGV4dDogdGV4dF8xLmRlZmF1bHQsXG4gICAgQXR0cmlidXRvcjoge1xuICAgICAgICBBdHRyaWJ1dGU6IGF0dHJpYnV0b3JfMS5kZWZhdWx0LFxuICAgICAgICBDbGFzczogY2xhc3NfMS5kZWZhdWx0LFxuICAgICAgICBTdHlsZTogc3R5bGVfMS5kZWZhdWx0LFxuICAgICAgICBTdG9yZTogc3RvcmVfMS5kZWZhdWx0LFxuICAgIH0sXG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gUGFyY2htZW50O1xuXG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUGFyY2htZW50RXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFBhcmNobWVudEVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIFBhcmNobWVudEVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgbWVzc2FnZSA9ICdbUGFyY2htZW50XSAnICsgbWVzc2FnZTtcbiAgICAgICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBtZXNzYWdlKSB8fCB0aGlzO1xuICAgICAgICBfdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgX3RoaXMubmFtZSA9IF90aGlzLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIFBhcmNobWVudEVycm9yO1xufShFcnJvcikpO1xuZXhwb3J0cy5QYXJjaG1lbnRFcnJvciA9IFBhcmNobWVudEVycm9yO1xudmFyIGF0dHJpYnV0ZXMgPSB7fTtcbnZhciBjbGFzc2VzID0ge307XG52YXIgdGFncyA9IHt9O1xudmFyIHR5cGVzID0ge307XG5leHBvcnRzLkRBVEFfS0VZID0gJ19fYmxvdCc7XG52YXIgU2NvcGU7XG4oZnVuY3Rpb24gKFNjb3BlKSB7XG4gICAgU2NvcGVbU2NvcGVbXCJUWVBFXCJdID0gM10gPSBcIlRZUEVcIjtcbiAgICBTY29wZVtTY29wZVtcIkxFVkVMXCJdID0gMTJdID0gXCJMRVZFTFwiO1xuICAgIFNjb3BlW1Njb3BlW1wiQVRUUklCVVRFXCJdID0gMTNdID0gXCJBVFRSSUJVVEVcIjtcbiAgICBTY29wZVtTY29wZVtcIkJMT1RcIl0gPSAxNF0gPSBcIkJMT1RcIjtcbiAgICBTY29wZVtTY29wZVtcIklOTElORVwiXSA9IDddID0gXCJJTkxJTkVcIjtcbiAgICBTY29wZVtTY29wZVtcIkJMT0NLXCJdID0gMTFdID0gXCJCTE9DS1wiO1xuICAgIFNjb3BlW1Njb3BlW1wiQkxPQ0tfQkxPVFwiXSA9IDEwXSA9IFwiQkxPQ0tfQkxPVFwiO1xuICAgIFNjb3BlW1Njb3BlW1wiSU5MSU5FX0JMT1RcIl0gPSA2XSA9IFwiSU5MSU5FX0JMT1RcIjtcbiAgICBTY29wZVtTY29wZVtcIkJMT0NLX0FUVFJJQlVURVwiXSA9IDldID0gXCJCTE9DS19BVFRSSUJVVEVcIjtcbiAgICBTY29wZVtTY29wZVtcIklOTElORV9BVFRSSUJVVEVcIl0gPSA1XSA9IFwiSU5MSU5FX0FUVFJJQlVURVwiO1xuICAgIFNjb3BlW1Njb3BlW1wiQU5ZXCJdID0gMTVdID0gXCJBTllcIjtcbn0pKFNjb3BlID0gZXhwb3J0cy5TY29wZSB8fCAoZXhwb3J0cy5TY29wZSA9IHt9KSk7XG5mdW5jdGlvbiBjcmVhdGUoaW5wdXQsIHZhbHVlKSB7XG4gICAgdmFyIG1hdGNoID0gcXVlcnkoaW5wdXQpO1xuICAgIGlmIChtYXRjaCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBQYXJjaG1lbnRFcnJvcihcIlVuYWJsZSB0byBjcmVhdGUgXCIgKyBpbnB1dCArIFwiIGJsb3RcIik7XG4gICAgfVxuICAgIHZhciBCbG90Q2xhc3MgPSBtYXRjaDtcbiAgICB2YXIgbm9kZSA9IFxuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpbnB1dCBpbnN0YW5jZW9mIE5vZGUgfHwgaW5wdXRbJ25vZGVUeXBlJ10gPT09IE5vZGUuVEVYVF9OT0RFID8gaW5wdXQgOiBCbG90Q2xhc3MuY3JlYXRlKHZhbHVlKTtcbiAgICByZXR1cm4gbmV3IEJsb3RDbGFzcyhub2RlLCB2YWx1ZSk7XG59XG5leHBvcnRzLmNyZWF0ZSA9IGNyZWF0ZTtcbmZ1bmN0aW9uIGZpbmQobm9kZSwgYnViYmxlKSB7XG4gICAgaWYgKGJ1YmJsZSA9PT0gdm9pZCAwKSB7IGJ1YmJsZSA9IGZhbHNlOyB9XG4gICAgaWYgKG5vZGUgPT0gbnVsbClcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgLy8gQHRzLWlnbm9yZVxuICAgIGlmIChub2RlW2V4cG9ydHMuREFUQV9LRVldICE9IG51bGwpXG4gICAgICAgIHJldHVybiBub2RlW2V4cG9ydHMuREFUQV9LRVldLmJsb3Q7XG4gICAgaWYgKGJ1YmJsZSlcbiAgICAgICAgcmV0dXJuIGZpbmQobm9kZS5wYXJlbnROb2RlLCBidWJibGUpO1xuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0cy5maW5kID0gZmluZDtcbmZ1bmN0aW9uIHF1ZXJ5KHF1ZXJ5LCBzY29wZSkge1xuICAgIGlmIChzY29wZSA9PT0gdm9pZCAwKSB7IHNjb3BlID0gU2NvcGUuQU5ZOyB9XG4gICAgdmFyIG1hdGNoO1xuICAgIGlmICh0eXBlb2YgcXVlcnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG1hdGNoID0gdHlwZXNbcXVlcnldIHx8IGF0dHJpYnV0ZXNbcXVlcnldO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgfVxuICAgIGVsc2UgaWYgKHF1ZXJ5IGluc3RhbmNlb2YgVGV4dCB8fCBxdWVyeVsnbm9kZVR5cGUnXSA9PT0gTm9kZS5URVhUX05PREUpIHtcbiAgICAgICAgbWF0Y2ggPSB0eXBlc1sndGV4dCddO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgcXVlcnkgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGlmIChxdWVyeSAmIFNjb3BlLkxFVkVMICYgU2NvcGUuQkxPQ0spIHtcbiAgICAgICAgICAgIG1hdGNoID0gdHlwZXNbJ2Jsb2NrJ107XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocXVlcnkgJiBTY29wZS5MRVZFTCAmIFNjb3BlLklOTElORSkge1xuICAgICAgICAgICAgbWF0Y2ggPSB0eXBlc1snaW5saW5lJ107XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAocXVlcnkgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkge1xuICAgICAgICB2YXIgbmFtZXMgPSAocXVlcnkuZ2V0QXR0cmlidXRlKCdjbGFzcycpIHx8ICcnKS5zcGxpdCgvXFxzKy8pO1xuICAgICAgICBmb3IgKHZhciBpIGluIG5hbWVzKSB7XG4gICAgICAgICAgICBtYXRjaCA9IGNsYXNzZXNbbmFtZXNbaV1dO1xuICAgICAgICAgICAgaWYgKG1hdGNoKVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIG1hdGNoID0gbWF0Y2ggfHwgdGFnc1txdWVyeS50YWdOYW1lXTtcbiAgICB9XG4gICAgaWYgKG1hdGNoID09IG51bGwpXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBpZiAoc2NvcGUgJiBTY29wZS5MRVZFTCAmIG1hdGNoLnNjb3BlICYmIHNjb3BlICYgU2NvcGUuVFlQRSAmIG1hdGNoLnNjb3BlKVxuICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLnF1ZXJ5ID0gcXVlcnk7XG5mdW5jdGlvbiByZWdpc3RlcigpIHtcbiAgICB2YXIgRGVmaW5pdGlvbnMgPSBbXTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICBEZWZpbml0aW9uc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICBpZiAoRGVmaW5pdGlvbnMubGVuZ3RoID4gMSkge1xuICAgICAgICByZXR1cm4gRGVmaW5pdGlvbnMubWFwKGZ1bmN0aW9uIChkKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVnaXN0ZXIoZCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YXIgRGVmaW5pdGlvbiA9IERlZmluaXRpb25zWzBdO1xuICAgIGlmICh0eXBlb2YgRGVmaW5pdGlvbi5ibG90TmFtZSAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIERlZmluaXRpb24uYXR0ck5hbWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBQYXJjaG1lbnRFcnJvcignSW52YWxpZCBkZWZpbml0aW9uJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKERlZmluaXRpb24uYmxvdE5hbWUgPT09ICdhYnN0cmFjdCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhcmNobWVudEVycm9yKCdDYW5ub3QgcmVnaXN0ZXIgYWJzdHJhY3QgY2xhc3MnKTtcbiAgICB9XG4gICAgdHlwZXNbRGVmaW5pdGlvbi5ibG90TmFtZSB8fCBEZWZpbml0aW9uLmF0dHJOYW1lXSA9IERlZmluaXRpb247XG4gICAgaWYgKHR5cGVvZiBEZWZpbml0aW9uLmtleU5hbWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGF0dHJpYnV0ZXNbRGVmaW5pdGlvbi5rZXlOYW1lXSA9IERlZmluaXRpb247XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoRGVmaW5pdGlvbi5jbGFzc05hbWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgY2xhc3Nlc1tEZWZpbml0aW9uLmNsYXNzTmFtZV0gPSBEZWZpbml0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGlmIChEZWZpbml0aW9uLnRhZ05hbWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoRGVmaW5pdGlvbi50YWdOYW1lKSkge1xuICAgICAgICAgICAgICAgIERlZmluaXRpb24udGFnTmFtZSA9IERlZmluaXRpb24udGFnTmFtZS5tYXAoZnVuY3Rpb24gKHRhZ05hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhZ05hbWUudG9VcHBlckNhc2UoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIERlZmluaXRpb24udGFnTmFtZSA9IERlZmluaXRpb24udGFnTmFtZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRhZ05hbWVzID0gQXJyYXkuaXNBcnJheShEZWZpbml0aW9uLnRhZ05hbWUpID8gRGVmaW5pdGlvbi50YWdOYW1lIDogW0RlZmluaXRpb24udGFnTmFtZV07XG4gICAgICAgICAgICB0YWdOYW1lcy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHtcbiAgICAgICAgICAgICAgICBpZiAodGFnc1t0YWddID09IG51bGwgfHwgRGVmaW5pdGlvbi5jbGFzc05hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0YWdzW3RhZ10gPSBEZWZpbml0aW9uO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBEZWZpbml0aW9uO1xufVxuZXhwb3J0cy5yZWdpc3RlciA9IHJlZ2lzdGVyO1xuXG5cbi8qKiovIH0pLFxuLyogMiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgZGlmZiA9IF9fd2VicGFja19yZXF1aXJlX18oNTEpO1xudmFyIGVxdWFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG52YXIgZXh0ZW5kID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcbnZhciBvcCA9IF9fd2VicGFja19yZXF1aXJlX18oMjApO1xuXG5cbnZhciBOVUxMX0NIQVJBQ1RFUiA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMCk7ICAvLyBQbGFjZWhvbGRlciBjaGFyIGZvciBlbWJlZCBpbiBkaWZmKClcblxuXG52YXIgRGVsdGEgPSBmdW5jdGlvbiAob3BzKSB7XG4gIC8vIEFzc3VtZSB3ZSBhcmUgZ2l2ZW4gYSB3ZWxsIGZvcm1lZCBvcHNcbiAgaWYgKEFycmF5LmlzQXJyYXkob3BzKSkge1xuICAgIHRoaXMub3BzID0gb3BzO1xuICB9IGVsc2UgaWYgKG9wcyAhPSBudWxsICYmIEFycmF5LmlzQXJyYXkob3BzLm9wcykpIHtcbiAgICB0aGlzLm9wcyA9IG9wcy5vcHM7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5vcHMgPSBbXTtcbiAgfVxufTtcblxuXG5EZWx0YS5wcm90b3R5cGUuaW5zZXJ0ID0gZnVuY3Rpb24gKHRleHQsIGF0dHJpYnV0ZXMpIHtcbiAgdmFyIG5ld09wID0ge307XG4gIGlmICh0ZXh0Lmxlbmd0aCA9PT0gMCkgcmV0dXJuIHRoaXM7XG4gIG5ld09wLmluc2VydCA9IHRleHQ7XG4gIGlmIChhdHRyaWJ1dGVzICE9IG51bGwgJiYgdHlwZW9mIGF0dHJpYnV0ZXMgPT09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmxlbmd0aCA+IDApIHtcbiAgICBuZXdPcC5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgfVxuICByZXR1cm4gdGhpcy5wdXNoKG5ld09wKTtcbn07XG5cbkRlbHRhLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBmdW5jdGlvbiAobGVuZ3RoKSB7XG4gIGlmIChsZW5ndGggPD0gMCkgcmV0dXJuIHRoaXM7XG4gIHJldHVybiB0aGlzLnB1c2goeyAnZGVsZXRlJzogbGVuZ3RoIH0pO1xufTtcblxuRGVsdGEucHJvdG90eXBlLnJldGFpbiA9IGZ1bmN0aW9uIChsZW5ndGgsIGF0dHJpYnV0ZXMpIHtcbiAgaWYgKGxlbmd0aCA8PSAwKSByZXR1cm4gdGhpcztcbiAgdmFyIG5ld09wID0geyByZXRhaW46IGxlbmd0aCB9O1xuICBpZiAoYXR0cmlidXRlcyAhPSBudWxsICYmIHR5cGVvZiBhdHRyaWJ1dGVzID09PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5sZW5ndGggPiAwKSB7XG4gICAgbmV3T3AuYXR0cmlidXRlcyA9IGF0dHJpYnV0ZXM7XG4gIH1cbiAgcmV0dXJuIHRoaXMucHVzaChuZXdPcCk7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUucHVzaCA9IGZ1bmN0aW9uIChuZXdPcCkge1xuICB2YXIgaW5kZXggPSB0aGlzLm9wcy5sZW5ndGg7XG4gIHZhciBsYXN0T3AgPSB0aGlzLm9wc1tpbmRleCAtIDFdO1xuICBuZXdPcCA9IGV4dGVuZCh0cnVlLCB7fSwgbmV3T3ApO1xuICBpZiAodHlwZW9mIGxhc3RPcCA9PT0gJ29iamVjdCcpIHtcbiAgICBpZiAodHlwZW9mIG5ld09wWydkZWxldGUnXSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGxhc3RPcFsnZGVsZXRlJ10gPT09ICdudW1iZXInKSB7XG4gICAgICB0aGlzLm9wc1tpbmRleCAtIDFdID0geyAnZGVsZXRlJzogbGFzdE9wWydkZWxldGUnXSArIG5ld09wWydkZWxldGUnXSB9O1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIC8vIFNpbmNlIGl0IGRvZXMgbm90IG1hdHRlciBpZiB3ZSBpbnNlcnQgYmVmb3JlIG9yIGFmdGVyIGRlbGV0aW5nIGF0IHRoZSBzYW1lIGluZGV4LFxuICAgIC8vIGFsd2F5cyBwcmVmZXIgdG8gaW5zZXJ0IGZpcnN0XG4gICAgaWYgKHR5cGVvZiBsYXN0T3BbJ2RlbGV0ZSddID09PSAnbnVtYmVyJyAmJiBuZXdPcC5pbnNlcnQgIT0gbnVsbCkge1xuICAgICAgaW5kZXggLT0gMTtcbiAgICAgIGxhc3RPcCA9IHRoaXMub3BzW2luZGV4IC0gMV07XG4gICAgICBpZiAodHlwZW9mIGxhc3RPcCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdGhpcy5vcHMudW5zaGlmdChuZXdPcCk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZXF1YWwobmV3T3AuYXR0cmlidXRlcywgbGFzdE9wLmF0dHJpYnV0ZXMpKSB7XG4gICAgICBpZiAodHlwZW9mIG5ld09wLmluc2VydCA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIGxhc3RPcC5pbnNlcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMub3BzW2luZGV4IC0gMV0gPSB7IGluc2VydDogbGFzdE9wLmluc2VydCArIG5ld09wLmluc2VydCB9O1xuICAgICAgICBpZiAodHlwZW9mIG5ld09wLmF0dHJpYnV0ZXMgPT09ICdvYmplY3QnKSB0aGlzLm9wc1tpbmRleCAtIDFdLmF0dHJpYnV0ZXMgPSBuZXdPcC5hdHRyaWJ1dGVzXG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbmV3T3AucmV0YWluID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgbGFzdE9wLnJldGFpbiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhpcy5vcHNbaW5kZXggLSAxXSA9IHsgcmV0YWluOiBsYXN0T3AucmV0YWluICsgbmV3T3AucmV0YWluIH07XG4gICAgICAgIGlmICh0eXBlb2YgbmV3T3AuYXR0cmlidXRlcyA9PT0gJ29iamVjdCcpIHRoaXMub3BzW2luZGV4IC0gMV0uYXR0cmlidXRlcyA9IG5ld09wLmF0dHJpYnV0ZXNcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGlmIChpbmRleCA9PT0gdGhpcy5vcHMubGVuZ3RoKSB7XG4gICAgdGhpcy5vcHMucHVzaChuZXdPcCk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5vcHMuc3BsaWNlKGluZGV4LCAwLCBuZXdPcCk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuY2hvcCA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGxhc3RPcCA9IHRoaXMub3BzW3RoaXMub3BzLmxlbmd0aCAtIDFdO1xuICBpZiAobGFzdE9wICYmIGxhc3RPcC5yZXRhaW4gJiYgIWxhc3RPcC5hdHRyaWJ1dGVzKSB7XG4gICAgdGhpcy5vcHMucG9wKCk7XG4gIH1cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuZmlsdGVyID0gZnVuY3Rpb24gKHByZWRpY2F0ZSkge1xuICByZXR1cm4gdGhpcy5vcHMuZmlsdGVyKHByZWRpY2F0ZSk7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIChwcmVkaWNhdGUpIHtcbiAgdGhpcy5vcHMuZm9yRWFjaChwcmVkaWNhdGUpO1xufTtcblxuRGVsdGEucHJvdG90eXBlLm1hcCA9IGZ1bmN0aW9uIChwcmVkaWNhdGUpIHtcbiAgcmV0dXJuIHRoaXMub3BzLm1hcChwcmVkaWNhdGUpO1xufTtcblxuRGVsdGEucHJvdG90eXBlLnBhcnRpdGlvbiA9IGZ1bmN0aW9uIChwcmVkaWNhdGUpIHtcbiAgdmFyIHBhc3NlZCA9IFtdLCBmYWlsZWQgPSBbXTtcbiAgdGhpcy5mb3JFYWNoKGZ1bmN0aW9uKG9wKSB7XG4gICAgdmFyIHRhcmdldCA9IHByZWRpY2F0ZShvcCkgPyBwYXNzZWQgOiBmYWlsZWQ7XG4gICAgdGFyZ2V0LnB1c2gob3ApO1xuICB9KTtcbiAgcmV0dXJuIFtwYXNzZWQsIGZhaWxlZF07XG59O1xuXG5EZWx0YS5wcm90b3R5cGUucmVkdWNlID0gZnVuY3Rpb24gKHByZWRpY2F0ZSwgaW5pdGlhbCkge1xuICByZXR1cm4gdGhpcy5vcHMucmVkdWNlKHByZWRpY2F0ZSwgaW5pdGlhbCk7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuY2hhbmdlTGVuZ3RoID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5yZWR1Y2UoZnVuY3Rpb24gKGxlbmd0aCwgZWxlbSkge1xuICAgIGlmIChlbGVtLmluc2VydCkge1xuICAgICAgcmV0dXJuIGxlbmd0aCArIG9wLmxlbmd0aChlbGVtKTtcbiAgICB9IGVsc2UgaWYgKGVsZW0uZGVsZXRlKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoIC0gZWxlbS5kZWxldGU7XG4gICAgfVxuICAgIHJldHVybiBsZW5ndGg7XG4gIH0sIDApO1xufTtcblxuRGVsdGEucHJvdG90eXBlLmxlbmd0aCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMucmVkdWNlKGZ1bmN0aW9uIChsZW5ndGgsIGVsZW0pIHtcbiAgICByZXR1cm4gbGVuZ3RoICsgb3AubGVuZ3RoKGVsZW0pO1xuICB9LCAwKTtcbn07XG5cbkRlbHRhLnByb3RvdHlwZS5zbGljZSA9IGZ1bmN0aW9uIChzdGFydCwgZW5kKSB7XG4gIHN0YXJ0ID0gc3RhcnQgfHwgMDtcbiAgaWYgKHR5cGVvZiBlbmQgIT09ICdudW1iZXInKSBlbmQgPSBJbmZpbml0eTtcbiAgdmFyIG9wcyA9IFtdO1xuICB2YXIgaXRlciA9IG9wLml0ZXJhdG9yKHRoaXMub3BzKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgd2hpbGUgKGluZGV4IDwgZW5kICYmIGl0ZXIuaGFzTmV4dCgpKSB7XG4gICAgdmFyIG5leHRPcDtcbiAgICBpZiAoaW5kZXggPCBzdGFydCkge1xuICAgICAgbmV4dE9wID0gaXRlci5uZXh0KHN0YXJ0IC0gaW5kZXgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBuZXh0T3AgPSBpdGVyLm5leHQoZW5kIC0gaW5kZXgpO1xuICAgICAgb3BzLnB1c2gobmV4dE9wKTtcbiAgICB9XG4gICAgaW5kZXggKz0gb3AubGVuZ3RoKG5leHRPcCk7XG4gIH1cbiAgcmV0dXJuIG5ldyBEZWx0YShvcHMpO1xufTtcblxuXG5EZWx0YS5wcm90b3R5cGUuY29tcG9zZSA9IGZ1bmN0aW9uIChvdGhlcikge1xuICB2YXIgdGhpc0l0ZXIgPSBvcC5pdGVyYXRvcih0aGlzLm9wcyk7XG4gIHZhciBvdGhlckl0ZXIgPSBvcC5pdGVyYXRvcihvdGhlci5vcHMpO1xuICB2YXIgb3BzID0gW107XG4gIHZhciBmaXJzdE90aGVyID0gb3RoZXJJdGVyLnBlZWsoKTtcbiAgaWYgKGZpcnN0T3RoZXIgIT0gbnVsbCAmJiB0eXBlb2YgZmlyc3RPdGhlci5yZXRhaW4gPT09ICdudW1iZXInICYmIGZpcnN0T3RoZXIuYXR0cmlidXRlcyA9PSBudWxsKSB7XG4gICAgdmFyIGZpcnN0TGVmdCA9IGZpcnN0T3RoZXIucmV0YWluO1xuICAgIHdoaWxlICh0aGlzSXRlci5wZWVrVHlwZSgpID09PSAnaW5zZXJ0JyAmJiB0aGlzSXRlci5wZWVrTGVuZ3RoKCkgPD0gZmlyc3RMZWZ0KSB7XG4gICAgICBmaXJzdExlZnQgLT0gdGhpc0l0ZXIucGVla0xlbmd0aCgpO1xuICAgICAgb3BzLnB1c2godGhpc0l0ZXIubmV4dCgpKTtcbiAgICB9XG4gICAgaWYgKGZpcnN0T3RoZXIucmV0YWluIC0gZmlyc3RMZWZ0ID4gMCkge1xuICAgICAgb3RoZXJJdGVyLm5leHQoZmlyc3RPdGhlci5yZXRhaW4gLSBmaXJzdExlZnQpO1xuICAgIH1cbiAgfVxuICB2YXIgZGVsdGEgPSBuZXcgRGVsdGEob3BzKTtcbiAgd2hpbGUgKHRoaXNJdGVyLmhhc05leHQoKSB8fCBvdGhlckl0ZXIuaGFzTmV4dCgpKSB7XG4gICAgaWYgKG90aGVySXRlci5wZWVrVHlwZSgpID09PSAnaW5zZXJ0Jykge1xuICAgICAgZGVsdGEucHVzaChvdGhlckl0ZXIubmV4dCgpKTtcbiAgICB9IGVsc2UgaWYgKHRoaXNJdGVyLnBlZWtUeXBlKCkgPT09ICdkZWxldGUnKSB7XG4gICAgICBkZWx0YS5wdXNoKHRoaXNJdGVyLm5leHQoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBsZW5ndGggPSBNYXRoLm1pbih0aGlzSXRlci5wZWVrTGVuZ3RoKCksIG90aGVySXRlci5wZWVrTGVuZ3RoKCkpO1xuICAgICAgdmFyIHRoaXNPcCA9IHRoaXNJdGVyLm5leHQobGVuZ3RoKTtcbiAgICAgIHZhciBvdGhlck9wID0gb3RoZXJJdGVyLm5leHQobGVuZ3RoKTtcbiAgICAgIGlmICh0eXBlb2Ygb3RoZXJPcC5yZXRhaW4gPT09ICdudW1iZXInKSB7XG4gICAgICAgIHZhciBuZXdPcCA9IHt9O1xuICAgICAgICBpZiAodHlwZW9mIHRoaXNPcC5yZXRhaW4gPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgbmV3T3AucmV0YWluID0gbGVuZ3RoO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5ld09wLmluc2VydCA9IHRoaXNPcC5pbnNlcnQ7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUHJlc2VydmUgbnVsbCB3aGVuIGNvbXBvc2luZyB3aXRoIGEgcmV0YWluLCBvdGhlcndpc2UgcmVtb3ZlIGl0IGZvciBpbnNlcnRzXG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gb3AuYXR0cmlidXRlcy5jb21wb3NlKHRoaXNPcC5hdHRyaWJ1dGVzLCBvdGhlck9wLmF0dHJpYnV0ZXMsIHR5cGVvZiB0aGlzT3AucmV0YWluID09PSAnbnVtYmVyJyk7XG4gICAgICAgIGlmIChhdHRyaWJ1dGVzKSBuZXdPcC5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICAgICAgZGVsdGEucHVzaChuZXdPcCk7XG5cbiAgICAgICAgLy8gT3B0aW1pemF0aW9uIGlmIHJlc3Qgb2Ygb3RoZXIgaXMganVzdCByZXRhaW5cbiAgICAgICAgaWYgKCFvdGhlckl0ZXIuaGFzTmV4dCgpICYmIGVxdWFsKGRlbHRhLm9wc1tkZWx0YS5vcHMubGVuZ3RoIC0gMV0sIG5ld09wKSkge1xuICAgICAgICAgIHZhciByZXN0ID0gbmV3IERlbHRhKHRoaXNJdGVyLnJlc3QoKSk7XG4gICAgICAgICAgcmV0dXJuIGRlbHRhLmNvbmNhdChyZXN0KS5jaG9wKCk7XG4gICAgICAgIH1cblxuICAgICAgLy8gT3RoZXIgb3Agc2hvdWxkIGJlIGRlbGV0ZSwgd2UgY291bGQgYmUgYW4gaW5zZXJ0IG9yIHJldGFpblxuICAgICAgLy8gSW5zZXJ0ICsgZGVsZXRlIGNhbmNlbHMgb3V0XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvdGhlck9wWydkZWxldGUnXSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHRoaXNPcC5yZXRhaW4gPT09ICdudW1iZXInKSB7XG4gICAgICAgIGRlbHRhLnB1c2gob3RoZXJPcCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBkZWx0YS5jaG9wKCk7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuY29uY2F0ID0gZnVuY3Rpb24gKG90aGVyKSB7XG4gIHZhciBkZWx0YSA9IG5ldyBEZWx0YSh0aGlzLm9wcy5zbGljZSgpKTtcbiAgaWYgKG90aGVyLm9wcy5sZW5ndGggPiAwKSB7XG4gICAgZGVsdGEucHVzaChvdGhlci5vcHNbMF0pO1xuICAgIGRlbHRhLm9wcyA9IGRlbHRhLm9wcy5jb25jYXQob3RoZXIub3BzLnNsaWNlKDEpKTtcbiAgfVxuICByZXR1cm4gZGVsdGE7XG59O1xuXG5EZWx0YS5wcm90b3R5cGUuZGlmZiA9IGZ1bmN0aW9uIChvdGhlciwgaW5kZXgpIHtcbiAgaWYgKHRoaXMub3BzID09PSBvdGhlci5vcHMpIHtcbiAgICByZXR1cm4gbmV3IERlbHRhKCk7XG4gIH1cbiAgdmFyIHN0cmluZ3MgPSBbdGhpcywgb3RoZXJdLm1hcChmdW5jdGlvbiAoZGVsdGEpIHtcbiAgICByZXR1cm4gZGVsdGEubWFwKGZ1bmN0aW9uIChvcCkge1xuICAgICAgaWYgKG9wLmluc2VydCAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0eXBlb2Ygb3AuaW5zZXJ0ID09PSAnc3RyaW5nJyA/IG9wLmluc2VydCA6IE5VTExfQ0hBUkFDVEVSO1xuICAgICAgfVxuICAgICAgdmFyIHByZXAgPSAoZGVsdGEgPT09IG90aGVyKSA/ICdvbicgOiAnd2l0aCc7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2RpZmYoKSBjYWxsZWQgJyArIHByZXAgKyAnIG5vbi1kb2N1bWVudCcpO1xuICAgIH0pLmpvaW4oJycpO1xuICB9KTtcbiAgdmFyIGRlbHRhID0gbmV3IERlbHRhKCk7XG4gIHZhciBkaWZmUmVzdWx0ID0gZGlmZihzdHJpbmdzWzBdLCBzdHJpbmdzWzFdLCBpbmRleCk7XG4gIHZhciB0aGlzSXRlciA9IG9wLml0ZXJhdG9yKHRoaXMub3BzKTtcbiAgdmFyIG90aGVySXRlciA9IG9wLml0ZXJhdG9yKG90aGVyLm9wcyk7XG4gIGRpZmZSZXN1bHQuZm9yRWFjaChmdW5jdGlvbiAoY29tcG9uZW50KSB7XG4gICAgdmFyIGxlbmd0aCA9IGNvbXBvbmVudFsxXS5sZW5ndGg7XG4gICAgd2hpbGUgKGxlbmd0aCA+IDApIHtcbiAgICAgIHZhciBvcExlbmd0aCA9IDA7XG4gICAgICBzd2l0Y2ggKGNvbXBvbmVudFswXSkge1xuICAgICAgICBjYXNlIGRpZmYuSU5TRVJUOlxuICAgICAgICAgIG9wTGVuZ3RoID0gTWF0aC5taW4ob3RoZXJJdGVyLnBlZWtMZW5ndGgoKSwgbGVuZ3RoKTtcbiAgICAgICAgICBkZWx0YS5wdXNoKG90aGVySXRlci5uZXh0KG9wTGVuZ3RoKSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgZGlmZi5ERUxFVEU6XG4gICAgICAgICAgb3BMZW5ndGggPSBNYXRoLm1pbihsZW5ndGgsIHRoaXNJdGVyLnBlZWtMZW5ndGgoKSk7XG4gICAgICAgICAgdGhpc0l0ZXIubmV4dChvcExlbmd0aCk7XG4gICAgICAgICAgZGVsdGFbJ2RlbGV0ZSddKG9wTGVuZ3RoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBkaWZmLkVRVUFMOlxuICAgICAgICAgIG9wTGVuZ3RoID0gTWF0aC5taW4odGhpc0l0ZXIucGVla0xlbmd0aCgpLCBvdGhlckl0ZXIucGVla0xlbmd0aCgpLCBsZW5ndGgpO1xuICAgICAgICAgIHZhciB0aGlzT3AgPSB0aGlzSXRlci5uZXh0KG9wTGVuZ3RoKTtcbiAgICAgICAgICB2YXIgb3RoZXJPcCA9IG90aGVySXRlci5uZXh0KG9wTGVuZ3RoKTtcbiAgICAgICAgICBpZiAoZXF1YWwodGhpc09wLmluc2VydCwgb3RoZXJPcC5pbnNlcnQpKSB7XG4gICAgICAgICAgICBkZWx0YS5yZXRhaW4ob3BMZW5ndGgsIG9wLmF0dHJpYnV0ZXMuZGlmZih0aGlzT3AuYXR0cmlidXRlcywgb3RoZXJPcC5hdHRyaWJ1dGVzKSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRlbHRhLnB1c2gob3RoZXJPcClbJ2RlbGV0ZSddKG9wTGVuZ3RoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBsZW5ndGggLT0gb3BMZW5ndGg7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGRlbHRhLmNob3AoKTtcbn07XG5cbkRlbHRhLnByb3RvdHlwZS5lYWNoTGluZSA9IGZ1bmN0aW9uIChwcmVkaWNhdGUsIG5ld2xpbmUpIHtcbiAgbmV3bGluZSA9IG5ld2xpbmUgfHwgJ1xcbic7XG4gIHZhciBpdGVyID0gb3AuaXRlcmF0b3IodGhpcy5vcHMpO1xuICB2YXIgbGluZSA9IG5ldyBEZWx0YSgpO1xuICB2YXIgaSA9IDA7XG4gIHdoaWxlIChpdGVyLmhhc05leHQoKSkge1xuICAgIGlmIChpdGVyLnBlZWtUeXBlKCkgIT09ICdpbnNlcnQnKSByZXR1cm47XG4gICAgdmFyIHRoaXNPcCA9IGl0ZXIucGVlaygpO1xuICAgIHZhciBzdGFydCA9IG9wLmxlbmd0aCh0aGlzT3ApIC0gaXRlci5wZWVrTGVuZ3RoKCk7XG4gICAgdmFyIGluZGV4ID0gdHlwZW9mIHRoaXNPcC5pbnNlcnQgPT09ICdzdHJpbmcnID9cbiAgICAgIHRoaXNPcC5pbnNlcnQuaW5kZXhPZihuZXdsaW5lLCBzdGFydCkgLSBzdGFydCA6IC0xO1xuICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgIGxpbmUucHVzaChpdGVyLm5leHQoKSk7XG4gICAgfSBlbHNlIGlmIChpbmRleCA+IDApIHtcbiAgICAgIGxpbmUucHVzaChpdGVyLm5leHQoaW5kZXgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKHByZWRpY2F0ZShsaW5lLCBpdGVyLm5leHQoMSkuYXR0cmlidXRlcyB8fCB7fSwgaSkgPT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGkgKz0gMTtcbiAgICAgIGxpbmUgPSBuZXcgRGVsdGEoKTtcbiAgICB9XG4gIH1cbiAgaWYgKGxpbmUubGVuZ3RoKCkgPiAwKSB7XG4gICAgcHJlZGljYXRlKGxpbmUsIHt9LCBpKTtcbiAgfVxufTtcblxuRGVsdGEucHJvdG90eXBlLnRyYW5zZm9ybSA9IGZ1bmN0aW9uIChvdGhlciwgcHJpb3JpdHkpIHtcbiAgcHJpb3JpdHkgPSAhIXByaW9yaXR5O1xuICBpZiAodHlwZW9mIG90aGVyID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybVBvc2l0aW9uKG90aGVyLCBwcmlvcml0eSk7XG4gIH1cbiAgdmFyIHRoaXNJdGVyID0gb3AuaXRlcmF0b3IodGhpcy5vcHMpO1xuICB2YXIgb3RoZXJJdGVyID0gb3AuaXRlcmF0b3Iob3RoZXIub3BzKTtcbiAgdmFyIGRlbHRhID0gbmV3IERlbHRhKCk7XG4gIHdoaWxlICh0aGlzSXRlci5oYXNOZXh0KCkgfHwgb3RoZXJJdGVyLmhhc05leHQoKSkge1xuICAgIGlmICh0aGlzSXRlci5wZWVrVHlwZSgpID09PSAnaW5zZXJ0JyAmJiAocHJpb3JpdHkgfHwgb3RoZXJJdGVyLnBlZWtUeXBlKCkgIT09ICdpbnNlcnQnKSkge1xuICAgICAgZGVsdGEucmV0YWluKG9wLmxlbmd0aCh0aGlzSXRlci5uZXh0KCkpKTtcbiAgICB9IGVsc2UgaWYgKG90aGVySXRlci5wZWVrVHlwZSgpID09PSAnaW5zZXJ0Jykge1xuICAgICAgZGVsdGEucHVzaChvdGhlckl0ZXIubmV4dCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGxlbmd0aCA9IE1hdGgubWluKHRoaXNJdGVyLnBlZWtMZW5ndGgoKSwgb3RoZXJJdGVyLnBlZWtMZW5ndGgoKSk7XG4gICAgICB2YXIgdGhpc09wID0gdGhpc0l0ZXIubmV4dChsZW5ndGgpO1xuICAgICAgdmFyIG90aGVyT3AgPSBvdGhlckl0ZXIubmV4dChsZW5ndGgpO1xuICAgICAgaWYgKHRoaXNPcFsnZGVsZXRlJ10pIHtcbiAgICAgICAgLy8gT3VyIGRlbGV0ZSBlaXRoZXIgbWFrZXMgdGhlaXIgZGVsZXRlIHJlZHVuZGFudCBvciByZW1vdmVzIHRoZWlyIHJldGFpblxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAob3RoZXJPcFsnZGVsZXRlJ10pIHtcbiAgICAgICAgZGVsdGEucHVzaChvdGhlck9wKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIFdlIHJldGFpbiBlaXRoZXIgdGhlaXIgcmV0YWluIG9yIGluc2VydFxuICAgICAgICBkZWx0YS5yZXRhaW4obGVuZ3RoLCBvcC5hdHRyaWJ1dGVzLnRyYW5zZm9ybSh0aGlzT3AuYXR0cmlidXRlcywgb3RoZXJPcC5hdHRyaWJ1dGVzLCBwcmlvcml0eSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZGVsdGEuY2hvcCgpO1xufTtcblxuRGVsdGEucHJvdG90eXBlLnRyYW5zZm9ybVBvc2l0aW9uID0gZnVuY3Rpb24gKGluZGV4LCBwcmlvcml0eSkge1xuICBwcmlvcml0eSA9ICEhcHJpb3JpdHk7XG4gIHZhciB0aGlzSXRlciA9IG9wLml0ZXJhdG9yKHRoaXMub3BzKTtcbiAgdmFyIG9mZnNldCA9IDA7XG4gIHdoaWxlICh0aGlzSXRlci5oYXNOZXh0KCkgJiYgb2Zmc2V0IDw9IGluZGV4KSB7XG4gICAgdmFyIGxlbmd0aCA9IHRoaXNJdGVyLnBlZWtMZW5ndGgoKTtcbiAgICB2YXIgbmV4dFR5cGUgPSB0aGlzSXRlci5wZWVrVHlwZSgpO1xuICAgIHRoaXNJdGVyLm5leHQoKTtcbiAgICBpZiAobmV4dFR5cGUgPT09ICdkZWxldGUnKSB7XG4gICAgICBpbmRleCAtPSBNYXRoLm1pbihsZW5ndGgsIGluZGV4IC0gb2Zmc2V0KTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH0gZWxzZSBpZiAobmV4dFR5cGUgPT09ICdpbnNlcnQnICYmIChvZmZzZXQgPCBpbmRleCB8fCAhcHJpb3JpdHkpKSB7XG4gICAgICBpbmRleCArPSBsZW5ndGg7XG4gICAgfVxuICAgIG9mZnNldCArPSBsZW5ndGg7XG4gIH1cbiAgcmV0dXJuIGluZGV4O1xufTtcblxuXG5tb2R1bGUuZXhwb3J0cyA9IERlbHRhO1xuXG5cbi8qKiovIH0pLFxuLyogMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBnT1BEID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcblxudmFyIGlzQXJyYXkgPSBmdW5jdGlvbiBpc0FycmF5KGFycikge1xuXHRpZiAodHlwZW9mIEFycmF5LmlzQXJyYXkgPT09ICdmdW5jdGlvbicpIHtcblx0XHRyZXR1cm4gQXJyYXkuaXNBcnJheShhcnIpO1xuXHR9XG5cblx0cmV0dXJuIHRvU3RyLmNhbGwoYXJyKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn07XG5cbnZhciBpc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcblx0aWYgKCFvYmogfHwgdG9TdHIuY2FsbChvYmopICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHZhciBoYXNPd25Db25zdHJ1Y3RvciA9IGhhc093bi5jYWxsKG9iaiwgJ2NvbnN0cnVjdG9yJyk7XG5cdHZhciBoYXNJc1Byb3RvdHlwZU9mID0gb2JqLmNvbnN0cnVjdG9yICYmIG9iai5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgJiYgaGFzT3duLmNhbGwob2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwgJ2lzUHJvdG90eXBlT2YnKTtcblx0Ly8gTm90IG93biBjb25zdHJ1Y3RvciBwcm9wZXJ0eSBtdXN0IGJlIE9iamVjdFxuXHRpZiAob2JqLmNvbnN0cnVjdG9yICYmICFoYXNPd25Db25zdHJ1Y3RvciAmJiAhaGFzSXNQcm90b3R5cGVPZikge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdC8vIE93biBwcm9wZXJ0aWVzIGFyZSBlbnVtZXJhdGVkIGZpcnN0bHksIHNvIHRvIHNwZWVkIHVwLFxuXHQvLyBpZiBsYXN0IG9uZSBpcyBvd24sIHRoZW4gYWxsIHByb3BlcnRpZXMgYXJlIG93bi5cblx0dmFyIGtleTtcblx0Zm9yIChrZXkgaW4gb2JqKSB7IC8qKi8gfVxuXG5cdHJldHVybiB0eXBlb2Yga2V5ID09PSAndW5kZWZpbmVkJyB8fCBoYXNPd24uY2FsbChvYmosIGtleSk7XG59O1xuXG4vLyBJZiBuYW1lIGlzICdfX3Byb3RvX18nLCBhbmQgT2JqZWN0LmRlZmluZVByb3BlcnR5IGlzIGF2YWlsYWJsZSwgZGVmaW5lIF9fcHJvdG9fXyBhcyBhbiBvd24gcHJvcGVydHkgb24gdGFyZ2V0XG52YXIgc2V0UHJvcGVydHkgPSBmdW5jdGlvbiBzZXRQcm9wZXJ0eSh0YXJnZXQsIG9wdGlvbnMpIHtcblx0aWYgKGRlZmluZVByb3BlcnR5ICYmIG9wdGlvbnMubmFtZSA9PT0gJ19fcHJvdG9fXycpIHtcblx0XHRkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG9wdGlvbnMubmFtZSwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdHZhbHVlOiBvcHRpb25zLm5ld1ZhbHVlLFxuXHRcdFx0d3JpdGFibGU6IHRydWVcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR0YXJnZXRbb3B0aW9ucy5uYW1lXSA9IG9wdGlvbnMubmV3VmFsdWU7XG5cdH1cbn07XG5cbi8vIFJldHVybiB1bmRlZmluZWQgaW5zdGVhZCBvZiBfX3Byb3RvX18gaWYgJ19fcHJvdG9fXycgaXMgbm90IGFuIG93biBwcm9wZXJ0eVxudmFyIGdldFByb3BlcnR5ID0gZnVuY3Rpb24gZ2V0UHJvcGVydHkob2JqLCBuYW1lKSB7XG5cdGlmIChuYW1lID09PSAnX19wcm90b19fJykge1xuXHRcdGlmICghaGFzT3duLmNhbGwob2JqLCBuYW1lKSkge1xuXHRcdFx0cmV0dXJuIHZvaWQgMDtcblx0XHR9IGVsc2UgaWYgKGdPUEQpIHtcblx0XHRcdC8vIEluIGVhcmx5IHZlcnNpb25zIG9mIG5vZGUsIG9ialsnX19wcm90b19fJ10gaXMgYnVnZ3kgd2hlbiBvYmogaGFzXG5cdFx0XHQvLyBfX3Byb3RvX18gYXMgYW4gb3duIHByb3BlcnR5LiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKCkgd29ya3MuXG5cdFx0XHRyZXR1cm4gZ09QRChvYmosIG5hbWUpLnZhbHVlO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBvYmpbbmFtZV07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGV4dGVuZCgpIHtcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lO1xuXHR2YXIgdGFyZ2V0ID0gYXJndW1lbnRzWzBdO1xuXHR2YXIgaSA9IDE7XG5cdHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuXHR2YXIgZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKHR5cGVvZiB0YXJnZXQgPT09ICdib29sZWFuJykge1xuXHRcdGRlZXAgPSB0YXJnZXQ7XG5cdFx0dGFyZ2V0ID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuXHRcdC8vIHNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHRpID0gMjtcblx0fVxuXHRpZiAodGFyZ2V0ID09IG51bGwgfHwgKHR5cGVvZiB0YXJnZXQgIT09ICdvYmplY3QnICYmIHR5cGVvZiB0YXJnZXQgIT09ICdmdW5jdGlvbicpKSB7XG5cdFx0dGFyZ2V0ID0ge307XG5cdH1cblxuXHRmb3IgKDsgaSA8IGxlbmd0aDsgKytpKSB7XG5cdFx0b3B0aW9ucyA9IGFyZ3VtZW50c1tpXTtcblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKG9wdGlvbnMgIT0gbnVsbCkge1xuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxuXHRcdFx0Zm9yIChuYW1lIGluIG9wdGlvbnMpIHtcblx0XHRcdFx0c3JjID0gZ2V0UHJvcGVydHkodGFyZ2V0LCBuYW1lKTtcblx0XHRcdFx0Y29weSA9IGdldFByb3BlcnR5KG9wdGlvbnMsIG5hbWUpO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKHRhcmdldCAhPT0gY29weSkge1xuXHRcdFx0XHRcdC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xuXHRcdFx0XHRcdGlmIChkZWVwICYmIGNvcHkgJiYgKGlzUGxhaW5PYmplY3QoY29weSkgfHwgKGNvcHlJc0FycmF5ID0gaXNBcnJheShjb3B5KSkpKSB7XG5cdFx0XHRcdFx0XHRpZiAoY29weUlzQXJyYXkpIHtcblx0XHRcdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblx0XHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgaXNBcnJheShzcmMpID8gc3JjIDogW107XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBpc1BsYWluT2JqZWN0KHNyYykgPyBzcmMgOiB7fTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0XHRzZXRQcm9wZXJ0eSh0YXJnZXQsIHsgbmFtZTogbmFtZSwgbmV3VmFsdWU6IGV4dGVuZChkZWVwLCBjbG9uZSwgY29weSkgfSk7XG5cblx0XHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdFx0fSBlbHNlIGlmICh0eXBlb2YgY29weSAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0XHRcdHNldFByb3BlcnR5KHRhcmdldCwgeyBuYW1lOiBuYW1lLCBuZXdWYWx1ZTogY29weSB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuQmxvY2tFbWJlZCA9IGV4cG9ydHMuYnViYmxlRm9ybWF0cyA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX2V4dGVuZCA9IF9fd2VicGFja19yZXF1aXJlX18oMyk7XG5cbnZhciBfZXh0ZW5kMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V4dGVuZCk7XG5cbnZhciBfcXVpbGxEZWx0YSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5cbnZhciBfcXVpbGxEZWx0YTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9xdWlsbERlbHRhKTtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG52YXIgX2JyZWFrID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG5cbnZhciBfYnJlYWsyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnJlYWspO1xuXG52YXIgX2lubGluZSA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG5cbnZhciBfaW5saW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lubGluZSk7XG5cbnZhciBfdGV4dCA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG5cbnZhciBfdGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90ZXh0KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTkVXTElORV9MRU5HVEggPSAxO1xuXG52YXIgQmxvY2tFbWJlZCA9IGZ1bmN0aW9uIChfUGFyY2htZW50JEVtYmVkKSB7XG4gIF9pbmhlcml0cyhCbG9ja0VtYmVkLCBfUGFyY2htZW50JEVtYmVkKTtcblxuICBmdW5jdGlvbiBCbG9ja0VtYmVkKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCbG9ja0VtYmVkKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQmxvY2tFbWJlZC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrRW1iZWQpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhCbG9ja0VtYmVkLCBbe1xuICAgIGtleTogJ2F0dGFjaCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGF0dGFjaCgpIHtcbiAgICAgIF9nZXQoQmxvY2tFbWJlZC5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihCbG9ja0VtYmVkLnByb3RvdHlwZSksICdhdHRhY2gnLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gbmV3IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5TdG9yZSh0aGlzLmRvbU5vZGUpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlbHRhJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsdGEoKSB7XG4gICAgICByZXR1cm4gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkuaW5zZXJ0KHRoaXMudmFsdWUoKSwgKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRoaXMuZm9ybWF0cygpLCB0aGlzLmF0dHJpYnV0ZXMudmFsdWVzKCkpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXQobmFtZSwgdmFsdWUpIHtcbiAgICAgIHZhciBhdHRyaWJ1dGUgPSBfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KG5hbWUsIF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0tfQVRUUklCVVRFKTtcbiAgICAgIGlmIChhdHRyaWJ1dGUgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuYXR0cmlidXRlKGF0dHJpYnV0ZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdEF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0QXQoaW5kZXgsIGxlbmd0aCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgIHRoaXMuZm9ybWF0KG5hbWUsIHZhbHVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbnNlcnRBdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluc2VydEF0KGluZGV4LCB2YWx1ZSwgZGVmKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZS5lbmRzV2l0aCgnXFxuJykpIHtcbiAgICAgICAgdmFyIGJsb2NrID0gX3BhcmNobWVudDIuZGVmYXVsdC5jcmVhdGUoQmxvY2suYmxvdE5hbWUpO1xuICAgICAgICB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUoYmxvY2ssIGluZGV4ID09PSAwID8gdGhpcyA6IHRoaXMubmV4dCk7XG4gICAgICAgIGJsb2NrLmluc2VydEF0KDAsIHZhbHVlLnNsaWNlKDAsIC0xKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0KEJsb2NrRW1iZWQucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2tFbWJlZC5wcm90b3R5cGUpLCAnaW5zZXJ0QXQnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCB2YWx1ZSwgZGVmKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQmxvY2tFbWJlZDtcbn0oX3BhcmNobWVudDIuZGVmYXVsdC5FbWJlZCk7XG5cbkJsb2NrRW1iZWQuc2NvcGUgPSBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLX0JMT1Q7XG4vLyBJdCBpcyBpbXBvcnRhbnQgZm9yIGN1cnNvciBiZWhhdmlvciBCbG9ja0VtYmVkcyB1c2UgdGFncyB0aGF0IGFyZSBibG9jayBsZXZlbCBlbGVtZW50c1xuXG5cbnZhciBCbG9jayA9IGZ1bmN0aW9uIChfUGFyY2htZW50JEJsb2NrKSB7XG4gIF9pbmhlcml0cyhCbG9jaywgX1BhcmNobWVudCRCbG9jayk7XG5cbiAgZnVuY3Rpb24gQmxvY2soZG9tTm9kZSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCbG9jayk7XG5cbiAgICB2YXIgX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEJsb2NrLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2spKS5jYWxsKHRoaXMsIGRvbU5vZGUpKTtcblxuICAgIF90aGlzMi5jYWNoZSA9IHt9O1xuICAgIHJldHVybiBfdGhpczI7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQmxvY2ssIFt7XG4gICAga2V5OiAnZGVsdGEnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZWx0YSgpIHtcbiAgICAgIGlmICh0aGlzLmNhY2hlLmRlbHRhID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5kZWx0YSA9IHRoaXMuZGVzY2VuZGFudHMoX3BhcmNobWVudDIuZGVmYXVsdC5MZWFmKS5yZWR1Y2UoZnVuY3Rpb24gKGRlbHRhLCBsZWFmKSB7XG4gICAgICAgICAgaWYgKGxlYWYubGVuZ3RoKCkgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBkZWx0YTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGRlbHRhLmluc2VydChsZWFmLnZhbHVlKCksIGJ1YmJsZUZvcm1hdHMobGVhZikpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkpLmluc2VydCgnXFxuJywgYnViYmxlRm9ybWF0cyh0aGlzKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5jYWNoZS5kZWx0YTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkZWxldGVBdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZUF0KGluZGV4LCBsZW5ndGgpIHtcbiAgICAgIF9nZXQoQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2sucHJvdG90eXBlKSwgJ2RlbGV0ZUF0JywgdGhpcykuY2FsbCh0aGlzLCBpbmRleCwgbGVuZ3RoKTtcbiAgICAgIHRoaXMuY2FjaGUgPSB7fTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXRBdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdEF0KGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKSB7XG4gICAgICBpZiAobGVuZ3RoIDw9IDApIHJldHVybjtcbiAgICAgIGlmIChfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KG5hbWUsIF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0spKSB7XG4gICAgICAgIGlmIChpbmRleCArIGxlbmd0aCA9PT0gdGhpcy5sZW5ndGgoKSkge1xuICAgICAgICAgIHRoaXMuZm9ybWF0KG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX2dldChCbG9jay5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihCbG9jay5wcm90b3R5cGUpLCAnZm9ybWF0QXQnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCBNYXRoLm1pbihsZW5ndGgsIHRoaXMubGVuZ3RoKCkgLSBpbmRleCAtIDEpLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICB0aGlzLmNhY2hlID0ge307XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaW5zZXJ0QXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbnNlcnRBdChpbmRleCwgdmFsdWUsIGRlZikge1xuICAgICAgaWYgKGRlZiAhPSBudWxsKSByZXR1cm4gX2dldChCbG9jay5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihCbG9jay5wcm90b3R5cGUpLCAnaW5zZXJ0QXQnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCB2YWx1ZSwgZGVmKTtcbiAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIHZhciBsaW5lcyA9IHZhbHVlLnNwbGl0KCdcXG4nKTtcbiAgICAgIHZhciB0ZXh0ID0gbGluZXMuc2hpZnQoKTtcbiAgICAgIGlmICh0ZXh0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKGluZGV4IDwgdGhpcy5sZW5ndGgoKSAtIDEgfHwgdGhpcy5jaGlsZHJlbi50YWlsID09IG51bGwpIHtcbiAgICAgICAgICBfZ2V0KEJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrLnByb3RvdHlwZSksICdpbnNlcnRBdCcsIHRoaXMpLmNhbGwodGhpcywgTWF0aC5taW4oaW5kZXgsIHRoaXMubGVuZ3RoKCkgLSAxKSwgdGV4dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5jaGlsZHJlbi50YWlsLmluc2VydEF0KHRoaXMuY2hpbGRyZW4udGFpbC5sZW5ndGgoKSwgdGV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jYWNoZSA9IHt9O1xuICAgICAgfVxuICAgICAgdmFyIGJsb2NrID0gdGhpcztcbiAgICAgIGxpbmVzLnJlZHVjZShmdW5jdGlvbiAoaW5kZXgsIGxpbmUpIHtcbiAgICAgICAgYmxvY2sgPSBibG9jay5zcGxpdChpbmRleCwgdHJ1ZSk7XG4gICAgICAgIGJsb2NrLmluc2VydEF0KDAsIGxpbmUpO1xuICAgICAgICByZXR1cm4gbGluZS5sZW5ndGg7XG4gICAgICB9LCBpbmRleCArIHRleHQubGVuZ3RoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbnNlcnRCZWZvcmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbnNlcnRCZWZvcmUoYmxvdCwgcmVmKSB7XG4gICAgICB2YXIgaGVhZCA9IHRoaXMuY2hpbGRyZW4uaGVhZDtcbiAgICAgIF9nZXQoQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2sucHJvdG90eXBlKSwgJ2luc2VydEJlZm9yZScsIHRoaXMpLmNhbGwodGhpcywgYmxvdCwgcmVmKTtcbiAgICAgIGlmIChoZWFkIGluc3RhbmNlb2YgX2JyZWFrMi5kZWZhdWx0KSB7XG4gICAgICAgIGhlYWQucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLmNhY2hlID0ge307XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbGVuZ3RoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGVuZ3RoKCkge1xuICAgICAgaWYgKHRoaXMuY2FjaGUubGVuZ3RoID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5sZW5ndGggPSBfZ2V0KEJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrLnByb3RvdHlwZSksICdsZW5ndGgnLCB0aGlzKS5jYWxsKHRoaXMpICsgTkVXTElORV9MRU5HVEg7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5jYWNoZS5sZW5ndGg7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbW92ZUNoaWxkcmVuJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbW92ZUNoaWxkcmVuKHRhcmdldCwgcmVmKSB7XG4gICAgICBfZ2V0KEJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrLnByb3RvdHlwZSksICdtb3ZlQ2hpbGRyZW4nLCB0aGlzKS5jYWxsKHRoaXMsIHRhcmdldCwgcmVmKTtcbiAgICAgIHRoaXMuY2FjaGUgPSB7fTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvcHRpbWl6ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wdGltaXplKGNvbnRleHQpIHtcbiAgICAgIF9nZXQoQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2sucHJvdG90eXBlKSwgJ29wdGltaXplJywgdGhpcykuY2FsbCh0aGlzLCBjb250ZXh0KTtcbiAgICAgIHRoaXMuY2FjaGUgPSB7fTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwYXRoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcGF0aChpbmRleCkge1xuICAgICAgcmV0dXJuIF9nZXQoQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2sucHJvdG90eXBlKSwgJ3BhdGgnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCB0cnVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmVDaGlsZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZUNoaWxkKGNoaWxkKSB7XG4gICAgICBfZ2V0KEJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrLnByb3RvdHlwZSksICdyZW1vdmVDaGlsZCcsIHRoaXMpLmNhbGwodGhpcywgY2hpbGQpO1xuICAgICAgdGhpcy5jYWNoZSA9IHt9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NwbGl0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3BsaXQoaW5kZXgpIHtcbiAgICAgIHZhciBmb3JjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIGlmIChmb3JjZSAmJiAoaW5kZXggPT09IDAgfHwgaW5kZXggPj0gdGhpcy5sZW5ndGgoKSAtIE5FV0xJTkVfTEVOR1RIKSkge1xuICAgICAgICB2YXIgY2xvbmUgPSB0aGlzLmNsb25lKCk7XG4gICAgICAgIGlmIChpbmRleCA9PT0gMCkge1xuICAgICAgICAgIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZShjbG9uZSwgdGhpcyk7XG4gICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKGNsb25lLCB0aGlzLm5leHQpO1xuICAgICAgICAgIHJldHVybiBjbG9uZTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIG5leHQgPSBfZ2V0KEJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJsb2NrLnByb3RvdHlwZSksICdzcGxpdCcsIHRoaXMpLmNhbGwodGhpcywgaW5kZXgsIGZvcmNlKTtcbiAgICAgICAgdGhpcy5jYWNoZSA9IHt9O1xuICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQmxvY2s7XG59KF9wYXJjaG1lbnQyLmRlZmF1bHQuQmxvY2spO1xuXG5CbG9jay5ibG90TmFtZSA9ICdibG9jayc7XG5CbG9jay50YWdOYW1lID0gJ1AnO1xuQmxvY2suZGVmYXVsdENoaWxkID0gJ2JyZWFrJztcbkJsb2NrLmFsbG93ZWRDaGlsZHJlbiA9IFtfaW5saW5lMi5kZWZhdWx0LCBfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkLCBfdGV4dDIuZGVmYXVsdF07XG5cbmZ1bmN0aW9uIGJ1YmJsZUZvcm1hdHMoYmxvdCkge1xuICB2YXIgZm9ybWF0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge307XG5cbiAgaWYgKGJsb3QgPT0gbnVsbCkgcmV0dXJuIGZvcm1hdHM7XG4gIGlmICh0eXBlb2YgYmxvdC5mb3JtYXRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm9ybWF0cyA9ICgwLCBfZXh0ZW5kMi5kZWZhdWx0KShmb3JtYXRzLCBibG90LmZvcm1hdHMoKSk7XG4gIH1cbiAgaWYgKGJsb3QucGFyZW50ID09IG51bGwgfHwgYmxvdC5wYXJlbnQuYmxvdE5hbWUgPT0gJ3Njcm9sbCcgfHwgYmxvdC5wYXJlbnQuc3RhdGljcy5zY29wZSAhPT0gYmxvdC5zdGF0aWNzLnNjb3BlKSB7XG4gICAgcmV0dXJuIGZvcm1hdHM7XG4gIH1cbiAgcmV0dXJuIGJ1YmJsZUZvcm1hdHMoYmxvdC5wYXJlbnQsIGZvcm1hdHMpO1xufVxuXG5leHBvcnRzLmJ1YmJsZUZvcm1hdHMgPSBidWJibGVGb3JtYXRzO1xuZXhwb3J0cy5CbG9ja0VtYmVkID0gQmxvY2tFbWJlZDtcbmV4cG9ydHMuZGVmYXVsdCA9IEJsb2NrO1xuXG4vKioqLyB9KSxcbi8qIDUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMub3ZlcmxvYWQgPSBleHBvcnRzLmV4cGFuZENvbmZpZyA9IHVuZGVmaW5lZDtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbl9fd2VicGFja19yZXF1aXJlX18oNTApO1xuXG52YXIgX3F1aWxsRGVsdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG52YXIgX3F1aWxsRGVsdGEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGxEZWx0YSk7XG5cbnZhciBfZWRpdG9yID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNCk7XG5cbnZhciBfZWRpdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VkaXRvcik7XG5cbnZhciBfZW1pdHRlcjMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2VtaXR0ZXI0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1pdHRlcjMpO1xuXG52YXIgX21vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG5cbnZhciBfbW9kdWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21vZHVsZSk7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF9zZWxlY3Rpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KTtcblxudmFyIF9zZWxlY3Rpb24yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2VsZWN0aW9uKTtcblxudmFyIF9leHRlbmQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX2V4dGVuZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leHRlbmQpO1xuXG52YXIgX2xvZ2dlciA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuXG52YXIgX2xvZ2dlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2dnZXIpO1xuXG52YXIgX3RoZW1lID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNCk7XG5cbnZhciBfdGhlbWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdGhlbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgZGVidWcgPSAoMCwgX2xvZ2dlcjIuZGVmYXVsdCkoJ3F1aWxsJyk7XG5cbnZhciBRdWlsbCA9IGZ1bmN0aW9uICgpIHtcbiAgX2NyZWF0ZUNsYXNzKFF1aWxsLCBudWxsLCBbe1xuICAgIGtleTogJ2RlYnVnJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVidWcobGltaXQpIHtcbiAgICAgIGlmIChsaW1pdCA9PT0gdHJ1ZSkge1xuICAgICAgICBsaW1pdCA9ICdsb2cnO1xuICAgICAgfVxuICAgICAgX2xvZ2dlcjIuZGVmYXVsdC5sZXZlbChsaW1pdCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZmluZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZpbmQobm9kZSkge1xuICAgICAgcmV0dXJuIG5vZGUuX19xdWlsbCB8fCBfcGFyY2htZW50Mi5kZWZhdWx0LmZpbmQobm9kZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaW1wb3J0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gX2ltcG9ydChuYW1lKSB7XG4gICAgICBpZiAodGhpcy5pbXBvcnRzW25hbWVdID09IG51bGwpIHtcbiAgICAgICAgZGVidWcuZXJyb3IoJ0Nhbm5vdCBpbXBvcnQgJyArIG5hbWUgKyAnLiBBcmUgeW91IHN1cmUgaXQgd2FzIHJlZ2lzdGVyZWQ/Jyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5pbXBvcnRzW25hbWVdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlZ2lzdGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVnaXN0ZXIocGF0aCwgdGFyZ2V0KSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgb3ZlcndyaXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICAgICAgaWYgKHR5cGVvZiBwYXRoICE9PSAnc3RyaW5nJykge1xuICAgICAgICB2YXIgbmFtZSA9IHBhdGguYXR0ck5hbWUgfHwgcGF0aC5ibG90TmFtZTtcbiAgICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIC8vIHJlZ2lzdGVyKEJsb3QgfCBBdHRyaWJ1dG9yLCBvdmVyd3JpdGUpXG4gICAgICAgICAgdGhpcy5yZWdpc3RlcignZm9ybWF0cy8nICsgbmFtZSwgcGF0aCwgdGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBPYmplY3Qua2V5cyhwYXRoKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIF90aGlzLnJlZ2lzdGVyKGtleSwgcGF0aFtrZXldLCB0YXJnZXQpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodGhpcy5pbXBvcnRzW3BhdGhdICE9IG51bGwgJiYgIW92ZXJ3cml0ZSkge1xuICAgICAgICAgIGRlYnVnLndhcm4oJ092ZXJ3cml0aW5nICcgKyBwYXRoICsgJyB3aXRoJywgdGFyZ2V0KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmltcG9ydHNbcGF0aF0gPSB0YXJnZXQ7XG4gICAgICAgIGlmICgocGF0aC5zdGFydHNXaXRoKCdibG90cy8nKSB8fCBwYXRoLnN0YXJ0c1dpdGgoJ2Zvcm1hdHMvJykpICYmIHRhcmdldC5ibG90TmFtZSAhPT0gJ2Fic3RyYWN0Jykge1xuICAgICAgICAgIF9wYXJjaG1lbnQyLmRlZmF1bHQucmVnaXN0ZXIodGFyZ2V0KTtcbiAgICAgICAgfSBlbHNlIGlmIChwYXRoLnN0YXJ0c1dpdGgoJ21vZHVsZXMnKSAmJiB0eXBlb2YgdGFyZ2V0LnJlZ2lzdGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdGFyZ2V0LnJlZ2lzdGVyKCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICBmdW5jdGlvbiBRdWlsbChjb250YWluZXIpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBRdWlsbCk7XG5cbiAgICB0aGlzLm9wdGlvbnMgPSBleHBhbmRDb25maWcoY29udGFpbmVyLCBvcHRpb25zKTtcbiAgICB0aGlzLmNvbnRhaW5lciA9IHRoaXMub3B0aW9ucy5jb250YWluZXI7XG4gICAgaWYgKHRoaXMuY29udGFpbmVyID09IG51bGwpIHtcbiAgICAgIHJldHVybiBkZWJ1Zy5lcnJvcignSW52YWxpZCBRdWlsbCBjb250YWluZXInLCBjb250YWluZXIpO1xuICAgIH1cbiAgICBpZiAodGhpcy5vcHRpb25zLmRlYnVnKSB7XG4gICAgICBRdWlsbC5kZWJ1Zyh0aGlzLm9wdGlvbnMuZGVidWcpO1xuICAgIH1cbiAgICB2YXIgaHRtbCA9IHRoaXMuY29udGFpbmVyLmlubmVySFRNTC50cmltKCk7XG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgncWwtY29udGFpbmVyJyk7XG4gICAgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MID0gJyc7XG4gICAgdGhpcy5jb250YWluZXIuX19xdWlsbCA9IHRoaXM7XG4gICAgdGhpcy5yb290ID0gdGhpcy5hZGRDb250YWluZXIoJ3FsLWVkaXRvcicpO1xuICAgIHRoaXMucm9vdC5jbGFzc0xpc3QuYWRkKCdxbC1ibGFuaycpO1xuICAgIHRoaXMucm9vdC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZ3JhbW0nLCBmYWxzZSk7XG4gICAgdGhpcy5zY3JvbGxpbmdDb250YWluZXIgPSB0aGlzLm9wdGlvbnMuc2Nyb2xsaW5nQ29udGFpbmVyIHx8IHRoaXMucm9vdDtcbiAgICB0aGlzLmVtaXR0ZXIgPSBuZXcgX2VtaXR0ZXI0LmRlZmF1bHQoKTtcbiAgICB0aGlzLnNjcm9sbCA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKHRoaXMucm9vdCwge1xuICAgICAgZW1pdHRlcjogdGhpcy5lbWl0dGVyLFxuICAgICAgd2hpdGVsaXN0OiB0aGlzLm9wdGlvbnMuZm9ybWF0c1xuICAgIH0pO1xuICAgIHRoaXMuZWRpdG9yID0gbmV3IF9lZGl0b3IyLmRlZmF1bHQodGhpcy5zY3JvbGwpO1xuICAgIHRoaXMuc2VsZWN0aW9uID0gbmV3IF9zZWxlY3Rpb24yLmRlZmF1bHQodGhpcy5zY3JvbGwsIHRoaXMuZW1pdHRlcik7XG4gICAgdGhpcy50aGVtZSA9IG5ldyB0aGlzLm9wdGlvbnMudGhlbWUodGhpcywgdGhpcy5vcHRpb25zKTtcbiAgICB0aGlzLmtleWJvYXJkID0gdGhpcy50aGVtZS5hZGRNb2R1bGUoJ2tleWJvYXJkJyk7XG4gICAgdGhpcy5jbGlwYm9hcmQgPSB0aGlzLnRoZW1lLmFkZE1vZHVsZSgnY2xpcGJvYXJkJyk7XG4gICAgdGhpcy5oaXN0b3J5ID0gdGhpcy50aGVtZS5hZGRNb2R1bGUoJ2hpc3RvcnknKTtcbiAgICB0aGlzLnRoZW1lLmluaXQoKTtcbiAgICB0aGlzLmVtaXR0ZXIub24oX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIGZ1bmN0aW9uICh0eXBlKSB7XG4gICAgICBpZiAodHlwZSA9PT0gX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLlRFWFRfQ0hBTkdFKSB7XG4gICAgICAgIF90aGlzMi5yb290LmNsYXNzTGlzdC50b2dnbGUoJ3FsLWJsYW5rJywgX3RoaXMyLmVkaXRvci5pc0JsYW5rKCkpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMuZW1pdHRlci5vbihfZW1pdHRlcjQuZGVmYXVsdC5ldmVudHMuU0NST0xMX1VQREFURSwgZnVuY3Rpb24gKHNvdXJjZSwgbXV0YXRpb25zKSB7XG4gICAgICB2YXIgcmFuZ2UgPSBfdGhpczIuc2VsZWN0aW9uLmxhc3RSYW5nZTtcbiAgICAgIHZhciBpbmRleCA9IHJhbmdlICYmIHJhbmdlLmxlbmd0aCA9PT0gMCA/IHJhbmdlLmluZGV4IDogdW5kZWZpbmVkO1xuICAgICAgbW9kaWZ5LmNhbGwoX3RoaXMyLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczIuZWRpdG9yLnVwZGF0ZShudWxsLCBtdXRhdGlvbnMsIGluZGV4KTtcbiAgICAgIH0sIHNvdXJjZSk7XG4gICAgfSk7XG4gICAgdmFyIGNvbnRlbnRzID0gdGhpcy5jbGlwYm9hcmQuY29udmVydCgnPGRpdiBjbGFzcz1cXCdxbC1lZGl0b3JcXCcgc3R5bGU9XCJ3aGl0ZS1zcGFjZTogbm9ybWFsO1wiPicgKyBodG1sICsgJzxwPjxicj48L3A+PC9kaXY+Jyk7XG4gICAgdGhpcy5zZXRDb250ZW50cyhjb250ZW50cyk7XG4gICAgdGhpcy5oaXN0b3J5LmNsZWFyKCk7XG4gICAgaWYgKHRoaXMub3B0aW9ucy5wbGFjZWhvbGRlcikge1xuICAgICAgdGhpcy5yb290LnNldEF0dHJpYnV0ZSgnZGF0YS1wbGFjZWhvbGRlcicsIHRoaXMub3B0aW9ucy5wbGFjZWhvbGRlcik7XG4gICAgfVxuICAgIGlmICh0aGlzLm9wdGlvbnMucmVhZE9ubHkpIHtcbiAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgIH1cbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhRdWlsbCwgW3tcbiAgICBrZXk6ICdhZGRDb250YWluZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRDb250YWluZXIoY29udGFpbmVyKSB7XG4gICAgICB2YXIgcmVmTm9kZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogbnVsbDtcblxuICAgICAgaWYgKHR5cGVvZiBjb250YWluZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciBjbGFzc05hbWUgPSBjb250YWluZXI7XG4gICAgICAgIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO1xuICAgICAgfVxuICAgICAgdGhpcy5jb250YWluZXIuaW5zZXJ0QmVmb3JlKGNvbnRhaW5lciwgcmVmTm9kZSk7XG4gICAgICByZXR1cm4gY29udGFpbmVyO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2JsdXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBibHVyKCkge1xuICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0UmFuZ2UobnVsbCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZGVsZXRlVGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZVRleHQoaW5kZXgsIGxlbmd0aCwgc291cmNlKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIF9vdmVybG9hZCA9IG92ZXJsb2FkKGluZGV4LCBsZW5ndGgsIHNvdXJjZSk7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQyID0gX3NsaWNlZFRvQXJyYXkoX292ZXJsb2FkLCA0KTtcblxuICAgICAgaW5kZXggPSBfb3ZlcmxvYWQyWzBdO1xuICAgICAgbGVuZ3RoID0gX292ZXJsb2FkMlsxXTtcbiAgICAgIHNvdXJjZSA9IF9vdmVybG9hZDJbM107XG5cbiAgICAgIHJldHVybiBtb2RpZnkuY2FsbCh0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczMuZWRpdG9yLmRlbGV0ZVRleHQoaW5kZXgsIGxlbmd0aCk7XG4gICAgICB9LCBzb3VyY2UsIGluZGV4LCAtMSAqIGxlbmd0aCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZGlzYWJsZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgICB0aGlzLmVuYWJsZShmYWxzZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZW5hYmxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW5hYmxlKCkge1xuICAgICAgdmFyIGVuYWJsZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHRydWU7XG5cbiAgICAgIHRoaXMuc2Nyb2xsLmVuYWJsZShlbmFibGVkKTtcbiAgICAgIHRoaXMuY29udGFpbmVyLmNsYXNzTGlzdC50b2dnbGUoJ3FsLWRpc2FibGVkJywgIWVuYWJsZWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2ZvY3VzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICB2YXIgc2Nyb2xsVG9wID0gdGhpcy5zY3JvbGxpbmdDb250YWluZXIuc2Nyb2xsVG9wO1xuICAgICAgdGhpcy5zZWxlY3Rpb24uZm9jdXMoKTtcbiAgICAgIHRoaXMuc2Nyb2xsaW5nQ29udGFpbmVyLnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgIHRoaXMuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXQobmFtZSwgdmFsdWUpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLkFQSTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHJhbmdlID0gX3RoaXM0LmdldFNlbGVjdGlvbih0cnVlKTtcbiAgICAgICAgdmFyIGNoYW5nZSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpO1xuICAgICAgICBpZiAocmFuZ2UgPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiBjaGFuZ2U7XG4gICAgICAgIH0gZWxzZSBpZiAoX3BhcmNobWVudDIuZGVmYXVsdC5xdWVyeShuYW1lLCBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLKSkge1xuICAgICAgICAgIGNoYW5nZSA9IF90aGlzNC5lZGl0b3IuZm9ybWF0TGluZShyYW5nZS5pbmRleCwgcmFuZ2UubGVuZ3RoLCBfZGVmaW5lUHJvcGVydHkoe30sIG5hbWUsIHZhbHVlKSk7XG4gICAgICAgIH0gZWxzZSBpZiAocmFuZ2UubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgX3RoaXM0LnNlbGVjdGlvbi5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgICAgIHJldHVybiBjaGFuZ2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlID0gX3RoaXM0LmVkaXRvci5mb3JtYXRUZXh0KHJhbmdlLmluZGV4LCByYW5nZS5sZW5ndGgsIF9kZWZpbmVQcm9wZXJ0eSh7fSwgbmFtZSwgdmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICBfdGhpczQuc2V0U2VsZWN0aW9uKHJhbmdlLCBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICAgIHJldHVybiBjaGFuZ2U7XG4gICAgICB9LCBzb3VyY2UpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdExpbmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRMaW5lKGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlLCBzb3VyY2UpIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICB2YXIgZm9ybWF0cyA9IHZvaWQgMDtcblxuICAgICAgdmFyIF9vdmVybG9hZDMgPSBvdmVybG9hZChpbmRleCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSwgc291cmNlKTtcblxuICAgICAgdmFyIF9vdmVybG9hZDQgPSBfc2xpY2VkVG9BcnJheShfb3ZlcmxvYWQzLCA0KTtcblxuICAgICAgaW5kZXggPSBfb3ZlcmxvYWQ0WzBdO1xuICAgICAgbGVuZ3RoID0gX292ZXJsb2FkNFsxXTtcbiAgICAgIGZvcm1hdHMgPSBfb3ZlcmxvYWQ0WzJdO1xuICAgICAgc291cmNlID0gX292ZXJsb2FkNFszXTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNS5lZGl0b3IuZm9ybWF0TGluZShpbmRleCwgbGVuZ3RoLCBmb3JtYXRzKTtcbiAgICAgIH0sIHNvdXJjZSwgaW5kZXgsIDApO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdFRleHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRUZXh0KGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlLCBzb3VyY2UpIHtcbiAgICAgIHZhciBfdGhpczYgPSB0aGlzO1xuXG4gICAgICB2YXIgZm9ybWF0cyA9IHZvaWQgMDtcblxuICAgICAgdmFyIF9vdmVybG9hZDUgPSBvdmVybG9hZChpbmRleCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSwgc291cmNlKTtcblxuICAgICAgdmFyIF9vdmVybG9hZDYgPSBfc2xpY2VkVG9BcnJheShfb3ZlcmxvYWQ1LCA0KTtcblxuICAgICAgaW5kZXggPSBfb3ZlcmxvYWQ2WzBdO1xuICAgICAgbGVuZ3RoID0gX292ZXJsb2FkNlsxXTtcbiAgICAgIGZvcm1hdHMgPSBfb3ZlcmxvYWQ2WzJdO1xuICAgICAgc291cmNlID0gX292ZXJsb2FkNlszXTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNi5lZGl0b3IuZm9ybWF0VGV4dChpbmRleCwgbGVuZ3RoLCBmb3JtYXRzKTtcbiAgICAgIH0sIHNvdXJjZSwgaW5kZXgsIDApO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldEJvdW5kcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEJvdW5kcyhpbmRleCkge1xuICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcblxuICAgICAgdmFyIGJvdW5kcyA9IHZvaWQgMDtcbiAgICAgIGlmICh0eXBlb2YgaW5kZXggPT09ICdudW1iZXInKSB7XG4gICAgICAgIGJvdW5kcyA9IHRoaXMuc2VsZWN0aW9uLmdldEJvdW5kcyhpbmRleCwgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJvdW5kcyA9IHRoaXMuc2VsZWN0aW9uLmdldEJvdW5kcyhpbmRleC5pbmRleCwgaW5kZXgubGVuZ3RoKTtcbiAgICAgIH1cbiAgICAgIHZhciBjb250YWluZXJCb3VuZHMgPSB0aGlzLmNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGJvdHRvbTogYm91bmRzLmJvdHRvbSAtIGNvbnRhaW5lckJvdW5kcy50b3AsXG4gICAgICAgIGhlaWdodDogYm91bmRzLmhlaWdodCxcbiAgICAgICAgbGVmdDogYm91bmRzLmxlZnQgLSBjb250YWluZXJCb3VuZHMubGVmdCxcbiAgICAgICAgcmlnaHQ6IGJvdW5kcy5yaWdodCAtIGNvbnRhaW5lckJvdW5kcy5sZWZ0LFxuICAgICAgICB0b3A6IGJvdW5kcy50b3AgLSBjb250YWluZXJCb3VuZHMudG9wLFxuICAgICAgICB3aWR0aDogYm91bmRzLndpZHRoXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldENvbnRlbnRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q29udGVudHMoKSB7XG4gICAgICB2YXIgaW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDA7XG4gICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0aGlzLmdldExlbmd0aCgpIC0gaW5kZXg7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQ3ID0gb3ZlcmxvYWQoaW5kZXgsIGxlbmd0aCk7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQ4ID0gX3NsaWNlZFRvQXJyYXkoX292ZXJsb2FkNywgMik7XG5cbiAgICAgIGluZGV4ID0gX292ZXJsb2FkOFswXTtcbiAgICAgIGxlbmd0aCA9IF9vdmVybG9hZDhbMV07XG5cbiAgICAgIHJldHVybiB0aGlzLmVkaXRvci5nZXRDb250ZW50cyhpbmRleCwgbGVuZ3RoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRGb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRGb3JtYXQoKSB7XG4gICAgICB2YXIgaW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHRoaXMuZ2V0U2VsZWN0aW9uKHRydWUpO1xuICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcblxuICAgICAgaWYgKHR5cGVvZiBpbmRleCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWRpdG9yLmdldEZvcm1hdChpbmRleCwgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkaXRvci5nZXRGb3JtYXQoaW5kZXguaW5kZXgsIGluZGV4Lmxlbmd0aCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0SW5kZXgnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRJbmRleChibG90KSB7XG4gICAgICByZXR1cm4gYmxvdC5vZmZzZXQodGhpcy5zY3JvbGwpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldExlbmd0aCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldExlbmd0aCgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNjcm9sbC5sZW5ndGgoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRMZWFmJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0TGVhZihpbmRleCkge1xuICAgICAgcmV0dXJuIHRoaXMuc2Nyb2xsLmxlYWYoaW5kZXgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldExpbmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMaW5lKGluZGV4KSB7XG4gICAgICByZXR1cm4gdGhpcy5zY3JvbGwubGluZShpbmRleCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0TGluZXMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRMaW5lcygpIHtcbiAgICAgIHZhciBpbmRleCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogMDtcbiAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IE51bWJlci5NQVhfVkFMVUU7XG5cbiAgICAgIGlmICh0eXBlb2YgaW5kZXggIT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNjcm9sbC5saW5lcyhpbmRleC5pbmRleCwgaW5kZXgubGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNjcm9sbC5saW5lcyhpbmRleCwgbGVuZ3RoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRNb2R1bGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRNb2R1bGUobmFtZSkge1xuICAgICAgcmV0dXJuIHRoaXMudGhlbWUubW9kdWxlc1tuYW1lXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRTZWxlY3Rpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTZWxlY3Rpb24oKSB7XG4gICAgICB2YXIgZm9jdXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGZhbHNlO1xuXG4gICAgICBpZiAoZm9jdXMpIHRoaXMuZm9jdXMoKTtcbiAgICAgIHRoaXMudXBkYXRlKCk7IC8vIE1ha2Ugc3VyZSB3ZSBhY2Nlc3MgZ2V0UmFuZ2Ugd2l0aCBlZGl0b3IgaW4gY29uc2lzdGVudCBzdGF0ZVxuICAgICAgcmV0dXJuIHRoaXMuc2VsZWN0aW9uLmdldFJhbmdlKClbMF07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0VGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRleHQoKSB7XG4gICAgICB2YXIgaW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IDA7XG4gICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0aGlzLmdldExlbmd0aCgpIC0gaW5kZXg7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQ5ID0gb3ZlcmxvYWQoaW5kZXgsIGxlbmd0aCk7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQxMCA9IF9zbGljZWRUb0FycmF5KF9vdmVybG9hZDksIDIpO1xuXG4gICAgICBpbmRleCA9IF9vdmVybG9hZDEwWzBdO1xuICAgICAgbGVuZ3RoID0gX292ZXJsb2FkMTBbMV07XG5cbiAgICAgIHJldHVybiB0aGlzLmVkaXRvci5nZXRUZXh0KGluZGV4LCBsZW5ndGgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hhc0ZvY3VzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzRm9jdXMoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zZWxlY3Rpb24uaGFzRm9jdXMoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbnNlcnRFbWJlZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluc2VydEVtYmVkKGluZGV4LCBlbWJlZCwgdmFsdWUpIHtcbiAgICAgIHZhciBfdGhpczcgPSB0aGlzO1xuXG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBRdWlsbC5zb3VyY2VzLkFQSTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzNy5lZGl0b3IuaW5zZXJ0RW1iZWQoaW5kZXgsIGVtYmVkLCB2YWx1ZSk7XG4gICAgICB9LCBzb3VyY2UsIGluZGV4KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbnNlcnRUZXh0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0VGV4dChpbmRleCwgdGV4dCwgbmFtZSwgdmFsdWUsIHNvdXJjZSkge1xuICAgICAgdmFyIF90aGlzOCA9IHRoaXM7XG5cbiAgICAgIHZhciBmb3JtYXRzID0gdm9pZCAwO1xuXG4gICAgICB2YXIgX292ZXJsb2FkMTEgPSBvdmVybG9hZChpbmRleCwgMCwgbmFtZSwgdmFsdWUsIHNvdXJjZSk7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQxMiA9IF9zbGljZWRUb0FycmF5KF9vdmVybG9hZDExLCA0KTtcblxuICAgICAgaW5kZXggPSBfb3ZlcmxvYWQxMlswXTtcbiAgICAgIGZvcm1hdHMgPSBfb3ZlcmxvYWQxMlsyXTtcbiAgICAgIHNvdXJjZSA9IF9vdmVybG9hZDEyWzNdO1xuXG4gICAgICByZXR1cm4gbW9kaWZ5LmNhbGwodGhpcywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXM4LmVkaXRvci5pbnNlcnRUZXh0KGluZGV4LCB0ZXh0LCBmb3JtYXRzKTtcbiAgICAgIH0sIHNvdXJjZSwgaW5kZXgsIHRleHQubGVuZ3RoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpc0VuYWJsZWQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpc0VuYWJsZWQoKSB7XG4gICAgICByZXR1cm4gIXRoaXMuY29udGFpbmVyLmNsYXNzTGlzdC5jb250YWlucygncWwtZGlzYWJsZWQnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvZmYnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvZmYoKSB7XG4gICAgICByZXR1cm4gdGhpcy5lbWl0dGVyLm9mZi5hcHBseSh0aGlzLmVtaXR0ZXIsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVtaXR0ZXIub24uYXBwbHkodGhpcy5lbWl0dGVyLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ29uY2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvbmNlKCkge1xuICAgICAgcmV0dXJuIHRoaXMuZW1pdHRlci5vbmNlLmFwcGx5KHRoaXMuZW1pdHRlciwgYXJndW1lbnRzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwYXN0ZUhUTUwnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYXN0ZUhUTUwoaW5kZXgsIGh0bWwsIHNvdXJjZSkge1xuICAgICAgdGhpcy5jbGlwYm9hcmQuZGFuZ2Vyb3VzbHlQYXN0ZUhUTUwoaW5kZXgsIGh0bWwsIHNvdXJjZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlRm9ybWF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlRm9ybWF0KGluZGV4LCBsZW5ndGgsIHNvdXJjZSkge1xuICAgICAgdmFyIF90aGlzOSA9IHRoaXM7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQxMyA9IG92ZXJsb2FkKGluZGV4LCBsZW5ndGgsIHNvdXJjZSk7XG5cbiAgICAgIHZhciBfb3ZlcmxvYWQxNCA9IF9zbGljZWRUb0FycmF5KF9vdmVybG9hZDEzLCA0KTtcblxuICAgICAgaW5kZXggPSBfb3ZlcmxvYWQxNFswXTtcbiAgICAgIGxlbmd0aCA9IF9vdmVybG9hZDE0WzFdO1xuICAgICAgc291cmNlID0gX292ZXJsb2FkMTRbM107XG5cbiAgICAgIHJldHVybiBtb2RpZnkuY2FsbCh0aGlzLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpczkuZWRpdG9yLnJlbW92ZUZvcm1hdChpbmRleCwgbGVuZ3RoKTtcbiAgICAgIH0sIHNvdXJjZSwgaW5kZXgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Njcm9sbEludG9WaWV3JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2Nyb2xsSW50b1ZpZXcoKSB7XG4gICAgICB0aGlzLnNlbGVjdGlvbi5zY3JvbGxJbnRvVmlldyh0aGlzLnNjcm9sbGluZ0NvbnRhaW5lcik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0Q29udGVudHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRDb250ZW50cyhkZWx0YSkge1xuICAgICAgdmFyIF90aGlzMTAgPSB0aGlzO1xuXG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLkFQSTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVsdGEgPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoZGVsdGEpO1xuICAgICAgICB2YXIgbGVuZ3RoID0gX3RoaXMxMC5nZXRMZW5ndGgoKTtcbiAgICAgICAgdmFyIGRlbGV0ZWQgPSBfdGhpczEwLmVkaXRvci5kZWxldGVUZXh0KDAsIGxlbmd0aCk7XG4gICAgICAgIHZhciBhcHBsaWVkID0gX3RoaXMxMC5lZGl0b3IuYXBwbHlEZWx0YShkZWx0YSk7XG4gICAgICAgIHZhciBsYXN0T3AgPSBhcHBsaWVkLm9wc1thcHBsaWVkLm9wcy5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKGxhc3RPcCAhPSBudWxsICYmIHR5cGVvZiBsYXN0T3AuaW5zZXJ0ID09PSAnc3RyaW5nJyAmJiBsYXN0T3AuaW5zZXJ0W2xhc3RPcC5pbnNlcnQubGVuZ3RoIC0gMV0gPT09ICdcXG4nKSB7XG4gICAgICAgICAgX3RoaXMxMC5lZGl0b3IuZGVsZXRlVGV4dChfdGhpczEwLmdldExlbmd0aCgpIC0gMSwgMSk7XG4gICAgICAgICAgYXBwbGllZC5kZWxldGUoMSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJldCA9IGRlbGV0ZWQuY29tcG9zZShhcHBsaWVkKTtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH0sIHNvdXJjZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0U2VsZWN0aW9uJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0U2VsZWN0aW9uKGluZGV4LCBsZW5ndGgsIHNvdXJjZSkge1xuICAgICAgaWYgKGluZGV4ID09IG51bGwpIHtcbiAgICAgICAgdGhpcy5zZWxlY3Rpb24uc2V0UmFuZ2UobnVsbCwgbGVuZ3RoIHx8IFF1aWxsLnNvdXJjZXMuQVBJKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfb3ZlcmxvYWQxNSA9IG92ZXJsb2FkKGluZGV4LCBsZW5ndGgsIHNvdXJjZSk7XG5cbiAgICAgICAgdmFyIF9vdmVybG9hZDE2ID0gX3NsaWNlZFRvQXJyYXkoX292ZXJsb2FkMTUsIDQpO1xuXG4gICAgICAgIGluZGV4ID0gX292ZXJsb2FkMTZbMF07XG4gICAgICAgIGxlbmd0aCA9IF9vdmVybG9hZDE2WzFdO1xuICAgICAgICBzb3VyY2UgPSBfb3ZlcmxvYWQxNlszXTtcblxuICAgICAgICB0aGlzLnNlbGVjdGlvbi5zZXRSYW5nZShuZXcgX3NlbGVjdGlvbi5SYW5nZShpbmRleCwgbGVuZ3RoKSwgc291cmNlKTtcbiAgICAgICAgaWYgKHNvdXJjZSAhPT0gX2VtaXR0ZXI0LmRlZmF1bHQuc291cmNlcy5TSUxFTlQpIHtcbiAgICAgICAgICB0aGlzLnNlbGVjdGlvbi5zY3JvbGxJbnRvVmlldyh0aGlzLnNjcm9sbGluZ0NvbnRhaW5lcik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzZXRUZXh0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VGV4dCh0ZXh0KSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLkFQSTtcblxuICAgICAgdmFyIGRlbHRhID0gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkuaW5zZXJ0KHRleHQpO1xuICAgICAgcmV0dXJuIHRoaXMuc2V0Q29udGVudHMoZGVsdGEsIHNvdXJjZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogX2VtaXR0ZXI0LmRlZmF1bHQuc291cmNlcy5VU0VSO1xuXG4gICAgICB2YXIgY2hhbmdlID0gdGhpcy5zY3JvbGwudXBkYXRlKHNvdXJjZSk7IC8vIFdpbGwgdXBkYXRlIHNlbGVjdGlvbiBiZWZvcmUgc2VsZWN0aW9uLnVwZGF0ZSgpIGRvZXMgaWYgdGV4dCBjaGFuZ2VzXG4gICAgICB0aGlzLnNlbGVjdGlvbi51cGRhdGUoc291cmNlKTtcbiAgICAgIHJldHVybiBjaGFuZ2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlQ29udGVudHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVDb250ZW50cyhkZWx0YSkge1xuICAgICAgdmFyIF90aGlzMTEgPSB0aGlzO1xuXG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLkFQSTtcblxuICAgICAgcmV0dXJuIG1vZGlmeS5jYWxsKHRoaXMsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVsdGEgPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoZGVsdGEpO1xuICAgICAgICByZXR1cm4gX3RoaXMxMS5lZGl0b3IuYXBwbHlEZWx0YShkZWx0YSwgc291cmNlKTtcbiAgICAgIH0sIHNvdXJjZSwgdHJ1ZSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFF1aWxsO1xufSgpO1xuXG5RdWlsbC5ERUZBVUxUUyA9IHtcbiAgYm91bmRzOiBudWxsLFxuICBmb3JtYXRzOiBudWxsLFxuICBtb2R1bGVzOiB7fSxcbiAgcGxhY2Vob2xkZXI6ICcnLFxuICByZWFkT25seTogZmFsc2UsXG4gIHNjcm9sbGluZ0NvbnRhaW5lcjogbnVsbCxcbiAgc3RyaWN0OiB0cnVlLFxuICB0aGVtZTogJ2RlZmF1bHQnXG59O1xuUXVpbGwuZXZlbnRzID0gX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzO1xuUXVpbGwuc291cmNlcyA9IF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXM7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcblF1aWxsLnZlcnNpb24gPSAgZmFsc2UgPyAnZGV2JyA6IFwiMS4zLjdcIjtcblxuUXVpbGwuaW1wb3J0cyA9IHtcbiAgJ2RlbHRhJzogX3F1aWxsRGVsdGEyLmRlZmF1bHQsXG4gICdwYXJjaG1lbnQnOiBfcGFyY2htZW50Mi5kZWZhdWx0LFxuICAnY29yZS9tb2R1bGUnOiBfbW9kdWxlMi5kZWZhdWx0LFxuICAnY29yZS90aGVtZSc6IF90aGVtZTIuZGVmYXVsdFxufTtcblxuZnVuY3Rpb24gZXhwYW5kQ29uZmlnKGNvbnRhaW5lciwgdXNlckNvbmZpZykge1xuICB1c2VyQ29uZmlnID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRydWUsIHtcbiAgICBjb250YWluZXI6IGNvbnRhaW5lcixcbiAgICBtb2R1bGVzOiB7XG4gICAgICBjbGlwYm9hcmQ6IHRydWUsXG4gICAgICBrZXlib2FyZDogdHJ1ZSxcbiAgICAgIGhpc3Rvcnk6IHRydWVcbiAgICB9XG4gIH0sIHVzZXJDb25maWcpO1xuICBpZiAoIXVzZXJDb25maWcudGhlbWUgfHwgdXNlckNvbmZpZy50aGVtZSA9PT0gUXVpbGwuREVGQVVMVFMudGhlbWUpIHtcbiAgICB1c2VyQ29uZmlnLnRoZW1lID0gX3RoZW1lMi5kZWZhdWx0O1xuICB9IGVsc2Uge1xuICAgIHVzZXJDb25maWcudGhlbWUgPSBRdWlsbC5pbXBvcnQoJ3RoZW1lcy8nICsgdXNlckNvbmZpZy50aGVtZSk7XG4gICAgaWYgKHVzZXJDb25maWcudGhlbWUgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRoZW1lICcgKyB1c2VyQ29uZmlnLnRoZW1lICsgJy4gRGlkIHlvdSByZWdpc3RlciBpdD8nKTtcbiAgICB9XG4gIH1cbiAgdmFyIHRoZW1lQ29uZmlnID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRydWUsIHt9LCB1c2VyQ29uZmlnLnRoZW1lLkRFRkFVTFRTKTtcbiAgW3RoZW1lQ29uZmlnLCB1c2VyQ29uZmlnXS5mb3JFYWNoKGZ1bmN0aW9uIChjb25maWcpIHtcbiAgICBjb25maWcubW9kdWxlcyA9IGNvbmZpZy5tb2R1bGVzIHx8IHt9O1xuICAgIE9iamVjdC5rZXlzKGNvbmZpZy5tb2R1bGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChtb2R1bGUpIHtcbiAgICAgIGlmIChjb25maWcubW9kdWxlc1ttb2R1bGVdID09PSB0cnVlKSB7XG4gICAgICAgIGNvbmZpZy5tb2R1bGVzW21vZHVsZV0gPSB7fTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIHZhciBtb2R1bGVOYW1lcyA9IE9iamVjdC5rZXlzKHRoZW1lQ29uZmlnLm1vZHVsZXMpLmNvbmNhdChPYmplY3Qua2V5cyh1c2VyQ29uZmlnLm1vZHVsZXMpKTtcbiAgdmFyIG1vZHVsZUNvbmZpZyA9IG1vZHVsZU5hbWVzLnJlZHVjZShmdW5jdGlvbiAoY29uZmlnLCBuYW1lKSB7XG4gICAgdmFyIG1vZHVsZUNsYXNzID0gUXVpbGwuaW1wb3J0KCdtb2R1bGVzLycgKyBuYW1lKTtcbiAgICBpZiAobW9kdWxlQ2xhc3MgPT0gbnVsbCkge1xuICAgICAgZGVidWcuZXJyb3IoJ0Nhbm5vdCBsb2FkICcgKyBuYW1lICsgJyBtb2R1bGUuIEFyZSB5b3Ugc3VyZSB5b3UgcmVnaXN0ZXJlZCBpdD8nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uZmlnW25hbWVdID0gbW9kdWxlQ2xhc3MuREVGQVVMVFMgfHwge307XG4gICAgfVxuICAgIHJldHVybiBjb25maWc7XG4gIH0sIHt9KTtcbiAgLy8gU3BlY2lhbCBjYXNlIHRvb2xiYXIgc2hvcnRoYW5kXG4gIGlmICh1c2VyQ29uZmlnLm1vZHVsZXMgIT0gbnVsbCAmJiB1c2VyQ29uZmlnLm1vZHVsZXMudG9vbGJhciAmJiB1c2VyQ29uZmlnLm1vZHVsZXMudG9vbGJhci5jb25zdHJ1Y3RvciAhPT0gT2JqZWN0KSB7XG4gICAgdXNlckNvbmZpZy5tb2R1bGVzLnRvb2xiYXIgPSB7XG4gICAgICBjb250YWluZXI6IHVzZXJDb25maWcubW9kdWxlcy50b29sYmFyXG4gICAgfTtcbiAgfVxuICB1c2VyQ29uZmlnID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRydWUsIHt9LCBRdWlsbC5ERUZBVUxUUywgeyBtb2R1bGVzOiBtb2R1bGVDb25maWcgfSwgdGhlbWVDb25maWcsIHVzZXJDb25maWcpO1xuICBbJ2JvdW5kcycsICdjb250YWluZXInLCAnc2Nyb2xsaW5nQ29udGFpbmVyJ10uZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgaWYgKHR5cGVvZiB1c2VyQ29uZmlnW2tleV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICB1c2VyQ29uZmlnW2tleV0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJDb25maWdba2V5XSk7XG4gICAgfVxuICB9KTtcbiAgdXNlckNvbmZpZy5tb2R1bGVzID0gT2JqZWN0LmtleXModXNlckNvbmZpZy5tb2R1bGVzKS5yZWR1Y2UoZnVuY3Rpb24gKGNvbmZpZywgbmFtZSkge1xuICAgIGlmICh1c2VyQ29uZmlnLm1vZHVsZXNbbmFtZV0pIHtcbiAgICAgIGNvbmZpZ1tuYW1lXSA9IHVzZXJDb25maWcubW9kdWxlc1tuYW1lXTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfSwge30pO1xuICByZXR1cm4gdXNlckNvbmZpZztcbn1cblxuLy8gSGFuZGxlIHNlbGVjdGlvbiBwcmVzZXJ2YXRpb24gYW5kIFRFWFRfQ0hBTkdFIGVtaXNzaW9uXG4vLyBjb21tb24gdG8gbW9kaWZpY2F0aW9uIEFQSXNcbmZ1bmN0aW9uIG1vZGlmeShtb2RpZmllciwgc291cmNlLCBpbmRleCwgc2hpZnQpIHtcbiAgaWYgKHRoaXMub3B0aW9ucy5zdHJpY3QgJiYgIXRoaXMuaXNFbmFibGVkKCkgJiYgc291cmNlID09PSBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLlVTRVIpIHtcbiAgICByZXR1cm4gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCk7XG4gIH1cbiAgdmFyIHJhbmdlID0gaW5kZXggPT0gbnVsbCA/IG51bGwgOiB0aGlzLmdldFNlbGVjdGlvbigpO1xuICB2YXIgb2xkRGVsdGEgPSB0aGlzLmVkaXRvci5kZWx0YTtcbiAgdmFyIGNoYW5nZSA9IG1vZGlmaWVyKCk7XG4gIGlmIChyYW5nZSAhPSBudWxsKSB7XG4gICAgaWYgKGluZGV4ID09PSB0cnVlKSBpbmRleCA9IHJhbmdlLmluZGV4O1xuICAgIGlmIChzaGlmdCA9PSBudWxsKSB7XG4gICAgICByYW5nZSA9IHNoaWZ0UmFuZ2UocmFuZ2UsIGNoYW5nZSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHNoaWZ0ICE9PSAwKSB7XG4gICAgICByYW5nZSA9IHNoaWZ0UmFuZ2UocmFuZ2UsIGluZGV4LCBzaGlmdCwgc291cmNlKTtcbiAgICB9XG4gICAgdGhpcy5zZXRTZWxlY3Rpb24ocmFuZ2UsIF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuU0lMRU5UKTtcbiAgfVxuICBpZiAoY2hhbmdlLmxlbmd0aCgpID4gMCkge1xuICAgIHZhciBfZW1pdHRlcjtcblxuICAgIHZhciBhcmdzID0gW19lbWl0dGVyNC5kZWZhdWx0LmV2ZW50cy5URVhUX0NIQU5HRSwgY2hhbmdlLCBvbGREZWx0YSwgc291cmNlXTtcbiAgICAoX2VtaXR0ZXIgPSB0aGlzLmVtaXR0ZXIpLmVtaXQuYXBwbHkoX2VtaXR0ZXIsIFtfZW1pdHRlcjQuZGVmYXVsdC5ldmVudHMuRURJVE9SX0NIQU5HRV0uY29uY2F0KGFyZ3MpKTtcbiAgICBpZiAoc291cmNlICE9PSBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCkge1xuICAgICAgdmFyIF9lbWl0dGVyMjtcblxuICAgICAgKF9lbWl0dGVyMiA9IHRoaXMuZW1pdHRlcikuZW1pdC5hcHBseShfZW1pdHRlcjIsIGFyZ3MpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY2hhbmdlO1xufVxuXG5mdW5jdGlvbiBvdmVybG9hZChpbmRleCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSwgc291cmNlKSB7XG4gIHZhciBmb3JtYXRzID0ge307XG4gIGlmICh0eXBlb2YgaW5kZXguaW5kZXggPT09ICdudW1iZXInICYmIHR5cGVvZiBpbmRleC5sZW5ndGggPT09ICdudW1iZXInKSB7XG4gICAgLy8gQWxsb3cgZm9yIHRocm93YXdheSBlbmQgKHVzZWQgYnkgaW5zZXJ0VGV4dC9pbnNlcnRFbWJlZClcbiAgICBpZiAodHlwZW9mIGxlbmd0aCAhPT0gJ251bWJlcicpIHtcbiAgICAgIHNvdXJjZSA9IHZhbHVlLCB2YWx1ZSA9IG5hbWUsIG5hbWUgPSBsZW5ndGgsIGxlbmd0aCA9IGluZGV4Lmxlbmd0aCwgaW5kZXggPSBpbmRleC5pbmRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gaW5kZXgubGVuZ3RoLCBpbmRleCA9IGluZGV4LmluZGV4O1xuICAgIH1cbiAgfSBlbHNlIGlmICh0eXBlb2YgbGVuZ3RoICE9PSAnbnVtYmVyJykge1xuICAgIHNvdXJjZSA9IHZhbHVlLCB2YWx1ZSA9IG5hbWUsIG5hbWUgPSBsZW5ndGgsIGxlbmd0aCA9IDA7XG4gIH1cbiAgLy8gSGFuZGxlIGZvcm1hdCBiZWluZyBvYmplY3QsIHR3byBmb3JtYXQgbmFtZS92YWx1ZSBzdHJpbmdzIG9yIGV4Y2x1ZGVkXG4gIGlmICgodHlwZW9mIG5hbWUgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKG5hbWUpKSA9PT0gJ29iamVjdCcpIHtcbiAgICBmb3JtYXRzID0gbmFtZTtcbiAgICBzb3VyY2UgPSB2YWx1ZTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgZm9ybWF0c1tuYW1lXSA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBzb3VyY2UgPSBuYW1lO1xuICAgIH1cbiAgfVxuICAvLyBIYW5kbGUgb3B0aW9uYWwgc291cmNlXG4gIHNvdXJjZSA9IHNvdXJjZSB8fCBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLkFQSTtcbiAgcmV0dXJuIFtpbmRleCwgbGVuZ3RoLCBmb3JtYXRzLCBzb3VyY2VdO1xufVxuXG5mdW5jdGlvbiBzaGlmdFJhbmdlKHJhbmdlLCBpbmRleCwgbGVuZ3RoLCBzb3VyY2UpIHtcbiAgaWYgKHJhbmdlID09IG51bGwpIHJldHVybiBudWxsO1xuICB2YXIgc3RhcnQgPSB2b2lkIDAsXG4gICAgICBlbmQgPSB2b2lkIDA7XG4gIGlmIChpbmRleCBpbnN0YW5jZW9mIF9xdWlsbERlbHRhMi5kZWZhdWx0KSB7XG4gICAgdmFyIF9tYXAgPSBbcmFuZ2UuaW5kZXgsIHJhbmdlLmluZGV4ICsgcmFuZ2UubGVuZ3RoXS5tYXAoZnVuY3Rpb24gKHBvcykge1xuICAgICAgcmV0dXJuIGluZGV4LnRyYW5zZm9ybVBvc2l0aW9uKHBvcywgc291cmNlICE9PSBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgIH0pO1xuXG4gICAgdmFyIF9tYXAyID0gX3NsaWNlZFRvQXJyYXkoX21hcCwgMik7XG5cbiAgICBzdGFydCA9IF9tYXAyWzBdO1xuICAgIGVuZCA9IF9tYXAyWzFdO1xuICB9IGVsc2Uge1xuICAgIHZhciBfbWFwMyA9IFtyYW5nZS5pbmRleCwgcmFuZ2UuaW5kZXggKyByYW5nZS5sZW5ndGhdLm1hcChmdW5jdGlvbiAocG9zKSB7XG4gICAgICBpZiAocG9zIDwgaW5kZXggfHwgcG9zID09PSBpbmRleCAmJiBzb3VyY2UgPT09IF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuVVNFUikgcmV0dXJuIHBvcztcbiAgICAgIGlmIChsZW5ndGggPj0gMCkge1xuICAgICAgICByZXR1cm4gcG9zICsgbGVuZ3RoO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KGluZGV4LCBwb3MgKyBsZW5ndGgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdmFyIF9tYXA0ID0gX3NsaWNlZFRvQXJyYXkoX21hcDMsIDIpO1xuXG4gICAgc3RhcnQgPSBfbWFwNFswXTtcbiAgICBlbmQgPSBfbWFwNFsxXTtcbiAgfVxuICByZXR1cm4gbmV3IF9zZWxlY3Rpb24uUmFuZ2Uoc3RhcnQsIGVuZCAtIHN0YXJ0KTtcbn1cblxuZXhwb3J0cy5leHBhbmRDb25maWcgPSBleHBhbmRDb25maWc7XG5leHBvcnRzLm92ZXJsb2FkID0gb3ZlcmxvYWQ7XG5leHBvcnRzLmRlZmF1bHQgPSBRdWlsbDtcblxuLyoqKi8gfSksXG4vKiA2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF90ZXh0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcblxudmFyIF90ZXh0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RleHQpO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIElubGluZSA9IGZ1bmN0aW9uIChfUGFyY2htZW50JElubGluZSkge1xuICBfaW5oZXJpdHMoSW5saW5lLCBfUGFyY2htZW50JElubGluZSk7XG5cbiAgZnVuY3Rpb24gSW5saW5lKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJbmxpbmUpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChJbmxpbmUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJbmxpbmUpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhJbmxpbmUsIFt7XG4gICAga2V5OiAnZm9ybWF0QXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRBdChpbmRleCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSkge1xuICAgICAgaWYgKElubGluZS5jb21wYXJlKHRoaXMuc3RhdGljcy5ibG90TmFtZSwgbmFtZSkgPCAwICYmIF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkobmFtZSwgX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5CTE9UKSkge1xuICAgICAgICB2YXIgYmxvdCA9IHRoaXMuaXNvbGF0ZShpbmRleCwgbGVuZ3RoKTtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgYmxvdC53cmFwKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX2dldChJbmxpbmUucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSW5saW5lLnByb3RvdHlwZSksICdmb3JtYXRBdCcsIHRoaXMpLmNhbGwodGhpcywgaW5kZXgsIGxlbmd0aCwgbmFtZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ29wdGltaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3B0aW1pemUoY29udGV4dCkge1xuICAgICAgX2dldChJbmxpbmUucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSW5saW5lLnByb3RvdHlwZSksICdvcHRpbWl6ZScsIHRoaXMpLmNhbGwodGhpcywgY29udGV4dCk7XG4gICAgICBpZiAodGhpcy5wYXJlbnQgaW5zdGFuY2VvZiBJbmxpbmUgJiYgSW5saW5lLmNvbXBhcmUodGhpcy5zdGF0aWNzLmJsb3ROYW1lLCB0aGlzLnBhcmVudC5zdGF0aWNzLmJsb3ROYW1lKSA+IDApIHtcbiAgICAgICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Lmlzb2xhdGUodGhpcy5vZmZzZXQoKSwgdGhpcy5sZW5ndGgoKSk7XG4gICAgICAgIHRoaXMubW92ZUNoaWxkcmVuKHBhcmVudCk7XG4gICAgICAgIHBhcmVudC53cmFwKHRoaXMpO1xuICAgICAgfVxuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnY29tcGFyZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBhcmUoc2VsZiwgb3RoZXIpIHtcbiAgICAgIHZhciBzZWxmSW5kZXggPSBJbmxpbmUub3JkZXIuaW5kZXhPZihzZWxmKTtcbiAgICAgIHZhciBvdGhlckluZGV4ID0gSW5saW5lLm9yZGVyLmluZGV4T2Yob3RoZXIpO1xuICAgICAgaWYgKHNlbGZJbmRleCA+PSAwIHx8IG90aGVySW5kZXggPj0gMCkge1xuICAgICAgICByZXR1cm4gc2VsZkluZGV4IC0gb3RoZXJJbmRleDtcbiAgICAgIH0gZWxzZSBpZiAoc2VsZiA9PT0gb3RoZXIpIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgICB9IGVsc2UgaWYgKHNlbGYgPCBvdGhlcikge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSW5saW5lO1xufShfcGFyY2htZW50Mi5kZWZhdWx0LklubGluZSk7XG5cbklubGluZS5hbGxvd2VkQ2hpbGRyZW4gPSBbSW5saW5lLCBfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkLCBfdGV4dDIuZGVmYXVsdF07XG4vLyBMb3dlciBpbmRleCBtZWFucyBkZWVwZXIgaW4gdGhlIERPTSB0cmVlLCBzaW5jZSBub3QgZm91bmQgKC0xKSBpcyBmb3IgZW1iZWRzXG5JbmxpbmUub3JkZXIgPSBbJ2N1cnNvcicsICdpbmxpbmUnLCAvLyBNdXN0IGJlIGxvd2VyXG4ndW5kZXJsaW5lJywgJ3N0cmlrZScsICdpdGFsaWMnLCAnYm9sZCcsICdzY3JpcHQnLCAnbGluaycsICdjb2RlJyAvLyBNdXN0IGJlIGhpZ2hlclxuXTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gSW5saW5lO1xuXG4vKioqLyB9KSxcbi8qIDcgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBUZXh0QmxvdCA9IGZ1bmN0aW9uIChfUGFyY2htZW50JFRleHQpIHtcbiAgX2luaGVyaXRzKFRleHRCbG90LCBfUGFyY2htZW50JFRleHQpO1xuXG4gIGZ1bmN0aW9uIFRleHRCbG90KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUZXh0QmxvdCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFRleHRCbG90Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVGV4dEJsb3QpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIHJldHVybiBUZXh0QmxvdDtcbn0oX3BhcmNobWVudDIuZGVmYXVsdC5UZXh0KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gVGV4dEJsb3Q7XG5cbi8qKiovIH0pLFxuLyogOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfZXZlbnRlbWl0dGVyID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1NCk7XG5cbnZhciBfZXZlbnRlbWl0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2V2ZW50ZW1pdHRlcik7XG5cbnZhciBfbG9nZ2VyID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG5cbnZhciBfbG9nZ2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xvZ2dlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGRlYnVnID0gKDAsIF9sb2dnZXIyLmRlZmF1bHQpKCdxdWlsbDpldmVudHMnKTtcblxudmFyIEVWRU5UUyA9IFsnc2VsZWN0aW9uY2hhbmdlJywgJ21vdXNlZG93bicsICdtb3VzZXVwJywgJ2NsaWNrJ107XG5cbkVWRU5UUy5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5xbC1jb250YWluZXInKSkuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgLy8gVE9ETyB1c2UgV2Vha01hcFxuICAgICAgaWYgKG5vZGUuX19xdWlsbCAmJiBub2RlLl9fcXVpbGwuZW1pdHRlcikge1xuICAgICAgICB2YXIgX25vZGUkX19xdWlsbCRlbWl0dGVyO1xuXG4gICAgICAgIChfbm9kZSRfX3F1aWxsJGVtaXR0ZXIgPSBub2RlLl9fcXVpbGwuZW1pdHRlcikuaGFuZGxlRE9NLmFwcGx5KF9ub2RlJF9fcXVpbGwkZW1pdHRlciwgYXJncyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufSk7XG5cbnZhciBFbWl0dGVyID0gZnVuY3Rpb24gKF9FdmVudEVtaXR0ZXIpIHtcbiAgX2luaGVyaXRzKEVtaXR0ZXIsIF9FdmVudEVtaXR0ZXIpO1xuXG4gIGZ1bmN0aW9uIEVtaXR0ZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEVtaXR0ZXIpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEVtaXR0ZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihFbWl0dGVyKSkuY2FsbCh0aGlzKSk7XG5cbiAgICBfdGhpcy5saXN0ZW5lcnMgPSB7fTtcbiAgICBfdGhpcy5vbignZXJyb3InLCBkZWJ1Zy5lcnJvcik7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEVtaXR0ZXIsIFt7XG4gICAga2V5OiAnZW1pdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVtaXQoKSB7XG4gICAgICBkZWJ1Zy5sb2cuYXBwbHkoZGVidWcsIGFyZ3VtZW50cyk7XG4gICAgICBfZ2V0KEVtaXR0ZXIucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRW1pdHRlci5wcm90b3R5cGUpLCAnZW1pdCcsIHRoaXMpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaGFuZGxlRE9NJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlRE9NKGV2ZW50KSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAxXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgICh0aGlzLmxpc3RlbmVyc1tldmVudC50eXBlXSB8fCBbXSkuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIgbm9kZSA9IF9yZWYubm9kZSxcbiAgICAgICAgICAgIGhhbmRsZXIgPSBfcmVmLmhhbmRsZXI7XG5cbiAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gbm9kZSB8fCBub2RlLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpIHtcbiAgICAgICAgICBoYW5kbGVyLmFwcGx5KHVuZGVmaW5lZCwgW2V2ZW50XS5jb25jYXQoYXJncykpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdsaXN0ZW5ET00nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsaXN0ZW5ET00oZXZlbnROYW1lLCBub2RlLCBoYW5kbGVyKSB7XG4gICAgICBpZiAoIXRoaXMubGlzdGVuZXJzW2V2ZW50TmFtZV0pIHtcbiAgICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXSA9IFtdO1xuICAgICAgfVxuICAgICAgdGhpcy5saXN0ZW5lcnNbZXZlbnROYW1lXS5wdXNoKHsgbm9kZTogbm9kZSwgaGFuZGxlcjogaGFuZGxlciB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gRW1pdHRlcjtcbn0oX2V2ZW50ZW1pdHRlcjIuZGVmYXVsdCk7XG5cbkVtaXR0ZXIuZXZlbnRzID0ge1xuICBFRElUT1JfQ0hBTkdFOiAnZWRpdG9yLWNoYW5nZScsXG4gIFNDUk9MTF9CRUZPUkVfVVBEQVRFOiAnc2Nyb2xsLWJlZm9yZS11cGRhdGUnLFxuICBTQ1JPTExfT1BUSU1JWkU6ICdzY3JvbGwtb3B0aW1pemUnLFxuICBTQ1JPTExfVVBEQVRFOiAnc2Nyb2xsLXVwZGF0ZScsXG4gIFNFTEVDVElPTl9DSEFOR0U6ICdzZWxlY3Rpb24tY2hhbmdlJyxcbiAgVEVYVF9DSEFOR0U6ICd0ZXh0LWNoYW5nZSdcbn07XG5FbWl0dGVyLnNvdXJjZXMgPSB7XG4gIEFQSTogJ2FwaScsXG4gIFNJTEVOVDogJ3NpbGVudCcsXG4gIFVTRVI6ICd1c2VyJ1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gRW1pdHRlcjtcblxuLyoqKi8gfSksXG4vKiA5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBNb2R1bGUgPSBmdW5jdGlvbiBNb2R1bGUocXVpbGwpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNb2R1bGUpO1xuXG4gIHRoaXMucXVpbGwgPSBxdWlsbDtcbiAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbn07XG5cbk1vZHVsZS5ERUZBVUxUUyA9IHt9O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBNb2R1bGU7XG5cbi8qKiovIH0pLFxuLyogMTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBsZXZlbHMgPSBbJ2Vycm9yJywgJ3dhcm4nLCAnbG9nJywgJ2luZm8nXTtcbnZhciBsZXZlbCA9ICd3YXJuJztcblxuZnVuY3Rpb24gZGVidWcobWV0aG9kKSB7XG4gIGlmIChsZXZlbHMuaW5kZXhPZihtZXRob2QpIDw9IGxldmVscy5pbmRleE9mKGxldmVsKSkge1xuICAgIHZhciBfY29uc29sZTtcblxuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgKF9jb25zb2xlID0gY29uc29sZSlbbWV0aG9kXS5hcHBseShfY29uc29sZSwgYXJncyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICB9XG59XG5cbmZ1bmN0aW9uIG5hbWVzcGFjZShucykge1xuICByZXR1cm4gbGV2ZWxzLnJlZHVjZShmdW5jdGlvbiAobG9nZ2VyLCBtZXRob2QpIHtcbiAgICBsb2dnZXJbbWV0aG9kXSA9IGRlYnVnLmJpbmQoY29uc29sZSwgbWV0aG9kLCBucyk7XG4gICAgcmV0dXJuIGxvZ2dlcjtcbiAgfSwge30pO1xufVxuXG5kZWJ1Zy5sZXZlbCA9IG5hbWVzcGFjZS5sZXZlbCA9IGZ1bmN0aW9uIChuZXdMZXZlbCkge1xuICBsZXZlbCA9IG5ld0xldmVsO1xufTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gbmFtZXNwYWNlO1xuXG4vKioqLyB9KSxcbi8qIDExICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cbnZhciBwU2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgb2JqZWN0S2V5cyA9IF9fd2VicGFja19yZXF1aXJlX18oNTIpO1xudmFyIGlzQXJndW1lbnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1Myk7XG5cbnZhciBkZWVwRXF1YWwgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKSB7XG4gIGlmICghb3B0cykgb3B0cyA9IHt9O1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIERhdGUgJiYgZXhwZWN0ZWQgaW5zdGFuY2VvZiBEYXRlKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMuIE90aGVyIHBhaXJzIHRoYXQgZG8gbm90IGJvdGggcGFzcyB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcsXG4gIC8vIGVxdWl2YWxlbmNlIGlzIGRldGVybWluZWQgYnkgPT0uXG4gIH0gZWxzZSBpZiAoIWFjdHVhbCB8fCAhZXhwZWN0ZWQgfHwgdHlwZW9mIGFjdHVhbCAhPSAnb2JqZWN0JyAmJiB0eXBlb2YgZXhwZWN0ZWQgIT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gb3B0cy5zdHJpY3QgPyBhY3R1YWwgPT09IGV4cGVjdGVkIDogYWN0dWFsID09IGV4cGVjdGVkO1xuXG4gIC8vIDcuNC4gRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkLCBvcHRzKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZE9yTnVsbCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZDtcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKHgpIHtcbiAgaWYgKCF4IHx8IHR5cGVvZiB4ICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgeC5sZW5ndGggIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIGlmICh0eXBlb2YgeC5jb3B5ICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiB4LnNsaWNlICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh4Lmxlbmd0aCA+IDAgJiYgdHlwZW9mIHhbMF0gIT09ICdudW1iZXInKSByZXR1cm4gZmFsc2U7XG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiLCBvcHRzKSB7XG4gIHZhciBpLCBrZXk7XG4gIGlmIChpc1VuZGVmaW5lZE9yTnVsbChhKSB8fCBpc1VuZGVmaW5lZE9yTnVsbChiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vIGFuIGlkZW50aWNhbCAncHJvdG90eXBlJyBwcm9wZXJ0eS5cbiAgaWYgKGEucHJvdG90eXBlICE9PSBiLnByb3RvdHlwZSkgcmV0dXJuIGZhbHNlO1xuICAvL35+fkkndmUgbWFuYWdlZCB0byBicmVhayBPYmplY3Qua2V5cyB0aHJvdWdoIHNjcmV3eSBhcmd1bWVudHMgcGFzc2luZy5cbiAgLy8gICBDb252ZXJ0aW5nIHRvIGFycmF5IHNvbHZlcyB0aGUgcHJvYmxlbS5cbiAgaWYgKGlzQXJndW1lbnRzKGEpKSB7XG4gICAgaWYgKCFpc0FyZ3VtZW50cyhiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBkZWVwRXF1YWwoYSwgYiwgb3B0cyk7XG4gIH1cbiAgaWYgKGlzQnVmZmVyKGEpKSB7XG4gICAgaWYgKCFpc0J1ZmZlcihiKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhW2ldICE9PSBiW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHRyeSB7XG4gICAgdmFyIGthID0gb2JqZWN0S2V5cyhhKSxcbiAgICAgICAga2IgPSBvYmplY3RLZXlzKGIpO1xuICB9IGNhdGNoIChlKSB7Ly9oYXBwZW5zIHdoZW4gb25lIGlzIGEgc3RyaW5nIGxpdGVyYWwgYW5kIHRoZSBvdGhlciBpc24ndFxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFkZWVwRXF1YWwoYVtrZXldLCBiW2tleV0sIG9wdHMpKSByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHR5cGVvZiBhID09PSB0eXBlb2YgYjtcbn1cblxuXG4vKioqLyB9KSxcbi8qIDEyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIEF0dHJpYnV0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXR0cmlidXRvcihhdHRyTmFtZSwga2V5TmFtZSwgb3B0aW9ucykge1xuICAgICAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgICAgICB0aGlzLmF0dHJOYW1lID0gYXR0ck5hbWU7XG4gICAgICAgIHRoaXMua2V5TmFtZSA9IGtleU5hbWU7XG4gICAgICAgIHZhciBhdHRyaWJ1dGVCaXQgPSBSZWdpc3RyeS5TY29wZS5UWVBFICYgUmVnaXN0cnkuU2NvcGUuQVRUUklCVVRFO1xuICAgICAgICBpZiAob3B0aW9ucy5zY29wZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAvLyBJZ25vcmUgdHlwZSBiaXRzLCBmb3JjZSBhdHRyaWJ1dGUgYml0XG4gICAgICAgICAgICB0aGlzLnNjb3BlID0gKG9wdGlvbnMuc2NvcGUgJiBSZWdpc3RyeS5TY29wZS5MRVZFTCkgfCBhdHRyaWJ1dGVCaXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNjb3BlID0gUmVnaXN0cnkuU2NvcGUuQVRUUklCVVRFO1xuICAgICAgICB9XG4gICAgICAgIGlmIChvcHRpb25zLndoaXRlbGlzdCAhPSBudWxsKVxuICAgICAgICAgICAgdGhpcy53aGl0ZWxpc3QgPSBvcHRpb25zLndoaXRlbGlzdDtcbiAgICB9XG4gICAgQXR0cmlidXRvci5rZXlzID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIFtdLm1hcC5jYWxsKG5vZGUuYXR0cmlidXRlcywgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLm5hbWU7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXR0cmlidXRvci5wcm90b3R5cGUuYWRkID0gZnVuY3Rpb24gKG5vZGUsIHZhbHVlKSB7XG4gICAgICAgIGlmICghdGhpcy5jYW5BZGQobm9kZSwgdmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICBub2RlLnNldEF0dHJpYnV0ZSh0aGlzLmtleU5hbWUsIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICBBdHRyaWJ1dG9yLnByb3RvdHlwZS5jYW5BZGQgPSBmdW5jdGlvbiAobm9kZSwgdmFsdWUpIHtcbiAgICAgICAgdmFyIG1hdGNoID0gUmVnaXN0cnkucXVlcnkobm9kZSwgUmVnaXN0cnkuU2NvcGUuQkxPVCAmICh0aGlzLnNjb3BlIHwgUmVnaXN0cnkuU2NvcGUuVFlQRSkpO1xuICAgICAgICBpZiAobWF0Y2ggPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMud2hpdGVsaXN0ID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLndoaXRlbGlzdC5pbmRleE9mKHZhbHVlLnJlcGxhY2UoL1tcIiddL2csICcnKSkgPiAtMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLndoaXRlbGlzdC5pbmRleE9mKHZhbHVlKSA+IC0xO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBBdHRyaWJ1dG9yLnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZSh0aGlzLmtleU5hbWUpO1xuICAgIH07XG4gICAgQXR0cmlidXRvci5wcm90b3R5cGUudmFsdWUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICB2YXIgdmFsdWUgPSBub2RlLmdldEF0dHJpYnV0ZSh0aGlzLmtleU5hbWUpO1xuICAgICAgICBpZiAodGhpcy5jYW5BZGQobm9kZSwgdmFsdWUpICYmIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH07XG4gICAgcmV0dXJuIEF0dHJpYnV0b3I7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQXR0cmlidXRvcjtcblxuXG4vKioqLyB9KSxcbi8qIDEzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLkNvZGUgPSB1bmRlZmluZWQ7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3F1aWxsRGVsdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG52YXIgX3F1aWxsRGVsdGEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGxEZWx0YSk7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF9ibG9jayA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cbnZhciBfYmxvY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmxvY2spO1xuXG52YXIgX2lubGluZSA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG5cbnZhciBfaW5saW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lubGluZSk7XG5cbnZhciBfdGV4dCA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG5cbnZhciBfdGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90ZXh0KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgQ29kZSA9IGZ1bmN0aW9uIChfSW5saW5lKSB7XG4gIF9pbmhlcml0cyhDb2RlLCBfSW5saW5lKTtcblxuICBmdW5jdGlvbiBDb2RlKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2RlKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQ29kZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvZGUpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIHJldHVybiBDb2RlO1xufShfaW5saW5lMi5kZWZhdWx0KTtcblxuQ29kZS5ibG90TmFtZSA9ICdjb2RlJztcbkNvZGUudGFnTmFtZSA9ICdDT0RFJztcblxudmFyIENvZGVCbG9jayA9IGZ1bmN0aW9uIChfQmxvY2spIHtcbiAgX2luaGVyaXRzKENvZGVCbG9jaywgX0Jsb2NrKTtcblxuICBmdW5jdGlvbiBDb2RlQmxvY2soKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvZGVCbG9jayk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENvZGVCbG9jay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvZGVCbG9jaykpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENvZGVCbG9jaywgW3tcbiAgICBrZXk6ICdkZWx0YScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbHRhKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciB0ZXh0ID0gdGhpcy5kb21Ob2RlLnRleHRDb250ZW50O1xuICAgICAgaWYgKHRleHQuZW5kc1dpdGgoJ1xcbicpKSB7XG4gICAgICAgIC8vIFNob3VsZCBhbHdheXMgYmUgdHJ1ZVxuICAgICAgICB0ZXh0ID0gdGV4dC5zbGljZSgwLCAtMSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGV4dC5zcGxpdCgnXFxuJykucmVkdWNlKGZ1bmN0aW9uIChkZWx0YSwgZnJhZykge1xuICAgICAgICByZXR1cm4gZGVsdGEuaW5zZXJ0KGZyYWcpLmluc2VydCgnXFxuJywgX3RoaXMzLmZvcm1hdHMoKSk7XG4gICAgICB9LCBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZm9ybWF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0KG5hbWUsIHZhbHVlKSB7XG4gICAgICBpZiAobmFtZSA9PT0gdGhpcy5zdGF0aWNzLmJsb3ROYW1lICYmIHZhbHVlKSByZXR1cm47XG5cbiAgICAgIHZhciBfZGVzY2VuZGFudCA9IHRoaXMuZGVzY2VuZGFudChfdGV4dDIuZGVmYXVsdCwgdGhpcy5sZW5ndGgoKSAtIDEpLFxuICAgICAgICAgIF9kZXNjZW5kYW50MiA9IF9zbGljZWRUb0FycmF5KF9kZXNjZW5kYW50LCAxKSxcbiAgICAgICAgICB0ZXh0ID0gX2Rlc2NlbmRhbnQyWzBdO1xuXG4gICAgICBpZiAodGV4dCAhPSBudWxsKSB7XG4gICAgICAgIHRleHQuZGVsZXRlQXQodGV4dC5sZW5ndGgoKSAtIDEsIDEpO1xuICAgICAgfVxuICAgICAgX2dldChDb2RlQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29kZUJsb2NrLnByb3RvdHlwZSksICdmb3JtYXQnLCB0aGlzKS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXRBdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdEF0KGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKSB7XG4gICAgICBpZiAobGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICBpZiAoX3BhcmNobWVudDIuZGVmYXVsdC5xdWVyeShuYW1lLCBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLKSA9PSBudWxsIHx8IG5hbWUgPT09IHRoaXMuc3RhdGljcy5ibG90TmFtZSAmJiB2YWx1ZSA9PT0gdGhpcy5zdGF0aWNzLmZvcm1hdHModGhpcy5kb21Ob2RlKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB2YXIgbmV4dE5ld2xpbmUgPSB0aGlzLm5ld2xpbmVJbmRleChpbmRleCk7XG4gICAgICBpZiAobmV4dE5ld2xpbmUgPCAwIHx8IG5leHROZXdsaW5lID49IGluZGV4ICsgbGVuZ3RoKSByZXR1cm47XG4gICAgICB2YXIgcHJldk5ld2xpbmUgPSB0aGlzLm5ld2xpbmVJbmRleChpbmRleCwgdHJ1ZSkgKyAxO1xuICAgICAgdmFyIGlzb2xhdGVMZW5ndGggPSBuZXh0TmV3bGluZSAtIHByZXZOZXdsaW5lICsgMTtcbiAgICAgIHZhciBibG90ID0gdGhpcy5pc29sYXRlKHByZXZOZXdsaW5lLCBpc29sYXRlTGVuZ3RoKTtcbiAgICAgIHZhciBuZXh0ID0gYmxvdC5uZXh0O1xuICAgICAgYmxvdC5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgaWYgKG5leHQgaW5zdGFuY2VvZiBDb2RlQmxvY2spIHtcbiAgICAgICAgbmV4dC5mb3JtYXRBdCgwLCBpbmRleCAtIHByZXZOZXdsaW5lICsgbGVuZ3RoIC0gaXNvbGF0ZUxlbmd0aCwgbmFtZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2luc2VydEF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0QXQoaW5kZXgsIHZhbHVlLCBkZWYpIHtcbiAgICAgIGlmIChkZWYgIT0gbnVsbCkgcmV0dXJuO1xuXG4gICAgICB2YXIgX2Rlc2NlbmRhbnQzID0gdGhpcy5kZXNjZW5kYW50KF90ZXh0Mi5kZWZhdWx0LCBpbmRleCksXG4gICAgICAgICAgX2Rlc2NlbmRhbnQ0ID0gX3NsaWNlZFRvQXJyYXkoX2Rlc2NlbmRhbnQzLCAyKSxcbiAgICAgICAgICB0ZXh0ID0gX2Rlc2NlbmRhbnQ0WzBdLFxuICAgICAgICAgIG9mZnNldCA9IF9kZXNjZW5kYW50NFsxXTtcblxuICAgICAgdGV4dC5pbnNlcnRBdChvZmZzZXQsIHZhbHVlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdsZW5ndGgnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsZW5ndGgoKSB7XG4gICAgICB2YXIgbGVuZ3RoID0gdGhpcy5kb21Ob2RlLnRleHRDb250ZW50Lmxlbmd0aDtcbiAgICAgIGlmICghdGhpcy5kb21Ob2RlLnRleHRDb250ZW50LmVuZHNXaXRoKCdcXG4nKSkge1xuICAgICAgICByZXR1cm4gbGVuZ3RoICsgMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbmV3bGluZUluZGV4JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbmV3bGluZUluZGV4KHNlYXJjaEluZGV4KSB7XG4gICAgICB2YXIgcmV2ZXJzZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZmFsc2U7XG5cbiAgICAgIGlmICghcmV2ZXJzZSkge1xuICAgICAgICB2YXIgb2Zmc2V0ID0gdGhpcy5kb21Ob2RlLnRleHRDb250ZW50LnNsaWNlKHNlYXJjaEluZGV4KS5pbmRleE9mKCdcXG4nKTtcbiAgICAgICAgcmV0dXJuIG9mZnNldCA+IC0xID8gc2VhcmNoSW5kZXggKyBvZmZzZXQgOiAtMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0aGlzLmRvbU5vZGUudGV4dENvbnRlbnQuc2xpY2UoMCwgc2VhcmNoSW5kZXgpLmxhc3RJbmRleE9mKCdcXG4nKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvcHRpbWl6ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wdGltaXplKGNvbnRleHQpIHtcbiAgICAgIGlmICghdGhpcy5kb21Ob2RlLnRleHRDb250ZW50LmVuZHNXaXRoKCdcXG4nKSkge1xuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKCd0ZXh0JywgJ1xcbicpKTtcbiAgICAgIH1cbiAgICAgIF9nZXQoQ29kZUJsb2NrLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvZGVCbG9jay5wcm90b3R5cGUpLCAnb3B0aW1pemUnLCB0aGlzKS5jYWxsKHRoaXMsIGNvbnRleHQpO1xuICAgICAgdmFyIG5leHQgPSB0aGlzLm5leHQ7XG4gICAgICBpZiAobmV4dCAhPSBudWxsICYmIG5leHQucHJldiA9PT0gdGhpcyAmJiBuZXh0LnN0YXRpY3MuYmxvdE5hbWUgPT09IHRoaXMuc3RhdGljcy5ibG90TmFtZSAmJiB0aGlzLnN0YXRpY3MuZm9ybWF0cyh0aGlzLmRvbU5vZGUpID09PSBuZXh0LnN0YXRpY3MuZm9ybWF0cyhuZXh0LmRvbU5vZGUpKSB7XG4gICAgICAgIG5leHQub3B0aW1pemUoY29udGV4dCk7XG4gICAgICAgIG5leHQubW92ZUNoaWxkcmVuKHRoaXMpO1xuICAgICAgICBuZXh0LnJlbW92ZSgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlcGxhY2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXBsYWNlKHRhcmdldCkge1xuICAgICAgX2dldChDb2RlQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29kZUJsb2NrLnByb3RvdHlwZSksICdyZXBsYWNlJywgdGhpcykuY2FsbCh0aGlzLCB0YXJnZXQpO1xuICAgICAgW10uc2xpY2UuY2FsbCh0aGlzLmRvbU5vZGUucXVlcnlTZWxlY3RvckFsbCgnKicpKS5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciBibG90ID0gX3BhcmNobWVudDIuZGVmYXVsdC5maW5kKG5vZGUpO1xuICAgICAgICBpZiAoYmxvdCA9PSBudWxsKSB7XG4gICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG5vZGUpO1xuICAgICAgICB9IGVsc2UgaWYgKGJsb3QgaW5zdGFuY2VvZiBfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkKSB7XG4gICAgICAgICAgYmxvdC5yZW1vdmUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBibG90LnVud3JhcCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSh2YWx1ZSkge1xuICAgICAgdmFyIGRvbU5vZGUgPSBfZ2V0KENvZGVCbG9jay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvZGVCbG9jayksICdjcmVhdGUnLCB0aGlzKS5jYWxsKHRoaXMsIHZhbHVlKTtcbiAgICAgIGRvbU5vZGUuc2V0QXR0cmlidXRlKCdzcGVsbGNoZWNrJywgZmFsc2UpO1xuICAgICAgcmV0dXJuIGRvbU5vZGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZm9ybWF0cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdHMoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29kZUJsb2NrO1xufShfYmxvY2syLmRlZmF1bHQpO1xuXG5Db2RlQmxvY2suYmxvdE5hbWUgPSAnY29kZS1ibG9jayc7XG5Db2RlQmxvY2sudGFnTmFtZSA9ICdQUkUnO1xuQ29kZUJsb2NrLlRBQiA9ICcgICc7XG5cbmV4cG9ydHMuQ29kZSA9IENvZGU7XG5leHBvcnRzLmRlZmF1bHQgPSBDb2RlQmxvY2s7XG5cbi8qKiovIH0pLFxuLyogMTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcXVpbGxEZWx0YSA9IF9fd2VicGFja19yZXF1aXJlX18oMik7XG5cbnZhciBfcXVpbGxEZWx0YTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9xdWlsbERlbHRhKTtcblxudmFyIF9vcCA9IF9fd2VicGFja19yZXF1aXJlX18oMjApO1xuXG52YXIgX29wMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX29wKTtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG52YXIgX2NvZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxudmFyIF9jb2RlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZGUpO1xuXG52YXIgX2N1cnNvciA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xuXG52YXIgX2N1cnNvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jdXJzb3IpO1xuXG52YXIgX2Jsb2NrID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcblxudmFyIF9ibG9jazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ibG9jayk7XG5cbnZhciBfYnJlYWsgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE2KTtcblxudmFyIF9icmVhazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9icmVhayk7XG5cbnZhciBfY2xvbmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcblxudmFyIF9jbG9uZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbG9uZSk7XG5cbnZhciBfZGVlcEVxdWFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG5cbnZhciBfZGVlcEVxdWFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZXBFcXVhbCk7XG5cbnZhciBfZXh0ZW5kID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcblxudmFyIF9leHRlbmQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXh0ZW5kKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIEFTQ0lJID0gL15bIC1+XSokLztcblxudmFyIEVkaXRvciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gRWRpdG9yKHNjcm9sbCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFZGl0b3IpO1xuXG4gICAgdGhpcy5zY3JvbGwgPSBzY3JvbGw7XG4gICAgdGhpcy5kZWx0YSA9IHRoaXMuZ2V0RGVsdGEoKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhFZGl0b3IsIFt7XG4gICAga2V5OiAnYXBwbHlEZWx0YScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFwcGx5RGVsdGEoZGVsdGEpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBjb25zdW1lTmV4dE5ld2xpbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2Nyb2xsLnVwZGF0ZSgpO1xuICAgICAgdmFyIHNjcm9sbExlbmd0aCA9IHRoaXMuc2Nyb2xsLmxlbmd0aCgpO1xuICAgICAgdGhpcy5zY3JvbGwuYmF0Y2hTdGFydCgpO1xuICAgICAgZGVsdGEgPSBub3JtYWxpemVEZWx0YShkZWx0YSk7XG4gICAgICBkZWx0YS5yZWR1Y2UoZnVuY3Rpb24gKGluZGV4LCBvcCkge1xuICAgICAgICB2YXIgbGVuZ3RoID0gb3AucmV0YWluIHx8IG9wLmRlbGV0ZSB8fCBvcC5pbnNlcnQubGVuZ3RoIHx8IDE7XG4gICAgICAgIHZhciBhdHRyaWJ1dGVzID0gb3AuYXR0cmlidXRlcyB8fCB7fTtcbiAgICAgICAgaWYgKG9wLmluc2VydCAhPSBudWxsKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBvcC5pbnNlcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB2YXIgdGV4dCA9IG9wLmluc2VydDtcbiAgICAgICAgICAgIGlmICh0ZXh0LmVuZHNXaXRoKCdcXG4nKSAmJiBjb25zdW1lTmV4dE5ld2xpbmUpIHtcbiAgICAgICAgICAgICAgY29uc3VtZU5leHROZXdsaW5lID0gZmFsc2U7XG4gICAgICAgICAgICAgIHRleHQgPSB0ZXh0LnNsaWNlKDAsIC0xKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpbmRleCA+PSBzY3JvbGxMZW5ndGggJiYgIXRleHQuZW5kc1dpdGgoJ1xcbicpKSB7XG4gICAgICAgICAgICAgIGNvbnN1bWVOZXh0TmV3bGluZSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5zY3JvbGwuaW5zZXJ0QXQoaW5kZXgsIHRleHQpO1xuXG4gICAgICAgICAgICB2YXIgX3Njcm9sbCRsaW5lID0gX3RoaXMuc2Nyb2xsLmxpbmUoaW5kZXgpLFxuICAgICAgICAgICAgICAgIF9zY3JvbGwkbGluZTIgPSBfc2xpY2VkVG9BcnJheShfc2Nyb2xsJGxpbmUsIDIpLFxuICAgICAgICAgICAgICAgIGxpbmUgPSBfc2Nyb2xsJGxpbmUyWzBdLFxuICAgICAgICAgICAgICAgIG9mZnNldCA9IF9zY3JvbGwkbGluZTJbMV07XG5cbiAgICAgICAgICAgIHZhciBmb3JtYXRzID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHt9LCAoMCwgX2Jsb2NrLmJ1YmJsZUZvcm1hdHMpKGxpbmUpKTtcbiAgICAgICAgICAgIGlmIChsaW5lIGluc3RhbmNlb2YgX2Jsb2NrMi5kZWZhdWx0KSB7XG4gICAgICAgICAgICAgIHZhciBfbGluZSRkZXNjZW5kYW50ID0gbGluZS5kZXNjZW5kYW50KF9wYXJjaG1lbnQyLmRlZmF1bHQuTGVhZiwgb2Zmc2V0KSxcbiAgICAgICAgICAgICAgICAgIF9saW5lJGRlc2NlbmRhbnQyID0gX3NsaWNlZFRvQXJyYXkoX2xpbmUkZGVzY2VuZGFudCwgMSksXG4gICAgICAgICAgICAgICAgICBsZWFmID0gX2xpbmUkZGVzY2VuZGFudDJbMF07XG5cbiAgICAgICAgICAgICAgZm9ybWF0cyA9ICgwLCBfZXh0ZW5kMi5kZWZhdWx0KShmb3JtYXRzLCAoMCwgX2Jsb2NrLmJ1YmJsZUZvcm1hdHMpKGxlYWYpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGF0dHJpYnV0ZXMgPSBfb3AyLmRlZmF1bHQuYXR0cmlidXRlcy5kaWZmKGZvcm1hdHMsIGF0dHJpYnV0ZXMpIHx8IHt9O1xuICAgICAgICAgIH0gZWxzZSBpZiAoX3R5cGVvZihvcC5pbnNlcnQpID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKG9wLmluc2VydClbMF07IC8vIFRoZXJlIHNob3VsZCBvbmx5IGJlIG9uZSBrZXlcbiAgICAgICAgICAgIGlmIChrZXkgPT0gbnVsbCkgcmV0dXJuIGluZGV4O1xuICAgICAgICAgICAgX3RoaXMuc2Nyb2xsLmluc2VydEF0KGluZGV4LCBrZXksIG9wLmluc2VydFtrZXldKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgc2Nyb2xsTGVuZ3RoICs9IGxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgX3RoaXMuc2Nyb2xsLmZvcm1hdEF0KGluZGV4LCBsZW5ndGgsIG5hbWUsIGF0dHJpYnV0ZXNbbmFtZV0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGluZGV4ICsgbGVuZ3RoO1xuICAgICAgfSwgMCk7XG4gICAgICBkZWx0YS5yZWR1Y2UoZnVuY3Rpb24gKGluZGV4LCBvcCkge1xuICAgICAgICBpZiAodHlwZW9mIG9wLmRlbGV0ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICBfdGhpcy5zY3JvbGwuZGVsZXRlQXQoaW5kZXgsIG9wLmRlbGV0ZSk7XG4gICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbmRleCArIChvcC5yZXRhaW4gfHwgb3AuaW5zZXJ0Lmxlbmd0aCB8fCAxKTtcbiAgICAgIH0sIDApO1xuICAgICAgdGhpcy5zY3JvbGwuYmF0Y2hFbmQoKTtcbiAgICAgIHJldHVybiB0aGlzLnVwZGF0ZShkZWx0YSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZGVsZXRlVGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZVRleHQoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgdGhpcy5zY3JvbGwuZGVsZXRlQXQoaW5kZXgsIGxlbmd0aCk7XG4gICAgICByZXR1cm4gdGhpcy51cGRhdGUobmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKGluZGV4KS5kZWxldGUobGVuZ3RoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZm9ybWF0TGluZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdExpbmUoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHZhciBmb3JtYXRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTtcblxuICAgICAgdGhpcy5zY3JvbGwudXBkYXRlKCk7XG4gICAgICBPYmplY3Qua2V5cyhmb3JtYXRzKS5mb3JFYWNoKGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgICAgICAgaWYgKF90aGlzMi5zY3JvbGwud2hpdGVsaXN0ICE9IG51bGwgJiYgIV90aGlzMi5zY3JvbGwud2hpdGVsaXN0W2Zvcm1hdF0pIHJldHVybjtcbiAgICAgICAgdmFyIGxpbmVzID0gX3RoaXMyLnNjcm9sbC5saW5lcyhpbmRleCwgTWF0aC5tYXgobGVuZ3RoLCAxKSk7XG4gICAgICAgIHZhciBsZW5ndGhSZW1haW5pbmcgPSBsZW5ndGg7XG4gICAgICAgIGxpbmVzLmZvckVhY2goZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgICB2YXIgbGluZUxlbmd0aCA9IGxpbmUubGVuZ3RoKCk7XG4gICAgICAgICAgaWYgKCEobGluZSBpbnN0YW5jZW9mIF9jb2RlMi5kZWZhdWx0KSkge1xuICAgICAgICAgICAgbGluZS5mb3JtYXQoZm9ybWF0LCBmb3JtYXRzW2Zvcm1hdF0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgY29kZUluZGV4ID0gaW5kZXggLSBsaW5lLm9mZnNldChfdGhpczIuc2Nyb2xsKTtcbiAgICAgICAgICAgIHZhciBjb2RlTGVuZ3RoID0gbGluZS5uZXdsaW5lSW5kZXgoY29kZUluZGV4ICsgbGVuZ3RoUmVtYWluaW5nKSAtIGNvZGVJbmRleCArIDE7XG4gICAgICAgICAgICBsaW5lLmZvcm1hdEF0KGNvZGVJbmRleCwgY29kZUxlbmd0aCwgZm9ybWF0LCBmb3JtYXRzW2Zvcm1hdF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZW5ndGhSZW1haW5pbmcgLT0gbGluZUxlbmd0aDtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuc2Nyb2xsLm9wdGltaXplKCk7XG4gICAgICByZXR1cm4gdGhpcy51cGRhdGUobmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKGluZGV4KS5yZXRhaW4obGVuZ3RoLCAoMCwgX2Nsb25lMi5kZWZhdWx0KShmb3JtYXRzKSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdFRleHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRUZXh0KGluZGV4LCBsZW5ndGgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgZm9ybWF0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDoge307XG5cbiAgICAgIE9iamVjdC5rZXlzKGZvcm1hdHMpLmZvckVhY2goZnVuY3Rpb24gKGZvcm1hdCkge1xuICAgICAgICBfdGhpczMuc2Nyb2xsLmZvcm1hdEF0KGluZGV4LCBsZW5ndGgsIGZvcm1hdCwgZm9ybWF0c1tmb3JtYXRdKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXMudXBkYXRlKG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihpbmRleCkucmV0YWluKGxlbmd0aCwgKDAsIF9jbG9uZTIuZGVmYXVsdCkoZm9ybWF0cykpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRDb250ZW50cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvbnRlbnRzKGluZGV4LCBsZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLmRlbHRhLnNsaWNlKGluZGV4LCBpbmRleCArIGxlbmd0aCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0RGVsdGEnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREZWx0YSgpIHtcbiAgICAgIHJldHVybiB0aGlzLnNjcm9sbC5saW5lcygpLnJlZHVjZShmdW5jdGlvbiAoZGVsdGEsIGxpbmUpIHtcbiAgICAgICAgcmV0dXJuIGRlbHRhLmNvbmNhdChsaW5lLmRlbHRhKCkpO1xuICAgICAgfSwgbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2dldEZvcm1hdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldEZvcm1hdChpbmRleCkge1xuICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcblxuICAgICAgdmFyIGxpbmVzID0gW10sXG4gICAgICAgICAgbGVhdmVzID0gW107XG4gICAgICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHRoaXMuc2Nyb2xsLnBhdGgoaW5kZXgpLmZvckVhY2goZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgICAgICB2YXIgX3BhdGggPSBfc2xpY2VkVG9BcnJheShwYXRoLCAxKSxcbiAgICAgICAgICAgICAgYmxvdCA9IF9wYXRoWzBdO1xuXG4gICAgICAgICAgaWYgKGJsb3QgaW5zdGFuY2VvZiBfYmxvY2syLmRlZmF1bHQpIHtcbiAgICAgICAgICAgIGxpbmVzLnB1c2goYmxvdCk7XG4gICAgICAgICAgfSBlbHNlIGlmIChibG90IGluc3RhbmNlb2YgX3BhcmNobWVudDIuZGVmYXVsdC5MZWFmKSB7XG4gICAgICAgICAgICBsZWF2ZXMucHVzaChibG90KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbGluZXMgPSB0aGlzLnNjcm9sbC5saW5lcyhpbmRleCwgbGVuZ3RoKTtcbiAgICAgICAgbGVhdmVzID0gdGhpcy5zY3JvbGwuZGVzY2VuZGFudHMoX3BhcmNobWVudDIuZGVmYXVsdC5MZWFmLCBpbmRleCwgbGVuZ3RoKTtcbiAgICAgIH1cbiAgICAgIHZhciBmb3JtYXRzQXJyID0gW2xpbmVzLCBsZWF2ZXNdLm1hcChmdW5jdGlvbiAoYmxvdHMpIHtcbiAgICAgICAgaWYgKGJsb3RzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHt9O1xuICAgICAgICB2YXIgZm9ybWF0cyA9ICgwLCBfYmxvY2suYnViYmxlRm9ybWF0cykoYmxvdHMuc2hpZnQoKSk7XG4gICAgICAgIHdoaWxlIChPYmplY3Qua2V5cyhmb3JtYXRzKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdmFyIGJsb3QgPSBibG90cy5zaGlmdCgpO1xuICAgICAgICAgIGlmIChibG90ID09IG51bGwpIHJldHVybiBmb3JtYXRzO1xuICAgICAgICAgIGZvcm1hdHMgPSBjb21iaW5lRm9ybWF0cygoMCwgX2Jsb2NrLmJ1YmJsZUZvcm1hdHMpKGJsb3QpLCBmb3JtYXRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9ybWF0cztcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIF9leHRlbmQyLmRlZmF1bHQuYXBwbHkoX2V4dGVuZDIuZGVmYXVsdCwgZm9ybWF0c0Fycik7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0VGV4dCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFRleHQoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Q29udGVudHMoaW5kZXgsIGxlbmd0aCkuZmlsdGVyKGZ1bmN0aW9uIChvcCkge1xuICAgICAgICByZXR1cm4gdHlwZW9mIG9wLmluc2VydCA9PT0gJ3N0cmluZyc7XG4gICAgICB9KS5tYXAoZnVuY3Rpb24gKG9wKSB7XG4gICAgICAgIHJldHVybiBvcC5pbnNlcnQ7XG4gICAgICB9KS5qb2luKCcnKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbnNlcnRFbWJlZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluc2VydEVtYmVkKGluZGV4LCBlbWJlZCwgdmFsdWUpIHtcbiAgICAgIHRoaXMuc2Nyb2xsLmluc2VydEF0KGluZGV4LCBlbWJlZCwgdmFsdWUpO1xuICAgICAgcmV0dXJuIHRoaXMudXBkYXRlKG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihpbmRleCkuaW5zZXJ0KF9kZWZpbmVQcm9wZXJ0eSh7fSwgZW1iZWQsIHZhbHVlKSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2luc2VydFRleHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbnNlcnRUZXh0KGluZGV4LCB0ZXh0KSB7XG4gICAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgICAgdmFyIGZvcm1hdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuXG4gICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cXHJcXG4vZywgJ1xcbicpLnJlcGxhY2UoL1xcci9nLCAnXFxuJyk7XG4gICAgICB0aGlzLnNjcm9sbC5pbnNlcnRBdChpbmRleCwgdGV4dCk7XG4gICAgICBPYmplY3Qua2V5cyhmb3JtYXRzKS5mb3JFYWNoKGZ1bmN0aW9uIChmb3JtYXQpIHtcbiAgICAgICAgX3RoaXM0LnNjcm9sbC5mb3JtYXRBdChpbmRleCwgdGV4dC5sZW5ndGgsIGZvcm1hdCwgZm9ybWF0c1tmb3JtYXRdKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHRoaXMudXBkYXRlKG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihpbmRleCkuaW5zZXJ0KHRleHQsICgwLCBfY2xvbmUyLmRlZmF1bHQpKGZvcm1hdHMpKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaXNCbGFuaycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGlzQmxhbmsoKSB7XG4gICAgICBpZiAodGhpcy5zY3JvbGwuY2hpbGRyZW4ubGVuZ3RoID09IDApIHJldHVybiB0cnVlO1xuICAgICAgaWYgKHRoaXMuc2Nyb2xsLmNoaWxkcmVuLmxlbmd0aCA+IDEpIHJldHVybiBmYWxzZTtcbiAgICAgIHZhciBibG9jayA9IHRoaXMuc2Nyb2xsLmNoaWxkcmVuLmhlYWQ7XG4gICAgICBpZiAoYmxvY2suc3RhdGljcy5ibG90TmFtZSAhPT0gX2Jsb2NrMi5kZWZhdWx0LmJsb3ROYW1lKSByZXR1cm4gZmFsc2U7XG4gICAgICBpZiAoYmxvY2suY2hpbGRyZW4ubGVuZ3RoID4gMSkgcmV0dXJuIGZhbHNlO1xuICAgICAgcmV0dXJuIGJsb2NrLmNoaWxkcmVuLmhlYWQgaW5zdGFuY2VvZiBfYnJlYWsyLmRlZmF1bHQ7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVtb3ZlRm9ybWF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVtb3ZlRm9ybWF0KGluZGV4LCBsZW5ndGgpIHtcbiAgICAgIHZhciB0ZXh0ID0gdGhpcy5nZXRUZXh0KGluZGV4LCBsZW5ndGgpO1xuXG4gICAgICB2YXIgX3Njcm9sbCRsaW5lMyA9IHRoaXMuc2Nyb2xsLmxpbmUoaW5kZXggKyBsZW5ndGgpLFxuICAgICAgICAgIF9zY3JvbGwkbGluZTQgPSBfc2xpY2VkVG9BcnJheShfc2Nyb2xsJGxpbmUzLCAyKSxcbiAgICAgICAgICBsaW5lID0gX3Njcm9sbCRsaW5lNFswXSxcbiAgICAgICAgICBvZmZzZXQgPSBfc2Nyb2xsJGxpbmU0WzFdO1xuXG4gICAgICB2YXIgc3VmZml4TGVuZ3RoID0gMCxcbiAgICAgICAgICBzdWZmaXggPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKTtcbiAgICAgIGlmIChsaW5lICE9IG51bGwpIHtcbiAgICAgICAgaWYgKCEobGluZSBpbnN0YW5jZW9mIF9jb2RlMi5kZWZhdWx0KSkge1xuICAgICAgICAgIHN1ZmZpeExlbmd0aCA9IGxpbmUubGVuZ3RoKCkgLSBvZmZzZXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3VmZml4TGVuZ3RoID0gbGluZS5uZXdsaW5lSW5kZXgob2Zmc2V0KSAtIG9mZnNldCArIDE7XG4gICAgICAgIH1cbiAgICAgICAgc3VmZml4ID0gbGluZS5kZWx0YSgpLnNsaWNlKG9mZnNldCwgb2Zmc2V0ICsgc3VmZml4TGVuZ3RoIC0gMSkuaW5zZXJ0KCdcXG4nKTtcbiAgICAgIH1cbiAgICAgIHZhciBjb250ZW50cyA9IHRoaXMuZ2V0Q29udGVudHMoaW5kZXgsIGxlbmd0aCArIHN1ZmZpeExlbmd0aCk7XG4gICAgICB2YXIgZGlmZiA9IGNvbnRlbnRzLmRpZmYobmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkuaW5zZXJ0KHRleHQpLmNvbmNhdChzdWZmaXgpKTtcbiAgICAgIHZhciBkZWx0YSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihpbmRleCkuY29uY2F0KGRpZmYpO1xuICAgICAgcmV0dXJuIHRoaXMuYXBwbHlEZWx0YShkZWx0YSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKGNoYW5nZSkge1xuICAgICAgdmFyIG11dGF0aW9ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogW107XG4gICAgICB2YXIgY3Vyc29ySW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcblxuICAgICAgdmFyIG9sZERlbHRhID0gdGhpcy5kZWx0YTtcbiAgICAgIGlmIChtdXRhdGlvbnMubGVuZ3RoID09PSAxICYmIG11dGF0aW9uc1swXS50eXBlID09PSAnY2hhcmFjdGVyRGF0YScgJiYgbXV0YXRpb25zWzBdLnRhcmdldC5kYXRhLm1hdGNoKEFTQ0lJKSAmJiBfcGFyY2htZW50Mi5kZWZhdWx0LmZpbmQobXV0YXRpb25zWzBdLnRhcmdldCkpIHtcbiAgICAgICAgLy8gT3B0aW1pemF0aW9uIGZvciBjaGFyYWN0ZXIgY2hhbmdlc1xuICAgICAgICB2YXIgdGV4dEJsb3QgPSBfcGFyY2htZW50Mi5kZWZhdWx0LmZpbmQobXV0YXRpb25zWzBdLnRhcmdldCk7XG4gICAgICAgIHZhciBmb3JtYXRzID0gKDAsIF9ibG9jay5idWJibGVGb3JtYXRzKSh0ZXh0QmxvdCk7XG4gICAgICAgIHZhciBpbmRleCA9IHRleHRCbG90Lm9mZnNldCh0aGlzLnNjcm9sbCk7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IG11dGF0aW9uc1swXS5vbGRWYWx1ZS5yZXBsYWNlKF9jdXJzb3IyLmRlZmF1bHQuQ09OVEVOVFMsICcnKTtcbiAgICAgICAgdmFyIG9sZFRleHQgPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKS5pbnNlcnQob2xkVmFsdWUpO1xuICAgICAgICB2YXIgbmV3VGV4dCA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLmluc2VydCh0ZXh0QmxvdC52YWx1ZSgpKTtcbiAgICAgICAgdmFyIGRpZmZEZWx0YSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihpbmRleCkuY29uY2F0KG9sZFRleHQuZGlmZihuZXdUZXh0LCBjdXJzb3JJbmRleCkpO1xuICAgICAgICBjaGFuZ2UgPSBkaWZmRGVsdGEucmVkdWNlKGZ1bmN0aW9uIChkZWx0YSwgb3ApIHtcbiAgICAgICAgICBpZiAob3AuaW5zZXJ0KSB7XG4gICAgICAgICAgICByZXR1cm4gZGVsdGEuaW5zZXJ0KG9wLmluc2VydCwgZm9ybWF0cyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBkZWx0YS5wdXNoKG9wKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpKTtcbiAgICAgICAgdGhpcy5kZWx0YSA9IG9sZERlbHRhLmNvbXBvc2UoY2hhbmdlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGVsdGEgPSB0aGlzLmdldERlbHRhKCk7XG4gICAgICAgIGlmICghY2hhbmdlIHx8ICEoMCwgX2RlZXBFcXVhbDIuZGVmYXVsdCkob2xkRGVsdGEuY29tcG9zZShjaGFuZ2UpLCB0aGlzLmRlbHRhKSkge1xuICAgICAgICAgIGNoYW5nZSA9IG9sZERlbHRhLmRpZmYodGhpcy5kZWx0YSwgY3Vyc29ySW5kZXgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gY2hhbmdlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBFZGl0b3I7XG59KCk7XG5cbmZ1bmN0aW9uIGNvbWJpbmVGb3JtYXRzKGZvcm1hdHMsIGNvbWJpbmVkKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhjb21iaW5lZCkucmVkdWNlKGZ1bmN0aW9uIChtZXJnZWQsIG5hbWUpIHtcbiAgICBpZiAoZm9ybWF0c1tuYW1lXSA9PSBudWxsKSByZXR1cm4gbWVyZ2VkO1xuICAgIGlmIChjb21iaW5lZFtuYW1lXSA9PT0gZm9ybWF0c1tuYW1lXSkge1xuICAgICAgbWVyZ2VkW25hbWVdID0gY29tYmluZWRbbmFtZV07XG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGNvbWJpbmVkW25hbWVdKSkge1xuICAgICAgaWYgKGNvbWJpbmVkW25hbWVdLmluZGV4T2YoZm9ybWF0c1tuYW1lXSkgPCAwKSB7XG4gICAgICAgIG1lcmdlZFtuYW1lXSA9IGNvbWJpbmVkW25hbWVdLmNvbmNhdChbZm9ybWF0c1tuYW1lXV0pO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBtZXJnZWRbbmFtZV0gPSBbY29tYmluZWRbbmFtZV0sIGZvcm1hdHNbbmFtZV1dO1xuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkO1xuICB9LCB7fSk7XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZURlbHRhKGRlbHRhKSB7XG4gIHJldHVybiBkZWx0YS5yZWR1Y2UoZnVuY3Rpb24gKGRlbHRhLCBvcCkge1xuICAgIGlmIChvcC5pbnNlcnQgPT09IDEpIHtcbiAgICAgIHZhciBhdHRyaWJ1dGVzID0gKDAsIF9jbG9uZTIuZGVmYXVsdCkob3AuYXR0cmlidXRlcyk7XG4gICAgICBkZWxldGUgYXR0cmlidXRlc1snaW1hZ2UnXTtcbiAgICAgIHJldHVybiBkZWx0YS5pbnNlcnQoeyBpbWFnZTogb3AuYXR0cmlidXRlcy5pbWFnZSB9LCBhdHRyaWJ1dGVzKTtcbiAgICB9XG4gICAgaWYgKG9wLmF0dHJpYnV0ZXMgIT0gbnVsbCAmJiAob3AuYXR0cmlidXRlcy5saXN0ID09PSB0cnVlIHx8IG9wLmF0dHJpYnV0ZXMuYnVsbGV0ID09PSB0cnVlKSkge1xuICAgICAgb3AgPSAoMCwgX2Nsb25lMi5kZWZhdWx0KShvcCk7XG4gICAgICBpZiAob3AuYXR0cmlidXRlcy5saXN0KSB7XG4gICAgICAgIG9wLmF0dHJpYnV0ZXMubGlzdCA9ICdvcmRlcmVkJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG9wLmF0dHJpYnV0ZXMubGlzdCA9ICdidWxsZXQnO1xuICAgICAgICBkZWxldGUgb3AuYXR0cmlidXRlcy5idWxsZXQ7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygb3AuaW5zZXJ0ID09PSAnc3RyaW5nJykge1xuICAgICAgdmFyIHRleHQgPSBvcC5pbnNlcnQucmVwbGFjZSgvXFxyXFxuL2csICdcXG4nKS5yZXBsYWNlKC9cXHIvZywgJ1xcbicpO1xuICAgICAgcmV0dXJuIGRlbHRhLmluc2VydCh0ZXh0LCBvcC5hdHRyaWJ1dGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlbHRhLnB1c2gob3ApO1xuICB9LCBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKSk7XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEVkaXRvcjtcblxuLyoqKi8gfSksXG4vKiAxNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5SYW5nZSA9IHVuZGVmaW5lZDtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfY2xvbmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcblxudmFyIF9jbG9uZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbG9uZSk7XG5cbnZhciBfZGVlcEVxdWFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG5cbnZhciBfZGVlcEVxdWFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZXBFcXVhbCk7XG5cbnZhciBfZW1pdHRlcjMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2VtaXR0ZXI0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1pdHRlcjMpO1xuXG52YXIgX2xvZ2dlciA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuXG52YXIgX2xvZ2dlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2dnZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIGRlYnVnID0gKDAsIF9sb2dnZXIyLmRlZmF1bHQpKCdxdWlsbDpzZWxlY3Rpb24nKTtcblxudmFyIFJhbmdlID0gZnVuY3Rpb24gUmFuZ2UoaW5kZXgpIHtcbiAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogMDtcblxuICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmFuZ2UpO1xuXG4gIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG59O1xuXG52YXIgU2VsZWN0aW9uID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTZWxlY3Rpb24oc2Nyb2xsLCBlbWl0dGVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTZWxlY3Rpb24pO1xuXG4gICAgdGhpcy5lbWl0dGVyID0gZW1pdHRlcjtcbiAgICB0aGlzLnNjcm9sbCA9IHNjcm9sbDtcbiAgICB0aGlzLmNvbXBvc2luZyA9IGZhbHNlO1xuICAgIHRoaXMubW91c2VEb3duID0gZmFsc2U7XG4gICAgdGhpcy5yb290ID0gdGhpcy5zY3JvbGwuZG9tTm9kZTtcbiAgICB0aGlzLmN1cnNvciA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKCdjdXJzb3InLCB0aGlzKTtcbiAgICAvLyBzYXZlZFJhbmdlIGlzIGxhc3Qgbm9uLW51bGwgcmFuZ2VcbiAgICB0aGlzLmxhc3RSYW5nZSA9IHRoaXMuc2F2ZWRSYW5nZSA9IG5ldyBSYW5nZSgwLCAwKTtcbiAgICB0aGlzLmhhbmRsZUNvbXBvc2l0aW9uKCk7XG4gICAgdGhpcy5oYW5kbGVEcmFnZ2luZygpO1xuICAgIHRoaXMuZW1pdHRlci5saXN0ZW5ET00oJ3NlbGVjdGlvbmNoYW5nZScsIGRvY3VtZW50LCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzLm1vdXNlRG93bikge1xuICAgICAgICBzZXRUaW1lb3V0KF90aGlzLnVwZGF0ZS5iaW5kKF90aGlzLCBfZW1pdHRlcjQuZGVmYXVsdC5zb3VyY2VzLlVTRVIpLCAxKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLmVtaXR0ZXIub24oX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIGZ1bmN0aW9uICh0eXBlLCBkZWx0YSkge1xuICAgICAgaWYgKHR5cGUgPT09IF9lbWl0dGVyNC5kZWZhdWx0LmV2ZW50cy5URVhUX0NIQU5HRSAmJiBkZWx0YS5sZW5ndGgoKSA+IDApIHtcbiAgICAgICAgX3RoaXMudXBkYXRlKF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuU0lMRU5UKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLmVtaXR0ZXIub24oX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLlNDUk9MTF9CRUZPUkVfVVBEQVRFLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzLmhhc0ZvY3VzKCkpIHJldHVybjtcbiAgICAgIHZhciBuYXRpdmUgPSBfdGhpcy5nZXROYXRpdmVSYW5nZSgpO1xuICAgICAgaWYgKG5hdGl2ZSA9PSBudWxsKSByZXR1cm47XG4gICAgICBpZiAobmF0aXZlLnN0YXJ0Lm5vZGUgPT09IF90aGlzLmN1cnNvci50ZXh0Tm9kZSkgcmV0dXJuOyAvLyBjdXJzb3IucmVzdG9yZSgpIHdpbGwgaGFuZGxlXG4gICAgICAvLyBUT0RPIHVuY2xlYXIgaWYgdGhpcyBoYXMgbmVnYXRpdmUgc2lkZSBlZmZlY3RzXG4gICAgICBfdGhpcy5lbWl0dGVyLm9uY2UoX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLlNDUk9MTF9VUERBVEUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBfdGhpcy5zZXROYXRpdmVSYW5nZShuYXRpdmUuc3RhcnQubm9kZSwgbmF0aXZlLnN0YXJ0Lm9mZnNldCwgbmF0aXZlLmVuZC5ub2RlLCBuYXRpdmUuZW5kLm9mZnNldCk7XG4gICAgICAgIH0gY2F0Y2ggKGlnbm9yZWQpIHt9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICB0aGlzLmVtaXR0ZXIub24oX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLlNDUk9MTF9PUFRJTUlaRSwgZnVuY3Rpb24gKG11dGF0aW9ucywgY29udGV4dCkge1xuICAgICAgaWYgKGNvbnRleHQucmFuZ2UpIHtcbiAgICAgICAgdmFyIF9jb250ZXh0JHJhbmdlID0gY29udGV4dC5yYW5nZSxcbiAgICAgICAgICAgIHN0YXJ0Tm9kZSA9IF9jb250ZXh0JHJhbmdlLnN0YXJ0Tm9kZSxcbiAgICAgICAgICAgIHN0YXJ0T2Zmc2V0ID0gX2NvbnRleHQkcmFuZ2Uuc3RhcnRPZmZzZXQsXG4gICAgICAgICAgICBlbmROb2RlID0gX2NvbnRleHQkcmFuZ2UuZW5kTm9kZSxcbiAgICAgICAgICAgIGVuZE9mZnNldCA9IF9jb250ZXh0JHJhbmdlLmVuZE9mZnNldDtcblxuICAgICAgICBfdGhpcy5zZXROYXRpdmVSYW5nZShzdGFydE5vZGUsIHN0YXJ0T2Zmc2V0LCBlbmROb2RlLCBlbmRPZmZzZXQpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHRoaXMudXBkYXRlKF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuU0lMRU5UKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZWxlY3Rpb24sIFt7XG4gICAga2V5OiAnaGFuZGxlQ29tcG9zaXRpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVDb21wb3NpdGlvbigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcignY29tcG9zaXRpb25zdGFydCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmNvbXBvc2luZyA9IHRydWU7XG4gICAgICB9KTtcbiAgICAgIHRoaXMucm9vdC5hZGRFdmVudExpc3RlbmVyKCdjb21wb3NpdGlvbmVuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmNvbXBvc2luZyA9IGZhbHNlO1xuICAgICAgICBpZiAoX3RoaXMyLmN1cnNvci5wYXJlbnQpIHtcbiAgICAgICAgICB2YXIgcmFuZ2UgPSBfdGhpczIuY3Vyc29yLnJlc3RvcmUoKTtcbiAgICAgICAgICBpZiAoIXJhbmdlKSByZXR1cm47XG4gICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBfdGhpczIuc2V0TmF0aXZlUmFuZ2UocmFuZ2Uuc3RhcnROb2RlLCByYW5nZS5zdGFydE9mZnNldCwgcmFuZ2UuZW5kTm9kZSwgcmFuZ2UuZW5kT2Zmc2V0KTtcbiAgICAgICAgICB9LCAxKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaGFuZGxlRHJhZ2dpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVEcmFnZ2luZygpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB0aGlzLmVtaXR0ZXIubGlzdGVuRE9NKCdtb3VzZWRvd24nLCBkb2N1bWVudC5ib2R5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzMy5tb3VzZURvd24gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICB0aGlzLmVtaXR0ZXIubGlzdGVuRE9NKCdtb3VzZXVwJywgZG9jdW1lbnQuYm9keSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczMubW91c2VEb3duID0gZmFsc2U7XG4gICAgICAgIF90aGlzMy51cGRhdGUoX2VtaXR0ZXI0LmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2ZvY3VzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9jdXMoKSB7XG4gICAgICBpZiAodGhpcy5oYXNGb2N1cygpKSByZXR1cm47XG4gICAgICB0aGlzLnJvb3QuZm9jdXMoKTtcbiAgICAgIHRoaXMuc2V0UmFuZ2UodGhpcy5zYXZlZFJhbmdlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXQoX2Zvcm1hdCwgdmFsdWUpIHtcbiAgICAgIGlmICh0aGlzLnNjcm9sbC53aGl0ZWxpc3QgIT0gbnVsbCAmJiAhdGhpcy5zY3JvbGwud2hpdGVsaXN0W19mb3JtYXRdKSByZXR1cm47XG4gICAgICB0aGlzLnNjcm9sbC51cGRhdGUoKTtcbiAgICAgIHZhciBuYXRpdmVSYW5nZSA9IHRoaXMuZ2V0TmF0aXZlUmFuZ2UoKTtcbiAgICAgIGlmIChuYXRpdmVSYW5nZSA9PSBudWxsIHx8ICFuYXRpdmVSYW5nZS5uYXRpdmUuY29sbGFwc2VkIHx8IF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkoX2Zvcm1hdCwgX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5CTE9DSykpIHJldHVybjtcbiAgICAgIGlmIChuYXRpdmVSYW5nZS5zdGFydC5ub2RlICE9PSB0aGlzLmN1cnNvci50ZXh0Tm9kZSkge1xuICAgICAgICB2YXIgYmxvdCA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuZmluZChuYXRpdmVSYW5nZS5zdGFydC5ub2RlLCBmYWxzZSk7XG4gICAgICAgIGlmIChibG90ID09IG51bGwpIHJldHVybjtcbiAgICAgICAgLy8gVE9ETyBHaXZlIGJsb3QgYWJpbGl0eSB0byBub3Qgc3BsaXRcbiAgICAgICAgaWYgKGJsb3QgaW5zdGFuY2VvZiBfcGFyY2htZW50Mi5kZWZhdWx0LkxlYWYpIHtcbiAgICAgICAgICB2YXIgYWZ0ZXIgPSBibG90LnNwbGl0KG5hdGl2ZVJhbmdlLnN0YXJ0Lm9mZnNldCk7XG4gICAgICAgICAgYmxvdC5wYXJlbnQuaW5zZXJ0QmVmb3JlKHRoaXMuY3Vyc29yLCBhZnRlcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYmxvdC5pbnNlcnRCZWZvcmUodGhpcy5jdXJzb3IsIG5hdGl2ZVJhbmdlLnN0YXJ0Lm5vZGUpOyAvLyBTaG91bGQgbmV2ZXIgaGFwcGVuXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jdXJzb3IuYXR0YWNoKCk7XG4gICAgICB9XG4gICAgICB0aGlzLmN1cnNvci5mb3JtYXQoX2Zvcm1hdCwgdmFsdWUpO1xuICAgICAgdGhpcy5zY3JvbGwub3B0aW1pemUoKTtcbiAgICAgIHRoaXMuc2V0TmF0aXZlUmFuZ2UodGhpcy5jdXJzb3IudGV4dE5vZGUsIHRoaXMuY3Vyc29yLnRleHROb2RlLmRhdGEubGVuZ3RoKTtcbiAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZ2V0Qm91bmRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Qm91bmRzKGluZGV4KSB7XG4gICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwO1xuXG4gICAgICB2YXIgc2Nyb2xsTGVuZ3RoID0gdGhpcy5zY3JvbGwubGVuZ3RoKCk7XG4gICAgICBpbmRleCA9IE1hdGgubWluKGluZGV4LCBzY3JvbGxMZW5ndGggLSAxKTtcbiAgICAgIGxlbmd0aCA9IE1hdGgubWluKGluZGV4ICsgbGVuZ3RoLCBzY3JvbGxMZW5ndGggLSAxKSAtIGluZGV4O1xuICAgICAgdmFyIG5vZGUgPSB2b2lkIDAsXG4gICAgICAgICAgX3Njcm9sbCRsZWFmID0gdGhpcy5zY3JvbGwubGVhZihpbmRleCksXG4gICAgICAgICAgX3Njcm9sbCRsZWFmMiA9IF9zbGljZWRUb0FycmF5KF9zY3JvbGwkbGVhZiwgMiksXG4gICAgICAgICAgbGVhZiA9IF9zY3JvbGwkbGVhZjJbMF0sXG4gICAgICAgICAgb2Zmc2V0ID0gX3Njcm9sbCRsZWFmMlsxXTtcbiAgICAgIGlmIChsZWFmID09IG51bGwpIHJldHVybiBudWxsO1xuXG4gICAgICB2YXIgX2xlYWYkcG9zaXRpb24gPSBsZWFmLnBvc2l0aW9uKG9mZnNldCwgdHJ1ZSk7XG5cbiAgICAgIHZhciBfbGVhZiRwb3NpdGlvbjIgPSBfc2xpY2VkVG9BcnJheShfbGVhZiRwb3NpdGlvbiwgMik7XG5cbiAgICAgIG5vZGUgPSBfbGVhZiRwb3NpdGlvbjJbMF07XG4gICAgICBvZmZzZXQgPSBfbGVhZiRwb3NpdGlvbjJbMV07XG5cbiAgICAgIHZhciByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICBpZiAobGVuZ3RoID4gMCkge1xuICAgICAgICByYW5nZS5zZXRTdGFydChub2RlLCBvZmZzZXQpO1xuXG4gICAgICAgIHZhciBfc2Nyb2xsJGxlYWYzID0gdGhpcy5zY3JvbGwubGVhZihpbmRleCArIGxlbmd0aCk7XG5cbiAgICAgICAgdmFyIF9zY3JvbGwkbGVhZjQgPSBfc2xpY2VkVG9BcnJheShfc2Nyb2xsJGxlYWYzLCAyKTtcblxuICAgICAgICBsZWFmID0gX3Njcm9sbCRsZWFmNFswXTtcbiAgICAgICAgb2Zmc2V0ID0gX3Njcm9sbCRsZWFmNFsxXTtcblxuICAgICAgICBpZiAobGVhZiA9PSBudWxsKSByZXR1cm4gbnVsbDtcblxuICAgICAgICB2YXIgX2xlYWYkcG9zaXRpb24zID0gbGVhZi5wb3NpdGlvbihvZmZzZXQsIHRydWUpO1xuXG4gICAgICAgIHZhciBfbGVhZiRwb3NpdGlvbjQgPSBfc2xpY2VkVG9BcnJheShfbGVhZiRwb3NpdGlvbjMsIDIpO1xuXG4gICAgICAgIG5vZGUgPSBfbGVhZiRwb3NpdGlvbjRbMF07XG4gICAgICAgIG9mZnNldCA9IF9sZWFmJHBvc2l0aW9uNFsxXTtcblxuICAgICAgICByYW5nZS5zZXRFbmQobm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgcmV0dXJuIHJhbmdlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHNpZGUgPSAnbGVmdCc7XG4gICAgICAgIHZhciByZWN0ID0gdm9pZCAwO1xuICAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIFRleHQpIHtcbiAgICAgICAgICBpZiAob2Zmc2V0IDwgbm9kZS5kYXRhLmxlbmd0aCkge1xuICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQobm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgICAgIHJhbmdlLnNldEVuZChub2RlLCBvZmZzZXQgKyAxKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQobm9kZSwgb2Zmc2V0IC0gMSk7XG4gICAgICAgICAgICByYW5nZS5zZXRFbmQobm9kZSwgb2Zmc2V0KTtcbiAgICAgICAgICAgIHNpZGUgPSAncmlnaHQnO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZWN0ID0gcmFuZ2UuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVjdCA9IGxlYWYuZG9tTm9kZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICBpZiAob2Zmc2V0ID4gMCkgc2lkZSA9ICdyaWdodCc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBib3R0b206IHJlY3QudG9wICsgcmVjdC5oZWlnaHQsXG4gICAgICAgICAgaGVpZ2h0OiByZWN0LmhlaWdodCxcbiAgICAgICAgICBsZWZ0OiByZWN0W3NpZGVdLFxuICAgICAgICAgIHJpZ2h0OiByZWN0W3NpZGVdLFxuICAgICAgICAgIHRvcDogcmVjdC50b3AsXG4gICAgICAgICAgd2lkdGg6IDBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXROYXRpdmVSYW5nZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldE5hdGl2ZVJhbmdlKCkge1xuICAgICAgdmFyIHNlbGVjdGlvbiA9IGRvY3VtZW50LmdldFNlbGVjdGlvbigpO1xuICAgICAgaWYgKHNlbGVjdGlvbiA9PSBudWxsIHx8IHNlbGVjdGlvbi5yYW5nZUNvdW50IDw9IDApIHJldHVybiBudWxsO1xuICAgICAgdmFyIG5hdGl2ZVJhbmdlID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCk7XG4gICAgICBpZiAobmF0aXZlUmFuZ2UgPT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLm5vcm1hbGl6ZU5hdGl2ZShuYXRpdmVSYW5nZSk7XG4gICAgICBkZWJ1Zy5pbmZvKCdnZXROYXRpdmVSYW5nZScsIHJhbmdlKTtcbiAgICAgIHJldHVybiByYW5nZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdnZXRSYW5nZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJhbmdlKCkge1xuICAgICAgdmFyIG5vcm1hbGl6ZWQgPSB0aGlzLmdldE5hdGl2ZVJhbmdlKCk7XG4gICAgICBpZiAobm9ybWFsaXplZCA9PSBudWxsKSByZXR1cm4gW251bGwsIG51bGxdO1xuICAgICAgdmFyIHJhbmdlID0gdGhpcy5ub3JtYWxpemVkVG9SYW5nZShub3JtYWxpemVkKTtcbiAgICAgIHJldHVybiBbcmFuZ2UsIG5vcm1hbGl6ZWRdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hhc0ZvY3VzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFzRm9jdXMoKSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gdGhpcy5yb290O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ25vcm1hbGl6ZWRUb1JhbmdlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbm9ybWFsaXplZFRvUmFuZ2UocmFuZ2UpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICB2YXIgcG9zaXRpb25zID0gW1tyYW5nZS5zdGFydC5ub2RlLCByYW5nZS5zdGFydC5vZmZzZXRdXTtcbiAgICAgIGlmICghcmFuZ2UubmF0aXZlLmNvbGxhcHNlZCkge1xuICAgICAgICBwb3NpdGlvbnMucHVzaChbcmFuZ2UuZW5kLm5vZGUsIHJhbmdlLmVuZC5vZmZzZXRdKTtcbiAgICAgIH1cbiAgICAgIHZhciBpbmRleGVzID0gcG9zaXRpb25zLm1hcChmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgdmFyIF9wb3NpdGlvbiA9IF9zbGljZWRUb0FycmF5KHBvc2l0aW9uLCAyKSxcbiAgICAgICAgICAgIG5vZGUgPSBfcG9zaXRpb25bMF0sXG4gICAgICAgICAgICBvZmZzZXQgPSBfcG9zaXRpb25bMV07XG5cbiAgICAgICAgdmFyIGJsb3QgPSBfcGFyY2htZW50Mi5kZWZhdWx0LmZpbmQobm9kZSwgdHJ1ZSk7XG4gICAgICAgIHZhciBpbmRleCA9IGJsb3Qub2Zmc2V0KF90aGlzNC5zY3JvbGwpO1xuICAgICAgICBpZiAob2Zmc2V0ID09PSAwKSB7XG4gICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICB9IGVsc2UgaWYgKGJsb3QgaW5zdGFuY2VvZiBfcGFyY2htZW50Mi5kZWZhdWx0LkNvbnRhaW5lcikge1xuICAgICAgICAgIHJldHVybiBpbmRleCArIGJsb3QubGVuZ3RoKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGluZGV4ICsgYmxvdC5pbmRleChub2RlLCBvZmZzZXQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHZhciBlbmQgPSBNYXRoLm1pbihNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoaW5kZXhlcykpLCB0aGlzLnNjcm9sbC5sZW5ndGgoKSAtIDEpO1xuICAgICAgdmFyIHN0YXJ0ID0gTWF0aC5taW4uYXBwbHkoTWF0aCwgW2VuZF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShpbmRleGVzKSkpO1xuICAgICAgcmV0dXJuIG5ldyBSYW5nZShzdGFydCwgZW5kIC0gc3RhcnQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ25vcm1hbGl6ZU5hdGl2ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG5vcm1hbGl6ZU5hdGl2ZShuYXRpdmVSYW5nZSkge1xuICAgICAgaWYgKCFjb250YWlucyh0aGlzLnJvb3QsIG5hdGl2ZVJhbmdlLnN0YXJ0Q29udGFpbmVyKSB8fCAhbmF0aXZlUmFuZ2UuY29sbGFwc2VkICYmICFjb250YWlucyh0aGlzLnJvb3QsIG5hdGl2ZVJhbmdlLmVuZENvbnRhaW5lcikpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB2YXIgcmFuZ2UgPSB7XG4gICAgICAgIHN0YXJ0OiB7IG5vZGU6IG5hdGl2ZVJhbmdlLnN0YXJ0Q29udGFpbmVyLCBvZmZzZXQ6IG5hdGl2ZVJhbmdlLnN0YXJ0T2Zmc2V0IH0sXG4gICAgICAgIGVuZDogeyBub2RlOiBuYXRpdmVSYW5nZS5lbmRDb250YWluZXIsIG9mZnNldDogbmF0aXZlUmFuZ2UuZW5kT2Zmc2V0IH0sXG4gICAgICAgIG5hdGl2ZTogbmF0aXZlUmFuZ2VcbiAgICAgIH07XG4gICAgICBbcmFuZ2Uuc3RhcnQsIHJhbmdlLmVuZF0uZm9yRWFjaChmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgdmFyIG5vZGUgPSBwb3NpdGlvbi5ub2RlLFxuICAgICAgICAgICAgb2Zmc2V0ID0gcG9zaXRpb24ub2Zmc2V0O1xuICAgICAgICB3aGlsZSAoIShub2RlIGluc3RhbmNlb2YgVGV4dCkgJiYgbm9kZS5jaGlsZE5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBpZiAobm9kZS5jaGlsZE5vZGVzLmxlbmd0aCA+IG9mZnNldCkge1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUuY2hpbGROb2Rlc1tvZmZzZXRdO1xuICAgICAgICAgICAgb2Zmc2V0ID0gMDtcbiAgICAgICAgICB9IGVsc2UgaWYgKG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggPT09IG9mZnNldCkge1xuICAgICAgICAgICAgbm9kZSA9IG5vZGUubGFzdENoaWxkO1xuICAgICAgICAgICAgb2Zmc2V0ID0gbm9kZSBpbnN0YW5jZW9mIFRleHQgPyBub2RlLmRhdGEubGVuZ3RoIDogbm9kZS5jaGlsZE5vZGVzLmxlbmd0aCArIDE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwb3NpdGlvbi5ub2RlID0gbm9kZSwgcG9zaXRpb24ub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmFuZ2U7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmFuZ2VUb05hdGl2ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJhbmdlVG9OYXRpdmUocmFuZ2UpIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICB2YXIgaW5kZXhlcyA9IHJhbmdlLmNvbGxhcHNlZCA/IFtyYW5nZS5pbmRleF0gOiBbcmFuZ2UuaW5kZXgsIHJhbmdlLmluZGV4ICsgcmFuZ2UubGVuZ3RoXTtcbiAgICAgIHZhciBhcmdzID0gW107XG4gICAgICB2YXIgc2Nyb2xsTGVuZ3RoID0gdGhpcy5zY3JvbGwubGVuZ3RoKCk7XG4gICAgICBpbmRleGVzLmZvckVhY2goZnVuY3Rpb24gKGluZGV4LCBpKSB7XG4gICAgICAgIGluZGV4ID0gTWF0aC5taW4oc2Nyb2xsTGVuZ3RoIC0gMSwgaW5kZXgpO1xuICAgICAgICB2YXIgbm9kZSA9IHZvaWQgMCxcbiAgICAgICAgICAgIF9zY3JvbGwkbGVhZjUgPSBfdGhpczUuc2Nyb2xsLmxlYWYoaW5kZXgpLFxuICAgICAgICAgICAgX3Njcm9sbCRsZWFmNiA9IF9zbGljZWRUb0FycmF5KF9zY3JvbGwkbGVhZjUsIDIpLFxuICAgICAgICAgICAgbGVhZiA9IF9zY3JvbGwkbGVhZjZbMF0sXG4gICAgICAgICAgICBvZmZzZXQgPSBfc2Nyb2xsJGxlYWY2WzFdO1xuICAgICAgICB2YXIgX2xlYWYkcG9zaXRpb241ID0gbGVhZi5wb3NpdGlvbihvZmZzZXQsIGkgIT09IDApO1xuXG4gICAgICAgIHZhciBfbGVhZiRwb3NpdGlvbjYgPSBfc2xpY2VkVG9BcnJheShfbGVhZiRwb3NpdGlvbjUsIDIpO1xuXG4gICAgICAgIG5vZGUgPSBfbGVhZiRwb3NpdGlvbjZbMF07XG4gICAgICAgIG9mZnNldCA9IF9sZWFmJHBvc2l0aW9uNlsxXTtcblxuICAgICAgICBhcmdzLnB1c2gobm9kZSwgb2Zmc2V0KTtcbiAgICAgIH0pO1xuICAgICAgaWYgKGFyZ3MubGVuZ3RoIDwgMikge1xuICAgICAgICBhcmdzID0gYXJncy5jb25jYXQoYXJncyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYXJncztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzY3JvbGxJbnRvVmlldycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNjcm9sbEludG9WaWV3KHNjcm9sbGluZ0NvbnRhaW5lcikge1xuICAgICAgdmFyIHJhbmdlID0gdGhpcy5sYXN0UmFuZ2U7XG4gICAgICBpZiAocmFuZ2UgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgdmFyIGJvdW5kcyA9IHRoaXMuZ2V0Qm91bmRzKHJhbmdlLmluZGV4LCByYW5nZS5sZW5ndGgpO1xuICAgICAgaWYgKGJvdW5kcyA9PSBudWxsKSByZXR1cm47XG4gICAgICB2YXIgbGltaXQgPSB0aGlzLnNjcm9sbC5sZW5ndGgoKSAtIDE7XG5cbiAgICAgIHZhciBfc2Nyb2xsJGxpbmUgPSB0aGlzLnNjcm9sbC5saW5lKE1hdGgubWluKHJhbmdlLmluZGV4LCBsaW1pdCkpLFxuICAgICAgICAgIF9zY3JvbGwkbGluZTIgPSBfc2xpY2VkVG9BcnJheShfc2Nyb2xsJGxpbmUsIDEpLFxuICAgICAgICAgIGZpcnN0ID0gX3Njcm9sbCRsaW5lMlswXTtcblxuICAgICAgdmFyIGxhc3QgPSBmaXJzdDtcbiAgICAgIGlmIChyYW5nZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHZhciBfc2Nyb2xsJGxpbmUzID0gdGhpcy5zY3JvbGwubGluZShNYXRoLm1pbihyYW5nZS5pbmRleCArIHJhbmdlLmxlbmd0aCwgbGltaXQpKTtcblxuICAgICAgICB2YXIgX3Njcm9sbCRsaW5lNCA9IF9zbGljZWRUb0FycmF5KF9zY3JvbGwkbGluZTMsIDEpO1xuXG4gICAgICAgIGxhc3QgPSBfc2Nyb2xsJGxpbmU0WzBdO1xuICAgICAgfVxuICAgICAgaWYgKGZpcnN0ID09IG51bGwgfHwgbGFzdCA9PSBudWxsKSByZXR1cm47XG4gICAgICB2YXIgc2Nyb2xsQm91bmRzID0gc2Nyb2xsaW5nQ29udGFpbmVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgaWYgKGJvdW5kcy50b3AgPCBzY3JvbGxCb3VuZHMudG9wKSB7XG4gICAgICAgIHNjcm9sbGluZ0NvbnRhaW5lci5zY3JvbGxUb3AgLT0gc2Nyb2xsQm91bmRzLnRvcCAtIGJvdW5kcy50b3A7XG4gICAgICB9IGVsc2UgaWYgKGJvdW5kcy5ib3R0b20gPiBzY3JvbGxCb3VuZHMuYm90dG9tKSB7XG4gICAgICAgIHNjcm9sbGluZ0NvbnRhaW5lci5zY3JvbGxUb3AgKz0gYm91bmRzLmJvdHRvbSAtIHNjcm9sbEJvdW5kcy5ib3R0b207XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0TmF0aXZlUmFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXROYXRpdmVSYW5nZShzdGFydE5vZGUsIHN0YXJ0T2Zmc2V0KSB7XG4gICAgICB2YXIgZW5kTm9kZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogc3RhcnROb2RlO1xuICAgICAgdmFyIGVuZE9mZnNldCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogc3RhcnRPZmZzZXQ7XG4gICAgICB2YXIgZm9yY2UgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGZhbHNlO1xuXG4gICAgICBkZWJ1Zy5pbmZvKCdzZXROYXRpdmVSYW5nZScsIHN0YXJ0Tm9kZSwgc3RhcnRPZmZzZXQsIGVuZE5vZGUsIGVuZE9mZnNldCk7XG4gICAgICBpZiAoc3RhcnROb2RlICE9IG51bGwgJiYgKHRoaXMucm9vdC5wYXJlbnROb2RlID09IG51bGwgfHwgc3RhcnROb2RlLnBhcmVudE5vZGUgPT0gbnVsbCB8fCBlbmROb2RlLnBhcmVudE5vZGUgPT0gbnVsbCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIHNlbGVjdGlvbiA9IGRvY3VtZW50LmdldFNlbGVjdGlvbigpO1xuICAgICAgaWYgKHNlbGVjdGlvbiA9PSBudWxsKSByZXR1cm47XG4gICAgICBpZiAoc3RhcnROb2RlICE9IG51bGwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmhhc0ZvY3VzKCkpIHRoaXMucm9vdC5mb2N1cygpO1xuICAgICAgICB2YXIgbmF0aXZlID0gKHRoaXMuZ2V0TmF0aXZlUmFuZ2UoKSB8fCB7fSkubmF0aXZlO1xuICAgICAgICBpZiAobmF0aXZlID09IG51bGwgfHwgZm9yY2UgfHwgc3RhcnROb2RlICE9PSBuYXRpdmUuc3RhcnRDb250YWluZXIgfHwgc3RhcnRPZmZzZXQgIT09IG5hdGl2ZS5zdGFydE9mZnNldCB8fCBlbmROb2RlICE9PSBuYXRpdmUuZW5kQ29udGFpbmVyIHx8IGVuZE9mZnNldCAhPT0gbmF0aXZlLmVuZE9mZnNldCkge1xuXG4gICAgICAgICAgaWYgKHN0YXJ0Tm9kZS50YWdOYW1lID09IFwiQlJcIikge1xuICAgICAgICAgICAgc3RhcnRPZmZzZXQgPSBbXS5pbmRleE9mLmNhbGwoc3RhcnROb2RlLnBhcmVudE5vZGUuY2hpbGROb2Rlcywgc3RhcnROb2RlKTtcbiAgICAgICAgICAgIHN0YXJ0Tm9kZSA9IHN0YXJ0Tm9kZS5wYXJlbnROb2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoZW5kTm9kZS50YWdOYW1lID09IFwiQlJcIikge1xuICAgICAgICAgICAgZW5kT2Zmc2V0ID0gW10uaW5kZXhPZi5jYWxsKGVuZE5vZGUucGFyZW50Tm9kZS5jaGlsZE5vZGVzLCBlbmROb2RlKTtcbiAgICAgICAgICAgIGVuZE5vZGUgPSBlbmROb2RlLnBhcmVudE5vZGU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciByYW5nZSA9IGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgICAgICAgcmFuZ2Uuc2V0U3RhcnQoc3RhcnROb2RlLCBzdGFydE9mZnNldCk7XG4gICAgICAgICAgcmFuZ2Uuc2V0RW5kKGVuZE5vZGUsIGVuZE9mZnNldCk7XG4gICAgICAgICAgc2VsZWN0aW9uLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgICAgICAgIHNlbGVjdGlvbi5hZGRSYW5nZShyYW5nZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGVjdGlvbi5yZW1vdmVBbGxSYW5nZXMoKTtcbiAgICAgICAgdGhpcy5yb290LmJsdXIoKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5mb2N1cygpOyAvLyByb290LmJsdXIoKSBub3QgZW5vdWdoIG9uIElFMTErVHJhdmlzK1NhdWNlTGFicyAoYnV0IG5vdCBsb2NhbCBWTXMpXG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2V0UmFuZ2UnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRSYW5nZShyYW5nZSkge1xuICAgICAgdmFyIGZvcmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBmYWxzZTtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuQVBJO1xuXG4gICAgICBpZiAodHlwZW9mIGZvcmNlID09PSAnc3RyaW5nJykge1xuICAgICAgICBzb3VyY2UgPSBmb3JjZTtcbiAgICAgICAgZm9yY2UgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGRlYnVnLmluZm8oJ3NldFJhbmdlJywgcmFuZ2UpO1xuICAgICAgaWYgKHJhbmdlICE9IG51bGwpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSB0aGlzLnJhbmdlVG9OYXRpdmUocmFuZ2UpO1xuICAgICAgICB0aGlzLnNldE5hdGl2ZVJhbmdlLmFwcGx5KHRoaXMsIF90b0NvbnN1bWFibGVBcnJheShhcmdzKS5jb25jYXQoW2ZvcmNlXSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXROYXRpdmVSYW5nZShudWxsKTtcbiAgICAgIH1cbiAgICAgIHRoaXMudXBkYXRlKHNvdXJjZSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndXBkYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogX2VtaXR0ZXI0LmRlZmF1bHQuc291cmNlcy5VU0VSO1xuXG4gICAgICB2YXIgb2xkUmFuZ2UgPSB0aGlzLmxhc3RSYW5nZTtcblxuICAgICAgdmFyIF9nZXRSYW5nZSA9IHRoaXMuZ2V0UmFuZ2UoKSxcbiAgICAgICAgICBfZ2V0UmFuZ2UyID0gX3NsaWNlZFRvQXJyYXkoX2dldFJhbmdlLCAyKSxcbiAgICAgICAgICBsYXN0UmFuZ2UgPSBfZ2V0UmFuZ2UyWzBdLFxuICAgICAgICAgIG5hdGl2ZVJhbmdlID0gX2dldFJhbmdlMlsxXTtcblxuICAgICAgdGhpcy5sYXN0UmFuZ2UgPSBsYXN0UmFuZ2U7XG4gICAgICBpZiAodGhpcy5sYXN0UmFuZ2UgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNhdmVkUmFuZ2UgPSB0aGlzLmxhc3RSYW5nZTtcbiAgICAgIH1cbiAgICAgIGlmICghKDAsIF9kZWVwRXF1YWwyLmRlZmF1bHQpKG9sZFJhbmdlLCB0aGlzLmxhc3RSYW5nZSkpIHtcbiAgICAgICAgdmFyIF9lbWl0dGVyO1xuXG4gICAgICAgIGlmICghdGhpcy5jb21wb3NpbmcgJiYgbmF0aXZlUmFuZ2UgIT0gbnVsbCAmJiBuYXRpdmVSYW5nZS5uYXRpdmUuY29sbGFwc2VkICYmIG5hdGl2ZVJhbmdlLnN0YXJ0Lm5vZGUgIT09IHRoaXMuY3Vyc29yLnRleHROb2RlKSB7XG4gICAgICAgICAgdGhpcy5jdXJzb3IucmVzdG9yZSgpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhcmdzID0gW19lbWl0dGVyNC5kZWZhdWx0LmV2ZW50cy5TRUxFQ1RJT05fQ0hBTkdFLCAoMCwgX2Nsb25lMi5kZWZhdWx0KSh0aGlzLmxhc3RSYW5nZSksICgwLCBfY2xvbmUyLmRlZmF1bHQpKG9sZFJhbmdlKSwgc291cmNlXTtcbiAgICAgICAgKF9lbWl0dGVyID0gdGhpcy5lbWl0dGVyKS5lbWl0LmFwcGx5KF9lbWl0dGVyLCBbX2VtaXR0ZXI0LmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0VdLmNvbmNhdChhcmdzKSk7XG4gICAgICAgIGlmIChzb3VyY2UgIT09IF9lbWl0dGVyNC5kZWZhdWx0LnNvdXJjZXMuU0lMRU5UKSB7XG4gICAgICAgICAgdmFyIF9lbWl0dGVyMjtcblxuICAgICAgICAgIChfZW1pdHRlcjIgPSB0aGlzLmVtaXR0ZXIpLmVtaXQuYXBwbHkoX2VtaXR0ZXIyLCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTZWxlY3Rpb247XG59KCk7XG5cbmZ1bmN0aW9uIGNvbnRhaW5zKHBhcmVudCwgZGVzY2VuZGFudCkge1xuICB0cnkge1xuICAgIC8vIEZpcmVmb3ggaW5zZXJ0cyBpbmFjY2Vzc2libGUgbm9kZXMgYXJvdW5kIHZpZGVvIGVsZW1lbnRzXG4gICAgZGVzY2VuZGFudC5wYXJlbnROb2RlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIElFMTEgaGFzIGJ1ZyB3aXRoIFRleHQgbm9kZXNcbiAgLy8gaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy83ODA4NzQvbm9kZS1jb250YWlucy1pcy1pbmNvcnJlY3RcbiAgaWYgKGRlc2NlbmRhbnQgaW5zdGFuY2VvZiBUZXh0KSB7XG4gICAgZGVzY2VuZGFudCA9IGRlc2NlbmRhbnQucGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gcGFyZW50LmNvbnRhaW5zKGRlc2NlbmRhbnQpO1xufVxuXG5leHBvcnRzLlJhbmdlID0gUmFuZ2U7XG5leHBvcnRzLmRlZmF1bHQgPSBTZWxlY3Rpb247XG5cbi8qKiovIH0pLFxuLyogMTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEJyZWFrID0gZnVuY3Rpb24gKF9QYXJjaG1lbnQkRW1iZWQpIHtcbiAgX2luaGVyaXRzKEJyZWFrLCBfUGFyY2htZW50JEVtYmVkKTtcblxuICBmdW5jdGlvbiBCcmVhaygpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnJlYWspO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChCcmVhay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJyZWFrKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQnJlYWssIFt7XG4gICAga2V5OiAnaW5zZXJ0SW50bycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluc2VydEludG8ocGFyZW50LCByZWYpIHtcbiAgICAgIGlmIChwYXJlbnQuY2hpbGRyZW4ubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIF9nZXQoQnJlYWsucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQnJlYWsucHJvdG90eXBlKSwgJ2luc2VydEludG8nLCB0aGlzKS5jYWxsKHRoaXMsIHBhcmVudCwgcmVmKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbGVuZ3RoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGVuZ3RoKCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndmFsdWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ3ZhbHVlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCcmVhaztcbn0oX3BhcmNobWVudDIuZGVmYXVsdC5FbWJlZCk7XG5cbkJyZWFrLmJsb3ROYW1lID0gJ2JyZWFrJztcbkJyZWFrLnRhZ05hbWUgPSAnQlInO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBCcmVhaztcblxuLyoqKi8gfSksXG4vKiAxNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbGlua2VkX2xpc3RfMSA9IF9fd2VicGFja19yZXF1aXJlX18oNDQpO1xudmFyIHNoYWRvd18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMCk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIENvbnRhaW5lckJsb3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbnRhaW5lckJsb3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ29udGFpbmVyQmxvdChkb21Ob2RlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGRvbU5vZGUpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmJ1aWxkKCk7XG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICB9XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUuYXBwZW5kQ2hpbGQgPSBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICAgICAgdGhpcy5pbnNlcnRCZWZvcmUob3RoZXIpO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUuYXR0YWNoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLmF0dGFjaC5jYWxsKHRoaXMpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgICAgICBjaGlsZC5hdHRhY2goKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBDb250YWluZXJCbG90LnByb3RvdHlwZS5idWlsZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IG5ldyBsaW5rZWRfbGlzdF8xLmRlZmF1bHQoKTtcbiAgICAgICAgLy8gTmVlZCB0byBiZSByZXZlcnNlZCBmb3IgaWYgRE9NIG5vZGVzIGFscmVhZHkgaW4gb3JkZXJcbiAgICAgICAgW10uc2xpY2VcbiAgICAgICAgICAgIC5jYWxsKHRoaXMuZG9tTm9kZS5jaGlsZE5vZGVzKVxuICAgICAgICAgICAgLnJldmVyc2UoKVxuICAgICAgICAgICAgLmZvckVhY2goZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdmFyIGNoaWxkID0gbWFrZUJsb3Qobm9kZSk7XG4gICAgICAgICAgICAgICAgX3RoaXMuaW5zZXJ0QmVmb3JlKGNoaWxkLCBfdGhpcy5jaGlsZHJlbi5oZWFkIHx8IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGVyciBpbnN0YW5jZW9mIFJlZ2lzdHJ5LlBhcmNobWVudEVycm9yKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZWxzZVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUuZGVsZXRlQXQgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICBpZiAoaW5kZXggPT09IDAgJiYgbGVuZ3RoID09PSB0aGlzLmxlbmd0aCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2hBdChpbmRleCwgbGVuZ3RoLCBmdW5jdGlvbiAoY2hpbGQsIG9mZnNldCwgbGVuZ3RoKSB7XG4gICAgICAgICAgICBjaGlsZC5kZWxldGVBdChvZmZzZXQsIGxlbmd0aCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUuZGVzY2VuZGFudCA9IGZ1bmN0aW9uIChjcml0ZXJpYSwgaW5kZXgpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5jaGlsZHJlbi5maW5kKGluZGV4KSwgY2hpbGQgPSBfYVswXSwgb2Zmc2V0ID0gX2FbMV07XG4gICAgICAgIGlmICgoY3JpdGVyaWEuYmxvdE5hbWUgPT0gbnVsbCAmJiBjcml0ZXJpYShjaGlsZCkpIHx8XG4gICAgICAgICAgICAoY3JpdGVyaWEuYmxvdE5hbWUgIT0gbnVsbCAmJiBjaGlsZCBpbnN0YW5jZW9mIGNyaXRlcmlhKSkge1xuICAgICAgICAgICAgcmV0dXJuIFtjaGlsZCwgb2Zmc2V0XTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjaGlsZCBpbnN0YW5jZW9mIENvbnRhaW5lckJsb3QpIHtcbiAgICAgICAgICAgIHJldHVybiBjaGlsZC5kZXNjZW5kYW50KGNyaXRlcmlhLCBvZmZzZXQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFtudWxsLCAtMV07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLmRlc2NlbmRhbnRzID0gZnVuY3Rpb24gKGNyaXRlcmlhLCBpbmRleCwgbGVuZ3RoKSB7XG4gICAgICAgIGlmIChpbmRleCA9PT0gdm9pZCAwKSB7IGluZGV4ID0gMDsgfVxuICAgICAgICBpZiAobGVuZ3RoID09PSB2b2lkIDApIHsgbGVuZ3RoID0gTnVtYmVyLk1BWF9WQUxVRTsgfVxuICAgICAgICB2YXIgZGVzY2VuZGFudHMgPSBbXTtcbiAgICAgICAgdmFyIGxlbmd0aExlZnQgPSBsZW5ndGg7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaEF0KGluZGV4LCBsZW5ndGgsIGZ1bmN0aW9uIChjaGlsZCwgaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKChjcml0ZXJpYS5ibG90TmFtZSA9PSBudWxsICYmIGNyaXRlcmlhKGNoaWxkKSkgfHxcbiAgICAgICAgICAgICAgICAoY3JpdGVyaWEuYmxvdE5hbWUgIT0gbnVsbCAmJiBjaGlsZCBpbnN0YW5jZW9mIGNyaXRlcmlhKSkge1xuICAgICAgICAgICAgICAgIGRlc2NlbmRhbnRzLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgQ29udGFpbmVyQmxvdCkge1xuICAgICAgICAgICAgICAgIGRlc2NlbmRhbnRzID0gZGVzY2VuZGFudHMuY29uY2F0KGNoaWxkLmRlc2NlbmRhbnRzKGNyaXRlcmlhLCBpbmRleCwgbGVuZ3RoTGVmdCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGVuZ3RoTGVmdCAtPSBsZW5ndGg7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVzY2VuZGFudHM7XG4gICAgfTtcbiAgICBDb250YWluZXJCbG90LnByb3RvdHlwZS5kZXRhY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGNoaWxkLmRldGFjaCgpO1xuICAgICAgICB9KTtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5kZXRhY2guY2FsbCh0aGlzKTtcbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLmZvcm1hdEF0ID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuY2hpbGRyZW4uZm9yRWFjaEF0KGluZGV4LCBsZW5ndGgsIGZ1bmN0aW9uIChjaGlsZCwgb2Zmc2V0LCBsZW5ndGgpIHtcbiAgICAgICAgICAgIGNoaWxkLmZvcm1hdEF0KG9mZnNldCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUuaW5zZXJ0QXQgPSBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlLCBkZWYpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5jaGlsZHJlbi5maW5kKGluZGV4KSwgY2hpbGQgPSBfYVswXSwgb2Zmc2V0ID0gX2FbMV07XG4gICAgICAgIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgY2hpbGQuaW5zZXJ0QXQob2Zmc2V0LCB2YWx1ZSwgZGVmKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBibG90ID0gZGVmID09IG51bGwgPyBSZWdpc3RyeS5jcmVhdGUoJ3RleHQnLCB2YWx1ZSkgOiBSZWdpc3RyeS5jcmVhdGUodmFsdWUsIGRlZik7XG4gICAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGJsb3QpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBDb250YWluZXJCbG90LnByb3RvdHlwZS5pbnNlcnRCZWZvcmUgPSBmdW5jdGlvbiAoY2hpbGRCbG90LCByZWZCbG90KSB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRpY3MuYWxsb3dlZENoaWxkcmVuICE9IG51bGwgJiZcbiAgICAgICAgICAgICF0aGlzLnN0YXRpY3MuYWxsb3dlZENoaWxkcmVuLnNvbWUoZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoaWxkQmxvdCBpbnN0YW5jZW9mIGNoaWxkO1xuICAgICAgICAgICAgfSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBSZWdpc3RyeS5QYXJjaG1lbnRFcnJvcihcIkNhbm5vdCBpbnNlcnQgXCIgKyBjaGlsZEJsb3Quc3RhdGljcy5ibG90TmFtZSArIFwiIGludG8gXCIgKyB0aGlzLnN0YXRpY3MuYmxvdE5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkQmxvdC5pbnNlcnRJbnRvKHRoaXMsIHJlZkJsb3QpO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUubGVuZ3RoID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGlsZHJlbi5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGNoaWxkKSB7XG4gICAgICAgICAgICByZXR1cm4gbWVtbyArIGNoaWxkLmxlbmd0aCgpO1xuICAgICAgICB9LCAwKTtcbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLm1vdmVDaGlsZHJlbiA9IGZ1bmN0aW9uICh0YXJnZXRQYXJlbnQsIHJlZk5vZGUpIHtcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgdGFyZ2V0UGFyZW50Lmluc2VydEJlZm9yZShjaGlsZCwgcmVmTm9kZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUub3B0aW1pemUgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLm9wdGltaXplLmNhbGwodGhpcywgY29udGV4dCk7XG4gICAgICAgIGlmICh0aGlzLmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGljcy5kZWZhdWx0Q2hpbGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHZhciBjaGlsZCA9IFJlZ2lzdHJ5LmNyZWF0ZSh0aGlzLnN0YXRpY3MuZGVmYXVsdENoaWxkKTtcbiAgICAgICAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgICAgICAgICAgICBjaGlsZC5vcHRpbWl6ZShjb250ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLnBhdGggPSBmdW5jdGlvbiAoaW5kZXgsIGluY2x1c2l2ZSkge1xuICAgICAgICBpZiAoaW5jbHVzaXZlID09PSB2b2lkIDApIHsgaW5jbHVzaXZlID0gZmFsc2U7IH1cbiAgICAgICAgdmFyIF9hID0gdGhpcy5jaGlsZHJlbi5maW5kKGluZGV4LCBpbmNsdXNpdmUpLCBjaGlsZCA9IF9hWzBdLCBvZmZzZXQgPSBfYVsxXTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gW1t0aGlzLCBpbmRleF1dO1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBDb250YWluZXJCbG90KSB7XG4gICAgICAgICAgICByZXR1cm4gcG9zaXRpb24uY29uY2F0KGNoaWxkLnBhdGgob2Zmc2V0LCBpbmNsdXNpdmUpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjaGlsZCAhPSBudWxsKSB7XG4gICAgICAgICAgICBwb3NpdGlvbi5wdXNoKFtjaGlsZCwgb2Zmc2V0XSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBvc2l0aW9uO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUucmVtb3ZlQ2hpbGQgPSBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgdGhpcy5jaGlsZHJlbi5yZW1vdmUoY2hpbGQpO1xuICAgIH07XG4gICAgQ29udGFpbmVyQmxvdC5wcm90b3R5cGUucmVwbGFjZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgaWYgKHRhcmdldCBpbnN0YW5jZW9mIENvbnRhaW5lckJsb3QpIHtcbiAgICAgICAgICAgIHRhcmdldC5tb3ZlQ2hpbGRyZW4odGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5yZXBsYWNlLmNhbGwodGhpcywgdGFyZ2V0KTtcbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLnNwbGl0ID0gZnVuY3Rpb24gKGluZGV4LCBmb3JjZSkge1xuICAgICAgICBpZiAoZm9yY2UgPT09IHZvaWQgMCkgeyBmb3JjZSA9IGZhbHNlOyB9XG4gICAgICAgIGlmICghZm9yY2UpIHtcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gMClcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgIGlmIChpbmRleCA9PT0gdGhpcy5sZW5ndGgoKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5uZXh0O1xuICAgICAgICB9XG4gICAgICAgIHZhciBhZnRlciA9IHRoaXMuY2xvbmUoKTtcbiAgICAgICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKGFmdGVyLCB0aGlzLm5leHQpO1xuICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2hBdChpbmRleCwgdGhpcy5sZW5ndGgoKSwgZnVuY3Rpb24gKGNoaWxkLCBvZmZzZXQsIGxlbmd0aCkge1xuICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC5zcGxpdChvZmZzZXQsIGZvcmNlKTtcbiAgICAgICAgICAgIGFmdGVyLmFwcGVuZENoaWxkKGNoaWxkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBhZnRlcjtcbiAgICB9O1xuICAgIENvbnRhaW5lckJsb3QucHJvdG90eXBlLnVud3JhcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5tb3ZlQ2hpbGRyZW4odGhpcy5wYXJlbnQsIHRoaXMubmV4dCk7XG4gICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgfTtcbiAgICBDb250YWluZXJCbG90LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAobXV0YXRpb25zLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBhZGRlZE5vZGVzID0gW107XG4gICAgICAgIHZhciByZW1vdmVkTm9kZXMgPSBbXTtcbiAgICAgICAgbXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgICAgICBpZiAobXV0YXRpb24udGFyZ2V0ID09PSBfdGhpcy5kb21Ob2RlICYmIG11dGF0aW9uLnR5cGUgPT09ICdjaGlsZExpc3QnKSB7XG4gICAgICAgICAgICAgICAgYWRkZWROb2Rlcy5wdXNoLmFwcGx5KGFkZGVkTm9kZXMsIG11dGF0aW9uLmFkZGVkTm9kZXMpO1xuICAgICAgICAgICAgICAgIHJlbW92ZWROb2Rlcy5wdXNoLmFwcGx5KHJlbW92ZWROb2RlcywgbXV0YXRpb24ucmVtb3ZlZE5vZGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJlbW92ZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBub2RlIGhhcyBhY3R1YWxseSBiZWVuIHJlbW92ZWRcbiAgICAgICAgICAgIC8vIE9uZSBleGNlcHRpb24gaXMgQ2hyb21lIGRvZXMgbm90IGltbWVkaWF0ZWx5IHJlbW92ZSBJRlJBTUVzXG4gICAgICAgICAgICAvLyBmcm9tIERPTSBidXQgTXV0YXRpb25SZWNvcmQgaXMgY29ycmVjdCBpbiBpdHMgcmVwb3J0ZWQgcmVtb3ZhbFxuICAgICAgICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIG5vZGUudGFnTmFtZSAhPT0gJ0lGUkFNRScgJiZcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKG5vZGUpICYgTm9kZS5ET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYmxvdCA9IFJlZ2lzdHJ5LmZpbmQobm9kZSk7XG4gICAgICAgICAgICBpZiAoYmxvdCA9PSBudWxsKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGlmIChibG90LmRvbU5vZGUucGFyZW50Tm9kZSA9PSBudWxsIHx8IGJsb3QuZG9tTm9kZS5wYXJlbnROb2RlID09PSBfdGhpcy5kb21Ob2RlKSB7XG4gICAgICAgICAgICAgICAgYmxvdC5kZXRhY2goKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGFkZGVkTm9kZXNcbiAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgIHJldHVybiBub2RlLnBhcmVudE5vZGUgPT0gX3RoaXMuZG9tTm9kZTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICBpZiAoYSA9PT0gYilcbiAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgIGlmIChhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpICYgTm9kZS5ET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgICAgICB2YXIgcmVmQmxvdCA9IG51bGw7XG4gICAgICAgICAgICBpZiAobm9kZS5uZXh0U2libGluZyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVmQmxvdCA9IFJlZ2lzdHJ5LmZpbmQobm9kZS5uZXh0U2libGluZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgYmxvdCA9IG1ha2VCbG90KG5vZGUpO1xuICAgICAgICAgICAgaWYgKGJsb3QubmV4dCAhPSByZWZCbG90IHx8IGJsb3QubmV4dCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKGJsb3QucGFyZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgYmxvdC5wYXJlbnQucmVtb3ZlQ2hpbGQoX3RoaXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfdGhpcy5pbnNlcnRCZWZvcmUoYmxvdCwgcmVmQmxvdCB8fCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBDb250YWluZXJCbG90O1xufShzaGFkb3dfMS5kZWZhdWx0KSk7XG5mdW5jdGlvbiBtYWtlQmxvdChub2RlKSB7XG4gICAgdmFyIGJsb3QgPSBSZWdpc3RyeS5maW5kKG5vZGUpO1xuICAgIGlmIChibG90ID09IG51bGwpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGJsb3QgPSBSZWdpc3RyeS5jcmVhdGUobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGJsb3QgPSBSZWdpc3RyeS5jcmVhdGUoUmVnaXN0cnkuU2NvcGUuSU5MSU5FKTtcbiAgICAgICAgICAgIFtdLnNsaWNlLmNhbGwobm9kZS5jaGlsZE5vZGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBibG90LmRvbU5vZGUuYXBwZW5kQ2hpbGQoY2hpbGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlcGxhY2VDaGlsZChibG90LmRvbU5vZGUsIG5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYmxvdC5hdHRhY2goKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYmxvdDtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IENvbnRhaW5lckJsb3Q7XG5cblxuLyoqKi8gfSksXG4vKiAxOCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgYXR0cmlidXRvcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMik7XG52YXIgc3RvcmVfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMzEpO1xudmFyIGNvbnRhaW5lcl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIEZvcm1hdEJsb3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEZvcm1hdEJsb3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gRm9ybWF0QmxvdChkb21Ob2RlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIGRvbU5vZGUpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLmF0dHJpYnV0ZXMgPSBuZXcgc3RvcmVfMS5kZWZhdWx0KF90aGlzLmRvbU5vZGUpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIEZvcm1hdEJsb3QuZm9ybWF0cyA9IGZ1bmN0aW9uIChkb21Ob2RlKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy50YWdOYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnRhZ05hbWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZG9tTm9kZS50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9O1xuICAgIEZvcm1hdEJsb3QucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgZm9ybWF0ID0gUmVnaXN0cnkucXVlcnkobmFtZSk7XG4gICAgICAgIGlmIChmb3JtYXQgaW5zdGFuY2VvZiBhdHRyaWJ1dG9yXzEuZGVmYXVsdCkge1xuICAgICAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmF0dHJpYnV0ZShmb3JtYXQsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKGZvcm1hdCAhPSBudWxsICYmIChuYW1lICE9PSB0aGlzLnN0YXRpY3MuYmxvdE5hbWUgfHwgdGhpcy5mb3JtYXRzKClbbmFtZV0gIT09IHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHRoaXMucmVwbGFjZVdpdGgobmFtZSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfTtcbiAgICBGb3JtYXRCbG90LnByb3RvdHlwZS5mb3JtYXRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZm9ybWF0cyA9IHRoaXMuYXR0cmlidXRlcy52YWx1ZXMoKTtcbiAgICAgICAgdmFyIGZvcm1hdCA9IHRoaXMuc3RhdGljcy5mb3JtYXRzKHRoaXMuZG9tTm9kZSk7XG4gICAgICAgIGlmIChmb3JtYXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgZm9ybWF0c1t0aGlzLnN0YXRpY3MuYmxvdE5hbWVdID0gZm9ybWF0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmb3JtYXRzO1xuICAgIH07XG4gICAgRm9ybWF0QmxvdC5wcm90b3R5cGUucmVwbGFjZVdpdGggPSBmdW5jdGlvbiAobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gX3N1cGVyLnByb3RvdHlwZS5yZXBsYWNlV2l0aC5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzLmNvcHkocmVwbGFjZW1lbnQpO1xuICAgICAgICByZXR1cm4gcmVwbGFjZW1lbnQ7XG4gICAgfTtcbiAgICBGb3JtYXRCbG90LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAobXV0YXRpb25zLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcywgbXV0YXRpb25zLCBjb250ZXh0KTtcbiAgICAgICAgaWYgKG11dGF0aW9ucy5zb21lKGZ1bmN0aW9uIChtdXRhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIG11dGF0aW9uLnRhcmdldCA9PT0gX3RoaXMuZG9tTm9kZSAmJiBtdXRhdGlvbi50eXBlID09PSAnYXR0cmlidXRlcyc7XG4gICAgICAgIH0pKSB7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXMuYnVpbGQoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRm9ybWF0QmxvdC5wcm90b3R5cGUud3JhcCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IF9zdXBlci5wcm90b3R5cGUud3JhcC5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgaWYgKHdyYXBwZXIgaW5zdGFuY2VvZiBGb3JtYXRCbG90ICYmIHdyYXBwZXIuc3RhdGljcy5zY29wZSA9PT0gdGhpcy5zdGF0aWNzLnNjb3BlKSB7XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXMubW92ZSh3cmFwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICB9O1xuICAgIHJldHVybiBGb3JtYXRCbG90O1xufShjb250YWluZXJfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBGb3JtYXRCbG90O1xuXG5cbi8qKiovIH0pLFxuLyogMTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIHNoYWRvd18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMCk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIExlYWZCbG90ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhMZWFmQmxvdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBMZWFmQmxvdCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBMZWFmQmxvdC52YWx1ZSA9IGZ1bmN0aW9uIChkb21Ob2RlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH07XG4gICAgTGVhZkJsb3QucHJvdG90eXBlLmluZGV4ID0gZnVuY3Rpb24gKG5vZGUsIG9mZnNldCkge1xuICAgICAgICBpZiAodGhpcy5kb21Ob2RlID09PSBub2RlIHx8XG4gICAgICAgICAgICB0aGlzLmRvbU5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24obm9kZSkgJiBOb2RlLkRPQ1VNRU5UX1BPU0lUSU9OX0NPTlRBSU5FRF9CWSkge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGgubWluKG9mZnNldCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH07XG4gICAgTGVhZkJsb3QucHJvdG90eXBlLnBvc2l0aW9uID0gZnVuY3Rpb24gKGluZGV4LCBpbmNsdXNpdmUpIHtcbiAgICAgICAgdmFyIG9mZnNldCA9IFtdLmluZGV4T2YuY2FsbCh0aGlzLnBhcmVudC5kb21Ob2RlLmNoaWxkTm9kZXMsIHRoaXMuZG9tTm9kZSk7XG4gICAgICAgIGlmIChpbmRleCA+IDApXG4gICAgICAgICAgICBvZmZzZXQgKz0gMTtcbiAgICAgICAgcmV0dXJuIFt0aGlzLnBhcmVudC5kb21Ob2RlLCBvZmZzZXRdO1xuICAgIH07XG4gICAgTGVhZkJsb3QucHJvdG90eXBlLnZhbHVlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiBfYSA9IHt9LCBfYVt0aGlzLnN0YXRpY3MuYmxvdE5hbWVdID0gdGhpcy5zdGF0aWNzLnZhbHVlKHRoaXMuZG9tTm9kZSkgfHwgdHJ1ZSwgX2E7XG4gICAgfTtcbiAgICBMZWFmQmxvdC5zY29wZSA9IFJlZ2lzdHJ5LlNjb3BlLklOTElORV9CTE9UO1xuICAgIHJldHVybiBMZWFmQmxvdDtcbn0oc2hhZG93XzEuZGVmYXVsdCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gTGVhZkJsb3Q7XG5cblxuLyoqKi8gfSksXG4vKiAyMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG52YXIgZXF1YWwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDExKTtcbnZhciBleHRlbmQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG5cbnZhciBsaWIgPSB7XG4gIGF0dHJpYnV0ZXM6IHtcbiAgICBjb21wb3NlOiBmdW5jdGlvbiAoYSwgYiwga2VlcE51bGwpIHtcbiAgICAgIGlmICh0eXBlb2YgYSAhPT0gJ29iamVjdCcpIGEgPSB7fTtcbiAgICAgIGlmICh0eXBlb2YgYiAhPT0gJ29iamVjdCcpIGIgPSB7fTtcbiAgICAgIHZhciBhdHRyaWJ1dGVzID0gZXh0ZW5kKHRydWUsIHt9LCBiKTtcbiAgICAgIGlmICgha2VlcE51bGwpIHtcbiAgICAgICAgYXR0cmlidXRlcyA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLnJlZHVjZShmdW5jdGlvbiAoY29weSwga2V5KSB7XG4gICAgICAgICAgaWYgKGF0dHJpYnV0ZXNba2V5XSAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb3B5W2tleV0gPSBhdHRyaWJ1dGVzW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjb3B5O1xuICAgICAgICB9LCB7fSk7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBrZXkgaW4gYSkge1xuICAgICAgICBpZiAoYVtrZXldICE9PSB1bmRlZmluZWQgJiYgYltrZXldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBhdHRyaWJ1dGVzW2tleV0gPSBhW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5sZW5ndGggPiAwID8gYXR0cmlidXRlcyA6IHVuZGVmaW5lZDtcbiAgICB9LFxuXG4gICAgZGlmZjogZnVuY3Rpb24oYSwgYikge1xuICAgICAgaWYgKHR5cGVvZiBhICE9PSAnb2JqZWN0JykgYSA9IHt9O1xuICAgICAgaWYgKHR5cGVvZiBiICE9PSAnb2JqZWN0JykgYiA9IHt9O1xuICAgICAgdmFyIGF0dHJpYnV0ZXMgPSBPYmplY3Qua2V5cyhhKS5jb25jYXQoT2JqZWN0LmtleXMoYikpLnJlZHVjZShmdW5jdGlvbiAoYXR0cmlidXRlcywga2V5KSB7XG4gICAgICAgIGlmICghZXF1YWwoYVtrZXldLCBiW2tleV0pKSB7XG4gICAgICAgICAgYXR0cmlidXRlc1trZXldID0gYltrZXldID09PSB1bmRlZmluZWQgPyBudWxsIDogYltrZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdHRyaWJ1dGVzO1xuICAgICAgfSwge30pO1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmxlbmd0aCA+IDAgPyBhdHRyaWJ1dGVzIDogdW5kZWZpbmVkO1xuICAgIH0sXG5cbiAgICB0cmFuc2Zvcm06IGZ1bmN0aW9uIChhLCBiLCBwcmlvcml0eSkge1xuICAgICAgaWYgKHR5cGVvZiBhICE9PSAnb2JqZWN0JykgcmV0dXJuIGI7XG4gICAgICBpZiAodHlwZW9mIGIgIT09ICdvYmplY3QnKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgaWYgKCFwcmlvcml0eSkgcmV0dXJuIGI7ICAvLyBiIHNpbXBseSBvdmVyd3JpdGVzIHVzIHdpdGhvdXQgcHJpb3JpdHlcbiAgICAgIHZhciBhdHRyaWJ1dGVzID0gT2JqZWN0LmtleXMoYikucmVkdWNlKGZ1bmN0aW9uIChhdHRyaWJ1dGVzLCBrZXkpIHtcbiAgICAgICAgaWYgKGFba2V5XSA9PT0gdW5kZWZpbmVkKSBhdHRyaWJ1dGVzW2tleV0gPSBiW2tleV07ICAvLyBudWxsIGlzIGEgdmFsaWQgdmFsdWVcbiAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZXM7XG4gICAgICB9LCB7fSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMoYXR0cmlidXRlcykubGVuZ3RoID4gMCA/IGF0dHJpYnV0ZXMgOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuXG4gIGl0ZXJhdG9yOiBmdW5jdGlvbiAob3BzKSB7XG4gICAgcmV0dXJuIG5ldyBJdGVyYXRvcihvcHMpO1xuICB9LFxuXG4gIGxlbmd0aDogZnVuY3Rpb24gKG9wKSB7XG4gICAgaWYgKHR5cGVvZiBvcFsnZGVsZXRlJ10gPT09ICdudW1iZXInKSB7XG4gICAgICByZXR1cm4gb3BbJ2RlbGV0ZSddO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9wLnJldGFpbiA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiBvcC5yZXRhaW47XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb3AuaW5zZXJ0ID09PSAnc3RyaW5nJyA/IG9wLmluc2VydC5sZW5ndGggOiAxO1xuICAgIH1cbiAgfVxufTtcblxuXG5mdW5jdGlvbiBJdGVyYXRvcihvcHMpIHtcbiAgdGhpcy5vcHMgPSBvcHM7XG4gIHRoaXMuaW5kZXggPSAwO1xuICB0aGlzLm9mZnNldCA9IDA7XG59O1xuXG5JdGVyYXRvci5wcm90b3R5cGUuaGFzTmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMucGVla0xlbmd0aCgpIDwgSW5maW5pdHk7XG59O1xuXG5JdGVyYXRvci5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uIChsZW5ndGgpIHtcbiAgaWYgKCFsZW5ndGgpIGxlbmd0aCA9IEluZmluaXR5O1xuICB2YXIgbmV4dE9wID0gdGhpcy5vcHNbdGhpcy5pbmRleF07XG4gIGlmIChuZXh0T3ApIHtcbiAgICB2YXIgb2Zmc2V0ID0gdGhpcy5vZmZzZXQ7XG4gICAgdmFyIG9wTGVuZ3RoID0gbGliLmxlbmd0aChuZXh0T3ApXG4gICAgaWYgKGxlbmd0aCA+PSBvcExlbmd0aCAtIG9mZnNldCkge1xuICAgICAgbGVuZ3RoID0gb3BMZW5ndGggLSBvZmZzZXQ7XG4gICAgICB0aGlzLmluZGV4ICs9IDE7XG4gICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub2Zmc2V0ICs9IGxlbmd0aDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBuZXh0T3BbJ2RlbGV0ZSddID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuIHsgJ2RlbGV0ZSc6IGxlbmd0aCB9O1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgcmV0T3AgPSB7fTtcbiAgICAgIGlmIChuZXh0T3AuYXR0cmlidXRlcykge1xuICAgICAgICByZXRPcC5hdHRyaWJ1dGVzID0gbmV4dE9wLmF0dHJpYnV0ZXM7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIG5leHRPcC5yZXRhaW4gPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldE9wLnJldGFpbiA9IGxlbmd0aDtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIG5leHRPcC5pbnNlcnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldE9wLmluc2VydCA9IG5leHRPcC5pbnNlcnQuc3Vic3RyKG9mZnNldCwgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIG9mZnNldCBzaG91bGQgPT09IDAsIGxlbmd0aCBzaG91bGQgPT09IDFcbiAgICAgICAgcmV0T3AuaW5zZXJ0ID0gbmV4dE9wLmluc2VydDtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXRPcDtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHsgcmV0YWluOiBJbmZpbml0eSB9O1xuICB9XG59O1xuXG5JdGVyYXRvci5wcm90b3R5cGUucGVlayA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMub3BzW3RoaXMuaW5kZXhdO1xufTtcblxuSXRlcmF0b3IucHJvdG90eXBlLnBlZWtMZW5ndGggPSBmdW5jdGlvbiAoKSB7XG4gIGlmICh0aGlzLm9wc1t0aGlzLmluZGV4XSkge1xuICAgIC8vIFNob3VsZCBuZXZlciByZXR1cm4gMCBpZiBvdXIgaW5kZXggaXMgYmVpbmcgbWFuYWdlZCBjb3JyZWN0bHlcbiAgICByZXR1cm4gbGliLmxlbmd0aCh0aGlzLm9wc1t0aGlzLmluZGV4XSkgLSB0aGlzLm9mZnNldDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gSW5maW5pdHk7XG4gIH1cbn07XG5cbkl0ZXJhdG9yLnByb3RvdHlwZS5wZWVrVHlwZSA9IGZ1bmN0aW9uICgpIHtcbiAgaWYgKHRoaXMub3BzW3RoaXMuaW5kZXhdKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLm9wc1t0aGlzLmluZGV4XVsnZGVsZXRlJ10gPT09ICdudW1iZXInKSB7XG4gICAgICByZXR1cm4gJ2RlbGV0ZSc7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5vcHNbdGhpcy5pbmRleF0ucmV0YWluID09PSAnbnVtYmVyJykge1xuICAgICAgcmV0dXJuICdyZXRhaW4nO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJ2luc2VydCc7XG4gICAgfVxuICB9XG4gIHJldHVybiAncmV0YWluJztcbn07XG5cbkl0ZXJhdG9yLnByb3RvdHlwZS5yZXN0ID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMuaGFzTmV4dCgpKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKHRoaXMub2Zmc2V0ID09PSAwKSB7XG4gICAgcmV0dXJuIHRoaXMub3BzLnNsaWNlKHRoaXMuaW5kZXgpO1xuICB9IGVsc2Uge1xuICAgIHZhciBvZmZzZXQgPSB0aGlzLm9mZnNldDtcbiAgICB2YXIgaW5kZXggPSB0aGlzLmluZGV4O1xuICAgIHZhciBuZXh0ID0gdGhpcy5uZXh0KCk7XG4gICAgdmFyIHJlc3QgPSB0aGlzLm9wcy5zbGljZSh0aGlzLmluZGV4KTtcbiAgICB0aGlzLm9mZnNldCA9IG9mZnNldDtcbiAgICB0aGlzLmluZGV4ID0gaW5kZXg7XG4gICAgcmV0dXJuIFtuZXh0XS5jb25jYXQocmVzdCk7XG4gIH1cbn07XG5cblxubW9kdWxlLmV4cG9ydHMgPSBsaWI7XG5cblxuLyoqKi8gfSksXG4vKiAyMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgY2xvbmUgPSAoZnVuY3Rpb24oKSB7XG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIF9pbnN0YW5jZW9mKG9iaiwgdHlwZSkge1xuICByZXR1cm4gdHlwZSAhPSBudWxsICYmIG9iaiBpbnN0YW5jZW9mIHR5cGU7XG59XG5cbnZhciBuYXRpdmVNYXA7XG50cnkge1xuICBuYXRpdmVNYXAgPSBNYXA7XG59IGNhdGNoKF8pIHtcbiAgLy8gbWF5YmUgYSByZWZlcmVuY2UgZXJyb3IgYmVjYXVzZSBubyBgTWFwYC4gR2l2ZSBpdCBhIGR1bW15IHZhbHVlIHRoYXQgbm9cbiAgLy8gdmFsdWUgd2lsbCBldmVyIGJlIGFuIGluc3RhbmNlb2YuXG4gIG5hdGl2ZU1hcCA9IGZ1bmN0aW9uKCkge307XG59XG5cbnZhciBuYXRpdmVTZXQ7XG50cnkge1xuICBuYXRpdmVTZXQgPSBTZXQ7XG59IGNhdGNoKF8pIHtcbiAgbmF0aXZlU2V0ID0gZnVuY3Rpb24oKSB7fTtcbn1cblxudmFyIG5hdGl2ZVByb21pc2U7XG50cnkge1xuICBuYXRpdmVQcm9taXNlID0gUHJvbWlzZTtcbn0gY2F0Y2goXykge1xuICBuYXRpdmVQcm9taXNlID0gZnVuY3Rpb24oKSB7fTtcbn1cblxuLyoqXG4gKiBDbG9uZXMgKGNvcGllcykgYW4gT2JqZWN0IHVzaW5nIGRlZXAgY29weWluZy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHN1cHBvcnRzIGNpcmN1bGFyIHJlZmVyZW5jZXMgYnkgZGVmYXVsdCwgYnV0IGlmIHlvdSBhcmUgY2VydGFpblxuICogdGhlcmUgYXJlIG5vIGNpcmN1bGFyIHJlZmVyZW5jZXMgaW4geW91ciBvYmplY3QsIHlvdSBjYW4gc2F2ZSBzb21lIENQVSB0aW1lXG4gKiBieSBjYWxsaW5nIGNsb25lKG9iaiwgZmFsc2UpLlxuICpcbiAqIENhdXRpb246IGlmIGBjaXJjdWxhcmAgaXMgZmFsc2UgYW5kIGBwYXJlbnRgIGNvbnRhaW5zIGNpcmN1bGFyIHJlZmVyZW5jZXMsXG4gKiB5b3VyIHByb2dyYW0gbWF5IGVudGVyIGFuIGluZmluaXRlIGxvb3AgYW5kIGNyYXNoLlxuICpcbiAqIEBwYXJhbSBgcGFyZW50YCAtIHRoZSBvYmplY3QgdG8gYmUgY2xvbmVkXG4gKiBAcGFyYW0gYGNpcmN1bGFyYCAtIHNldCB0byB0cnVlIGlmIHRoZSBvYmplY3QgdG8gYmUgY2xvbmVkIG1heSBjb250YWluXG4gKiAgICBjaXJjdWxhciByZWZlcmVuY2VzLiAob3B0aW9uYWwgLSB0cnVlIGJ5IGRlZmF1bHQpXG4gKiBAcGFyYW0gYGRlcHRoYCAtIHNldCB0byBhIG51bWJlciBpZiB0aGUgb2JqZWN0IGlzIG9ubHkgdG8gYmUgY2xvbmVkIHRvXG4gKiAgICBhIHBhcnRpY3VsYXIgZGVwdGguIChvcHRpb25hbCAtIGRlZmF1bHRzIHRvIEluZmluaXR5KVxuICogQHBhcmFtIGBwcm90b3R5cGVgIC0gc2V0cyB0aGUgcHJvdG90eXBlIHRvIGJlIHVzZWQgd2hlbiBjbG9uaW5nIGFuIG9iamVjdC5cbiAqICAgIChvcHRpb25hbCAtIGRlZmF1bHRzIHRvIHBhcmVudCBwcm90b3R5cGUpLlxuICogQHBhcmFtIGBpbmNsdWRlTm9uRW51bWVyYWJsZWAgLSBzZXQgdG8gdHJ1ZSBpZiB0aGUgbm9uLWVudW1lcmFibGUgcHJvcGVydGllc1xuICogICAgc2hvdWxkIGJlIGNsb25lZCBhcyB3ZWxsLiBOb24tZW51bWVyYWJsZSBwcm9wZXJ0aWVzIG9uIHRoZSBwcm90b3R5cGVcbiAqICAgIGNoYWluIHdpbGwgYmUgaWdub3JlZC4gKG9wdGlvbmFsIC0gZmFsc2UgYnkgZGVmYXVsdClcbiovXG5mdW5jdGlvbiBjbG9uZShwYXJlbnQsIGNpcmN1bGFyLCBkZXB0aCwgcHJvdG90eXBlLCBpbmNsdWRlTm9uRW51bWVyYWJsZSkge1xuICBpZiAodHlwZW9mIGNpcmN1bGFyID09PSAnb2JqZWN0Jykge1xuICAgIGRlcHRoID0gY2lyY3VsYXIuZGVwdGg7XG4gICAgcHJvdG90eXBlID0gY2lyY3VsYXIucHJvdG90eXBlO1xuICAgIGluY2x1ZGVOb25FbnVtZXJhYmxlID0gY2lyY3VsYXIuaW5jbHVkZU5vbkVudW1lcmFibGU7XG4gICAgY2lyY3VsYXIgPSBjaXJjdWxhci5jaXJjdWxhcjtcbiAgfVxuICAvLyBtYWludGFpbiB0d28gYXJyYXlzIGZvciBjaXJjdWxhciByZWZlcmVuY2VzLCB3aGVyZSBjb3JyZXNwb25kaW5nIHBhcmVudHNcbiAgLy8gYW5kIGNoaWxkcmVuIGhhdmUgdGhlIHNhbWUgaW5kZXhcbiAgdmFyIGFsbFBhcmVudHMgPSBbXTtcbiAgdmFyIGFsbENoaWxkcmVuID0gW107XG5cbiAgdmFyIHVzZUJ1ZmZlciA9IHR5cGVvZiBCdWZmZXIgIT0gJ3VuZGVmaW5lZCc7XG5cbiAgaWYgKHR5cGVvZiBjaXJjdWxhciA9PSAndW5kZWZpbmVkJylcbiAgICBjaXJjdWxhciA9IHRydWU7XG5cbiAgaWYgKHR5cGVvZiBkZXB0aCA9PSAndW5kZWZpbmVkJylcbiAgICBkZXB0aCA9IEluZmluaXR5O1xuXG4gIC8vIHJlY3Vyc2UgdGhpcyBmdW5jdGlvbiBzbyB3ZSBkb24ndCByZXNldCBhbGxQYXJlbnRzIGFuZCBhbGxDaGlsZHJlblxuICBmdW5jdGlvbiBfY2xvbmUocGFyZW50LCBkZXB0aCkge1xuICAgIC8vIGNsb25pbmcgbnVsbCBhbHdheXMgcmV0dXJucyBudWxsXG4gICAgaWYgKHBhcmVudCA9PT0gbnVsbClcbiAgICAgIHJldHVybiBudWxsO1xuXG4gICAgaWYgKGRlcHRoID09PSAwKVxuICAgICAgcmV0dXJuIHBhcmVudDtcblxuICAgIHZhciBjaGlsZDtcbiAgICB2YXIgcHJvdG87XG4gICAgaWYgKHR5cGVvZiBwYXJlbnQgIT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiBwYXJlbnQ7XG4gICAgfVxuXG4gICAgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgbmF0aXZlTWFwKSkge1xuICAgICAgY2hpbGQgPSBuZXcgbmF0aXZlTWFwKCk7XG4gICAgfSBlbHNlIGlmIChfaW5zdGFuY2VvZihwYXJlbnQsIG5hdGl2ZVNldCkpIHtcbiAgICAgIGNoaWxkID0gbmV3IG5hdGl2ZVNldCgpO1xuICAgIH0gZWxzZSBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBuYXRpdmVQcm9taXNlKSkge1xuICAgICAgY2hpbGQgPSBuZXcgbmF0aXZlUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHBhcmVudC50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmVzb2x2ZShfY2xvbmUodmFsdWUsIGRlcHRoIC0gMSkpO1xuICAgICAgICB9LCBmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICByZWplY3QoX2Nsb25lKGVyciwgZGVwdGggLSAxKSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChjbG9uZS5fX2lzQXJyYXkocGFyZW50KSkge1xuICAgICAgY2hpbGQgPSBbXTtcbiAgICB9IGVsc2UgaWYgKGNsb25lLl9faXNSZWdFeHAocGFyZW50KSkge1xuICAgICAgY2hpbGQgPSBuZXcgUmVnRXhwKHBhcmVudC5zb3VyY2UsIF9fZ2V0UmVnRXhwRmxhZ3MocGFyZW50KSk7XG4gICAgICBpZiAocGFyZW50Lmxhc3RJbmRleCkgY2hpbGQubGFzdEluZGV4ID0gcGFyZW50Lmxhc3RJbmRleDtcbiAgICB9IGVsc2UgaWYgKGNsb25lLl9faXNEYXRlKHBhcmVudCkpIHtcbiAgICAgIGNoaWxkID0gbmV3IERhdGUocGFyZW50LmdldFRpbWUoKSk7XG4gICAgfSBlbHNlIGlmICh1c2VCdWZmZXIgJiYgQnVmZmVyLmlzQnVmZmVyKHBhcmVudCkpIHtcbiAgICAgIGlmIChCdWZmZXIuYWxsb2NVbnNhZmUpIHtcbiAgICAgICAgLy8gTm9kZS5qcyA+PSA0LjUuMFxuICAgICAgICBjaGlsZCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShwYXJlbnQubGVuZ3RoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIE9sZGVyIE5vZGUuanMgdmVyc2lvbnNcbiAgICAgICAgY2hpbGQgPSBuZXcgQnVmZmVyKHBhcmVudC5sZW5ndGgpO1xuICAgICAgfVxuICAgICAgcGFyZW50LmNvcHkoY2hpbGQpO1xuICAgICAgcmV0dXJuIGNoaWxkO1xuICAgIH0gZWxzZSBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBFcnJvcikpIHtcbiAgICAgIGNoaWxkID0gT2JqZWN0LmNyZWF0ZShwYXJlbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIHByb3RvdHlwZSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwYXJlbnQpO1xuICAgICAgICBjaGlsZCA9IE9iamVjdC5jcmVhdGUocHJvdG8pO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGNoaWxkID0gT2JqZWN0LmNyZWF0ZShwcm90b3R5cGUpO1xuICAgICAgICBwcm90byA9IHByb3RvdHlwZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2lyY3VsYXIpIHtcbiAgICAgIHZhciBpbmRleCA9IGFsbFBhcmVudHMuaW5kZXhPZihwYXJlbnQpO1xuXG4gICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIGFsbENoaWxkcmVuW2luZGV4XTtcbiAgICAgIH1cbiAgICAgIGFsbFBhcmVudHMucHVzaChwYXJlbnQpO1xuICAgICAgYWxsQ2hpbGRyZW4ucHVzaChjaGlsZCk7XG4gICAgfVxuXG4gICAgaWYgKF9pbnN0YW5jZW9mKHBhcmVudCwgbmF0aXZlTWFwKSkge1xuICAgICAgcGFyZW50LmZvckVhY2goZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAgICB2YXIga2V5Q2hpbGQgPSBfY2xvbmUoa2V5LCBkZXB0aCAtIDEpO1xuICAgICAgICB2YXIgdmFsdWVDaGlsZCA9IF9jbG9uZSh2YWx1ZSwgZGVwdGggLSAxKTtcbiAgICAgICAgY2hpbGQuc2V0KGtleUNoaWxkLCB2YWx1ZUNoaWxkKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAoX2luc3RhbmNlb2YocGFyZW50LCBuYXRpdmVTZXQpKSB7XG4gICAgICBwYXJlbnQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YXIgZW50cnlDaGlsZCA9IF9jbG9uZSh2YWx1ZSwgZGVwdGggLSAxKTtcbiAgICAgICAgY2hpbGQuYWRkKGVudHJ5Q2hpbGQpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSBpbiBwYXJlbnQpIHtcbiAgICAgIHZhciBhdHRycztcbiAgICAgIGlmIChwcm90bykge1xuICAgICAgICBhdHRycyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocHJvdG8sIGkpO1xuICAgICAgfVxuXG4gICAgICBpZiAoYXR0cnMgJiYgYXR0cnMuc2V0ID09IG51bGwpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBjaGlsZFtpXSA9IF9jbG9uZShwYXJlbnRbaV0sIGRlcHRoIC0gMSk7XG4gICAgfVxuXG4gICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhwYXJlbnQpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIERvbid0IG5lZWQgdG8gd29ycnkgYWJvdXQgY2xvbmluZyBhIHN5bWJvbCBiZWNhdXNlIGl0IGlzIGEgcHJpbWl0aXZlLFxuICAgICAgICAvLyBsaWtlIGEgbnVtYmVyIG9yIHN0cmluZy5cbiAgICAgICAgdmFyIHN5bWJvbCA9IHN5bWJvbHNbaV07XG4gICAgICAgIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihwYXJlbnQsIHN5bWJvbCk7XG4gICAgICAgIGlmIChkZXNjcmlwdG9yICYmICFkZXNjcmlwdG9yLmVudW1lcmFibGUgJiYgIWluY2x1ZGVOb25FbnVtZXJhYmxlKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY2hpbGRbc3ltYm9sXSA9IF9jbG9uZShwYXJlbnRbc3ltYm9sXSwgZGVwdGggLSAxKTtcbiAgICAgICAgaWYgKCFkZXNjcmlwdG9yLmVudW1lcmFibGUpIHtcbiAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY2hpbGQsIHN5bWJvbCwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpbmNsdWRlTm9uRW51bWVyYWJsZSkge1xuICAgICAgdmFyIGFsbFByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhwYXJlbnQpO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhbGxQcm9wZXJ0eU5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhciBwcm9wZXJ0eU5hbWUgPSBhbGxQcm9wZXJ0eU5hbWVzW2ldO1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocGFyZW50LCBwcm9wZXJ0eU5hbWUpO1xuICAgICAgICBpZiAoZGVzY3JpcHRvciAmJiBkZXNjcmlwdG9yLmVudW1lcmFibGUpIHtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjaGlsZFtwcm9wZXJ0eU5hbWVdID0gX2Nsb25lKHBhcmVudFtwcm9wZXJ0eU5hbWVdLCBkZXB0aCAtIDEpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoY2hpbGQsIHByb3BlcnR5TmFtZSwge1xuICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBjaGlsZDtcbiAgfVxuXG4gIHJldHVybiBfY2xvbmUocGFyZW50LCBkZXB0aCk7XG59XG5cbi8qKlxuICogU2ltcGxlIGZsYXQgY2xvbmUgdXNpbmcgcHJvdG90eXBlLCBhY2NlcHRzIG9ubHkgb2JqZWN0cywgdXNlZnVsbCBmb3IgcHJvcGVydHlcbiAqIG92ZXJyaWRlIG9uIEZMQVQgY29uZmlndXJhdGlvbiBvYmplY3QgKG5vIG5lc3RlZCBwcm9wcykuXG4gKlxuICogVVNFIFdJVEggQ0FVVElPTiEgVGhpcyBtYXkgbm90IGJlaGF2ZSBhcyB5b3Ugd2lzaCBpZiB5b3UgZG8gbm90IGtub3cgaG93IHRoaXNcbiAqIHdvcmtzLlxuICovXG5jbG9uZS5jbG9uZVByb3RvdHlwZSA9IGZ1bmN0aW9uIGNsb25lUHJvdG90eXBlKHBhcmVudCkge1xuICBpZiAocGFyZW50ID09PSBudWxsKVxuICAgIHJldHVybiBudWxsO1xuXG4gIHZhciBjID0gZnVuY3Rpb24gKCkge307XG4gIGMucHJvdG90eXBlID0gcGFyZW50O1xuICByZXR1cm4gbmV3IGMoKTtcbn07XG5cbi8vIHByaXZhdGUgdXRpbGl0eSBmdW5jdGlvbnNcblxuZnVuY3Rpb24gX19vYmpUb1N0cihvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG5jbG9uZS5fX29ialRvU3RyID0gX19vYmpUb1N0cjtcblxuZnVuY3Rpb24gX19pc0RhdGUobykge1xuICByZXR1cm4gdHlwZW9mIG8gPT09ICdvYmplY3QnICYmIF9fb2JqVG9TdHIobykgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmNsb25lLl9faXNEYXRlID0gX19pc0RhdGU7XG5cbmZ1bmN0aW9uIF9faXNBcnJheShvKSB7XG4gIHJldHVybiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgX19vYmpUb1N0cihvKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cbmNsb25lLl9faXNBcnJheSA9IF9faXNBcnJheTtcblxuZnVuY3Rpb24gX19pc1JlZ0V4cChvKSB7XG4gIHJldHVybiB0eXBlb2YgbyA9PT0gJ29iamVjdCcgJiYgX19vYmpUb1N0cihvKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5jbG9uZS5fX2lzUmVnRXhwID0gX19pc1JlZ0V4cDtcblxuZnVuY3Rpb24gX19nZXRSZWdFeHBGbGFncyhyZSkge1xuICB2YXIgZmxhZ3MgPSAnJztcbiAgaWYgKHJlLmdsb2JhbCkgZmxhZ3MgKz0gJ2cnO1xuICBpZiAocmUuaWdub3JlQ2FzZSkgZmxhZ3MgKz0gJ2knO1xuICBpZiAocmUubXVsdGlsaW5lKSBmbGFncyArPSAnbSc7XG4gIHJldHVybiBmbGFncztcbn1cbmNsb25lLl9fZ2V0UmVnRXhwRmxhZ3MgPSBfX2dldFJlZ0V4cEZsYWdzO1xuXG5yZXR1cm4gY2xvbmU7XG59KSgpO1xuXG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBjbG9uZTtcbn1cblxuXG4vKioqLyB9KSxcbi8qIDIyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfZW1pdHRlciA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5cbnZhciBfZW1pdHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9lbWl0dGVyKTtcblxudmFyIF9ibG9jayA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cbnZhciBfYmxvY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmxvY2spO1xuXG52YXIgX2JyZWFrID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG5cbnZhciBfYnJlYWsyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnJlYWspO1xuXG52YXIgX2NvZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxudmFyIF9jb2RlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZGUpO1xuXG52YXIgX2NvbnRhaW5lciA9IF9fd2VicGFja19yZXF1aXJlX18oMjUpO1xuXG52YXIgX2NvbnRhaW5lcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jb250YWluZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbmZ1bmN0aW9uIGlzTGluZShibG90KSB7XG4gIHJldHVybiBibG90IGluc3RhbmNlb2YgX2Jsb2NrMi5kZWZhdWx0IHx8IGJsb3QgaW5zdGFuY2VvZiBfYmxvY2suQmxvY2tFbWJlZDtcbn1cblxudmFyIFNjcm9sbCA9IGZ1bmN0aW9uIChfUGFyY2htZW50JFNjcm9sbCkge1xuICBfaW5oZXJpdHMoU2Nyb2xsLCBfUGFyY2htZW50JFNjcm9sbCk7XG5cbiAgZnVuY3Rpb24gU2Nyb2xsKGRvbU5vZGUsIGNvbmZpZykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTY3JvbGwpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFNjcm9sbC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNjcm9sbCkpLmNhbGwodGhpcywgZG9tTm9kZSkpO1xuXG4gICAgX3RoaXMuZW1pdHRlciA9IGNvbmZpZy5lbWl0dGVyO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNvbmZpZy53aGl0ZWxpc3QpKSB7XG4gICAgICBfdGhpcy53aGl0ZWxpc3QgPSBjb25maWcud2hpdGVsaXN0LnJlZHVjZShmdW5jdGlvbiAod2hpdGVsaXN0LCBmb3JtYXQpIHtcbiAgICAgICAgd2hpdGVsaXN0W2Zvcm1hdF0gPSB0cnVlO1xuICAgICAgICByZXR1cm4gd2hpdGVsaXN0O1xuICAgICAgfSwge30pO1xuICAgIH1cbiAgICAvLyBTb21lIHJlYXNvbiBmaXhlcyBjb21wb3NpdGlvbiBpc3N1ZXMgd2l0aCBjaGFyYWN0ZXIgbGFuZ3VhZ2VzIGluIFdpbmRvd3MvQ2hyb21lLCBTYWZhcmlcbiAgICBfdGhpcy5kb21Ob2RlLmFkZEV2ZW50TGlzdGVuZXIoJ0RPTU5vZGVJbnNlcnRlZCcsIGZ1bmN0aW9uICgpIHt9KTtcbiAgICBfdGhpcy5vcHRpbWl6ZSgpO1xuICAgIF90aGlzLmVuYWJsZSgpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTY3JvbGwsIFt7XG4gICAga2V5OiAnYmF0Y2hTdGFydCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJhdGNoU3RhcnQoKSB7XG4gICAgICB0aGlzLmJhdGNoID0gdHJ1ZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdiYXRjaEVuZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJhdGNoRW5kKCkge1xuICAgICAgdGhpcy5iYXRjaCA9IGZhbHNlO1xuICAgICAgdGhpcy5vcHRpbWl6ZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2RlbGV0ZUF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZGVsZXRlQXQoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgdmFyIF9saW5lID0gdGhpcy5saW5lKGluZGV4KSxcbiAgICAgICAgICBfbGluZTIgPSBfc2xpY2VkVG9BcnJheShfbGluZSwgMiksXG4gICAgICAgICAgZmlyc3QgPSBfbGluZTJbMF0sXG4gICAgICAgICAgb2Zmc2V0ID0gX2xpbmUyWzFdO1xuXG4gICAgICB2YXIgX2xpbmUzID0gdGhpcy5saW5lKGluZGV4ICsgbGVuZ3RoKSxcbiAgICAgICAgICBfbGluZTQgPSBfc2xpY2VkVG9BcnJheShfbGluZTMsIDEpLFxuICAgICAgICAgIGxhc3QgPSBfbGluZTRbMF07XG5cbiAgICAgIF9nZXQoU2Nyb2xsLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNjcm9sbC5wcm90b3R5cGUpLCAnZGVsZXRlQXQnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgpO1xuICAgICAgaWYgKGxhc3QgIT0gbnVsbCAmJiBmaXJzdCAhPT0gbGFzdCAmJiBvZmZzZXQgPiAwKSB7XG4gICAgICAgIGlmIChmaXJzdCBpbnN0YW5jZW9mIF9ibG9jay5CbG9ja0VtYmVkIHx8IGxhc3QgaW5zdGFuY2VvZiBfYmxvY2suQmxvY2tFbWJlZCkge1xuICAgICAgICAgIHRoaXMub3B0aW1pemUoKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpcnN0IGluc3RhbmNlb2YgX2NvZGUyLmRlZmF1bHQpIHtcbiAgICAgICAgICB2YXIgbmV3bGluZUluZGV4ID0gZmlyc3QubmV3bGluZUluZGV4KGZpcnN0Lmxlbmd0aCgpLCB0cnVlKTtcbiAgICAgICAgICBpZiAobmV3bGluZUluZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIGZpcnN0ID0gZmlyc3Quc3BsaXQobmV3bGluZUluZGV4ICsgMSk7XG4gICAgICAgICAgICBpZiAoZmlyc3QgPT09IGxhc3QpIHtcbiAgICAgICAgICAgICAgdGhpcy5vcHRpbWl6ZSgpO1xuICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGxhc3QgaW5zdGFuY2VvZiBfY29kZTIuZGVmYXVsdCkge1xuICAgICAgICAgIHZhciBfbmV3bGluZUluZGV4ID0gbGFzdC5uZXdsaW5lSW5kZXgoMCk7XG4gICAgICAgICAgaWYgKF9uZXdsaW5lSW5kZXggPiAtMSkge1xuICAgICAgICAgICAgbGFzdC5zcGxpdChfbmV3bGluZUluZGV4ICsgMSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciByZWYgPSBsYXN0LmNoaWxkcmVuLmhlYWQgaW5zdGFuY2VvZiBfYnJlYWsyLmRlZmF1bHQgPyBudWxsIDogbGFzdC5jaGlsZHJlbi5oZWFkO1xuICAgICAgICBmaXJzdC5tb3ZlQ2hpbGRyZW4obGFzdCwgcmVmKTtcbiAgICAgICAgZmlyc3QucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGltaXplKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZW5hYmxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZW5hYmxlKCkge1xuICAgICAgdmFyIGVuYWJsZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHRydWU7XG5cbiAgICAgIHRoaXMuZG9tTm9kZS5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsIGVuYWJsZWQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdEF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0QXQoaW5kZXgsIGxlbmd0aCwgZm9ybWF0LCB2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMud2hpdGVsaXN0ICE9IG51bGwgJiYgIXRoaXMud2hpdGVsaXN0W2Zvcm1hdF0pIHJldHVybjtcbiAgICAgIF9nZXQoU2Nyb2xsLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNjcm9sbC5wcm90b3R5cGUpLCAnZm9ybWF0QXQnLCB0aGlzKS5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgsIGZvcm1hdCwgdmFsdWUpO1xuICAgICAgdGhpcy5vcHRpbWl6ZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2luc2VydEF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0QXQoaW5kZXgsIHZhbHVlLCBkZWYpIHtcbiAgICAgIGlmIChkZWYgIT0gbnVsbCAmJiB0aGlzLndoaXRlbGlzdCAhPSBudWxsICYmICF0aGlzLndoaXRlbGlzdFt2YWx1ZV0pIHJldHVybjtcbiAgICAgIGlmIChpbmRleCA+PSB0aGlzLmxlbmd0aCgpKSB7XG4gICAgICAgIGlmIChkZWYgPT0gbnVsbCB8fCBfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KHZhbHVlLCBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLKSA9PSBudWxsKSB7XG4gICAgICAgICAgdmFyIGJsb3QgPSBfcGFyY2htZW50Mi5kZWZhdWx0LmNyZWF0ZSh0aGlzLnN0YXRpY3MuZGVmYXVsdENoaWxkKTtcbiAgICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGJsb3QpO1xuICAgICAgICAgIGlmIChkZWYgPT0gbnVsbCAmJiB2YWx1ZS5lbmRzV2l0aCgnXFxuJykpIHtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUuc2xpY2UoMCwgLTEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBibG90Lmluc2VydEF0KDAsIHZhbHVlLCBkZWYpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBlbWJlZCA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKHZhbHVlLCBkZWYpO1xuICAgICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoZW1iZWQpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0KFNjcm9sbC5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTY3JvbGwucHJvdG90eXBlKSwgJ2luc2VydEF0JywgdGhpcykuY2FsbCh0aGlzLCBpbmRleCwgdmFsdWUsIGRlZik7XG4gICAgICB9XG4gICAgICB0aGlzLm9wdGltaXplKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnaW5zZXJ0QmVmb3JlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0QmVmb3JlKGJsb3QsIHJlZikge1xuICAgICAgaWYgKGJsb3Quc3RhdGljcy5zY29wZSA9PT0gX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5JTkxJTkVfQkxPVCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKHRoaXMuc3RhdGljcy5kZWZhdWx0Q2hpbGQpO1xuICAgICAgICB3cmFwcGVyLmFwcGVuZENoaWxkKGJsb3QpO1xuICAgICAgICBibG90ID0gd3JhcHBlcjtcbiAgICAgIH1cbiAgICAgIF9nZXQoU2Nyb2xsLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNjcm9sbC5wcm90b3R5cGUpLCAnaW5zZXJ0QmVmb3JlJywgdGhpcykuY2FsbCh0aGlzLCBibG90LCByZWYpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2xlYWYnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsZWFmKGluZGV4KSB7XG4gICAgICByZXR1cm4gdGhpcy5wYXRoKGluZGV4KS5wb3AoKSB8fCBbbnVsbCwgLTFdO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2xpbmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBsaW5lKGluZGV4KSB7XG4gICAgICBpZiAoaW5kZXggPT09IHRoaXMubGVuZ3RoKCkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGluZShpbmRleCAtIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXMuZGVzY2VuZGFudChpc0xpbmUsIGluZGV4KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdsaW5lcycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpbmVzKCkge1xuICAgICAgdmFyIGluZGV4ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAwO1xuICAgICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogTnVtYmVyLk1BWF9WQUxVRTtcblxuICAgICAgdmFyIGdldExpbmVzID0gZnVuY3Rpb24gZ2V0TGluZXMoYmxvdCwgaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICB2YXIgbGluZXMgPSBbXSxcbiAgICAgICAgICAgIGxlbmd0aExlZnQgPSBsZW5ndGg7XG4gICAgICAgIGJsb3QuY2hpbGRyZW4uZm9yRWFjaEF0KGluZGV4LCBsZW5ndGgsIGZ1bmN0aW9uIChjaGlsZCwgaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICAgIGlmIChpc0xpbmUoY2hpbGQpKSB7XG4gICAgICAgICAgICBsaW5lcy5wdXNoKGNoaWxkKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNoaWxkIGluc3RhbmNlb2YgX3BhcmNobWVudDIuZGVmYXVsdC5Db250YWluZXIpIHtcbiAgICAgICAgICAgIGxpbmVzID0gbGluZXMuY29uY2F0KGdldExpbmVzKGNoaWxkLCBpbmRleCwgbGVuZ3RoTGVmdCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZW5ndGhMZWZ0IC09IGxlbmd0aDtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBsaW5lcztcbiAgICAgIH07XG4gICAgICByZXR1cm4gZ2V0TGluZXModGhpcywgaW5kZXgsIGxlbmd0aCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnb3B0aW1pemUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvcHRpbWl6ZSgpIHtcbiAgICAgIHZhciBtdXRhdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgICAgdmFyIGNvbnRleHQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gICAgICBpZiAodGhpcy5iYXRjaCA9PT0gdHJ1ZSkgcmV0dXJuO1xuICAgICAgX2dldChTY3JvbGwucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU2Nyb2xsLnByb3RvdHlwZSksICdvcHRpbWl6ZScsIHRoaXMpLmNhbGwodGhpcywgbXV0YXRpb25zLCBjb250ZXh0KTtcbiAgICAgIGlmIChtdXRhdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChfZW1pdHRlcjIuZGVmYXVsdC5ldmVudHMuU0NST0xMX09QVElNSVpFLCBtdXRhdGlvbnMsIGNvbnRleHQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3BhdGgnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwYXRoKGluZGV4KSB7XG4gICAgICByZXR1cm4gX2dldChTY3JvbGwucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU2Nyb2xsLnByb3RvdHlwZSksICdwYXRoJywgdGhpcykuY2FsbCh0aGlzLCBpbmRleCkuc2xpY2UoMSk7IC8vIEV4Y2x1ZGUgc2VsZlxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShtdXRhdGlvbnMpIHtcbiAgICAgIGlmICh0aGlzLmJhdGNoID09PSB0cnVlKSByZXR1cm47XG4gICAgICB2YXIgc291cmNlID0gX2VtaXR0ZXIyLmRlZmF1bHQuc291cmNlcy5VU0VSO1xuICAgICAgaWYgKHR5cGVvZiBtdXRhdGlvbnMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHNvdXJjZSA9IG11dGF0aW9ucztcbiAgICAgIH1cbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShtdXRhdGlvbnMpKSB7XG4gICAgICAgIG11dGF0aW9ucyA9IHRoaXMub2JzZXJ2ZXIudGFrZVJlY29yZHMoKTtcbiAgICAgIH1cbiAgICAgIGlmIChtdXRhdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmVtaXR0ZXIuZW1pdChfZW1pdHRlcjIuZGVmYXVsdC5ldmVudHMuU0NST0xMX0JFRk9SRV9VUERBVEUsIHNvdXJjZSwgbXV0YXRpb25zKTtcbiAgICAgIH1cbiAgICAgIF9nZXQoU2Nyb2xsLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNjcm9sbC5wcm90b3R5cGUpLCAndXBkYXRlJywgdGhpcykuY2FsbCh0aGlzLCBtdXRhdGlvbnMuY29uY2F0KFtdKSk7IC8vIHBhc3MgY29weVxuICAgICAgaWYgKG11dGF0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRoaXMuZW1pdHRlci5lbWl0KF9lbWl0dGVyMi5kZWZhdWx0LmV2ZW50cy5TQ1JPTExfVVBEQVRFLCBzb3VyY2UsIG11dGF0aW9ucyk7XG4gICAgICB9XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFNjcm9sbDtcbn0oX3BhcmNobWVudDIuZGVmYXVsdC5TY3JvbGwpO1xuXG5TY3JvbGwuYmxvdE5hbWUgPSAnc2Nyb2xsJztcblNjcm9sbC5jbGFzc05hbWUgPSAncWwtZWRpdG9yJztcblNjcm9sbC50YWdOYW1lID0gJ0RJVic7XG5TY3JvbGwuZGVmYXVsdENoaWxkID0gJ2Jsb2NrJztcblNjcm9sbC5hbGxvd2VkQ2hpbGRyZW4gPSBbX2Jsb2NrMi5kZWZhdWx0LCBfYmxvY2suQmxvY2tFbWJlZCwgX2NvbnRhaW5lcjIuZGVmYXVsdF07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFNjcm9sbDtcblxuLyoqKi8gfSksXG4vKiAyMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5TSE9SVEtFWSA9IGV4cG9ydHMuZGVmYXVsdCA9IHVuZGVmaW5lZDtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIHR5cGVvZiBvYmo7IH0gOiBmdW5jdGlvbiAob2JqKSB7IHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqOyB9O1xuXG52YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfY2xvbmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIxKTtcblxudmFyIF9jbG9uZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jbG9uZSk7XG5cbnZhciBfZGVlcEVxdWFsID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMSk7XG5cbnZhciBfZGVlcEVxdWFsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZXBFcXVhbCk7XG5cbnZhciBfZXh0ZW5kID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcblxudmFyIF9leHRlbmQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXh0ZW5kKTtcblxudmFyIF9xdWlsbERlbHRhID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcblxudmFyIF9xdWlsbERlbHRhMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsRGVsdGEpO1xuXG52YXIgX29wID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMCk7XG5cbnZhciBfb3AyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb3ApO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfcXVpbGwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXG52YXIgX3F1aWxsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsKTtcblxudmFyIF9sb2dnZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcblxudmFyIF9sb2dnZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9nZ2VyKTtcblxudmFyIF9tb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuXG52YXIgX21vZHVsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tb2R1bGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBkZWJ1ZyA9ICgwLCBfbG9nZ2VyMi5kZWZhdWx0KSgncXVpbGw6a2V5Ym9hcmQnKTtcblxudmFyIFNIT1JUS0VZID0gL01hYy9pLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSA/ICdtZXRhS2V5JyA6ICdjdHJsS2V5JztcblxudmFyIEtleWJvYXJkID0gZnVuY3Rpb24gKF9Nb2R1bGUpIHtcbiAgX2luaGVyaXRzKEtleWJvYXJkLCBfTW9kdWxlKTtcblxuICBfY3JlYXRlQ2xhc3MoS2V5Ym9hcmQsIG51bGwsIFt7XG4gICAga2V5OiAnbWF0Y2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBtYXRjaChldnQsIGJpbmRpbmcpIHtcbiAgICAgIGJpbmRpbmcgPSBub3JtYWxpemUoYmluZGluZyk7XG4gICAgICBpZiAoWydhbHRLZXknLCAnY3RybEtleScsICdtZXRhS2V5JywgJ3NoaWZ0S2V5J10uc29tZShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiAhIWJpbmRpbmdba2V5XSAhPT0gZXZ0W2tleV0gJiYgYmluZGluZ1trZXldICE9PSBudWxsO1xuICAgICAgfSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJpbmRpbmcua2V5ID09PSAoZXZ0LndoaWNoIHx8IGV2dC5rZXlDb2RlKTtcbiAgICB9XG4gIH1dKTtcblxuICBmdW5jdGlvbiBLZXlib2FyZChxdWlsbCwgb3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBLZXlib2FyZCk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoS2V5Ym9hcmQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihLZXlib2FyZCkpLmNhbGwodGhpcywgcXVpbGwsIG9wdGlvbnMpKTtcblxuICAgIF90aGlzLmJpbmRpbmdzID0ge307XG4gICAgT2JqZWN0LmtleXMoX3RoaXMub3B0aW9ucy5iaW5kaW5ncykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgaWYgKG5hbWUgPT09ICdsaXN0IGF1dG9maWxsJyAmJiBxdWlsbC5zY3JvbGwud2hpdGVsaXN0ICE9IG51bGwgJiYgIXF1aWxsLnNjcm9sbC53aGl0ZWxpc3RbJ2xpc3QnXSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoX3RoaXMub3B0aW9ucy5iaW5kaW5nc1tuYW1lXSkge1xuICAgICAgICBfdGhpcy5hZGRCaW5kaW5nKF90aGlzLm9wdGlvbnMuYmluZGluZ3NbbmFtZV0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF90aGlzLmFkZEJpbmRpbmcoeyBrZXk6IEtleWJvYXJkLmtleXMuRU5URVIsIHNoaWZ0S2V5OiBudWxsIH0sIGhhbmRsZUVudGVyKTtcbiAgICBfdGhpcy5hZGRCaW5kaW5nKHsga2V5OiBLZXlib2FyZC5rZXlzLkVOVEVSLCBtZXRhS2V5OiBudWxsLCBjdHJsS2V5OiBudWxsLCBhbHRLZXk6IG51bGwgfSwgZnVuY3Rpb24gKCkge30pO1xuICAgIGlmICgvRmlyZWZveC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHtcbiAgICAgIC8vIE5lZWQgdG8gaGFuZGxlIGRlbGV0ZSBhbmQgYmFja3NwYWNlIGZvciBGaXJlZm94IGluIHRoZSBnZW5lcmFsIGNhc2UgIzExNzFcbiAgICAgIF90aGlzLmFkZEJpbmRpbmcoeyBrZXk6IEtleWJvYXJkLmtleXMuQkFDS1NQQUNFIH0sIHsgY29sbGFwc2VkOiB0cnVlIH0sIGhhbmRsZUJhY2tzcGFjZSk7XG4gICAgICBfdGhpcy5hZGRCaW5kaW5nKHsga2V5OiBLZXlib2FyZC5rZXlzLkRFTEVURSB9LCB7IGNvbGxhcHNlZDogdHJ1ZSB9LCBoYW5kbGVEZWxldGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy5hZGRCaW5kaW5nKHsga2V5OiBLZXlib2FyZC5rZXlzLkJBQ0tTUEFDRSB9LCB7IGNvbGxhcHNlZDogdHJ1ZSwgcHJlZml4OiAvXi4/JC8gfSwgaGFuZGxlQmFja3NwYWNlKTtcbiAgICAgIF90aGlzLmFkZEJpbmRpbmcoeyBrZXk6IEtleWJvYXJkLmtleXMuREVMRVRFIH0sIHsgY29sbGFwc2VkOiB0cnVlLCBzdWZmaXg6IC9eLj8kLyB9LCBoYW5kbGVEZWxldGUpO1xuICAgIH1cbiAgICBfdGhpcy5hZGRCaW5kaW5nKHsga2V5OiBLZXlib2FyZC5rZXlzLkJBQ0tTUEFDRSB9LCB7IGNvbGxhcHNlZDogZmFsc2UgfSwgaGFuZGxlRGVsZXRlUmFuZ2UpO1xuICAgIF90aGlzLmFkZEJpbmRpbmcoeyBrZXk6IEtleWJvYXJkLmtleXMuREVMRVRFIH0sIHsgY29sbGFwc2VkOiBmYWxzZSB9LCBoYW5kbGVEZWxldGVSYW5nZSk7XG4gICAgX3RoaXMuYWRkQmluZGluZyh7IGtleTogS2V5Ym9hcmQua2V5cy5CQUNLU1BBQ0UsIGFsdEtleTogbnVsbCwgY3RybEtleTogbnVsbCwgbWV0YUtleTogbnVsbCwgc2hpZnRLZXk6IG51bGwgfSwgeyBjb2xsYXBzZWQ6IHRydWUsIG9mZnNldDogMCB9LCBoYW5kbGVCYWNrc3BhY2UpO1xuICAgIF90aGlzLmxpc3RlbigpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhLZXlib2FyZCwgW3tcbiAgICBrZXk6ICdhZGRCaW5kaW5nJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkQmluZGluZyhrZXkpIHtcbiAgICAgIHZhciBjb250ZXh0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB7fTtcbiAgICAgIHZhciBoYW5kbGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTtcblxuICAgICAgdmFyIGJpbmRpbmcgPSBub3JtYWxpemUoa2V5KTtcbiAgICAgIGlmIChiaW5kaW5nID09IG51bGwgfHwgYmluZGluZy5rZXkgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZGVidWcud2FybignQXR0ZW1wdGVkIHRvIGFkZCBpbnZhbGlkIGtleWJvYXJkIGJpbmRpbmcnLCBiaW5kaW5nKTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgY29udGV4dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBjb250ZXh0ID0geyBoYW5kbGVyOiBjb250ZXh0IH07XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGhhbmRsZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgaGFuZGxlciA9IHsgaGFuZGxlcjogaGFuZGxlciB9O1xuICAgICAgfVxuICAgICAgYmluZGluZyA9ICgwLCBfZXh0ZW5kMi5kZWZhdWx0KShiaW5kaW5nLCBjb250ZXh0LCBoYW5kbGVyKTtcbiAgICAgIHRoaXMuYmluZGluZ3NbYmluZGluZy5rZXldID0gdGhpcy5iaW5kaW5nc1tiaW5kaW5nLmtleV0gfHwgW107XG4gICAgICB0aGlzLmJpbmRpbmdzW2JpbmRpbmcua2V5XS5wdXNoKGJpbmRpbmcpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2xpc3RlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpc3RlbigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLnF1aWxsLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChldnQpIHtcbiAgICAgICAgaWYgKGV2dC5kZWZhdWx0UHJldmVudGVkKSByZXR1cm47XG4gICAgICAgIHZhciB3aGljaCA9IGV2dC53aGljaCB8fCBldnQua2V5Q29kZTtcbiAgICAgICAgdmFyIGJpbmRpbmdzID0gKF90aGlzMi5iaW5kaW5nc1t3aGljaF0gfHwgW10pLmZpbHRlcihmdW5jdGlvbiAoYmluZGluZykge1xuICAgICAgICAgIHJldHVybiBLZXlib2FyZC5tYXRjaChldnQsIGJpbmRpbmcpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGJpbmRpbmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuO1xuICAgICAgICB2YXIgcmFuZ2UgPSBfdGhpczIucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIGlmIChyYW5nZSA9PSBudWxsIHx8ICFfdGhpczIucXVpbGwuaGFzRm9jdXMoKSkgcmV0dXJuO1xuXG4gICAgICAgIHZhciBfcXVpbGwkZ2V0TGluZSA9IF90aGlzMi5xdWlsbC5nZXRMaW5lKHJhbmdlLmluZGV4KSxcbiAgICAgICAgICAgIF9xdWlsbCRnZXRMaW5lMiA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMaW5lLCAyKSxcbiAgICAgICAgICAgIGxpbmUgPSBfcXVpbGwkZ2V0TGluZTJbMF0sXG4gICAgICAgICAgICBvZmZzZXQgPSBfcXVpbGwkZ2V0TGluZTJbMV07XG5cbiAgICAgICAgdmFyIF9xdWlsbCRnZXRMZWFmID0gX3RoaXMyLnF1aWxsLmdldExlYWYocmFuZ2UuaW5kZXgpLFxuICAgICAgICAgICAgX3F1aWxsJGdldExlYWYyID0gX3NsaWNlZFRvQXJyYXkoX3F1aWxsJGdldExlYWYsIDIpLFxuICAgICAgICAgICAgbGVhZlN0YXJ0ID0gX3F1aWxsJGdldExlYWYyWzBdLFxuICAgICAgICAgICAgb2Zmc2V0U3RhcnQgPSBfcXVpbGwkZ2V0TGVhZjJbMV07XG5cbiAgICAgICAgdmFyIF9yZWYgPSByYW5nZS5sZW5ndGggPT09IDAgPyBbbGVhZlN0YXJ0LCBvZmZzZXRTdGFydF0gOiBfdGhpczIucXVpbGwuZ2V0TGVhZihyYW5nZS5pbmRleCArIHJhbmdlLmxlbmd0aCksXG4gICAgICAgICAgICBfcmVmMiA9IF9zbGljZWRUb0FycmF5KF9yZWYsIDIpLFxuICAgICAgICAgICAgbGVhZkVuZCA9IF9yZWYyWzBdLFxuICAgICAgICAgICAgb2Zmc2V0RW5kID0gX3JlZjJbMV07XG5cbiAgICAgICAgdmFyIHByZWZpeFRleHQgPSBsZWFmU3RhcnQgaW5zdGFuY2VvZiBfcGFyY2htZW50Mi5kZWZhdWx0LlRleHQgPyBsZWFmU3RhcnQudmFsdWUoKS5zbGljZSgwLCBvZmZzZXRTdGFydCkgOiAnJztcbiAgICAgICAgdmFyIHN1ZmZpeFRleHQgPSBsZWFmRW5kIGluc3RhbmNlb2YgX3BhcmNobWVudDIuZGVmYXVsdC5UZXh0ID8gbGVhZkVuZC52YWx1ZSgpLnNsaWNlKG9mZnNldEVuZCkgOiAnJztcbiAgICAgICAgdmFyIGN1ckNvbnRleHQgPSB7XG4gICAgICAgICAgY29sbGFwc2VkOiByYW5nZS5sZW5ndGggPT09IDAsXG4gICAgICAgICAgZW1wdHk6IHJhbmdlLmxlbmd0aCA9PT0gMCAmJiBsaW5lLmxlbmd0aCgpIDw9IDEsXG4gICAgICAgICAgZm9ybWF0OiBfdGhpczIucXVpbGwuZ2V0Rm9ybWF0KHJhbmdlKSxcbiAgICAgICAgICBvZmZzZXQ6IG9mZnNldCxcbiAgICAgICAgICBwcmVmaXg6IHByZWZpeFRleHQsXG4gICAgICAgICAgc3VmZml4OiBzdWZmaXhUZXh0XG4gICAgICAgIH07XG4gICAgICAgIHZhciBwcmV2ZW50ZWQgPSBiaW5kaW5ncy5zb21lKGZ1bmN0aW9uIChiaW5kaW5nKSB7XG4gICAgICAgICAgaWYgKGJpbmRpbmcuY29sbGFwc2VkICE9IG51bGwgJiYgYmluZGluZy5jb2xsYXBzZWQgIT09IGN1ckNvbnRleHQuY29sbGFwc2VkKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgaWYgKGJpbmRpbmcuZW1wdHkgIT0gbnVsbCAmJiBiaW5kaW5nLmVtcHR5ICE9PSBjdXJDb250ZXh0LmVtcHR5KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgaWYgKGJpbmRpbmcub2Zmc2V0ICE9IG51bGwgJiYgYmluZGluZy5vZmZzZXQgIT09IGN1ckNvbnRleHQub2Zmc2V0KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYmluZGluZy5mb3JtYXQpKSB7XG4gICAgICAgICAgICAvLyBhbnkgZm9ybWF0IGlzIHByZXNlbnRcbiAgICAgICAgICAgIGlmIChiaW5kaW5nLmZvcm1hdC5ldmVyeShmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgICByZXR1cm4gY3VyQ29udGV4dC5mb3JtYXRbbmFtZV0gPT0gbnVsbDtcbiAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2UgaWYgKF90eXBlb2YoYmluZGluZy5mb3JtYXQpID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgLy8gYWxsIGZvcm1hdHMgbXVzdCBtYXRjaFxuICAgICAgICAgICAgaWYgKCFPYmplY3Qua2V5cyhiaW5kaW5nLmZvcm1hdCkuZXZlcnkoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgICAgaWYgKGJpbmRpbmcuZm9ybWF0W25hbWVdID09PSB0cnVlKSByZXR1cm4gY3VyQ29udGV4dC5mb3JtYXRbbmFtZV0gIT0gbnVsbDtcbiAgICAgICAgICAgICAgaWYgKGJpbmRpbmcuZm9ybWF0W25hbWVdID09PSBmYWxzZSkgcmV0dXJuIGN1ckNvbnRleHQuZm9ybWF0W25hbWVdID09IG51bGw7XG4gICAgICAgICAgICAgIHJldHVybiAoMCwgX2RlZXBFcXVhbDIuZGVmYXVsdCkoYmluZGluZy5mb3JtYXRbbmFtZV0sIGN1ckNvbnRleHQuZm9ybWF0W25hbWVdKTtcbiAgICAgICAgICAgIH0pKSB7XG4gICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGJpbmRpbmcucHJlZml4ICE9IG51bGwgJiYgIWJpbmRpbmcucHJlZml4LnRlc3QoY3VyQ29udGV4dC5wcmVmaXgpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgaWYgKGJpbmRpbmcuc3VmZml4ICE9IG51bGwgJiYgIWJpbmRpbmcuc3VmZml4LnRlc3QoY3VyQ29udGV4dC5zdWZmaXgpKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIGJpbmRpbmcuaGFuZGxlci5jYWxsKF90aGlzMiwgcmFuZ2UsIGN1ckNvbnRleHQpICE9PSB0cnVlO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByZXZlbnRlZCkge1xuICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gS2V5Ym9hcmQ7XG59KF9tb2R1bGUyLmRlZmF1bHQpO1xuXG5LZXlib2FyZC5rZXlzID0ge1xuICBCQUNLU1BBQ0U6IDgsXG4gIFRBQjogOSxcbiAgRU5URVI6IDEzLFxuICBFU0NBUEU6IDI3LFxuICBMRUZUOiAzNyxcbiAgVVA6IDM4LFxuICBSSUdIVDogMzksXG4gIERPV046IDQwLFxuICBERUxFVEU6IDQ2XG59O1xuXG5LZXlib2FyZC5ERUZBVUxUUyA9IHtcbiAgYmluZGluZ3M6IHtcbiAgICAnYm9sZCc6IG1ha2VGb3JtYXRIYW5kbGVyKCdib2xkJyksXG4gICAgJ2l0YWxpYyc6IG1ha2VGb3JtYXRIYW5kbGVyKCdpdGFsaWMnKSxcbiAgICAndW5kZXJsaW5lJzogbWFrZUZvcm1hdEhhbmRsZXIoJ3VuZGVybGluZScpLFxuICAgICdpbmRlbnQnOiB7XG4gICAgICAvLyBoaWdobGlnaHQgdGFiIG9yIHRhYiBhdCBiZWdpbm5pbmcgb2YgbGlzdCwgaW5kZW50IG9yIGJsb2NrcXVvdGVcbiAgICAgIGtleTogS2V5Ym9hcmQua2V5cy5UQUIsXG4gICAgICBmb3JtYXQ6IFsnYmxvY2txdW90ZScsICdpbmRlbnQnLCAnbGlzdCddLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihyYW5nZSwgY29udGV4dCkge1xuICAgICAgICBpZiAoY29udGV4dC5jb2xsYXBzZWQgJiYgY29udGV4dC5vZmZzZXQgIT09IDApIHJldHVybiB0cnVlO1xuICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnaW5kZW50JywgJysxJywgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICB9XG4gICAgfSxcbiAgICAnb3V0ZGVudCc6IHtcbiAgICAgIGtleTogS2V5Ym9hcmQua2V5cy5UQUIsXG4gICAgICBzaGlmdEtleTogdHJ1ZSxcbiAgICAgIGZvcm1hdDogWydibG9ja3F1b3RlJywgJ2luZGVudCcsICdsaXN0J10sXG4gICAgICAvLyBoaWdobGlnaHQgdGFiIG9yIHRhYiBhdCBiZWdpbm5pbmcgb2YgbGlzdCwgaW5kZW50IG9yIGJsb2NrcXVvdGVcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocmFuZ2UsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKGNvbnRleHQuY29sbGFwc2VkICYmIGNvbnRleHQub2Zmc2V0ICE9PSAwKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoJ2luZGVudCcsICctMScsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgJ291dGRlbnQgYmFja3NwYWNlJzoge1xuICAgICAga2V5OiBLZXlib2FyZC5rZXlzLkJBQ0tTUEFDRSxcbiAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgIHNoaWZ0S2V5OiBudWxsLFxuICAgICAgbWV0YUtleTogbnVsbCxcbiAgICAgIGN0cmxLZXk6IG51bGwsXG4gICAgICBhbHRLZXk6IG51bGwsXG4gICAgICBmb3JtYXQ6IFsnaW5kZW50JywgJ2xpc3QnXSxcbiAgICAgIG9mZnNldDogMCxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocmFuZ2UsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKGNvbnRleHQuZm9ybWF0LmluZGVudCAhPSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoJ2luZGVudCcsICctMScsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQuZm9ybWF0Lmxpc3QgIT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdsaXN0JywgZmFsc2UsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICAnaW5kZW50IGNvZGUtYmxvY2snOiBtYWtlQ29kZUJsb2NrSGFuZGxlcih0cnVlKSxcbiAgICAnb3V0ZGVudCBjb2RlLWJsb2NrJzogbWFrZUNvZGVCbG9ja0hhbmRsZXIoZmFsc2UpLFxuICAgICdyZW1vdmUgdGFiJzoge1xuICAgICAga2V5OiBLZXlib2FyZC5rZXlzLlRBQixcbiAgICAgIHNoaWZ0S2V5OiB0cnVlLFxuICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgcHJlZml4OiAvXFx0JC8sXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJhbmdlKSB7XG4gICAgICAgIHRoaXMucXVpbGwuZGVsZXRlVGV4dChyYW5nZS5pbmRleCAtIDEsIDEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3RhYic6IHtcbiAgICAgIGtleTogS2V5Ym9hcmQua2V5cy5UQUIsXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJhbmdlKSB7XG4gICAgICAgIHRoaXMucXVpbGwuaGlzdG9yeS5jdXRvZmYoKTtcbiAgICAgICAgdmFyIGRlbHRhID0gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKHJhbmdlLmluZGV4KS5kZWxldGUocmFuZ2UubGVuZ3RoKS5pbnNlcnQoJ1xcdCcpO1xuICAgICAgICB0aGlzLnF1aWxsLnVwZGF0ZUNvbnRlbnRzKGRlbHRhLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgICAgdGhpcy5xdWlsbC5oaXN0b3J5LmN1dG9mZigpO1xuICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihyYW5nZS5pbmRleCArIDEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAnbGlzdCBlbXB0eSBlbnRlcic6IHtcbiAgICAgIGtleTogS2V5Ym9hcmQua2V5cy5FTlRFUixcbiAgICAgIGNvbGxhcHNlZDogdHJ1ZSxcbiAgICAgIGZvcm1hdDogWydsaXN0J10sXG4gICAgICBlbXB0eTogdHJ1ZSxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocmFuZ2UsIGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoJ2xpc3QnLCBmYWxzZSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgIGlmIChjb250ZXh0LmZvcm1hdC5pbmRlbnQpIHtcbiAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnaW5kZW50JywgZmFsc2UsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICAnY2hlY2tsaXN0IGVudGVyJzoge1xuICAgICAga2V5OiBLZXlib2FyZC5rZXlzLkVOVEVSLFxuICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgZm9ybWF0OiB7IGxpc3Q6ICdjaGVja2VkJyB9LFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihyYW5nZSkge1xuICAgICAgICB2YXIgX3F1aWxsJGdldExpbmUzID0gdGhpcy5xdWlsbC5nZXRMaW5lKHJhbmdlLmluZGV4KSxcbiAgICAgICAgICAgIF9xdWlsbCRnZXRMaW5lNCA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMaW5lMywgMiksXG4gICAgICAgICAgICBsaW5lID0gX3F1aWxsJGdldExpbmU0WzBdLFxuICAgICAgICAgICAgb2Zmc2V0ID0gX3F1aWxsJGdldExpbmU0WzFdO1xuXG4gICAgICAgIHZhciBmb3JtYXRzID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHt9LCBsaW5lLmZvcm1hdHMoKSwgeyBsaXN0OiAnY2hlY2tlZCcgfSk7XG4gICAgICAgIHZhciBkZWx0YSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihyYW5nZS5pbmRleCkuaW5zZXJ0KCdcXG4nLCBmb3JtYXRzKS5yZXRhaW4obGluZS5sZW5ndGgoKSAtIG9mZnNldCAtIDEpLnJldGFpbigxLCB7IGxpc3Q6ICd1bmNoZWNrZWQnIH0pO1xuICAgICAgICB0aGlzLnF1aWxsLnVwZGF0ZUNvbnRlbnRzKGRlbHRhLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgICAgdGhpcy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXggKyAxLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICAgICAgICB0aGlzLnF1aWxsLnNjcm9sbEludG9WaWV3KCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAnaGVhZGVyIGVudGVyJzoge1xuICAgICAga2V5OiBLZXlib2FyZC5rZXlzLkVOVEVSLFxuICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgZm9ybWF0OiBbJ2hlYWRlciddLFxuICAgICAgc3VmZml4OiAvXiQvLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihyYW5nZSwgY29udGV4dCkge1xuICAgICAgICB2YXIgX3F1aWxsJGdldExpbmU1ID0gdGhpcy5xdWlsbC5nZXRMaW5lKHJhbmdlLmluZGV4KSxcbiAgICAgICAgICAgIF9xdWlsbCRnZXRMaW5lNiA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMaW5lNSwgMiksXG4gICAgICAgICAgICBsaW5lID0gX3F1aWxsJGdldExpbmU2WzBdLFxuICAgICAgICAgICAgb2Zmc2V0ID0gX3F1aWxsJGdldExpbmU2WzFdO1xuXG4gICAgICAgIHZhciBkZWx0YSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihyYW5nZS5pbmRleCkuaW5zZXJ0KCdcXG4nLCBjb250ZXh0LmZvcm1hdCkucmV0YWluKGxpbmUubGVuZ3RoKCkgLSBvZmZzZXQgLSAxKS5yZXRhaW4oMSwgeyBoZWFkZXI6IG51bGwgfSk7XG4gICAgICAgIHRoaXMucXVpbGwudXBkYXRlQ29udGVudHMoZGVsdGEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihyYW5nZS5pbmRleCArIDEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICAgIHRoaXMucXVpbGwuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgIH1cbiAgICB9LFxuICAgICdsaXN0IGF1dG9maWxsJzoge1xuICAgICAga2V5OiAnICcsXG4gICAgICBjb2xsYXBzZWQ6IHRydWUsXG4gICAgICBmb3JtYXQ6IHsgbGlzdDogZmFsc2UgfSxcbiAgICAgIHByZWZpeDogL15cXHMqPyhcXGQrXFwufC18XFwqfFxcWyA/XFxdfFxcW3hcXF0pJC8sXG4gICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJhbmdlLCBjb250ZXh0KSB7XG4gICAgICAgIHZhciBsZW5ndGggPSBjb250ZXh0LnByZWZpeC5sZW5ndGg7XG5cbiAgICAgICAgdmFyIF9xdWlsbCRnZXRMaW5lNyA9IHRoaXMucXVpbGwuZ2V0TGluZShyYW5nZS5pbmRleCksXG4gICAgICAgICAgICBfcXVpbGwkZ2V0TGluZTggPSBfc2xpY2VkVG9BcnJheShfcXVpbGwkZ2V0TGluZTcsIDIpLFxuICAgICAgICAgICAgbGluZSA9IF9xdWlsbCRnZXRMaW5lOFswXSxcbiAgICAgICAgICAgIG9mZnNldCA9IF9xdWlsbCRnZXRMaW5lOFsxXTtcblxuICAgICAgICBpZiAob2Zmc2V0ID4gbGVuZ3RoKSByZXR1cm4gdHJ1ZTtcbiAgICAgICAgdmFyIHZhbHVlID0gdm9pZCAwO1xuICAgICAgICBzd2l0Y2ggKGNvbnRleHQucHJlZml4LnRyaW0oKSkge1xuICAgICAgICAgIGNhc2UgJ1tdJzpjYXNlICdbIF0nOlxuICAgICAgICAgICAgdmFsdWUgPSAndW5jaGVja2VkJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ1t4XSc6XG4gICAgICAgICAgICB2YWx1ZSA9ICdjaGVja2VkJztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJy0nOmNhc2UgJyonOlxuICAgICAgICAgICAgdmFsdWUgPSAnYnVsbGV0JztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB2YWx1ZSA9ICdvcmRlcmVkJztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnF1aWxsLmluc2VydFRleHQocmFuZ2UuaW5kZXgsICcgJywgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgIHRoaXMucXVpbGwuaGlzdG9yeS5jdXRvZmYoKTtcbiAgICAgICAgdmFyIGRlbHRhID0gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKHJhbmdlLmluZGV4IC0gb2Zmc2V0KS5kZWxldGUobGVuZ3RoICsgMSkucmV0YWluKGxpbmUubGVuZ3RoKCkgLSAyIC0gb2Zmc2V0KS5yZXRhaW4oMSwgeyBsaXN0OiB2YWx1ZSB9KTtcbiAgICAgICAgdGhpcy5xdWlsbC51cGRhdGVDb250ZW50cyhkZWx0YSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgIHRoaXMucXVpbGwuaGlzdG9yeS5jdXRvZmYoKTtcbiAgICAgICAgdGhpcy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXggLSBsZW5ndGgsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICB9XG4gICAgfSxcbiAgICAnY29kZSBleGl0Jzoge1xuICAgICAga2V5OiBLZXlib2FyZC5rZXlzLkVOVEVSLFxuICAgICAgY29sbGFwc2VkOiB0cnVlLFxuICAgICAgZm9ybWF0OiBbJ2NvZGUtYmxvY2snXSxcbiAgICAgIHByZWZpeDogL1xcblxcbiQvLFxuICAgICAgc3VmZml4OiAvXlxccyskLyxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocmFuZ2UpIHtcbiAgICAgICAgdmFyIF9xdWlsbCRnZXRMaW5lOSA9IHRoaXMucXVpbGwuZ2V0TGluZShyYW5nZS5pbmRleCksXG4gICAgICAgICAgICBfcXVpbGwkZ2V0TGluZTEwID0gX3NsaWNlZFRvQXJyYXkoX3F1aWxsJGdldExpbmU5LCAyKSxcbiAgICAgICAgICAgIGxpbmUgPSBfcXVpbGwkZ2V0TGluZTEwWzBdLFxuICAgICAgICAgICAgb2Zmc2V0ID0gX3F1aWxsJGdldExpbmUxMFsxXTtcblxuICAgICAgICB2YXIgZGVsdGEgPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKS5yZXRhaW4ocmFuZ2UuaW5kZXggKyBsaW5lLmxlbmd0aCgpIC0gb2Zmc2V0IC0gMikucmV0YWluKDEsIHsgJ2NvZGUtYmxvY2snOiBudWxsIH0pLmRlbGV0ZSgxKTtcbiAgICAgICAgdGhpcy5xdWlsbC51cGRhdGVDb250ZW50cyhkZWx0YSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICB9XG4gICAgfSxcbiAgICAnZW1iZWQgbGVmdCc6IG1ha2VFbWJlZEFycm93SGFuZGxlcihLZXlib2FyZC5rZXlzLkxFRlQsIGZhbHNlKSxcbiAgICAnZW1iZWQgbGVmdCBzaGlmdCc6IG1ha2VFbWJlZEFycm93SGFuZGxlcihLZXlib2FyZC5rZXlzLkxFRlQsIHRydWUpLFxuICAgICdlbWJlZCByaWdodCc6IG1ha2VFbWJlZEFycm93SGFuZGxlcihLZXlib2FyZC5rZXlzLlJJR0hULCBmYWxzZSksXG4gICAgJ2VtYmVkIHJpZ2h0IHNoaWZ0JzogbWFrZUVtYmVkQXJyb3dIYW5kbGVyKEtleWJvYXJkLmtleXMuUklHSFQsIHRydWUpXG4gIH1cbn07XG5cbmZ1bmN0aW9uIG1ha2VFbWJlZEFycm93SGFuZGxlcihrZXksIHNoaWZ0S2V5KSB7XG4gIHZhciBfcmVmMztcblxuICB2YXIgd2hlcmUgPSBrZXkgPT09IEtleWJvYXJkLmtleXMuTEVGVCA/ICdwcmVmaXgnIDogJ3N1ZmZpeCc7XG4gIHJldHVybiBfcmVmMyA9IHtcbiAgICBrZXk6IGtleSxcbiAgICBzaGlmdEtleTogc2hpZnRLZXksXG4gICAgYWx0S2V5OiBudWxsXG4gIH0sIF9kZWZpbmVQcm9wZXJ0eShfcmVmMywgd2hlcmUsIC9eJC8pLCBfZGVmaW5lUHJvcGVydHkoX3JlZjMsICdoYW5kbGVyJywgZnVuY3Rpb24gaGFuZGxlcihyYW5nZSkge1xuICAgIHZhciBpbmRleCA9IHJhbmdlLmluZGV4O1xuICAgIGlmIChrZXkgPT09IEtleWJvYXJkLmtleXMuUklHSFQpIHtcbiAgICAgIGluZGV4ICs9IHJhbmdlLmxlbmd0aCArIDE7XG4gICAgfVxuXG4gICAgdmFyIF9xdWlsbCRnZXRMZWFmMyA9IHRoaXMucXVpbGwuZ2V0TGVhZihpbmRleCksXG4gICAgICAgIF9xdWlsbCRnZXRMZWFmNCA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMZWFmMywgMSksXG4gICAgICAgIGxlYWYgPSBfcXVpbGwkZ2V0TGVhZjRbMF07XG5cbiAgICBpZiAoIShsZWFmIGluc3RhbmNlb2YgX3BhcmNobWVudDIuZGVmYXVsdC5FbWJlZCkpIHJldHVybiB0cnVlO1xuICAgIGlmIChrZXkgPT09IEtleWJvYXJkLmtleXMuTEVGVCkge1xuICAgICAgaWYgKHNoaWZ0S2V5KSB7XG4gICAgICAgIHRoaXMucXVpbGwuc2V0U2VsZWN0aW9uKHJhbmdlLmluZGV4IC0gMSwgcmFuZ2UubGVuZ3RoICsgMSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihyYW5nZS5pbmRleCAtIDEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc2hpZnRLZXkpIHtcbiAgICAgICAgdGhpcy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXgsIHJhbmdlLmxlbmd0aCArIDEsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXggKyByYW5nZS5sZW5ndGggKyAxLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KSwgX3JlZjM7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUJhY2tzcGFjZShyYW5nZSwgY29udGV4dCkge1xuICBpZiAocmFuZ2UuaW5kZXggPT09IDAgfHwgdGhpcy5xdWlsbC5nZXRMZW5ndGgoKSA8PSAxKSByZXR1cm47XG5cbiAgdmFyIF9xdWlsbCRnZXRMaW5lMTEgPSB0aGlzLnF1aWxsLmdldExpbmUocmFuZ2UuaW5kZXgpLFxuICAgICAgX3F1aWxsJGdldExpbmUxMiA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMaW5lMTEsIDEpLFxuICAgICAgbGluZSA9IF9xdWlsbCRnZXRMaW5lMTJbMF07XG5cbiAgdmFyIGZvcm1hdHMgPSB7fTtcbiAgaWYgKGNvbnRleHQub2Zmc2V0ID09PSAwKSB7XG4gICAgdmFyIF9xdWlsbCRnZXRMaW5lMTMgPSB0aGlzLnF1aWxsLmdldExpbmUocmFuZ2UuaW5kZXggLSAxKSxcbiAgICAgICAgX3F1aWxsJGdldExpbmUxNCA9IF9zbGljZWRUb0FycmF5KF9xdWlsbCRnZXRMaW5lMTMsIDEpLFxuICAgICAgICBwcmV2ID0gX3F1aWxsJGdldExpbmUxNFswXTtcblxuICAgIGlmIChwcmV2ICE9IG51bGwgJiYgcHJldi5sZW5ndGgoKSA+IDEpIHtcbiAgICAgIHZhciBjdXJGb3JtYXRzID0gbGluZS5mb3JtYXRzKCk7XG4gICAgICB2YXIgcHJldkZvcm1hdHMgPSB0aGlzLnF1aWxsLmdldEZvcm1hdChyYW5nZS5pbmRleCAtIDEsIDEpO1xuICAgICAgZm9ybWF0cyA9IF9vcDIuZGVmYXVsdC5hdHRyaWJ1dGVzLmRpZmYoY3VyRm9ybWF0cywgcHJldkZvcm1hdHMpIHx8IHt9O1xuICAgIH1cbiAgfVxuICAvLyBDaGVjayBmb3IgYXN0cmFsIHN5bWJvbHNcbiAgdmFyIGxlbmd0aCA9IC9bXFx1RDgwMC1cXHVEQkZGXVtcXHVEQzAwLVxcdURGRkZdJC8udGVzdChjb250ZXh0LnByZWZpeCkgPyAyIDogMTtcbiAgdGhpcy5xdWlsbC5kZWxldGVUZXh0KHJhbmdlLmluZGV4IC0gbGVuZ3RoLCBsZW5ndGgsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICBpZiAoT2JqZWN0LmtleXMoZm9ybWF0cykubGVuZ3RoID4gMCkge1xuICAgIHRoaXMucXVpbGwuZm9ybWF0TGluZShyYW5nZS5pbmRleCAtIGxlbmd0aCwgbGVuZ3RoLCBmb3JtYXRzLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgfVxuICB0aGlzLnF1aWxsLmZvY3VzKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZShyYW5nZSwgY29udGV4dCkge1xuICAvLyBDaGVjayBmb3IgYXN0cmFsIHN5bWJvbHNcbiAgdmFyIGxlbmd0aCA9IC9eW1xcdUQ4MDAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGXS8udGVzdChjb250ZXh0LnN1ZmZpeCkgPyAyIDogMTtcbiAgaWYgKHJhbmdlLmluZGV4ID49IHRoaXMucXVpbGwuZ2V0TGVuZ3RoKCkgLSBsZW5ndGgpIHJldHVybjtcbiAgdmFyIGZvcm1hdHMgPSB7fSxcbiAgICAgIG5leHRMZW5ndGggPSAwO1xuXG4gIHZhciBfcXVpbGwkZ2V0TGluZTE1ID0gdGhpcy5xdWlsbC5nZXRMaW5lKHJhbmdlLmluZGV4KSxcbiAgICAgIF9xdWlsbCRnZXRMaW5lMTYgPSBfc2xpY2VkVG9BcnJheShfcXVpbGwkZ2V0TGluZTE1LCAxKSxcbiAgICAgIGxpbmUgPSBfcXVpbGwkZ2V0TGluZTE2WzBdO1xuXG4gIGlmIChjb250ZXh0Lm9mZnNldCA+PSBsaW5lLmxlbmd0aCgpIC0gMSkge1xuICAgIHZhciBfcXVpbGwkZ2V0TGluZTE3ID0gdGhpcy5xdWlsbC5nZXRMaW5lKHJhbmdlLmluZGV4ICsgMSksXG4gICAgICAgIF9xdWlsbCRnZXRMaW5lMTggPSBfc2xpY2VkVG9BcnJheShfcXVpbGwkZ2V0TGluZTE3LCAxKSxcbiAgICAgICAgbmV4dCA9IF9xdWlsbCRnZXRMaW5lMThbMF07XG5cbiAgICBpZiAobmV4dCkge1xuICAgICAgdmFyIGN1ckZvcm1hdHMgPSBsaW5lLmZvcm1hdHMoKTtcbiAgICAgIHZhciBuZXh0Rm9ybWF0cyA9IHRoaXMucXVpbGwuZ2V0Rm9ybWF0KHJhbmdlLmluZGV4LCAxKTtcbiAgICAgIGZvcm1hdHMgPSBfb3AyLmRlZmF1bHQuYXR0cmlidXRlcy5kaWZmKGN1ckZvcm1hdHMsIG5leHRGb3JtYXRzKSB8fCB7fTtcbiAgICAgIG5leHRMZW5ndGggPSBuZXh0Lmxlbmd0aCgpO1xuICAgIH1cbiAgfVxuICB0aGlzLnF1aWxsLmRlbGV0ZVRleHQocmFuZ2UuaW5kZXgsIGxlbmd0aCwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gIGlmIChPYmplY3Qua2V5cyhmb3JtYXRzKS5sZW5ndGggPiAwKSB7XG4gICAgdGhpcy5xdWlsbC5mb3JtYXRMaW5lKHJhbmdlLmluZGV4ICsgbmV4dExlbmd0aCAtIDEsIGxlbmd0aCwgZm9ybWF0cywgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlUmFuZ2UocmFuZ2UpIHtcbiAgdmFyIGxpbmVzID0gdGhpcy5xdWlsbC5nZXRMaW5lcyhyYW5nZSk7XG4gIHZhciBmb3JtYXRzID0ge307XG4gIGlmIChsaW5lcy5sZW5ndGggPiAxKSB7XG4gICAgdmFyIGZpcnN0Rm9ybWF0cyA9IGxpbmVzWzBdLmZvcm1hdHMoKTtcbiAgICB2YXIgbGFzdEZvcm1hdHMgPSBsaW5lc1tsaW5lcy5sZW5ndGggLSAxXS5mb3JtYXRzKCk7XG4gICAgZm9ybWF0cyA9IF9vcDIuZGVmYXVsdC5hdHRyaWJ1dGVzLmRpZmYobGFzdEZvcm1hdHMsIGZpcnN0Rm9ybWF0cykgfHwge307XG4gIH1cbiAgdGhpcy5xdWlsbC5kZWxldGVUZXh0KHJhbmdlLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgaWYgKE9iamVjdC5rZXlzKGZvcm1hdHMpLmxlbmd0aCA+IDApIHtcbiAgICB0aGlzLnF1aWxsLmZvcm1hdExpbmUocmFuZ2UuaW5kZXgsIDEsIGZvcm1hdHMsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICB9XG4gIHRoaXMucXVpbGwuc2V0U2VsZWN0aW9uKHJhbmdlLmluZGV4LCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICB0aGlzLnF1aWxsLmZvY3VzKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUVudGVyKHJhbmdlLCBjb250ZXh0KSB7XG4gIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gIGlmIChyYW5nZS5sZW5ndGggPiAwKSB7XG4gICAgdGhpcy5xdWlsbC5zY3JvbGwuZGVsZXRlQXQocmFuZ2UuaW5kZXgsIHJhbmdlLmxlbmd0aCk7IC8vIFNvIHdlIGRvIG5vdCB0cmlnZ2VyIHRleHQtY2hhbmdlXG4gIH1cbiAgdmFyIGxpbmVGb3JtYXRzID0gT2JqZWN0LmtleXMoY29udGV4dC5mb3JtYXQpLnJlZHVjZShmdW5jdGlvbiAobGluZUZvcm1hdHMsIGZvcm1hdCkge1xuICAgIGlmIChfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KGZvcm1hdCwgX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5CTE9DSykgJiYgIUFycmF5LmlzQXJyYXkoY29udGV4dC5mb3JtYXRbZm9ybWF0XSkpIHtcbiAgICAgIGxpbmVGb3JtYXRzW2Zvcm1hdF0gPSBjb250ZXh0LmZvcm1hdFtmb3JtYXRdO1xuICAgIH1cbiAgICByZXR1cm4gbGluZUZvcm1hdHM7XG4gIH0sIHt9KTtcbiAgdGhpcy5xdWlsbC5pbnNlcnRUZXh0KHJhbmdlLmluZGV4LCAnXFxuJywgbGluZUZvcm1hdHMsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAvLyBFYXJsaWVyIHNjcm9sbC5kZWxldGVBdCBtaWdodCBoYXZlIG1lc3NlZCB1cCBvdXIgc2VsZWN0aW9uLFxuICAvLyBzbyBpbnNlcnRUZXh0J3MgYnVpbHQgaW4gc2VsZWN0aW9uIHByZXNlcnZhdGlvbiBpcyBub3QgcmVsaWFibGVcbiAgdGhpcy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXggKyAxLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICB0aGlzLnF1aWxsLmZvY3VzKCk7XG4gIE9iamVjdC5rZXlzKGNvbnRleHQuZm9ybWF0KS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgaWYgKGxpbmVGb3JtYXRzW25hbWVdICE9IG51bGwpIHJldHVybjtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjb250ZXh0LmZvcm1hdFtuYW1lXSkpIHJldHVybjtcbiAgICBpZiAobmFtZSA9PT0gJ2xpbmsnKSByZXR1cm47XG4gICAgX3RoaXMzLnF1aWxsLmZvcm1hdChuYW1lLCBjb250ZXh0LmZvcm1hdFtuYW1lXSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBtYWtlQ29kZUJsb2NrSGFuZGxlcihpbmRlbnQpIHtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IEtleWJvYXJkLmtleXMuVEFCLFxuICAgIHNoaWZ0S2V5OiAhaW5kZW50LFxuICAgIGZvcm1hdDogeyAnY29kZS1ibG9jayc6IHRydWUgfSxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJhbmdlKSB7XG4gICAgICB2YXIgQ29kZUJsb2NrID0gX3BhcmNobWVudDIuZGVmYXVsdC5xdWVyeSgnY29kZS1ibG9jaycpO1xuICAgICAgdmFyIGluZGV4ID0gcmFuZ2UuaW5kZXgsXG4gICAgICAgICAgbGVuZ3RoID0gcmFuZ2UubGVuZ3RoO1xuXG4gICAgICB2YXIgX3F1aWxsJHNjcm9sbCRkZXNjZW5kID0gdGhpcy5xdWlsbC5zY3JvbGwuZGVzY2VuZGFudChDb2RlQmxvY2ssIGluZGV4KSxcbiAgICAgICAgICBfcXVpbGwkc2Nyb2xsJGRlc2NlbmQyID0gX3NsaWNlZFRvQXJyYXkoX3F1aWxsJHNjcm9sbCRkZXNjZW5kLCAyKSxcbiAgICAgICAgICBibG9jayA9IF9xdWlsbCRzY3JvbGwkZGVzY2VuZDJbMF0sXG4gICAgICAgICAgb2Zmc2V0ID0gX3F1aWxsJHNjcm9sbCRkZXNjZW5kMlsxXTtcblxuICAgICAgaWYgKGJsb2NrID09IG51bGwpIHJldHVybjtcbiAgICAgIHZhciBzY3JvbGxJbmRleCA9IHRoaXMucXVpbGwuZ2V0SW5kZXgoYmxvY2spO1xuICAgICAgdmFyIHN0YXJ0ID0gYmxvY2submV3bGluZUluZGV4KG9mZnNldCwgdHJ1ZSkgKyAxO1xuICAgICAgdmFyIGVuZCA9IGJsb2NrLm5ld2xpbmVJbmRleChzY3JvbGxJbmRleCArIG9mZnNldCArIGxlbmd0aCk7XG4gICAgICB2YXIgbGluZXMgPSBibG9jay5kb21Ob2RlLnRleHRDb250ZW50LnNsaWNlKHN0YXJ0LCBlbmQpLnNwbGl0KCdcXG4nKTtcbiAgICAgIG9mZnNldCA9IDA7XG4gICAgICBsaW5lcy5mb3JFYWNoKGZ1bmN0aW9uIChsaW5lLCBpKSB7XG4gICAgICAgIGlmIChpbmRlbnQpIHtcbiAgICAgICAgICBibG9jay5pbnNlcnRBdChzdGFydCArIG9mZnNldCwgQ29kZUJsb2NrLlRBQik7XG4gICAgICAgICAgb2Zmc2V0ICs9IENvZGVCbG9jay5UQUIubGVuZ3RoO1xuICAgICAgICAgIGlmIChpID09PSAwKSB7XG4gICAgICAgICAgICBpbmRleCArPSBDb2RlQmxvY2suVEFCLmxlbmd0aDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGVuZ3RoICs9IENvZGVCbG9jay5UQUIubGVuZ3RoO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChsaW5lLnN0YXJ0c1dpdGgoQ29kZUJsb2NrLlRBQikpIHtcbiAgICAgICAgICBibG9jay5kZWxldGVBdChzdGFydCArIG9mZnNldCwgQ29kZUJsb2NrLlRBQi5sZW5ndGgpO1xuICAgICAgICAgIG9mZnNldCAtPSBDb2RlQmxvY2suVEFCLmxlbmd0aDtcbiAgICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgICAgaW5kZXggLT0gQ29kZUJsb2NrLlRBQi5sZW5ndGg7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxlbmd0aCAtPSBDb2RlQmxvY2suVEFCLmxlbmd0aDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgb2Zmc2V0ICs9IGxpbmUubGVuZ3RoICsgMTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5xdWlsbC51cGRhdGUoX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihpbmRleCwgbGVuZ3RoLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gbWFrZUZvcm1hdEhhbmRsZXIoZm9ybWF0KSB7XG4gIHJldHVybiB7XG4gICAga2V5OiBmb3JtYXRbMF0udG9VcHBlckNhc2UoKSxcbiAgICBzaG9ydEtleTogdHJ1ZSxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJhbmdlLCBjb250ZXh0KSB7XG4gICAgICB0aGlzLnF1aWxsLmZvcm1hdChmb3JtYXQsICFjb250ZXh0LmZvcm1hdFtmb3JtYXRdLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZShiaW5kaW5nKSB7XG4gIGlmICh0eXBlb2YgYmluZGluZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGJpbmRpbmcgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZSh7IGtleTogYmluZGluZyB9KTtcbiAgfVxuICBpZiAoKHR5cGVvZiBiaW5kaW5nID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihiaW5kaW5nKSkgPT09ICdvYmplY3QnKSB7XG4gICAgYmluZGluZyA9ICgwLCBfY2xvbmUyLmRlZmF1bHQpKGJpbmRpbmcsIGZhbHNlKTtcbiAgfVxuICBpZiAodHlwZW9mIGJpbmRpbmcua2V5ID09PSAnc3RyaW5nJykge1xuICAgIGlmIChLZXlib2FyZC5rZXlzW2JpbmRpbmcua2V5LnRvVXBwZXJDYXNlKCldICE9IG51bGwpIHtcbiAgICAgIGJpbmRpbmcua2V5ID0gS2V5Ym9hcmQua2V5c1tiaW5kaW5nLmtleS50b1VwcGVyQ2FzZSgpXTtcbiAgICB9IGVsc2UgaWYgKGJpbmRpbmcua2V5Lmxlbmd0aCA9PT0gMSkge1xuICAgICAgYmluZGluZy5rZXkgPSBiaW5kaW5nLmtleS50b1VwcGVyQ2FzZSgpLmNoYXJDb2RlQXQoMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuICBpZiAoYmluZGluZy5zaG9ydEtleSkge1xuICAgIGJpbmRpbmdbU0hPUlRLRVldID0gYmluZGluZy5zaG9ydEtleTtcbiAgICBkZWxldGUgYmluZGluZy5zaG9ydEtleTtcbiAgfVxuICByZXR1cm4gYmluZGluZztcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gS2V5Ym9hcmQ7XG5leHBvcnRzLlNIT1JUS0VZID0gU0hPUlRLRVk7XG5cbi8qKiovIH0pLFxuLyogMjQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF90ZXh0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcblxudmFyIF90ZXh0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RleHQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBDdXJzb3IgPSBmdW5jdGlvbiAoX1BhcmNobWVudCRFbWJlZCkge1xuICBfaW5oZXJpdHMoQ3Vyc29yLCBfUGFyY2htZW50JEVtYmVkKTtcblxuICBfY3JlYXRlQ2xhc3MoQ3Vyc29yLCBudWxsLCBbe1xuICAgIGtleTogJ3ZhbHVlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgfV0pO1xuXG4gIGZ1bmN0aW9uIEN1cnNvcihkb21Ob2RlLCBzZWxlY3Rpb24pIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ3Vyc29yKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDdXJzb3IuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDdXJzb3IpKS5jYWxsKHRoaXMsIGRvbU5vZGUpKTtcblxuICAgIF90aGlzLnNlbGVjdGlvbiA9IHNlbGVjdGlvbjtcbiAgICBfdGhpcy50ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKEN1cnNvci5DT05URU5UUyk7XG4gICAgX3RoaXMuZG9tTm9kZS5hcHBlbmRDaGlsZChfdGhpcy50ZXh0Tm9kZSk7XG4gICAgX3RoaXMuX2xlbmd0aCA9IDA7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEN1cnNvciwgW3tcbiAgICBrZXk6ICdkZXRhY2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBkZXRhY2goKSB7XG4gICAgICAvLyBzdXBlci5kZXRhY2goKSB3aWxsIGFsc28gY2xlYXIgZG9tTm9kZS5fX2Jsb3RcbiAgICAgIGlmICh0aGlzLnBhcmVudCAhPSBudWxsKSB0aGlzLnBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXQobmFtZSwgdmFsdWUpIHtcbiAgICAgIGlmICh0aGlzLl9sZW5ndGggIT09IDApIHtcbiAgICAgICAgcmV0dXJuIF9nZXQoQ3Vyc29yLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEN1cnNvci5wcm90b3R5cGUpLCAnZm9ybWF0JywgdGhpcykuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICB2YXIgdGFyZ2V0ID0gdGhpcyxcbiAgICAgICAgICBpbmRleCA9IDA7XG4gICAgICB3aGlsZSAodGFyZ2V0ICE9IG51bGwgJiYgdGFyZ2V0LnN0YXRpY3Muc2NvcGUgIT09IF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0tfQkxPVCkge1xuICAgICAgICBpbmRleCArPSB0YXJnZXQub2Zmc2V0KHRhcmdldC5wYXJlbnQpO1xuICAgICAgICB0YXJnZXQgPSB0YXJnZXQucGFyZW50O1xuICAgICAgfVxuICAgICAgaWYgKHRhcmdldCAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMuX2xlbmd0aCA9IEN1cnNvci5DT05URU5UUy5sZW5ndGg7XG4gICAgICAgIHRhcmdldC5vcHRpbWl6ZSgpO1xuICAgICAgICB0YXJnZXQuZm9ybWF0QXQoaW5kZXgsIEN1cnNvci5DT05URU5UUy5sZW5ndGgsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgdGhpcy5fbGVuZ3RoID0gMDtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdpbmRleCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluZGV4KG5vZGUsIG9mZnNldCkge1xuICAgICAgaWYgKG5vZGUgPT09IHRoaXMudGV4dE5vZGUpIHJldHVybiAwO1xuICAgICAgcmV0dXJuIF9nZXQoQ3Vyc29yLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEN1cnNvci5wcm90b3R5cGUpLCAnaW5kZXgnLCB0aGlzKS5jYWxsKHRoaXMsIG5vZGUsIG9mZnNldCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbGVuZ3RoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGVuZ3RoKCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2xlbmd0aDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwb3NpdGlvbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBvc2l0aW9uKCkge1xuICAgICAgcmV0dXJuIFt0aGlzLnRleHROb2RlLCB0aGlzLnRleHROb2RlLmRhdGEubGVuZ3RoXTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZW1vdmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICBfZ2V0KEN1cnNvci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDdXJzb3IucHJvdG90eXBlKSwgJ3JlbW92ZScsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLnBhcmVudCA9IG51bGw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVzdG9yZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlc3RvcmUoKSB7XG4gICAgICBpZiAodGhpcy5zZWxlY3Rpb24uY29tcG9zaW5nIHx8IHRoaXMucGFyZW50ID09IG51bGwpIHJldHVybjtcbiAgICAgIHZhciB0ZXh0Tm9kZSA9IHRoaXMudGV4dE5vZGU7XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLnNlbGVjdGlvbi5nZXROYXRpdmVSYW5nZSgpO1xuICAgICAgdmFyIHJlc3RvcmVUZXh0ID0gdm9pZCAwLFxuICAgICAgICAgIHN0YXJ0ID0gdm9pZCAwLFxuICAgICAgICAgIGVuZCA9IHZvaWQgMDtcbiAgICAgIGlmIChyYW5nZSAhPSBudWxsICYmIHJhbmdlLnN0YXJ0Lm5vZGUgPT09IHRleHROb2RlICYmIHJhbmdlLmVuZC5ub2RlID09PSB0ZXh0Tm9kZSkge1xuICAgICAgICB2YXIgX3JlZiA9IFt0ZXh0Tm9kZSwgcmFuZ2Uuc3RhcnQub2Zmc2V0LCByYW5nZS5lbmQub2Zmc2V0XTtcbiAgICAgICAgcmVzdG9yZVRleHQgPSBfcmVmWzBdO1xuICAgICAgICBzdGFydCA9IF9yZWZbMV07XG4gICAgICAgIGVuZCA9IF9yZWZbMl07XG4gICAgICB9XG4gICAgICAvLyBMaW5rIGZvcm1hdCB3aWxsIGluc2VydCB0ZXh0IG91dHNpZGUgb2YgYW5jaG9yIHRhZ1xuICAgICAgd2hpbGUgKHRoaXMuZG9tTm9kZS5sYXN0Q2hpbGQgIT0gbnVsbCAmJiB0aGlzLmRvbU5vZGUubGFzdENoaWxkICE9PSB0aGlzLnRleHROb2RlKSB7XG4gICAgICAgIHRoaXMuZG9tTm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmRvbU5vZGUubGFzdENoaWxkLCB0aGlzLmRvbU5vZGUpO1xuICAgICAgfVxuICAgICAgaWYgKHRoaXMudGV4dE5vZGUuZGF0YSAhPT0gQ3Vyc29yLkNPTlRFTlRTKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gdGhpcy50ZXh0Tm9kZS5kYXRhLnNwbGl0KEN1cnNvci5DT05URU5UUykuam9pbignJyk7XG4gICAgICAgIGlmICh0aGlzLm5leHQgaW5zdGFuY2VvZiBfdGV4dDIuZGVmYXVsdCkge1xuICAgICAgICAgIHJlc3RvcmVUZXh0ID0gdGhpcy5uZXh0LmRvbU5vZGU7XG4gICAgICAgICAgdGhpcy5uZXh0Lmluc2VydEF0KDAsIHRleHQpO1xuICAgICAgICAgIHRoaXMudGV4dE5vZGUuZGF0YSA9IEN1cnNvci5DT05URU5UUztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLnRleHROb2RlLmRhdGEgPSB0ZXh0O1xuICAgICAgICAgIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZShfcGFyY2htZW50Mi5kZWZhdWx0LmNyZWF0ZSh0aGlzLnRleHROb2RlKSwgdGhpcyk7XG4gICAgICAgICAgdGhpcy50ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKEN1cnNvci5DT05URU5UUyk7XG4gICAgICAgICAgdGhpcy5kb21Ob2RlLmFwcGVuZENoaWxkKHRoaXMudGV4dE5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB0aGlzLnJlbW92ZSgpO1xuICAgICAgaWYgKHN0YXJ0ICE9IG51bGwpIHtcbiAgICAgICAgdmFyIF9tYXAgPSBbc3RhcnQsIGVuZF0ubWFwKGZ1bmN0aW9uIChvZmZzZXQpIHtcbiAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4ocmVzdG9yZVRleHQuZGF0YS5sZW5ndGgsIG9mZnNldCAtIDEpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIF9tYXAyID0gX3NsaWNlZFRvQXJyYXkoX21hcCwgMik7XG5cbiAgICAgICAgc3RhcnQgPSBfbWFwMlswXTtcbiAgICAgICAgZW5kID0gX21hcDJbMV07XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBzdGFydE5vZGU6IHJlc3RvcmVUZXh0LFxuICAgICAgICAgIHN0YXJ0T2Zmc2V0OiBzdGFydCxcbiAgICAgICAgICBlbmROb2RlOiByZXN0b3JlVGV4dCxcbiAgICAgICAgICBlbmRPZmZzZXQ6IGVuZFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShtdXRhdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAobXV0YXRpb25zLnNvbWUoZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgIHJldHVybiBtdXRhdGlvbi50eXBlID09PSAnY2hhcmFjdGVyRGF0YScgJiYgbXV0YXRpb24udGFyZ2V0ID09PSBfdGhpczIudGV4dE5vZGU7XG4gICAgICB9KSkge1xuICAgICAgICB2YXIgcmFuZ2UgPSB0aGlzLnJlc3RvcmUoKTtcbiAgICAgICAgaWYgKHJhbmdlKSBjb250ZXh0LnJhbmdlID0gcmFuZ2U7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndmFsdWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ3Vyc29yO1xufShfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkKTtcblxuQ3Vyc29yLmJsb3ROYW1lID0gJ2N1cnNvcic7XG5DdXJzb3IuY2xhc3NOYW1lID0gJ3FsLWN1cnNvcic7XG5DdXJzb3IudGFnTmFtZSA9ICdzcGFuJztcbkN1cnNvci5DT05URU5UUyA9ICdcXHVGRUZGJzsgLy8gWmVybyB3aWR0aCBubyBicmVhayBzcGFjZVxuXG5cbmV4cG9ydHMuZGVmYXVsdCA9IEN1cnNvcjtcblxuLyoqKi8gfSksXG4vKiAyNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfYmxvY2sgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuXG52YXIgX2Jsb2NrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Jsb2NrKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgQ29udGFpbmVyID0gZnVuY3Rpb24gKF9QYXJjaG1lbnQkQ29udGFpbmVyKSB7XG4gIF9pbmhlcml0cyhDb250YWluZXIsIF9QYXJjaG1lbnQkQ29udGFpbmVyKTtcblxuICBmdW5jdGlvbiBDb250YWluZXIoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvbnRhaW5lcik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENvbnRhaW5lci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENvbnRhaW5lcikpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgcmV0dXJuIENvbnRhaW5lcjtcbn0oX3BhcmNobWVudDIuZGVmYXVsdC5Db250YWluZXIpO1xuXG5Db250YWluZXIuYWxsb3dlZENoaWxkcmVuID0gW19ibG9jazIuZGVmYXVsdCwgX2Jsb2NrLkJsb2NrRW1iZWQsIENvbnRhaW5lcl07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IENvbnRhaW5lcjtcblxuLyoqKi8gfSksXG4vKiAyNiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5Db2xvclN0eWxlID0gZXhwb3J0cy5Db2xvckNsYXNzID0gZXhwb3J0cy5Db2xvckF0dHJpYnV0b3IgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBDb2xvckF0dHJpYnV0b3IgPSBmdW5jdGlvbiAoX1BhcmNobWVudCRBdHRyaWJ1dG9yKSB7XG4gIF9pbmhlcml0cyhDb2xvckF0dHJpYnV0b3IsIF9QYXJjaG1lbnQkQXR0cmlidXRvcik7XG5cbiAgZnVuY3Rpb24gQ29sb3JBdHRyaWJ1dG9yKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2xvckF0dHJpYnV0b3IpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDb2xvckF0dHJpYnV0b3IuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDb2xvckF0dHJpYnV0b3IpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDb2xvckF0dHJpYnV0b3IsIFt7XG4gICAga2V5OiAndmFsdWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShkb21Ob2RlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBfZ2V0KENvbG9yQXR0cmlidXRvci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDb2xvckF0dHJpYnV0b3IucHJvdG90eXBlKSwgJ3ZhbHVlJywgdGhpcykuY2FsbCh0aGlzLCBkb21Ob2RlKTtcbiAgICAgIGlmICghdmFsdWUuc3RhcnRzV2l0aCgncmdiKCcpKSByZXR1cm4gdmFsdWU7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoL15bXlxcZF0rLywgJycpLnJlcGxhY2UoL1teXFxkXSskLywgJycpO1xuICAgICAgcmV0dXJuICcjJyArIHZhbHVlLnNwbGl0KCcsJykubWFwKGZ1bmN0aW9uIChjb21wb25lbnQpIHtcbiAgICAgICAgcmV0dXJuICgnMDAnICsgcGFyc2VJbnQoY29tcG9uZW50KS50b1N0cmluZygxNikpLnNsaWNlKC0yKTtcbiAgICAgIH0pLmpvaW4oJycpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDb2xvckF0dHJpYnV0b3I7XG59KF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5TdHlsZSk7XG5cbnZhciBDb2xvckNsYXNzID0gbmV3IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5DbGFzcygnY29sb3InLCAncWwtY29sb3InLCB7XG4gIHNjb3BlOiBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLklOTElORVxufSk7XG52YXIgQ29sb3JTdHlsZSA9IG5ldyBDb2xvckF0dHJpYnV0b3IoJ2NvbG9yJywgJ2NvbG9yJywge1xuICBzY29wZTogX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5JTkxJTkVcbn0pO1xuXG5leHBvcnRzLkNvbG9yQXR0cmlidXRvciA9IENvbG9yQXR0cmlidXRvcjtcbmV4cG9ydHMuQ29sb3JDbGFzcyA9IENvbG9yQ2xhc3M7XG5leHBvcnRzLkNvbG9yU3R5bGUgPSBDb2xvclN0eWxlO1xuXG4vKioqLyB9KSxcbi8qIDI3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLnNhbml0aXplID0gZXhwb3J0cy5kZWZhdWx0ID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfaW5saW5lID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcblxudmFyIF9pbmxpbmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5saW5lKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTGluayA9IGZ1bmN0aW9uIChfSW5saW5lKSB7XG4gIF9pbmhlcml0cyhMaW5rLCBfSW5saW5lKTtcblxuICBmdW5jdGlvbiBMaW5rKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaW5rKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoTGluay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExpbmspKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMaW5rLCBbe1xuICAgIGtleTogJ2Zvcm1hdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdChuYW1lLCB2YWx1ZSkge1xuICAgICAgaWYgKG5hbWUgIT09IHRoaXMuc3RhdGljcy5ibG90TmFtZSB8fCAhdmFsdWUpIHJldHVybiBfZ2V0KExpbmsucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGluay5wcm90b3R5cGUpLCAnZm9ybWF0JywgdGhpcykuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICB2YWx1ZSA9IHRoaXMuY29uc3RydWN0b3Iuc2FuaXRpemUodmFsdWUpO1xuICAgICAgdGhpcy5kb21Ob2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIHZhbHVlKTtcbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSh2YWx1ZSkge1xuICAgICAgdmFyIG5vZGUgPSBfZ2V0KExpbmsuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMaW5rKSwgJ2NyZWF0ZScsIHRoaXMpLmNhbGwodGhpcywgdmFsdWUpO1xuICAgICAgdmFsdWUgPSB0aGlzLnNhbml0aXplKHZhbHVlKTtcbiAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgdmFsdWUpO1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3JlbCcsICdub29wZW5lciBub3JlZmVycmVyJyk7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgndGFyZ2V0JywgJ19ibGFuaycpO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnZm9ybWF0cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdHMoZG9tTm9kZSkge1xuICAgICAgcmV0dXJuIGRvbU5vZGUuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2FuaXRpemUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYW5pdGl6ZSh1cmwpIHtcbiAgICAgIHJldHVybiBfc2FuaXRpemUodXJsLCB0aGlzLlBST1RPQ09MX1dISVRFTElTVCkgPyB1cmwgOiB0aGlzLlNBTklUSVpFRF9VUkw7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExpbms7XG59KF9pbmxpbmUyLmRlZmF1bHQpO1xuXG5MaW5rLmJsb3ROYW1lID0gJ2xpbmsnO1xuTGluay50YWdOYW1lID0gJ0EnO1xuTGluay5TQU5JVElaRURfVVJMID0gJ2Fib3V0OmJsYW5rJztcbkxpbmsuUFJPVE9DT0xfV0hJVEVMSVNUID0gWydodHRwJywgJ2h0dHBzJywgJ21haWx0bycsICd0ZWwnXTtcblxuZnVuY3Rpb24gX3Nhbml0aXplKHVybCwgcHJvdG9jb2xzKSB7XG4gIHZhciBhbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XG4gIGFuY2hvci5ocmVmID0gdXJsO1xuICB2YXIgcHJvdG9jb2wgPSBhbmNob3IuaHJlZi5zbGljZSgwLCBhbmNob3IuaHJlZi5pbmRleE9mKCc6JykpO1xuICByZXR1cm4gcHJvdG9jb2xzLmluZGV4T2YocHJvdG9jb2wpID4gLTE7XG59XG5cbmV4cG9ydHMuZGVmYXVsdCA9IExpbms7XG5leHBvcnRzLnNhbml0aXplID0gX3Nhbml0aXplO1xuXG4vKioqLyB9KSxcbi8qIDI4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9rZXlib2FyZCA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpO1xuXG52YXIgX2tleWJvYXJkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleWJvYXJkKTtcblxudmFyIF9kcm9wZG93biA9IF9fd2VicGFja19yZXF1aXJlX18oMTA3KTtcblxudmFyIF9kcm9wZG93bjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kcm9wZG93bik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBvcHRpb25zQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIHRvZ2dsZUFyaWFBdHRyaWJ1dGUoZWxlbWVudCwgYXR0cmlidXRlKSB7XG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKGF0dHJpYnV0ZSwgIShlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyaWJ1dGUpID09PSAndHJ1ZScpKTtcbn1cblxudmFyIFBpY2tlciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gUGlja2VyKHNlbGVjdCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGlja2VyKTtcblxuICAgIHRoaXMuc2VsZWN0ID0gc2VsZWN0O1xuICAgIHRoaXMuY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIHRoaXMuYnVpbGRQaWNrZXIoKTtcbiAgICB0aGlzLnNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIHRoaXMuc2VsZWN0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuY29udGFpbmVyLCB0aGlzLnNlbGVjdCk7XG5cbiAgICB0aGlzLmxhYmVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzLnRvZ2dsZVBpY2tlcigpO1xuICAgIH0pO1xuICAgIHRoaXMubGFiZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgc3dpdGNoIChldmVudC5rZXlDb2RlKSB7XG4gICAgICAgIC8vIEFsbG93cyB0aGUgXCJFbnRlclwiIGtleSB0byBvcGVuIHRoZSBwaWNrZXJcbiAgICAgICAgY2FzZSBfa2V5Ym9hcmQyLmRlZmF1bHQua2V5cy5FTlRFUjpcbiAgICAgICAgICBfdGhpcy50b2dnbGVQaWNrZXIoKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICAvLyBBbGxvd3MgdGhlIFwiRXNjYXBlXCIga2V5IHRvIGNsb3NlIHRoZSBwaWNrZXJcbiAgICAgICAgY2FzZSBfa2V5Ym9hcmQyLmRlZmF1bHQua2V5cy5FU0NBUEU6XG4gICAgICAgICAgX3RoaXMuZXNjYXBlKCk7XG4gICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgIH1cbiAgICB9KTtcbiAgICB0aGlzLnNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQaWNrZXIsIFt7XG4gICAga2V5OiAndG9nZ2xlUGlja2VyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlUGlja2VyKCkge1xuICAgICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LnRvZ2dsZSgncWwtZXhwYW5kZWQnKTtcbiAgICAgIC8vIFRvZ2dsZSBhcmlhLWV4cGFuZGVkIGFuZCBhcmlhLWhpZGRlbiB0byBtYWtlIHRoZSBwaWNrZXIgYWNjZXNzaWJsZVxuICAgICAgdG9nZ2xlQXJpYUF0dHJpYnV0ZSh0aGlzLmxhYmVsLCAnYXJpYS1leHBhbmRlZCcpO1xuICAgICAgdG9nZ2xlQXJpYUF0dHJpYnV0ZSh0aGlzLm9wdGlvbnMsICdhcmlhLWhpZGRlbicpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2J1aWxkSXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJ1aWxkSXRlbShvcHRpb24pIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgICAgIGl0ZW0udGFiSW5kZXggPSAnMCc7XG4gICAgICBpdGVtLnNldEF0dHJpYnV0ZSgncm9sZScsICdidXR0b24nKTtcblxuICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdxbC1waWNrZXItaXRlbScpO1xuICAgICAgaWYgKG9wdGlvbi5oYXNBdHRyaWJ1dGUoJ3ZhbHVlJykpIHtcbiAgICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsdWUnLCBvcHRpb24uZ2V0QXR0cmlidXRlKCd2YWx1ZScpKTtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb24udGV4dENvbnRlbnQpIHtcbiAgICAgICAgaXRlbS5zZXRBdHRyaWJ1dGUoJ2RhdGEtbGFiZWwnLCBvcHRpb24udGV4dENvbnRlbnQpO1xuICAgICAgfVxuICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLnNlbGVjdEl0ZW0oaXRlbSwgdHJ1ZSk7XG4gICAgICB9KTtcbiAgICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgICAgICAvLyBBbGxvd3MgdGhlIFwiRW50ZXJcIiBrZXkgdG8gc2VsZWN0IGFuIGl0ZW1cbiAgICAgICAgICBjYXNlIF9rZXlib2FyZDIuZGVmYXVsdC5rZXlzLkVOVEVSOlxuICAgICAgICAgICAgX3RoaXMyLnNlbGVjdEl0ZW0oaXRlbSwgdHJ1ZSk7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAvLyBBbGxvd3MgdGhlIFwiRXNjYXBlXCIga2V5IHRvIGNsb3NlIHRoZSBwaWNrZXJcbiAgICAgICAgICBjYXNlIF9rZXlib2FyZDIuZGVmYXVsdC5rZXlzLkVTQ0FQRTpcbiAgICAgICAgICAgIF90aGlzMi5lc2NhcGUoKTtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYnVpbGRMYWJlbCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGJ1aWxkTGFiZWwoKSB7XG4gICAgICB2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICBsYWJlbC5jbGFzc0xpc3QuYWRkKCdxbC1waWNrZXItbGFiZWwnKTtcbiAgICAgIGxhYmVsLmlubmVySFRNTCA9IF9kcm9wZG93bjIuZGVmYXVsdDtcbiAgICAgIGxhYmVsLnRhYkluZGV4ID0gJzAnO1xuICAgICAgbGFiZWwuc2V0QXR0cmlidXRlKCdyb2xlJywgJ2J1dHRvbicpO1xuICAgICAgbGFiZWwuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG4gICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgICByZXR1cm4gbGFiZWw7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYnVpbGRPcHRpb25zJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYnVpbGRPcHRpb25zKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciBvcHRpb25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgb3B0aW9ucy5jbGFzc0xpc3QuYWRkKCdxbC1waWNrZXItb3B0aW9ucycpO1xuXG4gICAgICAvLyBEb24ndCB3YW50IHNjcmVlbiByZWFkZXJzIHRvIHJlYWQgdGhpcyB1bnRpbCBvcHRpb25zIGFyZSB2aXNpYmxlXG4gICAgICBvcHRpb25zLnNldEF0dHJpYnV0ZSgnYXJpYS1oaWRkZW4nLCAndHJ1ZScpO1xuICAgICAgb3B0aW9ucy50YWJJbmRleCA9ICctMSc7XG5cbiAgICAgIC8vIE5lZWQgYSB1bmlxdWUgaWQgZm9yIGFyaWEtY29udHJvbHNcbiAgICAgIG9wdGlvbnMuaWQgPSAncWwtcGlja2VyLW9wdGlvbnMtJyArIG9wdGlvbnNDb3VudGVyO1xuICAgICAgb3B0aW9uc0NvdW50ZXIgKz0gMTtcbiAgICAgIHRoaXMubGFiZWwuc2V0QXR0cmlidXRlKCdhcmlhLWNvbnRyb2xzJywgb3B0aW9ucy5pZCk7XG5cbiAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICAgIFtdLnNsaWNlLmNhbGwodGhpcy5zZWxlY3Qub3B0aW9ucykuZm9yRWFjaChmdW5jdGlvbiAob3B0aW9uKSB7XG4gICAgICAgIHZhciBpdGVtID0gX3RoaXMzLmJ1aWxkSXRlbShvcHRpb24pO1xuICAgICAgICBvcHRpb25zLmFwcGVuZENoaWxkKGl0ZW0pO1xuICAgICAgICBpZiAob3B0aW9uLnNlbGVjdGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgX3RoaXMzLnNlbGVjdEl0ZW0oaXRlbSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb250YWluZXIuYXBwZW5kQ2hpbGQob3B0aW9ucyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYnVpbGRQaWNrZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBidWlsZFBpY2tlcigpIHtcbiAgICAgIHZhciBfdGhpczQgPSB0aGlzO1xuXG4gICAgICBbXS5zbGljZS5jYWxsKHRoaXMuc2VsZWN0LmF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgX3RoaXM0LmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoaXRlbS5uYW1lLCBpdGVtLnZhbHVlKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgncWwtcGlja2VyJyk7XG4gICAgICB0aGlzLmxhYmVsID0gdGhpcy5idWlsZExhYmVsKCk7XG4gICAgICB0aGlzLmJ1aWxkT3B0aW9ucygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2VzY2FwZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGVzY2FwZSgpIHtcbiAgICAgIHZhciBfdGhpczUgPSB0aGlzO1xuXG4gICAgICAvLyBDbG9zZSBtZW51IGFuZCByZXR1cm4gZm9jdXMgdG8gdHJpZ2dlciBsYWJlbFxuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgLy8gTmVlZCBzZXRUaW1lb3V0IGZvciBhY2Nlc3NpYmlsaXR5IHRvIGVuc3VyZSB0aGF0IHRoZSBicm93c2VyIGV4ZWN1dGVzXG4gICAgICAvLyBmb2N1cyBvbiB0aGUgbmV4dCBwcm9jZXNzIHRocmVhZCBhbmQgYWZ0ZXIgYW55IERPTSBjb250ZW50IGNoYW5nZXNcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXM1LmxhYmVsLmZvY3VzKCk7XG4gICAgICB9LCAxKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbG9zZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsb3NlKCkge1xuICAgICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LnJlbW92ZSgncWwtZXhwYW5kZWQnKTtcbiAgICAgIHRoaXMubGFiZWwuc2V0QXR0cmlidXRlKCdhcmlhLWV4cGFuZGVkJywgJ2ZhbHNlJyk7XG4gICAgICB0aGlzLm9wdGlvbnMuc2V0QXR0cmlidXRlKCdhcmlhLWhpZGRlbicsICd0cnVlJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnc2VsZWN0SXRlbScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNlbGVjdEl0ZW0oaXRlbSkge1xuICAgICAgdmFyIHRyaWdnZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlO1xuXG4gICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcucWwtc2VsZWN0ZWQnKTtcbiAgICAgIGlmIChpdGVtID09PSBzZWxlY3RlZCkgcmV0dXJuO1xuICAgICAgaWYgKHNlbGVjdGVkICE9IG51bGwpIHtcbiAgICAgICAgc2VsZWN0ZWQuY2xhc3NMaXN0LnJlbW92ZSgncWwtc2VsZWN0ZWQnKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtID09IG51bGwpIHJldHVybjtcbiAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZCgncWwtc2VsZWN0ZWQnKTtcbiAgICAgIHRoaXMuc2VsZWN0LnNlbGVjdGVkSW5kZXggPSBbXS5pbmRleE9mLmNhbGwoaXRlbS5wYXJlbnROb2RlLmNoaWxkcmVuLCBpdGVtKTtcbiAgICAgIGlmIChpdGVtLmhhc0F0dHJpYnV0ZSgnZGF0YS12YWx1ZScpKSB7XG4gICAgICAgIHRoaXMubGFiZWwuc2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJywgaXRlbS5nZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsdWUnKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmxhYmVsLnJlbW92ZUF0dHJpYnV0ZSgnZGF0YS12YWx1ZScpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW0uaGFzQXR0cmlidXRlKCdkYXRhLWxhYmVsJykpIHtcbiAgICAgICAgdGhpcy5sYWJlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbGFiZWwnLCBpdGVtLmdldEF0dHJpYnV0ZSgnZGF0YS1sYWJlbCcpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubGFiZWwucmVtb3ZlQXR0cmlidXRlKCdkYXRhLWxhYmVsJyk7XG4gICAgICB9XG4gICAgICBpZiAodHJpZ2dlcikge1xuICAgICAgICBpZiAodHlwZW9mIEV2ZW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgdGhpcy5zZWxlY3QuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2NoYW5nZScpKTtcbiAgICAgICAgfSBlbHNlIGlmICgodHlwZW9mIEV2ZW50ID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihFdmVudCkpID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgIC8vIElFMTFcbiAgICAgICAgICB2YXIgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcbiAgICAgICAgICBldmVudC5pbml0RXZlbnQoJ2NoYW5nZScsIHRydWUsIHRydWUpO1xuICAgICAgICAgIHRoaXMuc2VsZWN0LmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgICB2YXIgb3B0aW9uID0gdm9pZCAwO1xuICAgICAgaWYgKHRoaXMuc2VsZWN0LnNlbGVjdGVkSW5kZXggPiAtMSkge1xuICAgICAgICB2YXIgaXRlbSA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5xbC1waWNrZXItb3B0aW9ucycpLmNoaWxkcmVuW3RoaXMuc2VsZWN0LnNlbGVjdGVkSW5kZXhdO1xuICAgICAgICBvcHRpb24gPSB0aGlzLnNlbGVjdC5vcHRpb25zW3RoaXMuc2VsZWN0LnNlbGVjdGVkSW5kZXhdO1xuICAgICAgICB0aGlzLnNlbGVjdEl0ZW0oaXRlbSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNlbGVjdEl0ZW0obnVsbCk7XG4gICAgICB9XG4gICAgICB2YXIgaXNBY3RpdmUgPSBvcHRpb24gIT0gbnVsbCAmJiBvcHRpb24gIT09IHRoaXMuc2VsZWN0LnF1ZXJ5U2VsZWN0b3IoJ29wdGlvbltzZWxlY3RlZF0nKTtcbiAgICAgIHRoaXMubGFiZWwuY2xhc3NMaXN0LnRvZ2dsZSgncWwtYWN0aXZlJywgaXNBY3RpdmUpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQaWNrZXI7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFBpY2tlcjtcblxuLyoqKi8gfSksXG4vKiAyOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfcXVpbGwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXG52YXIgX3F1aWxsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsKTtcblxudmFyIF9ibG9jayA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cbnZhciBfYmxvY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmxvY2spO1xuXG52YXIgX2JyZWFrID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNik7XG5cbnZhciBfYnJlYWsyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnJlYWspO1xuXG52YXIgX2NvbnRhaW5lciA9IF9fd2VicGFja19yZXF1aXJlX18oMjUpO1xuXG52YXIgX2NvbnRhaW5lcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jb250YWluZXIpO1xuXG52YXIgX2N1cnNvciA9IF9fd2VicGFja19yZXF1aXJlX18oMjQpO1xuXG52YXIgX2N1cnNvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9jdXJzb3IpO1xuXG52YXIgX2VtYmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNSk7XG5cbnZhciBfZW1iZWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1iZWQpO1xuXG52YXIgX2lubGluZSA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG5cbnZhciBfaW5saW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lubGluZSk7XG5cbnZhciBfc2Nyb2xsID0gX193ZWJwYWNrX3JlcXVpcmVfXygyMik7XG5cbnZhciBfc2Nyb2xsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Njcm9sbCk7XG5cbnZhciBfdGV4dCA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG5cbnZhciBfdGV4dDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90ZXh0KTtcblxudmFyIF9jbGlwYm9hcmQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU1KTtcblxudmFyIF9jbGlwYm9hcmQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY2xpcGJvYXJkKTtcblxudmFyIF9oaXN0b3J5ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0Mik7XG5cbnZhciBfaGlzdG9yeTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oaXN0b3J5KTtcblxudmFyIF9rZXlib2FyZCA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpO1xuXG52YXIgX2tleWJvYXJkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleWJvYXJkKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuX3F1aWxsMi5kZWZhdWx0LnJlZ2lzdGVyKHtcbiAgJ2Jsb3RzL2Jsb2NrJzogX2Jsb2NrMi5kZWZhdWx0LFxuICAnYmxvdHMvYmxvY2svZW1iZWQnOiBfYmxvY2suQmxvY2tFbWJlZCxcbiAgJ2Jsb3RzL2JyZWFrJzogX2JyZWFrMi5kZWZhdWx0LFxuICAnYmxvdHMvY29udGFpbmVyJzogX2NvbnRhaW5lcjIuZGVmYXVsdCxcbiAgJ2Jsb3RzL2N1cnNvcic6IF9jdXJzb3IyLmRlZmF1bHQsXG4gICdibG90cy9lbWJlZCc6IF9lbWJlZDIuZGVmYXVsdCxcbiAgJ2Jsb3RzL2lubGluZSc6IF9pbmxpbmUyLmRlZmF1bHQsXG4gICdibG90cy9zY3JvbGwnOiBfc2Nyb2xsMi5kZWZhdWx0LFxuICAnYmxvdHMvdGV4dCc6IF90ZXh0Mi5kZWZhdWx0LFxuXG4gICdtb2R1bGVzL2NsaXBib2FyZCc6IF9jbGlwYm9hcmQyLmRlZmF1bHQsXG4gICdtb2R1bGVzL2hpc3RvcnknOiBfaGlzdG9yeTIuZGVmYXVsdCxcbiAgJ21vZHVsZXMva2V5Ym9hcmQnOiBfa2V5Ym9hcmQyLmRlZmF1bHRcbn0pO1xuXG5fcGFyY2htZW50Mi5kZWZhdWx0LnJlZ2lzdGVyKF9ibG9jazIuZGVmYXVsdCwgX2JyZWFrMi5kZWZhdWx0LCBfY3Vyc29yMi5kZWZhdWx0LCBfaW5saW5lMi5kZWZhdWx0LCBfc2Nyb2xsMi5kZWZhdWx0LCBfdGV4dDIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF9xdWlsbDIuZGVmYXVsdDtcblxuLyoqKi8gfSksXG4vKiAzMCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFJlZ2lzdHJ5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbnZhciBTaGFkb3dCbG90ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNoYWRvd0Jsb3QoZG9tTm9kZSkge1xuICAgICAgICB0aGlzLmRvbU5vZGUgPSBkb21Ob2RlO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHRoaXMuZG9tTm9kZVtSZWdpc3RyeS5EQVRBX0tFWV0gPSB7IGJsb3Q6IHRoaXMgfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNoYWRvd0Jsb3QucHJvdG90eXBlLCBcInN0YXRpY3NcIiwge1xuICAgICAgICAvLyBIYWNrIGZvciBhY2Nlc3NpbmcgaW5oZXJpdGVkIHN0YXRpYyBtZXRob2RzXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RydWN0b3I7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIFNoYWRvd0Jsb3QuY3JlYXRlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIGlmICh0aGlzLnRhZ05hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJlZ2lzdHJ5LlBhcmNobWVudEVycm9yKCdCbG90IGRlZmluaXRpb24gbWlzc2luZyB0YWdOYW1lJyk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5vZGU7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMudGFnTmFtZSkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1VwcGVyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZUludCh2YWx1ZSkudG9TdHJpbmcoKSA9PT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBwYXJzZUludCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0aGlzLnRhZ05hbWVbdmFsdWUgLSAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnRhZ05hbWUuaW5kZXhPZih2YWx1ZSkgPiAtMSkge1xuICAgICAgICAgICAgICAgIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRoaXMudGFnTmFtZVswXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0aGlzLnRhZ05hbWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNsYXNzTmFtZSkge1xuICAgICAgICAgICAgbm9kZS5jbGFzc0xpc3QuYWRkKHRoaXMuY2xhc3NOYW1lKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIFNoYWRvd0Jsb3QucHJvdG90eXBlLmF0dGFjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsID0gdGhpcy5wYXJlbnQuc2Nyb2xsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGRvbU5vZGUgPSB0aGlzLmRvbU5vZGUuY2xvbmVOb2RlKGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIFJlZ2lzdHJ5LmNyZWF0ZShkb21Ob2RlKTtcbiAgICB9O1xuICAgIFNoYWRvd0Jsb3QucHJvdG90eXBlLmRldGFjaCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICE9IG51bGwpXG4gICAgICAgICAgICB0aGlzLnBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBkZWxldGUgdGhpcy5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXTtcbiAgICB9O1xuICAgIFNoYWRvd0Jsb3QucHJvdG90eXBlLmRlbGV0ZUF0ID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIGJsb3QgPSB0aGlzLmlzb2xhdGUoaW5kZXgsIGxlbmd0aCk7XG4gICAgICAgIGJsb3QucmVtb3ZlKCk7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5mb3JtYXRBdCA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoLCBuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgYmxvdCA9IHRoaXMuaXNvbGF0ZShpbmRleCwgbGVuZ3RoKTtcbiAgICAgICAgaWYgKFJlZ2lzdHJ5LnF1ZXJ5KG5hbWUsIFJlZ2lzdHJ5LlNjb3BlLkJMT1QpICE9IG51bGwgJiYgdmFsdWUpIHtcbiAgICAgICAgICAgIGJsb3Qud3JhcChuYW1lLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoUmVnaXN0cnkucXVlcnkobmFtZSwgUmVnaXN0cnkuU2NvcGUuQVRUUklCVVRFKSAhPSBudWxsKSB7XG4gICAgICAgICAgICB2YXIgcGFyZW50ID0gUmVnaXN0cnkuY3JlYXRlKHRoaXMuc3RhdGljcy5zY29wZSk7XG4gICAgICAgICAgICBibG90LndyYXAocGFyZW50KTtcbiAgICAgICAgICAgIHBhcmVudC5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5pbnNlcnRBdCA9IGZ1bmN0aW9uIChpbmRleCwgdmFsdWUsIGRlZikge1xuICAgICAgICB2YXIgYmxvdCA9IGRlZiA9PSBudWxsID8gUmVnaXN0cnkuY3JlYXRlKCd0ZXh0JywgdmFsdWUpIDogUmVnaXN0cnkuY3JlYXRlKHZhbHVlLCBkZWYpO1xuICAgICAgICB2YXIgcmVmID0gdGhpcy5zcGxpdChpbmRleCk7XG4gICAgICAgIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZShibG90LCByZWYpO1xuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUuaW5zZXJ0SW50byA9IGZ1bmN0aW9uIChwYXJlbnRCbG90LCByZWZCbG90KSB7XG4gICAgICAgIGlmIChyZWZCbG90ID09PSB2b2lkIDApIHsgcmVmQmxvdCA9IG51bGw7IH1cbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50LmNoaWxkcmVuLnJlbW92ZSh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmVmRG9tTm9kZSA9IG51bGw7XG4gICAgICAgIHBhcmVudEJsb3QuY2hpbGRyZW4uaW5zZXJ0QmVmb3JlKHRoaXMsIHJlZkJsb3QpO1xuICAgICAgICBpZiAocmVmQmxvdCAhPSBudWxsKSB7XG4gICAgICAgICAgICByZWZEb21Ob2RlID0gcmVmQmxvdC5kb21Ob2RlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmRvbU5vZGUucGFyZW50Tm9kZSAhPSBwYXJlbnRCbG90LmRvbU5vZGUgfHxcbiAgICAgICAgICAgIHRoaXMuZG9tTm9kZS5uZXh0U2libGluZyAhPSByZWZEb21Ob2RlKSB7XG4gICAgICAgICAgICBwYXJlbnRCbG90LmRvbU5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuZG9tTm9kZSwgcmVmRG9tTm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRCbG90O1xuICAgICAgICB0aGlzLmF0dGFjaCgpO1xuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUuaXNvbGF0ZSA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLnNwbGl0KGluZGV4KTtcbiAgICAgICAgdGFyZ2V0LnNwbGl0KGxlbmd0aCk7XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5sZW5ndGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUub2Zmc2V0ID0gZnVuY3Rpb24gKHJvb3QpIHtcbiAgICAgICAgaWYgKHJvb3QgPT09IHZvaWQgMCkgeyByb290ID0gdGhpcy5wYXJlbnQ7IH1cbiAgICAgICAgaWYgKHRoaXMucGFyZW50ID09IG51bGwgfHwgdGhpcyA9PSByb290KVxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudC5jaGlsZHJlbi5vZmZzZXQodGhpcykgKyB0aGlzLnBhcmVudC5vZmZzZXQocm9vdCk7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5vcHRpbWl6ZSA9IGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICAgIC8vIFRPRE8gY2xlYW4gdXAgb25jZSB3ZSB1c2UgV2Vha01hcFxuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGlmICh0aGlzLmRvbU5vZGVbUmVnaXN0cnkuREFUQV9LRVldICE9IG51bGwpIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmRvbU5vZGVbUmVnaXN0cnkuREFUQV9LRVldLm11dGF0aW9ucztcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5kb21Ob2RlLnBhcmVudE5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5kb21Ob2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5kb21Ob2RlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRldGFjaCgpO1xuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUucmVwbGFjZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgaWYgKHRhcmdldC5wYXJlbnQgPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGFyZ2V0LnBhcmVudC5pbnNlcnRCZWZvcmUodGhpcywgdGFyZ2V0Lm5leHQpO1xuICAgICAgICB0YXJnZXQucmVtb3ZlKCk7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS5yZXBsYWNlV2l0aCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgcmVwbGFjZW1lbnQgPSB0eXBlb2YgbmFtZSA9PT0gJ3N0cmluZycgPyBSZWdpc3RyeS5jcmVhdGUobmFtZSwgdmFsdWUpIDogbmFtZTtcbiAgICAgICAgcmVwbGFjZW1lbnQucmVwbGFjZSh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHJlcGxhY2VtZW50O1xuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUuc3BsaXQgPSBmdW5jdGlvbiAoaW5kZXgsIGZvcmNlKSB7XG4gICAgICAgIHJldHVybiBpbmRleCA9PT0gMCA/IHRoaXMgOiB0aGlzLm5leHQ7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAobXV0YXRpb25zLCBjb250ZXh0KSB7XG4gICAgICAgIC8vIE5vdGhpbmcgdG8gZG8gYnkgZGVmYXVsdFxuICAgIH07XG4gICAgU2hhZG93QmxvdC5wcm90b3R5cGUud3JhcCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJyA/IFJlZ2lzdHJ5LmNyZWF0ZShuYW1lLCB2YWx1ZSkgOiBuYW1lO1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKHdyYXBwZXIsIHRoaXMubmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgd3JhcHBlci5hcHBlbmRDaGlsZCh0aGlzKTtcbiAgICAgICAgcmV0dXJuIHdyYXBwZXI7XG4gICAgfTtcbiAgICBTaGFkb3dCbG90LmJsb3ROYW1lID0gJ2Fic3RyYWN0JztcbiAgICByZXR1cm4gU2hhZG93QmxvdDtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBTaGFkb3dCbG90O1xuXG5cbi8qKiovIH0pLFxuLyogMzEgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBhdHRyaWJ1dG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcbnZhciBjbGFzc18xID0gX193ZWJwYWNrX3JlcXVpcmVfXygzMik7XG52YXIgc3R5bGVfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMzMpO1xudmFyIFJlZ2lzdHJ5ID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKTtcbnZhciBBdHRyaWJ1dG9yU3RvcmUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQXR0cmlidXRvclN0b3JlKGRvbU5vZGUpIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0ge307XG4gICAgICAgIHRoaXMuZG9tTm9kZSA9IGRvbU5vZGU7XG4gICAgICAgIHRoaXMuYnVpbGQoKTtcbiAgICB9XG4gICAgQXR0cmlidXRvclN0b3JlLnByb3RvdHlwZS5hdHRyaWJ1dGUgPSBmdW5jdGlvbiAoYXR0cmlidXRlLCB2YWx1ZSkge1xuICAgICAgICAvLyB2ZXJiXG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKGF0dHJpYnV0ZS5hZGQodGhpcy5kb21Ob2RlLCB2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoYXR0cmlidXRlLnZhbHVlKHRoaXMuZG9tTm9kZSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXNbYXR0cmlidXRlLmF0dHJOYW1lXSA9IGF0dHJpYnV0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmF0dHJpYnV0ZXNbYXR0cmlidXRlLmF0dHJOYW1lXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhdHRyaWJ1dGUucmVtb3ZlKHRoaXMuZG9tTm9kZSk7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5hdHRyaWJ1dGVzW2F0dHJpYnV0ZS5hdHRyTmFtZV07XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEF0dHJpYnV0b3JTdG9yZS5wcm90b3R5cGUuYnVpbGQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IHt9O1xuICAgICAgICB2YXIgYXR0cmlidXRlcyA9IGF0dHJpYnV0b3JfMS5kZWZhdWx0LmtleXModGhpcy5kb21Ob2RlKTtcbiAgICAgICAgdmFyIGNsYXNzZXMgPSBjbGFzc18xLmRlZmF1bHQua2V5cyh0aGlzLmRvbU5vZGUpO1xuICAgICAgICB2YXIgc3R5bGVzID0gc3R5bGVfMS5kZWZhdWx0LmtleXModGhpcy5kb21Ob2RlKTtcbiAgICAgICAgYXR0cmlidXRlc1xuICAgICAgICAgICAgLmNvbmNhdChjbGFzc2VzKVxuICAgICAgICAgICAgLmNvbmNhdChzdHlsZXMpXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgICAgdmFyIGF0dHIgPSBSZWdpc3RyeS5xdWVyeShuYW1lLCBSZWdpc3RyeS5TY29wZS5BVFRSSUJVVEUpO1xuICAgICAgICAgICAgaWYgKGF0dHIgaW5zdGFuY2VvZiBhdHRyaWJ1dG9yXzEuZGVmYXVsdCkge1xuICAgICAgICAgICAgICAgIF90aGlzLmF0dHJpYnV0ZXNbYXR0ci5hdHRyTmFtZV0gPSBhdHRyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEF0dHJpYnV0b3JTdG9yZS5wcm90b3R5cGUuY29weSA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IF90aGlzLmF0dHJpYnV0ZXNba2V5XS52YWx1ZShfdGhpcy5kb21Ob2RlKTtcbiAgICAgICAgICAgIHRhcmdldC5mb3JtYXQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgQXR0cmlidXRvclN0b3JlLnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLmNvcHkodGFyZ2V0KTtcbiAgICAgICAgT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIF90aGlzLmF0dHJpYnV0ZXNba2V5XS5yZW1vdmUoX3RoaXMuZG9tTm9kZSk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMgPSB7fTtcbiAgICB9O1xuICAgIEF0dHJpYnV0b3JTdG9yZS5wcm90b3R5cGUudmFsdWVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5hdHRyaWJ1dGVzKS5yZWR1Y2UoZnVuY3Rpb24gKGF0dHJpYnV0ZXMsIG5hbWUpIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZXNbbmFtZV0gPSBfdGhpcy5hdHRyaWJ1dGVzW25hbWVdLnZhbHVlKF90aGlzLmRvbU5vZGUpO1xuICAgICAgICAgICAgcmV0dXJuIGF0dHJpYnV0ZXM7XG4gICAgICAgIH0sIHt9KTtcbiAgICB9O1xuICAgIHJldHVybiBBdHRyaWJ1dG9yU3RvcmU7XG59KCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQXR0cmlidXRvclN0b3JlO1xuXG5cbi8qKiovIH0pLFxuLyogMzIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGF0dHJpYnV0b3JfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xuZnVuY3Rpb24gbWF0Y2gobm9kZSwgcHJlZml4KSB7XG4gICAgdmFyIGNsYXNzTmFtZSA9IG5vZGUuZ2V0QXR0cmlidXRlKCdjbGFzcycpIHx8ICcnO1xuICAgIHJldHVybiBjbGFzc05hbWUuc3BsaXQoL1xccysvKS5maWx0ZXIoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUuaW5kZXhPZihwcmVmaXggKyBcIi1cIikgPT09IDA7XG4gICAgfSk7XG59XG52YXIgQ2xhc3NBdHRyaWJ1dG9yID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhDbGFzc0F0dHJpYnV0b3IsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQ2xhc3NBdHRyaWJ1dG9yKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIENsYXNzQXR0cmlidXRvci5rZXlzID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIChub2RlLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSB8fCAnJykuc3BsaXQoL1xccysvKS5tYXAoZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBuYW1lXG4gICAgICAgICAgICAgICAgLnNwbGl0KCctJylcbiAgICAgICAgICAgICAgICAuc2xpY2UoMCwgLTEpXG4gICAgICAgICAgICAgICAgLmpvaW4oJy0nKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBDbGFzc0F0dHJpYnV0b3IucHJvdG90eXBlLmFkZCA9IGZ1bmN0aW9uIChub2RlLCB2YWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMuY2FuQWRkKG5vZGUsIHZhbHVlKSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgdGhpcy5yZW1vdmUobm9kZSk7XG4gICAgICAgIG5vZGUuY2xhc3NMaXN0LmFkZCh0aGlzLmtleU5hbWUgKyBcIi1cIiArIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfTtcbiAgICBDbGFzc0F0dHJpYnV0b3IucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciBtYXRjaGVzID0gbWF0Y2gobm9kZSwgdGhpcy5rZXlOYW1lKTtcbiAgICAgICAgbWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgICAgICBub2RlLmNsYXNzTGlzdC5yZW1vdmUobmFtZSk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAobm9kZS5jbGFzc0xpc3QubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICBub2RlLnJlbW92ZUF0dHJpYnV0ZSgnY2xhc3MnKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQ2xhc3NBdHRyaWJ1dG9yLnByb3RvdHlwZS52YWx1ZSA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBtYXRjaChub2RlLCB0aGlzLmtleU5hbWUpWzBdIHx8ICcnO1xuICAgICAgICB2YXIgdmFsdWUgPSByZXN1bHQuc2xpY2UodGhpcy5rZXlOYW1lLmxlbmd0aCArIDEpOyAvLyArMSBmb3IgaHlwaGVuXG4gICAgICAgIHJldHVybiB0aGlzLmNhbkFkZChub2RlLCB2YWx1ZSkgPyB2YWx1ZSA6ICcnO1xuICAgIH07XG4gICAgcmV0dXJuIENsYXNzQXR0cmlidXRvcjtcbn0oYXR0cmlidXRvcl8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IENsYXNzQXR0cmlidXRvcjtcblxuXG4vKioqLyB9KSxcbi8qIDMzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBhdHRyaWJ1dG9yXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKTtcbmZ1bmN0aW9uIGNhbWVsaXplKG5hbWUpIHtcbiAgICB2YXIgcGFydHMgPSBuYW1lLnNwbGl0KCctJyk7XG4gICAgdmFyIHJlc3QgPSBwYXJ0c1xuICAgICAgICAuc2xpY2UoMSlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAocGFydCkge1xuICAgICAgICByZXR1cm4gcGFydFswXS50b1VwcGVyQ2FzZSgpICsgcGFydC5zbGljZSgxKTtcbiAgICB9KVxuICAgICAgICAuam9pbignJyk7XG4gICAgcmV0dXJuIHBhcnRzWzBdICsgcmVzdDtcbn1cbnZhciBTdHlsZUF0dHJpYnV0b3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFN0eWxlQXR0cmlidXRvciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBTdHlsZUF0dHJpYnV0b3IoKSB7XG4gICAgICAgIHJldHVybiBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICB9XG4gICAgU3R5bGVBdHRyaWJ1dG9yLmtleXMgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICByZXR1cm4gKG5vZGUuZ2V0QXR0cmlidXRlKCdzdHlsZScpIHx8ICcnKS5zcGxpdCgnOycpLm1hcChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBhcnIgPSB2YWx1ZS5zcGxpdCgnOicpO1xuICAgICAgICAgICAgcmV0dXJuIGFyclswXS50cmltKCk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU3R5bGVBdHRyaWJ1dG9yLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAobm9kZSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLmNhbkFkZChub2RlLCB2YWx1ZSkpXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgbm9kZS5zdHlsZVtjYW1lbGl6ZSh0aGlzLmtleU5hbWUpXSA9IHZhbHVlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9O1xuICAgIFN0eWxlQXR0cmlidXRvci5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBub2RlLnN0eWxlW2NhbWVsaXplKHRoaXMua2V5TmFtZSldID0gJyc7XG4gICAgICAgIGlmICghbm9kZS5nZXRBdHRyaWJ1dGUoJ3N0eWxlJykpIHtcbiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTdHlsZUF0dHJpYnV0b3IucHJvdG90eXBlLnZhbHVlID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICB2YXIgdmFsdWUgPSBub2RlLnN0eWxlW2NhbWVsaXplKHRoaXMua2V5TmFtZSldO1xuICAgICAgICByZXR1cm4gdGhpcy5jYW5BZGQobm9kZSwgdmFsdWUpID8gdmFsdWUgOiAnJztcbiAgICB9O1xuICAgIHJldHVybiBTdHlsZUF0dHJpYnV0b3I7XG59KGF0dHJpYnV0b3JfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBTdHlsZUF0dHJpYnV0b3I7XG5cblxuLyoqKi8gfSksXG4vKiAzNCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgVGhlbWUgPSBmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIFRoZW1lKHF1aWxsLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFRoZW1lKTtcblxuICAgIHRoaXMucXVpbGwgPSBxdWlsbDtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMubW9kdWxlcyA9IHt9O1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRoZW1lLCBbe1xuICAgIGtleTogJ2luaXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBpbml0KCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgT2JqZWN0LmtleXModGhpcy5vcHRpb25zLm1vZHVsZXMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAgICAgaWYgKF90aGlzLm1vZHVsZXNbbmFtZV0gPT0gbnVsbCkge1xuICAgICAgICAgIF90aGlzLmFkZE1vZHVsZShuYW1lKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYWRkTW9kdWxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkTW9kdWxlKG5hbWUpIHtcbiAgICAgIHZhciBtb2R1bGVDbGFzcyA9IHRoaXMucXVpbGwuY29uc3RydWN0b3IuaW1wb3J0KCdtb2R1bGVzLycgKyBuYW1lKTtcbiAgICAgIHRoaXMubW9kdWxlc1tuYW1lXSA9IG5ldyBtb2R1bGVDbGFzcyh0aGlzLnF1aWxsLCB0aGlzLm9wdGlvbnMubW9kdWxlc1tuYW1lXSB8fCB7fSk7XG4gICAgICByZXR1cm4gdGhpcy5tb2R1bGVzW25hbWVdO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUaGVtZTtcbn0oKTtcblxuVGhlbWUuREVGQVVMVFMgPSB7XG4gIG1vZHVsZXM6IHt9XG59O1xuVGhlbWUudGhlbWVzID0ge1xuICAnZGVmYXVsdCc6IFRoZW1lXG59O1xuXG5leHBvcnRzLmRlZmF1bHQgPSBUaGVtZTtcblxuLyoqKi8gfSksXG4vKiAzNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF90ZXh0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3KTtcblxudmFyIF90ZXh0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RleHQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBHVUFSRF9URVhUID0gJ1xcdUZFRkYnO1xuXG52YXIgRW1iZWQgPSBmdW5jdGlvbiAoX1BhcmNobWVudCRFbWJlZCkge1xuICBfaW5oZXJpdHMoRW1iZWQsIF9QYXJjaG1lbnQkRW1iZWQpO1xuXG4gIGZ1bmN0aW9uIEVtYmVkKG5vZGUpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRW1iZWQpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEVtYmVkLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRW1iZWQpKS5jYWxsKHRoaXMsIG5vZGUpKTtcblxuICAgIF90aGlzLmNvbnRlbnROb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIF90aGlzLmNvbnRlbnROb2RlLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgZmFsc2UpO1xuICAgIFtdLnNsaWNlLmNhbGwoX3RoaXMuZG9tTm9kZS5jaGlsZE5vZGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZE5vZGUpIHtcbiAgICAgIF90aGlzLmNvbnRlbnROb2RlLmFwcGVuZENoaWxkKGNoaWxkTm9kZSk7XG4gICAgfSk7XG4gICAgX3RoaXMubGVmdEd1YXJkID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoR1VBUkRfVEVYVCk7XG4gICAgX3RoaXMucmlnaHRHdWFyZCA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKEdVQVJEX1RFWFQpO1xuICAgIF90aGlzLmRvbU5vZGUuYXBwZW5kQ2hpbGQoX3RoaXMubGVmdEd1YXJkKTtcbiAgICBfdGhpcy5kb21Ob2RlLmFwcGVuZENoaWxkKF90aGlzLmNvbnRlbnROb2RlKTtcbiAgICBfdGhpcy5kb21Ob2RlLmFwcGVuZENoaWxkKF90aGlzLnJpZ2h0R3VhcmQpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhFbWJlZCwgW3tcbiAgICBrZXk6ICdpbmRleCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluZGV4KG5vZGUsIG9mZnNldCkge1xuICAgICAgaWYgKG5vZGUgPT09IHRoaXMubGVmdEd1YXJkKSByZXR1cm4gMDtcbiAgICAgIGlmIChub2RlID09PSB0aGlzLnJpZ2h0R3VhcmQpIHJldHVybiAxO1xuICAgICAgcmV0dXJuIF9nZXQoRW1iZWQucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoRW1iZWQucHJvdG90eXBlKSwgJ2luZGV4JywgdGhpcykuY2FsbCh0aGlzLCBub2RlLCBvZmZzZXQpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Jlc3RvcmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXN0b3JlKG5vZGUpIHtcbiAgICAgIHZhciByYW5nZSA9IHZvaWQgMCxcbiAgICAgICAgICB0ZXh0Tm9kZSA9IHZvaWQgMDtcbiAgICAgIHZhciB0ZXh0ID0gbm9kZS5kYXRhLnNwbGl0KEdVQVJEX1RFWFQpLmpvaW4oJycpO1xuICAgICAgaWYgKG5vZGUgPT09IHRoaXMubGVmdEd1YXJkKSB7XG4gICAgICAgIGlmICh0aGlzLnByZXYgaW5zdGFuY2VvZiBfdGV4dDIuZGVmYXVsdCkge1xuICAgICAgICAgIHZhciBwcmV2TGVuZ3RoID0gdGhpcy5wcmV2Lmxlbmd0aCgpO1xuICAgICAgICAgIHRoaXMucHJldi5pbnNlcnRBdChwcmV2TGVuZ3RoLCB0ZXh0KTtcbiAgICAgICAgICByYW5nZSA9IHtcbiAgICAgICAgICAgIHN0YXJ0Tm9kZTogdGhpcy5wcmV2LmRvbU5vZGUsXG4gICAgICAgICAgICBzdGFydE9mZnNldDogcHJldkxlbmd0aCArIHRleHQubGVuZ3RoXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHRleHQpO1xuICAgICAgICAgIHRoaXMucGFyZW50Lmluc2VydEJlZm9yZShfcGFyY2htZW50Mi5kZWZhdWx0LmNyZWF0ZSh0ZXh0Tm9kZSksIHRoaXMpO1xuICAgICAgICAgIHJhbmdlID0ge1xuICAgICAgICAgICAgc3RhcnROb2RlOiB0ZXh0Tm9kZSxcbiAgICAgICAgICAgIHN0YXJ0T2Zmc2V0OiB0ZXh0Lmxlbmd0aFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAobm9kZSA9PT0gdGhpcy5yaWdodEd1YXJkKSB7XG4gICAgICAgIGlmICh0aGlzLm5leHQgaW5zdGFuY2VvZiBfdGV4dDIuZGVmYXVsdCkge1xuICAgICAgICAgIHRoaXMubmV4dC5pbnNlcnRBdCgwLCB0ZXh0KTtcbiAgICAgICAgICByYW5nZSA9IHtcbiAgICAgICAgICAgIHN0YXJ0Tm9kZTogdGhpcy5uZXh0LmRvbU5vZGUsXG4gICAgICAgICAgICBzdGFydE9mZnNldDogdGV4dC5sZW5ndGhcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dCk7XG4gICAgICAgICAgdGhpcy5wYXJlbnQuaW5zZXJ0QmVmb3JlKF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKHRleHROb2RlKSwgdGhpcy5uZXh0KTtcbiAgICAgICAgICByYW5nZSA9IHtcbiAgICAgICAgICAgIHN0YXJ0Tm9kZTogdGV4dE5vZGUsXG4gICAgICAgICAgICBzdGFydE9mZnNldDogdGV4dC5sZW5ndGhcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBub2RlLmRhdGEgPSBHVUFSRF9URVhUO1xuICAgICAgcmV0dXJuIHJhbmdlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3VwZGF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZShtdXRhdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBtdXRhdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobXV0YXRpb24pIHtcbiAgICAgICAgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdjaGFyYWN0ZXJEYXRhJyAmJiAobXV0YXRpb24udGFyZ2V0ID09PSBfdGhpczIubGVmdEd1YXJkIHx8IG11dGF0aW9uLnRhcmdldCA9PT0gX3RoaXMyLnJpZ2h0R3VhcmQpKSB7XG4gICAgICAgICAgdmFyIHJhbmdlID0gX3RoaXMyLnJlc3RvcmUobXV0YXRpb24udGFyZ2V0KTtcbiAgICAgICAgICBpZiAocmFuZ2UpIGNvbnRleHQucmFuZ2UgPSByYW5nZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEVtYmVkO1xufShfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gRW1iZWQ7XG5cbi8qKiovIH0pLFxuLyogMzYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQWxpZ25TdHlsZSA9IGV4cG9ydHMuQWxpZ25DbGFzcyA9IGV4cG9ydHMuQWxpZ25BdHRyaWJ1dGUgPSB1bmRlZmluZWQ7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIGNvbmZpZyA9IHtcbiAgc2NvcGU6IF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0ssXG4gIHdoaXRlbGlzdDogWydyaWdodCcsICdjZW50ZXInLCAnanVzdGlmeSddXG59O1xuXG52YXIgQWxpZ25BdHRyaWJ1dGUgPSBuZXcgX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLkF0dHJpYnV0ZSgnYWxpZ24nLCAnYWxpZ24nLCBjb25maWcpO1xudmFyIEFsaWduQ2xhc3MgPSBuZXcgX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLkNsYXNzKCdhbGlnbicsICdxbC1hbGlnbicsIGNvbmZpZyk7XG52YXIgQWxpZ25TdHlsZSA9IG5ldyBfcGFyY2htZW50Mi5kZWZhdWx0LkF0dHJpYnV0b3IuU3R5bGUoJ2FsaWduJywgJ3RleHQtYWxpZ24nLCBjb25maWcpO1xuXG5leHBvcnRzLkFsaWduQXR0cmlidXRlID0gQWxpZ25BdHRyaWJ1dGU7XG5leHBvcnRzLkFsaWduQ2xhc3MgPSBBbGlnbkNsYXNzO1xuZXhwb3J0cy5BbGlnblN0eWxlID0gQWxpZ25TdHlsZTtcblxuLyoqKi8gfSksXG4vKiAzNyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5CYWNrZ3JvdW5kU3R5bGUgPSBleHBvcnRzLkJhY2tncm91bmRDbGFzcyA9IHVuZGVmaW5lZDtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG52YXIgX2NvbG9yID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBCYWNrZ3JvdW5kQ2xhc3MgPSBuZXcgX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLkNsYXNzKCdiYWNrZ3JvdW5kJywgJ3FsLWJnJywge1xuICBzY29wZTogX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5JTkxJTkVcbn0pO1xudmFyIEJhY2tncm91bmRTdHlsZSA9IG5ldyBfY29sb3IuQ29sb3JBdHRyaWJ1dG9yKCdiYWNrZ3JvdW5kJywgJ2JhY2tncm91bmQtY29sb3InLCB7XG4gIHNjb3BlOiBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLklOTElORVxufSk7XG5cbmV4cG9ydHMuQmFja2dyb3VuZENsYXNzID0gQmFja2dyb3VuZENsYXNzO1xuZXhwb3J0cy5CYWNrZ3JvdW5kU3R5bGUgPSBCYWNrZ3JvdW5kU3R5bGU7XG5cbi8qKiovIH0pLFxuLyogMzggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuRGlyZWN0aW9uU3R5bGUgPSBleHBvcnRzLkRpcmVjdGlvbkNsYXNzID0gZXhwb3J0cy5EaXJlY3Rpb25BdHRyaWJ1dGUgPSB1bmRlZmluZWQ7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIGNvbmZpZyA9IHtcbiAgc2NvcGU6IF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0ssXG4gIHdoaXRlbGlzdDogWydydGwnXVxufTtcblxudmFyIERpcmVjdGlvbkF0dHJpYnV0ZSA9IG5ldyBfcGFyY2htZW50Mi5kZWZhdWx0LkF0dHJpYnV0b3IuQXR0cmlidXRlKCdkaXJlY3Rpb24nLCAnZGlyJywgY29uZmlnKTtcbnZhciBEaXJlY3Rpb25DbGFzcyA9IG5ldyBfcGFyY2htZW50Mi5kZWZhdWx0LkF0dHJpYnV0b3IuQ2xhc3MoJ2RpcmVjdGlvbicsICdxbC1kaXJlY3Rpb24nLCBjb25maWcpO1xudmFyIERpcmVjdGlvblN0eWxlID0gbmV3IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5TdHlsZSgnZGlyZWN0aW9uJywgJ2RpcmVjdGlvbicsIGNvbmZpZyk7XG5cbmV4cG9ydHMuRGlyZWN0aW9uQXR0cmlidXRlID0gRGlyZWN0aW9uQXR0cmlidXRlO1xuZXhwb3J0cy5EaXJlY3Rpb25DbGFzcyA9IERpcmVjdGlvbkNsYXNzO1xuZXhwb3J0cy5EaXJlY3Rpb25TdHlsZSA9IERpcmVjdGlvblN0eWxlO1xuXG4vKioqLyB9KSxcbi8qIDM5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLkZvbnRDbGFzcyA9IGV4cG9ydHMuRm9udFN0eWxlID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgY29uZmlnID0ge1xuICBzY29wZTogX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5JTkxJTkUsXG4gIHdoaXRlbGlzdDogWydzZXJpZicsICdtb25vc3BhY2UnXVxufTtcblxudmFyIEZvbnRDbGFzcyA9IG5ldyBfcGFyY2htZW50Mi5kZWZhdWx0LkF0dHJpYnV0b3IuQ2xhc3MoJ2ZvbnQnLCAncWwtZm9udCcsIGNvbmZpZyk7XG5cbnZhciBGb250U3R5bGVBdHRyaWJ1dG9yID0gZnVuY3Rpb24gKF9QYXJjaG1lbnQkQXR0cmlidXRvcikge1xuICBfaW5oZXJpdHMoRm9udFN0eWxlQXR0cmlidXRvciwgX1BhcmNobWVudCRBdHRyaWJ1dG9yKTtcblxuICBmdW5jdGlvbiBGb250U3R5bGVBdHRyaWJ1dG9yKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb250U3R5bGVBdHRyaWJ1dG9yKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRm9udFN0eWxlQXR0cmlidXRvci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEZvbnRTdHlsZUF0dHJpYnV0b3IpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhGb250U3R5bGVBdHRyaWJ1dG9yLCBbe1xuICAgIGtleTogJ3ZhbHVlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUobm9kZSkge1xuICAgICAgcmV0dXJuIF9nZXQoRm9udFN0eWxlQXR0cmlidXRvci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihGb250U3R5bGVBdHRyaWJ1dG9yLnByb3RvdHlwZSksICd2YWx1ZScsIHRoaXMpLmNhbGwodGhpcywgbm9kZSkucmVwbGFjZSgvW1wiJ10vZywgJycpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBGb250U3R5bGVBdHRyaWJ1dG9yO1xufShfcGFyY2htZW50Mi5kZWZhdWx0LkF0dHJpYnV0b3IuU3R5bGUpO1xuXG52YXIgRm9udFN0eWxlID0gbmV3IEZvbnRTdHlsZUF0dHJpYnV0b3IoJ2ZvbnQnLCAnZm9udC1mYW1pbHknLCBjb25maWcpO1xuXG5leHBvcnRzLkZvbnRTdHlsZSA9IEZvbnRTdHlsZTtcbmV4cG9ydHMuRm9udENsYXNzID0gRm9udENsYXNzO1xuXG4vKioqLyB9KSxcbi8qIDQwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLlNpemVTdHlsZSA9IGV4cG9ydHMuU2l6ZUNsYXNzID0gdW5kZWZpbmVkO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBTaXplQ2xhc3MgPSBuZXcgX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLkNsYXNzKCdzaXplJywgJ3FsLXNpemUnLCB7XG4gIHNjb3BlOiBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLklOTElORSxcbiAgd2hpdGVsaXN0OiBbJ3NtYWxsJywgJ2xhcmdlJywgJ2h1Z2UnXVxufSk7XG52YXIgU2l6ZVN0eWxlID0gbmV3IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5TdHlsZSgnc2l6ZScsICdmb250LXNpemUnLCB7XG4gIHNjb3BlOiBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLklOTElORSxcbiAgd2hpdGVsaXN0OiBbJzEwcHgnLCAnMThweCcsICczMnB4J11cbn0pO1xuXG5leHBvcnRzLlNpemVDbGFzcyA9IFNpemVDbGFzcztcbmV4cG9ydHMuU2l6ZVN0eWxlID0gU2l6ZVN0eWxlO1xuXG4vKioqLyB9KSxcbi8qIDQxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAnYWxpZ24nOiB7XG4gICAgJyc6IF9fd2VicGFja19yZXF1aXJlX18oNzYpLFxuICAgICdjZW50ZXInOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDc3KSxcbiAgICAncmlnaHQnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDc4KSxcbiAgICAnanVzdGlmeSc6IF9fd2VicGFja19yZXF1aXJlX18oNzkpXG4gIH0sXG4gICdiYWNrZ3JvdW5kJzogX193ZWJwYWNrX3JlcXVpcmVfXyg4MCksXG4gICdibG9ja3F1b3RlJzogX193ZWJwYWNrX3JlcXVpcmVfXyg4MSksXG4gICdib2xkJzogX193ZWJwYWNrX3JlcXVpcmVfXyg4MiksXG4gICdjbGVhbic6IF9fd2VicGFja19yZXF1aXJlX18oODMpLFxuICAnY29kZSc6IF9fd2VicGFja19yZXF1aXJlX18oNTgpLFxuICAnY29kZS1ibG9jayc6IF9fd2VicGFja19yZXF1aXJlX18oNTgpLFxuICAnY29sb3InOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDg0KSxcbiAgJ2RpcmVjdGlvbic6IHtcbiAgICAnJzogX193ZWJwYWNrX3JlcXVpcmVfXyg4NSksXG4gICAgJ3J0bCc6IF9fd2VicGFja19yZXF1aXJlX18oODYpXG4gIH0sXG4gICdmbG9hdCc6IHtcbiAgICAnY2VudGVyJzogX193ZWJwYWNrX3JlcXVpcmVfXyg4NyksXG4gICAgJ2Z1bGwnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDg4KSxcbiAgICAnbGVmdCc6IF9fd2VicGFja19yZXF1aXJlX18oODkpLFxuICAgICdyaWdodCc6IF9fd2VicGFja19yZXF1aXJlX18oOTApXG4gIH0sXG4gICdmb3JtdWxhJzogX193ZWJwYWNrX3JlcXVpcmVfXyg5MSksXG4gICdoZWFkZXInOiB7XG4gICAgJzEnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDkyKSxcbiAgICAnMic6IF9fd2VicGFja19yZXF1aXJlX18oOTMpXG4gIH0sXG4gICdpdGFsaWMnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDk0KSxcbiAgJ2ltYWdlJzogX193ZWJwYWNrX3JlcXVpcmVfXyg5NSksXG4gICdpbmRlbnQnOiB7XG4gICAgJysxJzogX193ZWJwYWNrX3JlcXVpcmVfXyg5NiksXG4gICAgJy0xJzogX193ZWJwYWNrX3JlcXVpcmVfXyg5NylcbiAgfSxcbiAgJ2xpbmsnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDk4KSxcbiAgJ2xpc3QnOiB7XG4gICAgJ29yZGVyZWQnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDk5KSxcbiAgICAnYnVsbGV0JzogX193ZWJwYWNrX3JlcXVpcmVfXygxMDApLFxuICAgICdjaGVjayc6IF9fd2VicGFja19yZXF1aXJlX18oMTAxKVxuICB9LFxuICAnc2NyaXB0Jzoge1xuICAgICdzdWInOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwMiksXG4gICAgJ3N1cGVyJzogX193ZWJwYWNrX3JlcXVpcmVfXygxMDMpXG4gIH0sXG4gICdzdHJpa2UnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwNCksXG4gICd1bmRlcmxpbmUnOiBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwNSksXG4gICd2aWRlbyc6IF9fd2VicGFja19yZXF1aXJlX18oMTA2KVxufTtcblxuLyoqKi8gfSksXG4vKiA0MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRMYXN0Q2hhbmdlSW5kZXggPSBleHBvcnRzLmRlZmF1bHQgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF9xdWlsbCA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG5cbnZhciBfcXVpbGwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGwpO1xuXG52YXIgX21vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG5cbnZhciBfbW9kdWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21vZHVsZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEhpc3RvcnkgPSBmdW5jdGlvbiAoX01vZHVsZSkge1xuICBfaW5oZXJpdHMoSGlzdG9yeSwgX01vZHVsZSk7XG5cbiAgZnVuY3Rpb24gSGlzdG9yeShxdWlsbCwgb3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIaXN0b3J5KTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChIaXN0b3J5Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSGlzdG9yeSkpLmNhbGwodGhpcywgcXVpbGwsIG9wdGlvbnMpKTtcblxuICAgIF90aGlzLmxhc3RSZWNvcmRlZCA9IDA7XG4gICAgX3RoaXMuaWdub3JlQ2hhbmdlID0gZmFsc2U7XG4gICAgX3RoaXMuY2xlYXIoKTtcbiAgICBfdGhpcy5xdWlsbC5vbihfcXVpbGwyLmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIGZ1bmN0aW9uIChldmVudE5hbWUsIGRlbHRhLCBvbGREZWx0YSwgc291cmNlKSB7XG4gICAgICBpZiAoZXZlbnROYW1lICE9PSBfcXVpbGwyLmRlZmF1bHQuZXZlbnRzLlRFWFRfQ0hBTkdFIHx8IF90aGlzLmlnbm9yZUNoYW5nZSkgcmV0dXJuO1xuICAgICAgaWYgKCFfdGhpcy5vcHRpb25zLnVzZXJPbmx5IHx8IHNvdXJjZSA9PT0gX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUikge1xuICAgICAgICBfdGhpcy5yZWNvcmQoZGVsdGEsIG9sZERlbHRhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF90aGlzLnRyYW5zZm9ybShkZWx0YSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgX3RoaXMucXVpbGwua2V5Ym9hcmQuYWRkQmluZGluZyh7IGtleTogJ1onLCBzaG9ydEtleTogdHJ1ZSB9LCBfdGhpcy51bmRvLmJpbmQoX3RoaXMpKTtcbiAgICBfdGhpcy5xdWlsbC5rZXlib2FyZC5hZGRCaW5kaW5nKHsga2V5OiAnWicsIHNob3J0S2V5OiB0cnVlLCBzaGlmdEtleTogdHJ1ZSB9LCBfdGhpcy5yZWRvLmJpbmQoX3RoaXMpKTtcbiAgICBpZiAoL1dpbi9pLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKSkge1xuICAgICAgX3RoaXMucXVpbGwua2V5Ym9hcmQuYWRkQmluZGluZyh7IGtleTogJ1knLCBzaG9ydEtleTogdHJ1ZSB9LCBfdGhpcy5yZWRvLmJpbmQoX3RoaXMpKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEhpc3RvcnksIFt7XG4gICAga2V5OiAnY2hhbmdlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2hhbmdlKHNvdXJjZSwgZGVzdCkge1xuICAgICAgaWYgKHRoaXMuc3RhY2tbc291cmNlXS5sZW5ndGggPT09IDApIHJldHVybjtcbiAgICAgIHZhciBkZWx0YSA9IHRoaXMuc3RhY2tbc291cmNlXS5wb3AoKTtcbiAgICAgIHRoaXMuc3RhY2tbZGVzdF0ucHVzaChkZWx0YSk7XG4gICAgICB0aGlzLmxhc3RSZWNvcmRlZCA9IDA7XG4gICAgICB0aGlzLmlnbm9yZUNoYW5nZSA9IHRydWU7XG4gICAgICB0aGlzLnF1aWxsLnVwZGF0ZUNvbnRlbnRzKGRlbHRhW3NvdXJjZV0sIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgdGhpcy5pZ25vcmVDaGFuZ2UgPSBmYWxzZTtcbiAgICAgIHZhciBpbmRleCA9IGdldExhc3RDaGFuZ2VJbmRleChkZWx0YVtzb3VyY2VdKTtcbiAgICAgIHRoaXMucXVpbGwuc2V0U2VsZWN0aW9uKGluZGV4KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjbGVhcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgdGhpcy5zdGFjayA9IHsgdW5kbzogW10sIHJlZG86IFtdIH07XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnY3V0b2ZmJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3V0b2ZmKCkge1xuICAgICAgdGhpcy5sYXN0UmVjb3JkZWQgPSAwO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlY29yZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlY29yZChjaGFuZ2VEZWx0YSwgb2xkRGVsdGEpIHtcbiAgICAgIGlmIChjaGFuZ2VEZWx0YS5vcHMubGVuZ3RoID09PSAwKSByZXR1cm47XG4gICAgICB0aGlzLnN0YWNrLnJlZG8gPSBbXTtcbiAgICAgIHZhciB1bmRvRGVsdGEgPSB0aGlzLnF1aWxsLmdldENvbnRlbnRzKCkuZGlmZihvbGREZWx0YSk7XG4gICAgICB2YXIgdGltZXN0YW1wID0gRGF0ZS5ub3coKTtcbiAgICAgIGlmICh0aGlzLmxhc3RSZWNvcmRlZCArIHRoaXMub3B0aW9ucy5kZWxheSA+IHRpbWVzdGFtcCAmJiB0aGlzLnN0YWNrLnVuZG8ubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgZGVsdGEgPSB0aGlzLnN0YWNrLnVuZG8ucG9wKCk7XG4gICAgICAgIHVuZG9EZWx0YSA9IHVuZG9EZWx0YS5jb21wb3NlKGRlbHRhLnVuZG8pO1xuICAgICAgICBjaGFuZ2VEZWx0YSA9IGRlbHRhLnJlZG8uY29tcG9zZShjaGFuZ2VEZWx0YSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmxhc3RSZWNvcmRlZCA9IHRpbWVzdGFtcDtcbiAgICAgIH1cbiAgICAgIHRoaXMuc3RhY2sudW5kby5wdXNoKHtcbiAgICAgICAgcmVkbzogY2hhbmdlRGVsdGEsXG4gICAgICAgIHVuZG86IHVuZG9EZWx0YVxuICAgICAgfSk7XG4gICAgICBpZiAodGhpcy5zdGFjay51bmRvLmxlbmd0aCA+IHRoaXMub3B0aW9ucy5tYXhTdGFjaykge1xuICAgICAgICB0aGlzLnN0YWNrLnVuZG8uc2hpZnQoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZWRvJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVkbygpIHtcbiAgICAgIHRoaXMuY2hhbmdlKCdyZWRvJywgJ3VuZG8nKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd0cmFuc2Zvcm0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0cmFuc2Zvcm0oZGVsdGEpIHtcbiAgICAgIHRoaXMuc3RhY2sudW5kby5mb3JFYWNoKGZ1bmN0aW9uIChjaGFuZ2UpIHtcbiAgICAgICAgY2hhbmdlLnVuZG8gPSBkZWx0YS50cmFuc2Zvcm0oY2hhbmdlLnVuZG8sIHRydWUpO1xuICAgICAgICBjaGFuZ2UucmVkbyA9IGRlbHRhLnRyYW5zZm9ybShjaGFuZ2UucmVkbywgdHJ1ZSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuc3RhY2sucmVkby5mb3JFYWNoKGZ1bmN0aW9uIChjaGFuZ2UpIHtcbiAgICAgICAgY2hhbmdlLnVuZG8gPSBkZWx0YS50cmFuc2Zvcm0oY2hhbmdlLnVuZG8sIHRydWUpO1xuICAgICAgICBjaGFuZ2UucmVkbyA9IGRlbHRhLnRyYW5zZm9ybShjaGFuZ2UucmVkbywgdHJ1ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1bmRvJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gdW5kbygpIHtcbiAgICAgIHRoaXMuY2hhbmdlKCd1bmRvJywgJ3JlZG8nKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSGlzdG9yeTtcbn0oX21vZHVsZTIuZGVmYXVsdCk7XG5cbkhpc3RvcnkuREVGQVVMVFMgPSB7XG4gIGRlbGF5OiAxMDAwLFxuICBtYXhTdGFjazogMTAwLFxuICB1c2VyT25seTogZmFsc2Vcbn07XG5cbmZ1bmN0aW9uIGVuZHNXaXRoTmV3bGluZUNoYW5nZShkZWx0YSkge1xuICB2YXIgbGFzdE9wID0gZGVsdGEub3BzW2RlbHRhLm9wcy5sZW5ndGggLSAxXTtcbiAgaWYgKGxhc3RPcCA9PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gIGlmIChsYXN0T3AuaW5zZXJ0ICE9IG51bGwpIHtcbiAgICByZXR1cm4gdHlwZW9mIGxhc3RPcC5pbnNlcnQgPT09ICdzdHJpbmcnICYmIGxhc3RPcC5pbnNlcnQuZW5kc1dpdGgoJ1xcbicpO1xuICB9XG4gIGlmIChsYXN0T3AuYXR0cmlidXRlcyAhPSBudWxsKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGxhc3RPcC5hdHRyaWJ1dGVzKS5zb21lKGZ1bmN0aW9uIChhdHRyKSB7XG4gICAgICByZXR1cm4gX3BhcmNobWVudDIuZGVmYXVsdC5xdWVyeShhdHRyLCBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLKSAhPSBudWxsO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gZ2V0TGFzdENoYW5nZUluZGV4KGRlbHRhKSB7XG4gIHZhciBkZWxldGVMZW5ndGggPSBkZWx0YS5yZWR1Y2UoZnVuY3Rpb24gKGxlbmd0aCwgb3ApIHtcbiAgICBsZW5ndGggKz0gb3AuZGVsZXRlIHx8IDA7XG4gICAgcmV0dXJuIGxlbmd0aDtcbiAgfSwgMCk7XG4gIHZhciBjaGFuZ2VJbmRleCA9IGRlbHRhLmxlbmd0aCgpIC0gZGVsZXRlTGVuZ3RoO1xuICBpZiAoZW5kc1dpdGhOZXdsaW5lQ2hhbmdlKGRlbHRhKSkge1xuICAgIGNoYW5nZUluZGV4IC09IDE7XG4gIH1cbiAgcmV0dXJuIGNoYW5nZUluZGV4O1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBIaXN0b3J5O1xuZXhwb3J0cy5nZXRMYXN0Q2hhbmdlSW5kZXggPSBnZXRMYXN0Q2hhbmdlSW5kZXg7XG5cbi8qKiovIH0pLFxuLyogNDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGV4cG9ydHMuQmFzZVRvb2x0aXAgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9leHRlbmQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX2V4dGVuZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leHRlbmQpO1xuXG52YXIgX3F1aWxsRGVsdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG52YXIgX3F1aWxsRGVsdGEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGxEZWx0YSk7XG5cbnZhciBfZW1pdHRlciA9IF9fd2VicGFja19yZXF1aXJlX18oOCk7XG5cbnZhciBfZW1pdHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9lbWl0dGVyKTtcblxudmFyIF9rZXlib2FyZCA9IF9fd2VicGFja19yZXF1aXJlX18oMjMpO1xuXG52YXIgX2tleWJvYXJkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2tleWJvYXJkKTtcblxudmFyIF90aGVtZSA9IF9fd2VicGFja19yZXF1aXJlX18oMzQpO1xuXG52YXIgX3RoZW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RoZW1lKTtcblxudmFyIF9jb2xvclBpY2tlciA9IF9fd2VicGFja19yZXF1aXJlX18oNTkpO1xuXG52YXIgX2NvbG9yUGlja2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvbG9yUGlja2VyKTtcblxudmFyIF9pY29uUGlja2VyID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2MCk7XG5cbnZhciBfaWNvblBpY2tlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pY29uUGlja2VyKTtcblxudmFyIF9waWNrZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI4KTtcblxudmFyIF9waWNrZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGlja2VyKTtcblxudmFyIF90b29sdGlwID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2MSk7XG5cbnZhciBfdG9vbHRpcDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF90b29sdGlwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgQUxJR05TID0gW2ZhbHNlLCAnY2VudGVyJywgJ3JpZ2h0JywgJ2p1c3RpZnknXTtcblxudmFyIENPTE9SUyA9IFtcIiMwMDAwMDBcIiwgXCIjZTYwMDAwXCIsIFwiI2ZmOTkwMFwiLCBcIiNmZmZmMDBcIiwgXCIjMDA4YTAwXCIsIFwiIzAwNjZjY1wiLCBcIiM5OTMzZmZcIiwgXCIjZmZmZmZmXCIsIFwiI2ZhY2NjY1wiLCBcIiNmZmViY2NcIiwgXCIjZmZmZmNjXCIsIFwiI2NjZThjY1wiLCBcIiNjY2UwZjVcIiwgXCIjZWJkNmZmXCIsIFwiI2JiYmJiYlwiLCBcIiNmMDY2NjZcIiwgXCIjZmZjMjY2XCIsIFwiI2ZmZmY2NlwiLCBcIiM2NmI5NjZcIiwgXCIjNjZhM2UwXCIsIFwiI2MyODVmZlwiLCBcIiM4ODg4ODhcIiwgXCIjYTEwMDAwXCIsIFwiI2IyNmIwMFwiLCBcIiNiMmIyMDBcIiwgXCIjMDA2MTAwXCIsIFwiIzAwNDdiMlwiLCBcIiM2YjI0YjJcIiwgXCIjNDQ0NDQ0XCIsIFwiIzVjMDAwMFwiLCBcIiM2NjNkMDBcIiwgXCIjNjY2NjAwXCIsIFwiIzAwMzcwMFwiLCBcIiMwMDI5NjZcIiwgXCIjM2QxNDY2XCJdO1xuXG52YXIgRk9OVFMgPSBbZmFsc2UsICdzZXJpZicsICdtb25vc3BhY2UnXTtcblxudmFyIEhFQURFUlMgPSBbJzEnLCAnMicsICczJywgZmFsc2VdO1xuXG52YXIgU0laRVMgPSBbJ3NtYWxsJywgZmFsc2UsICdsYXJnZScsICdodWdlJ107XG5cbnZhciBCYXNlVGhlbWUgPSBmdW5jdGlvbiAoX1RoZW1lKSB7XG4gIF9pbmhlcml0cyhCYXNlVGhlbWUsIF9UaGVtZSk7XG5cbiAgZnVuY3Rpb24gQmFzZVRoZW1lKHF1aWxsLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJhc2VUaGVtZSk7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQmFzZVRoZW1lLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmFzZVRoZW1lKSkuY2FsbCh0aGlzLCBxdWlsbCwgb3B0aW9ucykpO1xuXG4gICAgdmFyIGxpc3RlbmVyID0gZnVuY3Rpb24gbGlzdGVuZXIoZSkge1xuICAgICAgaWYgKCFkb2N1bWVudC5ib2R5LmNvbnRhaW5zKHF1aWxsLnJvb3QpKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbGlzdGVuZXIpO1xuICAgICAgfVxuICAgICAgaWYgKF90aGlzLnRvb2x0aXAgIT0gbnVsbCAmJiAhX3RoaXMudG9vbHRpcC5yb290LmNvbnRhaW5zKGUudGFyZ2V0KSAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSBfdGhpcy50b29sdGlwLnRleHRib3ggJiYgIV90aGlzLnF1aWxsLmhhc0ZvY3VzKCkpIHtcbiAgICAgICAgX3RoaXMudG9vbHRpcC5oaWRlKCk7XG4gICAgICB9XG4gICAgICBpZiAoX3RoaXMucGlja2VycyAhPSBudWxsKSB7XG4gICAgICAgIF90aGlzLnBpY2tlcnMuZm9yRWFjaChmdW5jdGlvbiAocGlja2VyKSB7XG4gICAgICAgICAgaWYgKCFwaWNrZXIuY29udGFpbmVyLmNvbnRhaW5zKGUudGFyZ2V0KSkge1xuICAgICAgICAgICAgcGlja2VyLmNsb3NlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHF1aWxsLmVtaXR0ZXIubGlzdGVuRE9NKCdjbGljaycsIGRvY3VtZW50LmJvZHksIGxpc3RlbmVyKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQmFzZVRoZW1lLCBbe1xuICAgIGtleTogJ2FkZE1vZHVsZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZE1vZHVsZShuYW1lKSB7XG4gICAgICB2YXIgbW9kdWxlID0gX2dldChCYXNlVGhlbWUucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmFzZVRoZW1lLnByb3RvdHlwZSksICdhZGRNb2R1bGUnLCB0aGlzKS5jYWxsKHRoaXMsIG5hbWUpO1xuICAgICAgaWYgKG5hbWUgPT09ICd0b29sYmFyJykge1xuICAgICAgICB0aGlzLmV4dGVuZFRvb2xiYXIobW9kdWxlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtb2R1bGU7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYnVpbGRCdXR0b25zJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYnVpbGRCdXR0b25zKGJ1dHRvbnMsIGljb25zKSB7XG4gICAgICBidXR0b25zLmZvckVhY2goZnVuY3Rpb24gKGJ1dHRvbikge1xuICAgICAgICB2YXIgY2xhc3NOYW1lID0gYnV0dG9uLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSB8fCAnJztcbiAgICAgICAgY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgIGlmICghbmFtZS5zdGFydHNXaXRoKCdxbC0nKSkgcmV0dXJuO1xuICAgICAgICAgIG5hbWUgPSBuYW1lLnNsaWNlKCdxbC0nLmxlbmd0aCk7XG4gICAgICAgICAgaWYgKGljb25zW25hbWVdID09IG51bGwpIHJldHVybjtcbiAgICAgICAgICBpZiAobmFtZSA9PT0gJ2RpcmVjdGlvbicpIHtcbiAgICAgICAgICAgIGJ1dHRvbi5pbm5lckhUTUwgPSBpY29uc1tuYW1lXVsnJ10gKyBpY29uc1tuYW1lXVsncnRsJ107XG4gICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaWNvbnNbbmFtZV0gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gaWNvbnNbbmFtZV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGJ1dHRvbi52YWx1ZSB8fCAnJztcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPSBudWxsICYmIGljb25zW25hbWVdW3ZhbHVlXSkge1xuICAgICAgICAgICAgICBidXR0b24uaW5uZXJIVE1MID0gaWNvbnNbbmFtZV1bdmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdidWlsZFBpY2tlcnMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBidWlsZFBpY2tlcnMoc2VsZWN0cywgaWNvbnMpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB0aGlzLnBpY2tlcnMgPSBzZWxlY3RzLm1hcChmdW5jdGlvbiAoc2VsZWN0KSB7XG4gICAgICAgIGlmIChzZWxlY3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdxbC1hbGlnbicpKSB7XG4gICAgICAgICAgaWYgKHNlbGVjdC5xdWVyeVNlbGVjdG9yKCdvcHRpb24nKSA9PSBudWxsKSB7XG4gICAgICAgICAgICBmaWxsU2VsZWN0KHNlbGVjdCwgQUxJR05TKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG5ldyBfaWNvblBpY2tlcjIuZGVmYXVsdChzZWxlY3QsIGljb25zLmFsaWduKTtcbiAgICAgICAgfSBlbHNlIGlmIChzZWxlY3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdxbC1iYWNrZ3JvdW5kJykgfHwgc2VsZWN0LmNsYXNzTGlzdC5jb250YWlucygncWwtY29sb3InKSkge1xuICAgICAgICAgIHZhciBmb3JtYXQgPSBzZWxlY3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdxbC1iYWNrZ3JvdW5kJykgPyAnYmFja2dyb3VuZCcgOiAnY29sb3InO1xuICAgICAgICAgIGlmIChzZWxlY3QucXVlcnlTZWxlY3Rvcignb3B0aW9uJykgPT0gbnVsbCkge1xuICAgICAgICAgICAgZmlsbFNlbGVjdChzZWxlY3QsIENPTE9SUywgZm9ybWF0ID09PSAnYmFja2dyb3VuZCcgPyAnI2ZmZmZmZicgOiAnIzAwMDAwMCcpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbmV3IF9jb2xvclBpY2tlcjIuZGVmYXVsdChzZWxlY3QsIGljb25zW2Zvcm1hdF0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChzZWxlY3QucXVlcnlTZWxlY3Rvcignb3B0aW9uJykgPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHNlbGVjdC5jbGFzc0xpc3QuY29udGFpbnMoJ3FsLWZvbnQnKSkge1xuICAgICAgICAgICAgICBmaWxsU2VsZWN0KHNlbGVjdCwgRk9OVFMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzZWxlY3QuY2xhc3NMaXN0LmNvbnRhaW5zKCdxbC1oZWFkZXInKSkge1xuICAgICAgICAgICAgICBmaWxsU2VsZWN0KHNlbGVjdCwgSEVBREVSUyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHNlbGVjdC5jbGFzc0xpc3QuY29udGFpbnMoJ3FsLXNpemUnKSkge1xuICAgICAgICAgICAgICBmaWxsU2VsZWN0KHNlbGVjdCwgU0laRVMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbmV3IF9waWNrZXIyLmRlZmF1bHQoc2VsZWN0KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICB2YXIgdXBkYXRlID0gZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgICBfdGhpczIucGlja2Vycy5mb3JFYWNoKGZ1bmN0aW9uIChwaWNrZXIpIHtcbiAgICAgICAgICBwaWNrZXIudXBkYXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIHRoaXMucXVpbGwub24oX2VtaXR0ZXIyLmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIHVwZGF0ZSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEJhc2VUaGVtZTtcbn0oX3RoZW1lMi5kZWZhdWx0KTtcblxuQmFzZVRoZW1lLkRFRkFVTFRTID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRydWUsIHt9LCBfdGhlbWUyLmRlZmF1bHQuREVGQVVMVFMsIHtcbiAgbW9kdWxlczoge1xuICAgIHRvb2xiYXI6IHtcbiAgICAgIGhhbmRsZXJzOiB7XG4gICAgICAgIGZvcm11bGE6IGZ1bmN0aW9uIGZvcm11bGEoKSB7XG4gICAgICAgICAgdGhpcy5xdWlsbC50aGVtZS50b29sdGlwLmVkaXQoJ2Zvcm11bGEnKTtcbiAgICAgICAgfSxcbiAgICAgICAgaW1hZ2U6IGZ1bmN0aW9uIGltYWdlKCkge1xuICAgICAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICAgICAgdmFyIGZpbGVJbnB1dCA9IHRoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0LnFsLWltYWdlW3R5cGU9ZmlsZV0nKTtcbiAgICAgICAgICBpZiAoZmlsZUlucHV0ID09IG51bGwpIHtcbiAgICAgICAgICAgIGZpbGVJbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgICAgICBmaWxlSW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2ZpbGUnKTtcbiAgICAgICAgICAgIGZpbGVJbnB1dC5zZXRBdHRyaWJ1dGUoJ2FjY2VwdCcsICdpbWFnZS9wbmcsIGltYWdlL2dpZiwgaW1hZ2UvanBlZywgaW1hZ2UvYm1wLCBpbWFnZS94LWljb24nKTtcbiAgICAgICAgICAgIGZpbGVJbnB1dC5jbGFzc0xpc3QuYWRkKCdxbC1pbWFnZScpO1xuICAgICAgICAgICAgZmlsZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgaWYgKGZpbGVJbnB1dC5maWxlcyAhPSBudWxsICYmIGZpbGVJbnB1dC5maWxlc1swXSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgICAgICAgICAgICAgcmVhZGVyLm9ubG9hZCA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICAgICAgICB2YXIgcmFuZ2UgPSBfdGhpczMucXVpbGwuZ2V0U2VsZWN0aW9uKHRydWUpO1xuICAgICAgICAgICAgICAgICAgX3RoaXMzLnF1aWxsLnVwZGF0ZUNvbnRlbnRzKG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihyYW5nZS5pbmRleCkuZGVsZXRlKHJhbmdlLmxlbmd0aCkuaW5zZXJ0KHsgaW1hZ2U6IGUudGFyZ2V0LnJlc3VsdCB9KSwgX2VtaXR0ZXIyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgICAgICAgICAgICAgIF90aGlzMy5xdWlsbC5zZXRTZWxlY3Rpb24ocmFuZ2UuaW5kZXggKyAxLCBfZW1pdHRlcjIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICAgICAgICAgICAgICBmaWxlSW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZUlucHV0LmZpbGVzWzBdKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmNvbnRhaW5lci5hcHBlbmRDaGlsZChmaWxlSW5wdXQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmaWxlSW5wdXQuY2xpY2soKTtcbiAgICAgICAgfSxcbiAgICAgICAgdmlkZW86IGZ1bmN0aW9uIHZpZGVvKCkge1xuICAgICAgICAgIHRoaXMucXVpbGwudGhlbWUudG9vbHRpcC5lZGl0KCd2aWRlbycpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcblxudmFyIEJhc2VUb29sdGlwID0gZnVuY3Rpb24gKF9Ub29sdGlwKSB7XG4gIF9pbmhlcml0cyhCYXNlVG9vbHRpcCwgX1Rvb2x0aXApO1xuXG4gIGZ1bmN0aW9uIEJhc2VUb29sdGlwKHF1aWxsLCBib3VuZHNDb250YWluZXIpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQmFzZVRvb2x0aXApO1xuXG4gICAgdmFyIF90aGlzNCA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChCYXNlVG9vbHRpcC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJhc2VUb29sdGlwKSkuY2FsbCh0aGlzLCBxdWlsbCwgYm91bmRzQ29udGFpbmVyKSk7XG5cbiAgICBfdGhpczQudGV4dGJveCA9IF90aGlzNC5yb290LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W3R5cGU9XCJ0ZXh0XCJdJyk7XG4gICAgX3RoaXM0Lmxpc3RlbigpO1xuICAgIHJldHVybiBfdGhpczQ7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQmFzZVRvb2x0aXAsIFt7XG4gICAga2V5OiAnbGlzdGVuJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbGlzdGVuKCkge1xuICAgICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICAgIHRoaXMudGV4dGJveC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGlmIChfa2V5Ym9hcmQyLmRlZmF1bHQubWF0Y2goZXZlbnQsICdlbnRlcicpKSB7XG4gICAgICAgICAgX3RoaXM1LnNhdmUoKTtcbiAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9IGVsc2UgaWYgKF9rZXlib2FyZDIuZGVmYXVsdC5tYXRjaChldmVudCwgJ2VzY2FwZScpKSB7XG4gICAgICAgICAgX3RoaXM1LmNhbmNlbCgpO1xuICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbmNlbCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbmNlbCgpIHtcbiAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2VkaXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBlZGl0KCkge1xuICAgICAgdmFyIG1vZGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6ICdsaW5rJztcbiAgICAgIHZhciBwcmV2aWV3ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBudWxsO1xuXG4gICAgICB0aGlzLnJvb3QuY2xhc3NMaXN0LnJlbW92ZSgncWwtaGlkZGVuJyk7XG4gICAgICB0aGlzLnJvb3QuY2xhc3NMaXN0LmFkZCgncWwtZWRpdGluZycpO1xuICAgICAgaWYgKHByZXZpZXcgIT0gbnVsbCkge1xuICAgICAgICB0aGlzLnRleHRib3gudmFsdWUgPSBwcmV2aWV3O1xuICAgICAgfSBlbHNlIGlmIChtb2RlICE9PSB0aGlzLnJvb3QuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGUnKSkge1xuICAgICAgICB0aGlzLnRleHRib3gudmFsdWUgPSAnJztcbiAgICAgIH1cbiAgICAgIHRoaXMucG9zaXRpb24odGhpcy5xdWlsbC5nZXRCb3VuZHModGhpcy5xdWlsbC5zZWxlY3Rpb24uc2F2ZWRSYW5nZSkpO1xuICAgICAgdGhpcy50ZXh0Ym94LnNlbGVjdCgpO1xuICAgICAgdGhpcy50ZXh0Ym94LnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCB0aGlzLnRleHRib3guZ2V0QXR0cmlidXRlKCdkYXRhLScgKyBtb2RlKSB8fCAnJyk7XG4gICAgICB0aGlzLnJvb3Quc2V0QXR0cmlidXRlKCdkYXRhLW1vZGUnLCBtb2RlKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdyZXN0b3JlRm9jdXMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXN0b3JlRm9jdXMoKSB7XG4gICAgICB2YXIgc2Nyb2xsVG9wID0gdGhpcy5xdWlsbC5zY3JvbGxpbmdDb250YWluZXIuc2Nyb2xsVG9wO1xuICAgICAgdGhpcy5xdWlsbC5mb2N1cygpO1xuICAgICAgdGhpcy5xdWlsbC5zY3JvbGxpbmdDb250YWluZXIuc2Nyb2xsVG9wID0gc2Nyb2xsVG9wO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NhdmUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYXZlKCkge1xuICAgICAgdmFyIHZhbHVlID0gdGhpcy50ZXh0Ym94LnZhbHVlO1xuICAgICAgc3dpdGNoICh0aGlzLnJvb3QuZ2V0QXR0cmlidXRlKCdkYXRhLW1vZGUnKSkge1xuICAgICAgICBjYXNlICdsaW5rJzpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB2YXIgc2Nyb2xsVG9wID0gdGhpcy5xdWlsbC5yb290LnNjcm9sbFRvcDtcbiAgICAgICAgICAgIGlmICh0aGlzLmxpbmtSYW5nZSkge1xuICAgICAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdFRleHQodGhpcy5saW5rUmFuZ2UsICdsaW5rJywgdmFsdWUsIF9lbWl0dGVyMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmxpbmtSYW5nZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMucmVzdG9yZUZvY3VzKCk7XG4gICAgICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdsaW5rJywgdmFsdWUsIF9lbWl0dGVyMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnF1aWxsLnJvb3Quc2Nyb2xsVG9wID0gc2Nyb2xsVG9wO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICBjYXNlICd2aWRlbyc6XG4gICAgICAgICAge1xuICAgICAgICAgICAgdmFsdWUgPSBleHRyYWN0VmlkZW9VcmwodmFsdWUpO1xuICAgICAgICAgIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWZhbGx0aHJvdWdoXG4gICAgICAgIGNhc2UgJ2Zvcm11bGEnOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGlmICghdmFsdWUpIGJyZWFrO1xuICAgICAgICAgICAgdmFyIHJhbmdlID0gdGhpcy5xdWlsbC5nZXRTZWxlY3Rpb24odHJ1ZSk7XG4gICAgICAgICAgICBpZiAocmFuZ2UgIT0gbnVsbCkge1xuICAgICAgICAgICAgICB2YXIgaW5kZXggPSByYW5nZS5pbmRleCArIHJhbmdlLmxlbmd0aDtcbiAgICAgICAgICAgICAgdGhpcy5xdWlsbC5pbnNlcnRFbWJlZChpbmRleCwgdGhpcy5yb290LmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RlJyksIHZhbHVlLCBfZW1pdHRlcjIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICAgICAgICBpZiAodGhpcy5yb290LmdldEF0dHJpYnV0ZSgnZGF0YS1tb2RlJykgPT09ICdmb3JtdWxhJykge1xuICAgICAgICAgICAgICAgIHRoaXMucXVpbGwuaW5zZXJ0VGV4dChpbmRleCArIDEsICcgJywgX2VtaXR0ZXIyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihpbmRleCArIDIsIF9lbWl0dGVyMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICB9XG4gICAgICB0aGlzLnRleHRib3gudmFsdWUgPSAnJztcbiAgICAgIHRoaXMuaGlkZSgpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCYXNlVG9vbHRpcDtcbn0oX3Rvb2x0aXAyLmRlZmF1bHQpO1xuXG5mdW5jdGlvbiBleHRyYWN0VmlkZW9VcmwodXJsKSB7XG4gIHZhciBtYXRjaCA9IHVybC5tYXRjaCgvXig/OihodHRwcz8pOlxcL1xcLyk/KD86KD86d3d3fG0pXFwuKT95b3V0dWJlXFwuY29tXFwvd2F0Y2guKnY9KFthLXpBLVowLTlfLV0rKS8pIHx8IHVybC5tYXRjaCgvXig/OihodHRwcz8pOlxcL1xcLyk/KD86KD86d3d3fG0pXFwuKT95b3V0dVxcLmJlXFwvKFthLXpBLVowLTlfLV0rKS8pO1xuICBpZiAobWF0Y2gpIHtcbiAgICByZXR1cm4gKG1hdGNoWzFdIHx8ICdodHRwcycpICsgJzovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8nICsgbWF0Y2hbMl0gKyAnP3Nob3dpbmZvPTAnO1xuICB9XG4gIGlmIChtYXRjaCA9IHVybC5tYXRjaCgvXig/OihodHRwcz8pOlxcL1xcLyk/KD86d3d3XFwuKT92aW1lb1xcLmNvbVxcLyhcXGQrKS8pKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25kLWFzc2lnblxuICAgIHJldHVybiAobWF0Y2hbMV0gfHwgJ2h0dHBzJykgKyAnOi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby8nICsgbWF0Y2hbMl0gKyAnLyc7XG4gIH1cbiAgcmV0dXJuIHVybDtcbn1cblxuZnVuY3Rpb24gZmlsbFNlbGVjdChzZWxlY3QsIHZhbHVlcykge1xuICB2YXIgZGVmYXVsdFZhbHVlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBmYWxzZTtcblxuICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICB2YXIgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgaWYgKHZhbHVlID09PSBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgJ3NlbGVjdGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgdmFsdWUpO1xuICAgIH1cbiAgICBzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uKTtcbiAgfSk7XG59XG5cbmV4cG9ydHMuQmFzZVRvb2x0aXAgPSBCYXNlVG9vbHRpcDtcbmV4cG9ydHMuZGVmYXVsdCA9IEJhc2VUaGVtZTtcblxuLyoqKi8gfSksXG4vKiA0NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIExpbmtlZExpc3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTGlua2VkTGlzdCgpIHtcbiAgICAgICAgdGhpcy5oZWFkID0gdGhpcy50YWlsID0gbnVsbDtcbiAgICAgICAgdGhpcy5sZW5ndGggPSAwO1xuICAgIH1cbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5hcHBlbmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBub2RlcyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgbm9kZXNbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmluc2VydEJlZm9yZShub2Rlc1swXSwgbnVsbCk7XG4gICAgICAgIGlmIChub2Rlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICB0aGlzLmFwcGVuZC5hcHBseSh0aGlzLCBub2Rlcy5zbGljZSgxKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmNvbnRhaW5zID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgdmFyIGN1ciwgbmV4dCA9IHRoaXMuaXRlcmF0b3IoKTtcbiAgICAgICAgd2hpbGUgKChjdXIgPSBuZXh0KCkpKSB7XG4gICAgICAgICAgICBpZiAoY3VyID09PSBub2RlKVxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmluc2VydEJlZm9yZSA9IGZ1bmN0aW9uIChub2RlLCByZWZOb2RlKSB7XG4gICAgICAgIGlmICghbm9kZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgbm9kZS5uZXh0ID0gcmVmTm9kZTtcbiAgICAgICAgaWYgKHJlZk5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgbm9kZS5wcmV2ID0gcmVmTm9kZS5wcmV2O1xuICAgICAgICAgICAgaWYgKHJlZk5vZGUucHJldiAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVmTm9kZS5wcmV2Lm5leHQgPSBub2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVmTm9kZS5wcmV2ID0gbm9kZTtcbiAgICAgICAgICAgIGlmIChyZWZOb2RlID09PSB0aGlzLmhlYWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmhlYWQgPSBub2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudGFpbCAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnRhaWwubmV4dCA9IG5vZGU7XG4gICAgICAgICAgICBub2RlLnByZXYgPSB0aGlzLnRhaWw7XG4gICAgICAgICAgICB0aGlzLnRhaWwgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbm9kZS5wcmV2ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMuaGVhZCA9IHRoaXMudGFpbCA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sZW5ndGggKz0gMTtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLm9mZnNldCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gMCwgY3VyID0gdGhpcy5oZWFkO1xuICAgICAgICB3aGlsZSAoY3VyICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChjdXIgPT09IHRhcmdldClcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgICAgICBpbmRleCArPSBjdXIubGVuZ3RoKCk7XG4gICAgICAgICAgICBjdXIgPSBjdXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICBpZiAoIXRoaXMuY29udGFpbnMobm9kZSkpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmIChub2RlLnByZXYgIT0gbnVsbClcbiAgICAgICAgICAgIG5vZGUucHJldi5uZXh0ID0gbm9kZS5uZXh0O1xuICAgICAgICBpZiAobm9kZS5uZXh0ICE9IG51bGwpXG4gICAgICAgICAgICBub2RlLm5leHQucHJldiA9IG5vZGUucHJldjtcbiAgICAgICAgaWYgKG5vZGUgPT09IHRoaXMuaGVhZClcbiAgICAgICAgICAgIHRoaXMuaGVhZCA9IG5vZGUubmV4dDtcbiAgICAgICAgaWYgKG5vZGUgPT09IHRoaXMudGFpbClcbiAgICAgICAgICAgIHRoaXMudGFpbCA9IG5vZGUucHJldjtcbiAgICAgICAgdGhpcy5sZW5ndGggLT0gMTtcbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLml0ZXJhdG9yID0gZnVuY3Rpb24gKGN1ck5vZGUpIHtcbiAgICAgICAgaWYgKGN1ck5vZGUgPT09IHZvaWQgMCkgeyBjdXJOb2RlID0gdGhpcy5oZWFkOyB9XG4gICAgICAgIC8vIFRPRE8gdXNlIHlpZWxkIHdoZW4gd2UgY2FuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgcmV0ID0gY3VyTm9kZTtcbiAgICAgICAgICAgIGlmIChjdXJOb2RlICE9IG51bGwpXG4gICAgICAgICAgICAgICAgY3VyTm9kZSA9IGN1ck5vZGUubmV4dDtcbiAgICAgICAgICAgIHJldHVybiByZXQ7XG4gICAgICAgIH07XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5maW5kID0gZnVuY3Rpb24gKGluZGV4LCBpbmNsdXNpdmUpIHtcbiAgICAgICAgaWYgKGluY2x1c2l2ZSA9PT0gdm9pZCAwKSB7IGluY2x1c2l2ZSA9IGZhbHNlOyB9XG4gICAgICAgIHZhciBjdXIsIG5leHQgPSB0aGlzLml0ZXJhdG9yKCk7XG4gICAgICAgIHdoaWxlICgoY3VyID0gbmV4dCgpKSkge1xuICAgICAgICAgICAgdmFyIGxlbmd0aCA9IGN1ci5sZW5ndGgoKTtcbiAgICAgICAgICAgIGlmIChpbmRleCA8IGxlbmd0aCB8fFxuICAgICAgICAgICAgICAgIChpbmNsdXNpdmUgJiYgaW5kZXggPT09IGxlbmd0aCAmJiAoY3VyLm5leHQgPT0gbnVsbCB8fCBjdXIubmV4dC5sZW5ndGgoKSAhPT0gMCkpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtjdXIsIGluZGV4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluZGV4IC09IGxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW251bGwsIDBdO1xuICAgIH07XG4gICAgTGlua2VkTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xuICAgICAgICB2YXIgY3VyLCBuZXh0ID0gdGhpcy5pdGVyYXRvcigpO1xuICAgICAgICB3aGlsZSAoKGN1ciA9IG5leHQoKSkpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKGN1cik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIExpbmtlZExpc3QucHJvdG90eXBlLmZvckVhY2hBdCA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAobGVuZ3RoIDw9IDApXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHZhciBfYSA9IHRoaXMuZmluZChpbmRleCksIHN0YXJ0Tm9kZSA9IF9hWzBdLCBvZmZzZXQgPSBfYVsxXTtcbiAgICAgICAgdmFyIGN1ciwgY3VySW5kZXggPSBpbmRleCAtIG9mZnNldCwgbmV4dCA9IHRoaXMuaXRlcmF0b3Ioc3RhcnROb2RlKTtcbiAgICAgICAgd2hpbGUgKChjdXIgPSBuZXh0KCkpICYmIGN1ckluZGV4IDwgaW5kZXggKyBsZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBjdXJMZW5ndGggPSBjdXIubGVuZ3RoKCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPiBjdXJJbmRleCkge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGN1ciwgaW5kZXggLSBjdXJJbmRleCwgTWF0aC5taW4obGVuZ3RoLCBjdXJJbmRleCArIGN1ckxlbmd0aCAtIGluZGV4KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhjdXIsIDAsIE1hdGgubWluKGN1ckxlbmd0aCwgaW5kZXggKyBsZW5ndGggLSBjdXJJbmRleCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3VySW5kZXggKz0gY3VyTGVuZ3RoO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5tYXAgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVkdWNlKGZ1bmN0aW9uIChtZW1vLCBjdXIpIHtcbiAgICAgICAgICAgIG1lbW8ucHVzaChjYWxsYmFjayhjdXIpKTtcbiAgICAgICAgICAgIHJldHVybiBtZW1vO1xuICAgICAgICB9LCBbXSk7XG4gICAgfTtcbiAgICBMaW5rZWRMaXN0LnByb3RvdHlwZS5yZWR1Y2UgPSBmdW5jdGlvbiAoY2FsbGJhY2ssIG1lbW8pIHtcbiAgICAgICAgdmFyIGN1ciwgbmV4dCA9IHRoaXMuaXRlcmF0b3IoKTtcbiAgICAgICAgd2hpbGUgKChjdXIgPSBuZXh0KCkpKSB7XG4gICAgICAgICAgICBtZW1vID0gY2FsbGJhY2sobWVtbywgY3VyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWVtbztcbiAgICB9O1xuICAgIHJldHVybiBMaW5rZWRMaXN0O1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IExpbmtlZExpc3Q7XG5cblxuLyoqKi8gfSksXG4vKiA0NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgY29udGFpbmVyXzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE3KTtcbnZhciBSZWdpc3RyeSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG52YXIgT0JTRVJWRVJfQ09ORklHID0ge1xuICAgIGF0dHJpYnV0ZXM6IHRydWUsXG4gICAgY2hhcmFjdGVyRGF0YTogdHJ1ZSxcbiAgICBjaGFyYWN0ZXJEYXRhT2xkVmFsdWU6IHRydWUsXG4gICAgY2hpbGRMaXN0OiB0cnVlLFxuICAgIHN1YnRyZWU6IHRydWUsXG59O1xudmFyIE1BWF9PUFRJTUlaRV9JVEVSQVRJT05TID0gMTAwO1xudmFyIFNjcm9sbEJsb3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKFNjcm9sbEJsb3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gU2Nyb2xsQmxvdChub2RlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG5vZGUpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnNjcm9sbCA9IF90aGlzO1xuICAgICAgICBfdGhpcy5vYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uIChtdXRhdGlvbnMpIHtcbiAgICAgICAgICAgIF90aGlzLnVwZGF0ZShtdXRhdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXMub2JzZXJ2ZXIub2JzZXJ2ZShfdGhpcy5kb21Ob2RlLCBPQlNFUlZFUl9DT05GSUcpO1xuICAgICAgICBfdGhpcy5hdHRhY2goKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBTY3JvbGxCbG90LnByb3RvdHlwZS5kZXRhY2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuZGV0YWNoLmNhbGwodGhpcyk7XG4gICAgICAgIHRoaXMub2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH07XG4gICAgU2Nyb2xsQmxvdC5wcm90b3R5cGUuZGVsZXRlQXQgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgICAgICBpZiAoaW5kZXggPT09IDAgJiYgbGVuZ3RoID09PSB0aGlzLmxlbmd0aCgpKSB7XG4gICAgICAgICAgICB0aGlzLmNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQucmVtb3ZlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUuZGVsZXRlQXQuY2FsbCh0aGlzLCBpbmRleCwgbGVuZ3RoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgU2Nyb2xsQmxvdC5wcm90b3R5cGUuZm9ybWF0QXQgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRBdC5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuICAgIFNjcm9sbEJsb3QucHJvdG90eXBlLmluc2VydEF0ID0gZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSwgZGVmKSB7XG4gICAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUuaW5zZXJ0QXQuY2FsbCh0aGlzLCBpbmRleCwgdmFsdWUsIGRlZik7XG4gICAgfTtcbiAgICBTY3JvbGxCbG90LnByb3RvdHlwZS5vcHRpbWl6ZSA9IGZ1bmN0aW9uIChtdXRhdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKG11dGF0aW9ucyA9PT0gdm9pZCAwKSB7IG11dGF0aW9ucyA9IFtdOyB9XG4gICAgICAgIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHsgY29udGV4dCA9IHt9OyB9XG4gICAgICAgIF9zdXBlci5wcm90b3R5cGUub3B0aW1pemUuY2FsbCh0aGlzLCBjb250ZXh0KTtcbiAgICAgICAgLy8gV2UgbXVzdCBtb2RpZnkgbXV0YXRpb25zIGRpcmVjdGx5LCBjYW5ub3QgbWFrZSBjb3B5IGFuZCB0aGVuIG1vZGlmeVxuICAgICAgICB2YXIgcmVjb3JkcyA9IFtdLnNsaWNlLmNhbGwodGhpcy5vYnNlcnZlci50YWtlUmVjb3JkcygpKTtcbiAgICAgICAgLy8gQXJyYXkucHVzaCBjdXJyZW50bHkgc2VlbXMgdG8gYmUgaW1wbGVtZW50ZWQgYnkgYSBub24tdGFpbCByZWN1cnNpdmUgZnVuY3Rpb25cbiAgICAgICAgLy8gc28gd2UgY2Fubm90IGp1c3QgbXV0YXRpb25zLnB1c2guYXBwbHkobXV0YXRpb25zLCB0aGlzLm9ic2VydmVyLnRha2VSZWNvcmRzKCkpO1xuICAgICAgICB3aGlsZSAocmVjb3Jkcy5sZW5ndGggPiAwKVxuICAgICAgICAgICAgbXV0YXRpb25zLnB1c2gocmVjb3Jkcy5wb3AoKSk7XG4gICAgICAgIC8vIFRPRE8gdXNlIFdlYWtNYXBcbiAgICAgICAgdmFyIG1hcmsgPSBmdW5jdGlvbiAoYmxvdCwgbWFya1BhcmVudCkge1xuICAgICAgICAgICAgaWYgKG1hcmtQYXJlbnQgPT09IHZvaWQgMCkgeyBtYXJrUGFyZW50ID0gdHJ1ZTsgfVxuICAgICAgICAgICAgaWYgKGJsb3QgPT0gbnVsbCB8fCBibG90ID09PSBfdGhpcylcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBpZiAoYmxvdC5kb21Ob2RlLnBhcmVudE5vZGUgPT0gbnVsbClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBpZiAoYmxvdC5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXS5tdXRhdGlvbnMgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBibG90LmRvbU5vZGVbUmVnaXN0cnkuREFUQV9LRVldLm11dGF0aW9ucyA9IFtdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1hcmtQYXJlbnQpXG4gICAgICAgICAgICAgICAgbWFyayhibG90LnBhcmVudCk7XG4gICAgICAgIH07XG4gICAgICAgIHZhciBvcHRpbWl6ZSA9IGZ1bmN0aW9uIChibG90KSB7XG4gICAgICAgICAgICAvLyBQb3N0LW9yZGVyIHRyYXZlcnNhbFxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgYmxvdC5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXSA9PSBudWxsIHx8XG4gICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgIGJsb3QuZG9tTm9kZVtSZWdpc3RyeS5EQVRBX0tFWV0ubXV0YXRpb25zID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYmxvdCBpbnN0YW5jZW9mIGNvbnRhaW5lcl8xLmRlZmF1bHQpIHtcbiAgICAgICAgICAgICAgICBibG90LmNoaWxkcmVuLmZvckVhY2gob3B0aW1pemUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYmxvdC5vcHRpbWl6ZShjb250ZXh0KTtcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIHJlbWFpbmluZyA9IG11dGF0aW9ucztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IHJlbWFpbmluZy5sZW5ndGggPiAwOyBpICs9IDEpIHtcbiAgICAgICAgICAgIGlmIChpID49IE1BWF9PUFRJTUlaRV9JVEVSQVRJT05TKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdbUGFyY2htZW50XSBNYXhpbXVtIG9wdGltaXplIGl0ZXJhdGlvbnMgcmVhY2hlZCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVtYWluaW5nLmZvckVhY2goZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgdmFyIGJsb3QgPSBSZWdpc3RyeS5maW5kKG11dGF0aW9uLnRhcmdldCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGJsb3QgPT0gbnVsbClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGlmIChibG90LmRvbU5vZGUgPT09IG11dGF0aW9uLnRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobXV0YXRpb24udHlwZSA9PT0gJ2NoaWxkTGlzdCcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmsoUmVnaXN0cnkuZmluZChtdXRhdGlvbi5wcmV2aW91c1NpYmxpbmcsIGZhbHNlKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBbXS5mb3JFYWNoLmNhbGwobXV0YXRpb24uYWRkZWROb2RlcywgZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hpbGQgPSBSZWdpc3RyeS5maW5kKG5vZGUsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrKGNoaWxkLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgY29udGFpbmVyXzEuZGVmYXVsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZC5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChncmFuZENoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJrKGdyYW5kQ2hpbGQsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAobXV0YXRpb24udHlwZSA9PT0gJ2F0dHJpYnV0ZXMnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJrKGJsb3QucHJldik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWFyayhibG90KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKG9wdGltaXplKTtcbiAgICAgICAgICAgIHJlbWFpbmluZyA9IFtdLnNsaWNlLmNhbGwodGhpcy5vYnNlcnZlci50YWtlUmVjb3JkcygpKTtcbiAgICAgICAgICAgIHJlY29yZHMgPSByZW1haW5pbmcuc2xpY2UoKTtcbiAgICAgICAgICAgIHdoaWxlIChyZWNvcmRzLmxlbmd0aCA+IDApXG4gICAgICAgICAgICAgICAgbXV0YXRpb25zLnB1c2gocmVjb3Jkcy5wb3AoKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcm9sbEJsb3QucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChtdXRhdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKGNvbnRleHQgPT09IHZvaWQgMCkgeyBjb250ZXh0ID0ge307IH1cbiAgICAgICAgbXV0YXRpb25zID0gbXV0YXRpb25zIHx8IHRoaXMub2JzZXJ2ZXIudGFrZVJlY29yZHMoKTtcbiAgICAgICAgLy8gVE9ETyB1c2UgV2Vha01hcFxuICAgICAgICBtdXRhdGlvbnNcbiAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgICAgICB2YXIgYmxvdCA9IFJlZ2lzdHJ5LmZpbmQobXV0YXRpb24udGFyZ2V0LCB0cnVlKTtcbiAgICAgICAgICAgIGlmIChibG90ID09IG51bGwpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICBpZiAoYmxvdC5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXS5tdXRhdGlvbnMgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBibG90LmRvbU5vZGVbUmVnaXN0cnkuREFUQV9LRVldLm11dGF0aW9ucyA9IFttdXRhdGlvbl07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJsb3Q7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgYmxvdC5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXS5tdXRhdGlvbnMucHVzaChtdXRhdGlvbik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZm9yRWFjaChmdW5jdGlvbiAoYmxvdCkge1xuICAgICAgICAgICAgaWYgKGJsb3QgPT0gbnVsbCB8fFxuICAgICAgICAgICAgICAgIGJsb3QgPT09IF90aGlzIHx8XG4gICAgICAgICAgICAgICAgLy9AdHMtaWdub3JlXG4gICAgICAgICAgICAgICAgYmxvdC5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXSA9PSBudWxsKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGJsb3QudXBkYXRlKGJsb3QuZG9tTm9kZVtSZWdpc3RyeS5EQVRBX0tFWV0ubXV0YXRpb25zIHx8IFtdLCBjb250ZXh0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKHRoaXMuZG9tTm9kZVtSZWdpc3RyeS5EQVRBX0tFWV0ubXV0YXRpb25zICE9IG51bGwpIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUudXBkYXRlLmNhbGwodGhpcywgdGhpcy5kb21Ob2RlW1JlZ2lzdHJ5LkRBVEFfS0VZXS5tdXRhdGlvbnMsIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMub3B0aW1pemUobXV0YXRpb25zLCBjb250ZXh0KTtcbiAgICB9O1xuICAgIFNjcm9sbEJsb3QuYmxvdE5hbWUgPSAnc2Nyb2xsJztcbiAgICBTY3JvbGxCbG90LmRlZmF1bHRDaGlsZCA9ICdibG9jayc7XG4gICAgU2Nyb2xsQmxvdC5zY29wZSA9IFJlZ2lzdHJ5LlNjb3BlLkJMT0NLX0JMT1Q7XG4gICAgU2Nyb2xsQmxvdC50YWdOYW1lID0gJ0RJVic7XG4gICAgcmV0dXJuIFNjcm9sbEJsb3Q7XG59KGNvbnRhaW5lcl8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNjcm9sbEJsb3Q7XG5cblxuLyoqKi8gfSksXG4vKiA0NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZm9ybWF0XzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KTtcbnZhciBSZWdpc3RyeSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG4vLyBTaGFsbG93IG9iamVjdCBjb21wYXJpc29uXG5mdW5jdGlvbiBpc0VxdWFsKG9iajEsIG9iajIpIHtcbiAgICBpZiAoT2JqZWN0LmtleXMob2JqMSkubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhvYmoyKS5sZW5ndGgpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgZm9yICh2YXIgcHJvcCBpbiBvYmoxKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKG9iajFbcHJvcF0gIT09IG9iajJbcHJvcF0pXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxudmFyIElubGluZUJsb3QgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKElubGluZUJsb3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gSW5saW5lQmxvdCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBJbmxpbmVCbG90LmZvcm1hdHMgPSBmdW5jdGlvbiAoZG9tTm9kZSkge1xuICAgICAgICBpZiAoZG9tTm9kZS50YWdOYW1lID09PSBJbmxpbmVCbG90LnRhZ05hbWUpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gX3N1cGVyLmZvcm1hdHMuY2FsbCh0aGlzLCBkb21Ob2RlKTtcbiAgICB9O1xuICAgIElubGluZUJsb3QucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAobmFtZSA9PT0gdGhpcy5zdGF0aWNzLmJsb3ROYW1lICYmICF2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5jaGlsZHJlbi5mb3JFYWNoKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgZm9ybWF0XzEuZGVmYXVsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQgPSBjaGlsZC53cmFwKElubGluZUJsb3QuYmxvdE5hbWUsIHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBfdGhpcy5hdHRyaWJ1dGVzLmNvcHkoY2hpbGQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnVud3JhcCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXQuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIElubGluZUJsb3QucHJvdG90eXBlLmZvcm1hdEF0ID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGlmICh0aGlzLmZvcm1hdHMoKVtuYW1lXSAhPSBudWxsIHx8IFJlZ2lzdHJ5LnF1ZXJ5KG5hbWUsIFJlZ2lzdHJ5LlNjb3BlLkFUVFJJQlVURSkpIHtcbiAgICAgICAgICAgIHZhciBibG90ID0gdGhpcy5pc29sYXRlKGluZGV4LCBsZW5ndGgpO1xuICAgICAgICAgICAgYmxvdC5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRBdC5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgSW5saW5lQmxvdC5wcm90b3R5cGUub3B0aW1pemUgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgICBfc3VwZXIucHJvdG90eXBlLm9wdGltaXplLmNhbGwodGhpcywgY29udGV4dCk7XG4gICAgICAgIHZhciBmb3JtYXRzID0gdGhpcy5mb3JtYXRzKCk7XG4gICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3JtYXRzKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnVud3JhcCgpOyAvLyB1bmZvcm1hdHRlZCBzcGFuXG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHQgPSB0aGlzLm5leHQ7XG4gICAgICAgIGlmIChuZXh0IGluc3RhbmNlb2YgSW5saW5lQmxvdCAmJiBuZXh0LnByZXYgPT09IHRoaXMgJiYgaXNFcXVhbChmb3JtYXRzLCBuZXh0LmZvcm1hdHMoKSkpIHtcbiAgICAgICAgICAgIG5leHQubW92ZUNoaWxkcmVuKHRoaXMpO1xuICAgICAgICAgICAgbmV4dC5yZW1vdmUoKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgSW5saW5lQmxvdC5ibG90TmFtZSA9ICdpbmxpbmUnO1xuICAgIElubGluZUJsb3Quc2NvcGUgPSBSZWdpc3RyeS5TY29wZS5JTkxJTkVfQkxPVDtcbiAgICBJbmxpbmVCbG90LnRhZ05hbWUgPSAnU1BBTic7XG4gICAgcmV0dXJuIElubGluZUJsb3Q7XG59KGZvcm1hdF8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IElubGluZUJsb3Q7XG5cblxuLyoqKi8gfSksXG4vKiA0NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgZm9ybWF0XzEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE4KTtcbnZhciBSZWdpc3RyeSA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG52YXIgQmxvY2tCbG90ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhCbG9ja0Jsb3QsIF9zdXBlcik7XG4gICAgZnVuY3Rpb24gQmxvY2tCbG90KCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIEJsb2NrQmxvdC5mb3JtYXRzID0gZnVuY3Rpb24gKGRvbU5vZGUpIHtcbiAgICAgICAgdmFyIHRhZ05hbWUgPSBSZWdpc3RyeS5xdWVyeShCbG9ja0Jsb3QuYmxvdE5hbWUpLnRhZ05hbWU7XG4gICAgICAgIGlmIChkb21Ob2RlLnRhZ05hbWUgPT09IHRhZ05hbWUpXG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gX3N1cGVyLmZvcm1hdHMuY2FsbCh0aGlzLCBkb21Ob2RlKTtcbiAgICB9O1xuICAgIEJsb2NrQmxvdC5wcm90b3R5cGUuZm9ybWF0ID0gZnVuY3Rpb24gKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGlmIChSZWdpc3RyeS5xdWVyeShuYW1lLCBSZWdpc3RyeS5TY29wZS5CTE9DSykgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKG5hbWUgPT09IHRoaXMuc3RhdGljcy5ibG90TmFtZSAmJiAhdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucmVwbGFjZVdpdGgoQmxvY2tCbG90LmJsb3ROYW1lKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUuZm9ybWF0LmNhbGwodGhpcywgbmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCbG9ja0Jsb3QucHJvdG90eXBlLmZvcm1hdEF0ID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIGlmIChSZWdpc3RyeS5xdWVyeShuYW1lLCBSZWdpc3RyeS5TY29wZS5CTE9DSykgIT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRBdC5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgQmxvY2tCbG90LnByb3RvdHlwZS5pbnNlcnRBdCA9IGZ1bmN0aW9uIChpbmRleCwgdmFsdWUsIGRlZikge1xuICAgICAgICBpZiAoZGVmID09IG51bGwgfHwgUmVnaXN0cnkucXVlcnkodmFsdWUsIFJlZ2lzdHJ5LlNjb3BlLklOTElORSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gSW5zZXJ0IHRleHQgb3IgaW5saW5lXG4gICAgICAgICAgICBfc3VwZXIucHJvdG90eXBlLmluc2VydEF0LmNhbGwodGhpcywgaW5kZXgsIHZhbHVlLCBkZWYpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdmFyIGFmdGVyID0gdGhpcy5zcGxpdChpbmRleCk7XG4gICAgICAgICAgICB2YXIgYmxvdCA9IFJlZ2lzdHJ5LmNyZWF0ZSh2YWx1ZSwgZGVmKTtcbiAgICAgICAgICAgIGFmdGVyLnBhcmVudC5pbnNlcnRCZWZvcmUoYmxvdCwgYWZ0ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCbG9ja0Jsb3QucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChtdXRhdGlvbnMsIGNvbnRleHQpIHtcbiAgICAgICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1RyaWRlbnQvKSkge1xuICAgICAgICAgICAgdGhpcy5idWlsZCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3N1cGVyLnByb3RvdHlwZS51cGRhdGUuY2FsbCh0aGlzLCBtdXRhdGlvbnMsIGNvbnRleHQpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBCbG9ja0Jsb3QuYmxvdE5hbWUgPSAnYmxvY2snO1xuICAgIEJsb2NrQmxvdC5zY29wZSA9IFJlZ2lzdHJ5LlNjb3BlLkJMT0NLX0JMT1Q7XG4gICAgQmxvY2tCbG90LnRhZ05hbWUgPSAnUCc7XG4gICAgcmV0dXJuIEJsb2NrQmxvdDtcbn0oZm9ybWF0XzEuZGVmYXVsdCkpO1xuZXhwb3J0cy5kZWZhdWx0ID0gQmxvY2tCbG90O1xuXG5cbi8qKiovIH0pLFxuLyogNDggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIGxlYWZfMSA9IF9fd2VicGFja19yZXF1aXJlX18oMTkpO1xudmFyIEVtYmVkQmxvdCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoRW1iZWRCbG90LCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEVtYmVkQmxvdCgpIHtcbiAgICAgICAgcmV0dXJuIF9zdXBlciAhPT0gbnVsbCAmJiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCB0aGlzO1xuICAgIH1cbiAgICBFbWJlZEJsb3QuZm9ybWF0cyA9IGZ1bmN0aW9uIChkb21Ob2RlKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBFbWJlZEJsb3QucHJvdG90eXBlLmZvcm1hdCA9IGZ1bmN0aW9uIChuYW1lLCB2YWx1ZSkge1xuICAgICAgICAvLyBzdXBlci5mb3JtYXRBdCB3cmFwcywgd2hpY2ggaXMgd2hhdCB3ZSB3YW50IGluIGdlbmVyYWwsXG4gICAgICAgIC8vIGJ1dCB0aGlzIGFsbG93cyBzdWJjbGFzc2VzIHRvIG92ZXJ3cml0ZSBmb3IgZm9ybWF0c1xuICAgICAgICAvLyB0aGF0IGp1c3QgYXBwbHkgdG8gcGFydGljdWxhciBlbWJlZHNcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRBdC5jYWxsKHRoaXMsIDAsIHRoaXMubGVuZ3RoKCksIG5hbWUsIHZhbHVlKTtcbiAgICB9O1xuICAgIEVtYmVkQmxvdC5wcm90b3R5cGUuZm9ybWF0QXQgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCwgbmFtZSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKGluZGV4ID09PSAwICYmIGxlbmd0aCA9PT0gdGhpcy5sZW5ndGgoKSkge1xuICAgICAgICAgICAgdGhpcy5mb3JtYXQobmFtZSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5mb3JtYXRBdC5jYWxsKHRoaXMsIGluZGV4LCBsZW5ndGgsIG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgRW1iZWRCbG90LnByb3RvdHlwZS5mb3JtYXRzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0aWNzLmZvcm1hdHModGhpcy5kb21Ob2RlKTtcbiAgICB9O1xuICAgIHJldHVybiBFbWJlZEJsb3Q7XG59KGxlYWZfMS5kZWZhdWx0KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBFbWJlZEJsb3Q7XG5cblxuLyoqKi8gfSksXG4vKiA0OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XG4gICAgfTtcbn0pKCk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgbGVhZl8xID0gX193ZWJwYWNrX3JlcXVpcmVfXygxOSk7XG52YXIgUmVnaXN0cnkgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xudmFyIFRleHRCbG90ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhUZXh0QmxvdCwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBUZXh0QmxvdChub2RlKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG5vZGUpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnRleHQgPSBfdGhpcy5zdGF0aWNzLnZhbHVlKF90aGlzLmRvbU5vZGUpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIFRleHRCbG90LmNyZWF0ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodmFsdWUpO1xuICAgIH07XG4gICAgVGV4dEJsb3QudmFsdWUgPSBmdW5jdGlvbiAoZG9tTm9kZSkge1xuICAgICAgICB2YXIgdGV4dCA9IGRvbU5vZGUuZGF0YTtcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICBpZiAodGV4dFsnbm9ybWFsaXplJ10pXG4gICAgICAgICAgICB0ZXh0ID0gdGV4dFsnbm9ybWFsaXplJ10oKTtcbiAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfTtcbiAgICBUZXh0QmxvdC5wcm90b3R5cGUuZGVsZXRlQXQgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICAgICAgICB0aGlzLmRvbU5vZGUuZGF0YSA9IHRoaXMudGV4dCA9IHRoaXMudGV4dC5zbGljZSgwLCBpbmRleCkgKyB0aGlzLnRleHQuc2xpY2UoaW5kZXggKyBsZW5ndGgpO1xuICAgIH07XG4gICAgVGV4dEJsb3QucHJvdG90eXBlLmluZGV4ID0gZnVuY3Rpb24gKG5vZGUsIG9mZnNldCkge1xuICAgICAgICBpZiAodGhpcy5kb21Ob2RlID09PSBub2RlKSB7XG4gICAgICAgICAgICByZXR1cm4gb2Zmc2V0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9O1xuICAgIFRleHRCbG90LnByb3RvdHlwZS5pbnNlcnRBdCA9IGZ1bmN0aW9uIChpbmRleCwgdmFsdWUsIGRlZikge1xuICAgICAgICBpZiAoZGVmID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMudGV4dC5zbGljZSgwLCBpbmRleCkgKyB2YWx1ZSArIHRoaXMudGV4dC5zbGljZShpbmRleCk7XG4gICAgICAgICAgICB0aGlzLmRvbU5vZGUuZGF0YSA9IHRoaXMudGV4dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIF9zdXBlci5wcm90b3R5cGUuaW5zZXJ0QXQuY2FsbCh0aGlzLCBpbmRleCwgdmFsdWUsIGRlZik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRleHRCbG90LnByb3RvdHlwZS5sZW5ndGggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHQubGVuZ3RoO1xuICAgIH07XG4gICAgVGV4dEJsb3QucHJvdG90eXBlLm9wdGltaXplID0gZnVuY3Rpb24gKGNvbnRleHQpIHtcbiAgICAgICAgX3N1cGVyLnByb3RvdHlwZS5vcHRpbWl6ZS5jYWxsKHRoaXMsIGNvbnRleHQpO1xuICAgICAgICB0aGlzLnRleHQgPSB0aGlzLnN0YXRpY3MudmFsdWUodGhpcy5kb21Ob2RlKTtcbiAgICAgICAgaWYgKHRoaXMudGV4dC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5uZXh0IGluc3RhbmNlb2YgVGV4dEJsb3QgJiYgdGhpcy5uZXh0LnByZXYgPT09IHRoaXMpIHtcbiAgICAgICAgICAgIHRoaXMuaW5zZXJ0QXQodGhpcy5sZW5ndGgoKSwgdGhpcy5uZXh0LnZhbHVlKCkpO1xuICAgICAgICAgICAgdGhpcy5uZXh0LnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBUZXh0QmxvdC5wcm90b3R5cGUucG9zaXRpb24gPSBmdW5jdGlvbiAoaW5kZXgsIGluY2x1c2l2ZSkge1xuICAgICAgICBpZiAoaW5jbHVzaXZlID09PSB2b2lkIDApIHsgaW5jbHVzaXZlID0gZmFsc2U7IH1cbiAgICAgICAgcmV0dXJuIFt0aGlzLmRvbU5vZGUsIGluZGV4XTtcbiAgICB9O1xuICAgIFRleHRCbG90LnByb3RvdHlwZS5zcGxpdCA9IGZ1bmN0aW9uIChpbmRleCwgZm9yY2UpIHtcbiAgICAgICAgaWYgKGZvcmNlID09PSB2b2lkIDApIHsgZm9yY2UgPSBmYWxzZTsgfVxuICAgICAgICBpZiAoIWZvcmNlKSB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IHRoaXMubGVuZ3RoKCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubmV4dDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWZ0ZXIgPSBSZWdpc3RyeS5jcmVhdGUodGhpcy5kb21Ob2RlLnNwbGl0VGV4dChpbmRleCkpO1xuICAgICAgICB0aGlzLnBhcmVudC5pbnNlcnRCZWZvcmUoYWZ0ZXIsIHRoaXMubmV4dCk7XG4gICAgICAgIHRoaXMudGV4dCA9IHRoaXMuc3RhdGljcy52YWx1ZSh0aGlzLmRvbU5vZGUpO1xuICAgICAgICByZXR1cm4gYWZ0ZXI7XG4gICAgfTtcbiAgICBUZXh0QmxvdC5wcm90b3R5cGUudXBkYXRlID0gZnVuY3Rpb24gKG11dGF0aW9ucywgY29udGV4dCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAobXV0YXRpb25zLnNvbWUoZnVuY3Rpb24gKG11dGF0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gbXV0YXRpb24udHlwZSA9PT0gJ2NoYXJhY3RlckRhdGEnICYmIG11dGF0aW9uLnRhcmdldCA9PT0gX3RoaXMuZG9tTm9kZTtcbiAgICAgICAgfSkpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dCA9IHRoaXMuc3RhdGljcy52YWx1ZSh0aGlzLmRvbU5vZGUpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBUZXh0QmxvdC5wcm90b3R5cGUudmFsdWUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRleHQ7XG4gICAgfTtcbiAgICBUZXh0QmxvdC5ibG90TmFtZSA9ICd0ZXh0JztcbiAgICBUZXh0QmxvdC5zY29wZSA9IFJlZ2lzdHJ5LlNjb3BlLklOTElORV9CTE9UO1xuICAgIHJldHVybiBUZXh0QmxvdDtcbn0obGVhZl8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFRleHRCbG90O1xuXG5cbi8qKiovIH0pLFxuLyogNTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxudmFyIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbmVsZW0uY2xhc3NMaXN0LnRvZ2dsZSgndGVzdC1jbGFzcycsIGZhbHNlKTtcbmlmIChlbGVtLmNsYXNzTGlzdC5jb250YWlucygndGVzdC1jbGFzcycpKSB7XG4gIHZhciBfdG9nZ2xlID0gRE9NVG9rZW5MaXN0LnByb3RvdHlwZS50b2dnbGU7XG4gIERPTVRva2VuTGlzdC5wcm90b3R5cGUudG9nZ2xlID0gZnVuY3Rpb24gKHRva2VuLCBmb3JjZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSAmJiAhdGhpcy5jb250YWlucyh0b2tlbikgPT09ICFmb3JjZSkge1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gX3RvZ2dsZS5jYWxsKHRoaXMsIHRva2VuKTtcbiAgICB9XG4gIH07XG59XG5cbmlmICghU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKSB7XG4gIFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uIChzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKSB7XG4gICAgcG9zaXRpb24gPSBwb3NpdGlvbiB8fCAwO1xuICAgIHJldHVybiB0aGlzLnN1YnN0cihwb3NpdGlvbiwgc2VhcmNoU3RyaW5nLmxlbmd0aCkgPT09IHNlYXJjaFN0cmluZztcbiAgfTtcbn1cblxuaWYgKCFTdHJpbmcucHJvdG90eXBlLmVuZHNXaXRoKSB7XG4gIFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGggPSBmdW5jdGlvbiAoc2VhcmNoU3RyaW5nLCBwb3NpdGlvbikge1xuICAgIHZhciBzdWJqZWN0U3RyaW5nID0gdGhpcy50b1N0cmluZygpO1xuICAgIGlmICh0eXBlb2YgcG9zaXRpb24gIT09ICdudW1iZXInIHx8ICFpc0Zpbml0ZShwb3NpdGlvbikgfHwgTWF0aC5mbG9vcihwb3NpdGlvbikgIT09IHBvc2l0aW9uIHx8IHBvc2l0aW9uID4gc3ViamVjdFN0cmluZy5sZW5ndGgpIHtcbiAgICAgIHBvc2l0aW9uID0gc3ViamVjdFN0cmluZy5sZW5ndGg7XG4gICAgfVxuICAgIHBvc2l0aW9uIC09IHNlYXJjaFN0cmluZy5sZW5ndGg7XG4gICAgdmFyIGxhc3RJbmRleCA9IHN1YmplY3RTdHJpbmcuaW5kZXhPZihzZWFyY2hTdHJpbmcsIHBvc2l0aW9uKTtcbiAgICByZXR1cm4gbGFzdEluZGV4ICE9PSAtMSAmJiBsYXN0SW5kZXggPT09IHBvc2l0aW9uO1xuICB9O1xufVxuXG5pZiAoIUFycmF5LnByb3RvdHlwZS5maW5kKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBcnJheS5wcm90b3R5cGUsIFwiZmluZFwiLCB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHByZWRpY2F0ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJyYXkucHJvdG90eXBlLmZpbmQgY2FsbGVkIG9uIG51bGwgb3IgdW5kZWZpbmVkJyk7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHByZWRpY2F0ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdwcmVkaWNhdGUgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG4gICAgICB9XG4gICAgICB2YXIgbGlzdCA9IE9iamVjdCh0aGlzKTtcbiAgICAgIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aCA+Pj4gMDtcbiAgICAgIHZhciB0aGlzQXJnID0gYXJndW1lbnRzWzFdO1xuICAgICAgdmFyIHZhbHVlO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHZhbHVlID0gbGlzdFtpXTtcbiAgICAgICAgaWYgKHByZWRpY2F0ZS5jYWxsKHRoaXNBcmcsIHZhbHVlLCBpLCBsaXN0KSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH0pO1xufVxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XG4gIC8vIERpc2FibGUgcmVzaXppbmcgaW4gRmlyZWZveFxuICBkb2N1bWVudC5leGVjQ29tbWFuZChcImVuYWJsZU9iamVjdFJlc2l6aW5nXCIsIGZhbHNlLCBmYWxzZSk7XG4gIC8vIERpc2FibGUgYXV0b21hdGljIGxpbmtpZnlpbmcgaW4gSUUxMVxuICBkb2N1bWVudC5leGVjQ29tbWFuZChcImF1dG9VcmxEZXRlY3RcIiwgZmFsc2UsIGZhbHNlKTtcbn0pO1xuXG4vKioqLyB9KSxcbi8qIDUxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbi8qKlxuICogVGhpcyBsaWJyYXJ5IG1vZGlmaWVzIHRoZSBkaWZmLXBhdGNoLW1hdGNoIGxpYnJhcnkgYnkgTmVpbCBGcmFzZXJcbiAqIGJ5IHJlbW92aW5nIHRoZSBwYXRjaCBhbmQgbWF0Y2ggZnVuY3Rpb25hbGl0eSBhbmQgY2VydGFpbiBhZHZhbmNlZFxuICogb3B0aW9ucyBpbiB0aGUgZGlmZiBmdW5jdGlvbi4gVGhlIG9yaWdpbmFsIGxpY2Vuc2UgaXMgYXMgZm9sbG93czpcbiAqXG4gKiA9PT1cbiAqXG4gKiBEaWZmIE1hdGNoIGFuZCBQYXRjaFxuICpcbiAqIENvcHlyaWdodCAyMDA2IEdvb2dsZSBJbmMuXG4gKiBodHRwOi8vY29kZS5nb29nbGUuY29tL3AvZ29vZ2xlLWRpZmYtbWF0Y2gtcGF0Y2gvXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5cbi8qKlxuICogVGhlIGRhdGEgc3RydWN0dXJlIHJlcHJlc2VudGluZyBhIGRpZmYgaXMgYW4gYXJyYXkgb2YgdHVwbGVzOlxuICogW1tESUZGX0RFTEVURSwgJ0hlbGxvJ10sIFtESUZGX0lOU0VSVCwgJ0dvb2RieWUnXSwgW0RJRkZfRVFVQUwsICcgd29ybGQuJ11dXG4gKiB3aGljaCBtZWFuczogZGVsZXRlICdIZWxsbycsIGFkZCAnR29vZGJ5ZScgYW5kIGtlZXAgJyB3b3JsZC4nXG4gKi9cbnZhciBESUZGX0RFTEVURSA9IC0xO1xudmFyIERJRkZfSU5TRVJUID0gMTtcbnZhciBESUZGX0VRVUFMID0gMDtcblxuXG4vKipcbiAqIEZpbmQgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gdHdvIHRleHRzLiAgU2ltcGxpZmllcyB0aGUgcHJvYmxlbSBieSBzdHJpcHBpbmdcbiAqIGFueSBjb21tb24gcHJlZml4IG9yIHN1ZmZpeCBvZmYgdGhlIHRleHRzIGJlZm9yZSBkaWZmaW5nLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQxIE9sZCBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQyIE5ldyBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHBhcmFtIHtJbnR9IGN1cnNvcl9wb3MgRXhwZWN0ZWQgZWRpdCBwb3NpdGlvbiBpbiB0ZXh0MSAob3B0aW9uYWwpXG4gKiBAcmV0dXJuIHtBcnJheX0gQXJyYXkgb2YgZGlmZiB0dXBsZXMuXG4gKi9cbmZ1bmN0aW9uIGRpZmZfbWFpbih0ZXh0MSwgdGV4dDIsIGN1cnNvcl9wb3MpIHtcbiAgLy8gQ2hlY2sgZm9yIGVxdWFsaXR5IChzcGVlZHVwKS5cbiAgaWYgKHRleHQxID09IHRleHQyKSB7XG4gICAgaWYgKHRleHQxKSB7XG4gICAgICByZXR1cm4gW1tESUZGX0VRVUFMLCB0ZXh0MV1dO1xuICAgIH1cbiAgICByZXR1cm4gW107XG4gIH1cblxuICAvLyBDaGVjayBjdXJzb3JfcG9zIHdpdGhpbiBib3VuZHNcbiAgaWYgKGN1cnNvcl9wb3MgPCAwIHx8IHRleHQxLmxlbmd0aCA8IGN1cnNvcl9wb3MpIHtcbiAgICBjdXJzb3JfcG9zID0gbnVsbDtcbiAgfVxuXG4gIC8vIFRyaW0gb2ZmIGNvbW1vbiBwcmVmaXggKHNwZWVkdXApLlxuICB2YXIgY29tbW9ubGVuZ3RoID0gZGlmZl9jb21tb25QcmVmaXgodGV4dDEsIHRleHQyKTtcbiAgdmFyIGNvbW1vbnByZWZpeCA9IHRleHQxLnN1YnN0cmluZygwLCBjb21tb25sZW5ndGgpO1xuICB0ZXh0MSA9IHRleHQxLnN1YnN0cmluZyhjb21tb25sZW5ndGgpO1xuICB0ZXh0MiA9IHRleHQyLnN1YnN0cmluZyhjb21tb25sZW5ndGgpO1xuXG4gIC8vIFRyaW0gb2ZmIGNvbW1vbiBzdWZmaXggKHNwZWVkdXApLlxuICBjb21tb25sZW5ndGggPSBkaWZmX2NvbW1vblN1ZmZpeCh0ZXh0MSwgdGV4dDIpO1xuICB2YXIgY29tbW9uc3VmZml4ID0gdGV4dDEuc3Vic3RyaW5nKHRleHQxLmxlbmd0aCAtIGNvbW1vbmxlbmd0aCk7XG4gIHRleHQxID0gdGV4dDEuc3Vic3RyaW5nKDAsIHRleHQxLmxlbmd0aCAtIGNvbW1vbmxlbmd0aCk7XG4gIHRleHQyID0gdGV4dDIuc3Vic3RyaW5nKDAsIHRleHQyLmxlbmd0aCAtIGNvbW1vbmxlbmd0aCk7XG5cbiAgLy8gQ29tcHV0ZSB0aGUgZGlmZiBvbiB0aGUgbWlkZGxlIGJsb2NrLlxuICB2YXIgZGlmZnMgPSBkaWZmX2NvbXB1dGVfKHRleHQxLCB0ZXh0Mik7XG5cbiAgLy8gUmVzdG9yZSB0aGUgcHJlZml4IGFuZCBzdWZmaXguXG4gIGlmIChjb21tb25wcmVmaXgpIHtcbiAgICBkaWZmcy51bnNoaWZ0KFtESUZGX0VRVUFMLCBjb21tb25wcmVmaXhdKTtcbiAgfVxuICBpZiAoY29tbW9uc3VmZml4KSB7XG4gICAgZGlmZnMucHVzaChbRElGRl9FUVVBTCwgY29tbW9uc3VmZml4XSk7XG4gIH1cbiAgZGlmZl9jbGVhbnVwTWVyZ2UoZGlmZnMpO1xuICBpZiAoY3Vyc29yX3BvcyAhPSBudWxsKSB7XG4gICAgZGlmZnMgPSBmaXhfY3Vyc29yKGRpZmZzLCBjdXJzb3JfcG9zKTtcbiAgfVxuICBkaWZmcyA9IGZpeF9lbW9qaShkaWZmcyk7XG4gIHJldHVybiBkaWZmcztcbn07XG5cblxuLyoqXG4gKiBGaW5kIHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIHR3byB0ZXh0cy4gIEFzc3VtZXMgdGhhdCB0aGUgdGV4dHMgZG8gbm90XG4gKiBoYXZlIGFueSBjb21tb24gcHJlZml4IG9yIHN1ZmZpeC5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MSBPbGQgc3RyaW5nIHRvIGJlIGRpZmZlZC5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MiBOZXcgc3RyaW5nIHRvIGJlIGRpZmZlZC5cbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBvZiBkaWZmIHR1cGxlcy5cbiAqL1xuZnVuY3Rpb24gZGlmZl9jb21wdXRlXyh0ZXh0MSwgdGV4dDIpIHtcbiAgdmFyIGRpZmZzO1xuXG4gIGlmICghdGV4dDEpIHtcbiAgICAvLyBKdXN0IGFkZCBzb21lIHRleHQgKHNwZWVkdXApLlxuICAgIHJldHVybiBbW0RJRkZfSU5TRVJULCB0ZXh0Ml1dO1xuICB9XG5cbiAgaWYgKCF0ZXh0Mikge1xuICAgIC8vIEp1c3QgZGVsZXRlIHNvbWUgdGV4dCAoc3BlZWR1cCkuXG4gICAgcmV0dXJuIFtbRElGRl9ERUxFVEUsIHRleHQxXV07XG4gIH1cblxuICB2YXIgbG9uZ3RleHQgPSB0ZXh0MS5sZW5ndGggPiB0ZXh0Mi5sZW5ndGggPyB0ZXh0MSA6IHRleHQyO1xuICB2YXIgc2hvcnR0ZXh0ID0gdGV4dDEubGVuZ3RoID4gdGV4dDIubGVuZ3RoID8gdGV4dDIgOiB0ZXh0MTtcbiAgdmFyIGkgPSBsb25ndGV4dC5pbmRleE9mKHNob3J0dGV4dCk7XG4gIGlmIChpICE9IC0xKSB7XG4gICAgLy8gU2hvcnRlciB0ZXh0IGlzIGluc2lkZSB0aGUgbG9uZ2VyIHRleHQgKHNwZWVkdXApLlxuICAgIGRpZmZzID0gW1tESUZGX0lOU0VSVCwgbG9uZ3RleHQuc3Vic3RyaW5nKDAsIGkpXSxcbiAgICAgICAgICAgICBbRElGRl9FUVVBTCwgc2hvcnR0ZXh0XSxcbiAgICAgICAgICAgICBbRElGRl9JTlNFUlQsIGxvbmd0ZXh0LnN1YnN0cmluZyhpICsgc2hvcnR0ZXh0Lmxlbmd0aCldXTtcbiAgICAvLyBTd2FwIGluc2VydGlvbnMgZm9yIGRlbGV0aW9ucyBpZiBkaWZmIGlzIHJldmVyc2VkLlxuICAgIGlmICh0ZXh0MS5sZW5ndGggPiB0ZXh0Mi5sZW5ndGgpIHtcbiAgICAgIGRpZmZzWzBdWzBdID0gZGlmZnNbMl1bMF0gPSBESUZGX0RFTEVURTtcbiAgICB9XG4gICAgcmV0dXJuIGRpZmZzO1xuICB9XG5cbiAgaWYgKHNob3J0dGV4dC5sZW5ndGggPT0gMSkge1xuICAgIC8vIFNpbmdsZSBjaGFyYWN0ZXIgc3RyaW5nLlxuICAgIC8vIEFmdGVyIHRoZSBwcmV2aW91cyBzcGVlZHVwLCB0aGUgY2hhcmFjdGVyIGNhbid0IGJlIGFuIGVxdWFsaXR5LlxuICAgIHJldHVybiBbW0RJRkZfREVMRVRFLCB0ZXh0MV0sIFtESUZGX0lOU0VSVCwgdGV4dDJdXTtcbiAgfVxuXG4gIC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgcHJvYmxlbSBjYW4gYmUgc3BsaXQgaW4gdHdvLlxuICB2YXIgaG0gPSBkaWZmX2hhbGZNYXRjaF8odGV4dDEsIHRleHQyKTtcbiAgaWYgKGhtKSB7XG4gICAgLy8gQSBoYWxmLW1hdGNoIHdhcyBmb3VuZCwgc29ydCBvdXQgdGhlIHJldHVybiBkYXRhLlxuICAgIHZhciB0ZXh0MV9hID0gaG1bMF07XG4gICAgdmFyIHRleHQxX2IgPSBobVsxXTtcbiAgICB2YXIgdGV4dDJfYSA9IGhtWzJdO1xuICAgIHZhciB0ZXh0Ml9iID0gaG1bM107XG4gICAgdmFyIG1pZF9jb21tb24gPSBobVs0XTtcbiAgICAvLyBTZW5kIGJvdGggcGFpcnMgb2ZmIGZvciBzZXBhcmF0ZSBwcm9jZXNzaW5nLlxuICAgIHZhciBkaWZmc19hID0gZGlmZl9tYWluKHRleHQxX2EsIHRleHQyX2EpO1xuICAgIHZhciBkaWZmc19iID0gZGlmZl9tYWluKHRleHQxX2IsIHRleHQyX2IpO1xuICAgIC8vIE1lcmdlIHRoZSByZXN1bHRzLlxuICAgIHJldHVybiBkaWZmc19hLmNvbmNhdChbW0RJRkZfRVFVQUwsIG1pZF9jb21tb25dXSwgZGlmZnNfYik7XG4gIH1cblxuICByZXR1cm4gZGlmZl9iaXNlY3RfKHRleHQxLCB0ZXh0Mik7XG59O1xuXG5cbi8qKlxuICogRmluZCB0aGUgJ21pZGRsZSBzbmFrZScgb2YgYSBkaWZmLCBzcGxpdCB0aGUgcHJvYmxlbSBpbiB0d29cbiAqIGFuZCByZXR1cm4gdGhlIHJlY3Vyc2l2ZWx5IGNvbnN0cnVjdGVkIGRpZmYuXG4gKiBTZWUgTXllcnMgMTk4NiBwYXBlcjogQW4gTyhORCkgRGlmZmVyZW5jZSBBbGdvcml0aG0gYW5kIEl0cyBWYXJpYXRpb25zLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQxIE9sZCBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQyIE5ldyBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHJldHVybiB7QXJyYXl9IEFycmF5IG9mIGRpZmYgdHVwbGVzLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZGlmZl9iaXNlY3RfKHRleHQxLCB0ZXh0Mikge1xuICAvLyBDYWNoZSB0aGUgdGV4dCBsZW5ndGhzIHRvIHByZXZlbnQgbXVsdGlwbGUgY2FsbHMuXG4gIHZhciB0ZXh0MV9sZW5ndGggPSB0ZXh0MS5sZW5ndGg7XG4gIHZhciB0ZXh0Ml9sZW5ndGggPSB0ZXh0Mi5sZW5ndGg7XG4gIHZhciBtYXhfZCA9IE1hdGguY2VpbCgodGV4dDFfbGVuZ3RoICsgdGV4dDJfbGVuZ3RoKSAvIDIpO1xuICB2YXIgdl9vZmZzZXQgPSBtYXhfZDtcbiAgdmFyIHZfbGVuZ3RoID0gMiAqIG1heF9kO1xuICB2YXIgdjEgPSBuZXcgQXJyYXkodl9sZW5ndGgpO1xuICB2YXIgdjIgPSBuZXcgQXJyYXkodl9sZW5ndGgpO1xuICAvLyBTZXR0aW5nIGFsbCBlbGVtZW50cyB0byAtMSBpcyBmYXN0ZXIgaW4gQ2hyb21lICYgRmlyZWZveCB0aGFuIG1peGluZ1xuICAvLyBpbnRlZ2VycyBhbmQgdW5kZWZpbmVkLlxuICBmb3IgKHZhciB4ID0gMDsgeCA8IHZfbGVuZ3RoOyB4KyspIHtcbiAgICB2MVt4XSA9IC0xO1xuICAgIHYyW3hdID0gLTE7XG4gIH1cbiAgdjFbdl9vZmZzZXQgKyAxXSA9IDA7XG4gIHYyW3Zfb2Zmc2V0ICsgMV0gPSAwO1xuICB2YXIgZGVsdGEgPSB0ZXh0MV9sZW5ndGggLSB0ZXh0Ml9sZW5ndGg7XG4gIC8vIElmIHRoZSB0b3RhbCBudW1iZXIgb2YgY2hhcmFjdGVycyBpcyBvZGQsIHRoZW4gdGhlIGZyb250IHBhdGggd2lsbCBjb2xsaWRlXG4gIC8vIHdpdGggdGhlIHJldmVyc2UgcGF0aC5cbiAgdmFyIGZyb250ID0gKGRlbHRhICUgMiAhPSAwKTtcbiAgLy8gT2Zmc2V0cyBmb3Igc3RhcnQgYW5kIGVuZCBvZiBrIGxvb3AuXG4gIC8vIFByZXZlbnRzIG1hcHBpbmcgb2Ygc3BhY2UgYmV5b25kIHRoZSBncmlkLlxuICB2YXIgazFzdGFydCA9IDA7XG4gIHZhciBrMWVuZCA9IDA7XG4gIHZhciBrMnN0YXJ0ID0gMDtcbiAgdmFyIGsyZW5kID0gMDtcbiAgZm9yICh2YXIgZCA9IDA7IGQgPCBtYXhfZDsgZCsrKSB7XG4gICAgLy8gV2FsayB0aGUgZnJvbnQgcGF0aCBvbmUgc3RlcC5cbiAgICBmb3IgKHZhciBrMSA9IC1kICsgazFzdGFydDsgazEgPD0gZCAtIGsxZW5kOyBrMSArPSAyKSB7XG4gICAgICB2YXIgazFfb2Zmc2V0ID0gdl9vZmZzZXQgKyBrMTtcbiAgICAgIHZhciB4MTtcbiAgICAgIGlmIChrMSA9PSAtZCB8fCAoazEgIT0gZCAmJiB2MVtrMV9vZmZzZXQgLSAxXSA8IHYxW2sxX29mZnNldCArIDFdKSkge1xuICAgICAgICB4MSA9IHYxW2sxX29mZnNldCArIDFdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeDEgPSB2MVtrMV9vZmZzZXQgLSAxXSArIDE7XG4gICAgICB9XG4gICAgICB2YXIgeTEgPSB4MSAtIGsxO1xuICAgICAgd2hpbGUgKHgxIDwgdGV4dDFfbGVuZ3RoICYmIHkxIDwgdGV4dDJfbGVuZ3RoICYmXG4gICAgICAgICAgICAgdGV4dDEuY2hhckF0KHgxKSA9PSB0ZXh0Mi5jaGFyQXQoeTEpKSB7XG4gICAgICAgIHgxKys7XG4gICAgICAgIHkxKys7XG4gICAgICB9XG4gICAgICB2MVtrMV9vZmZzZXRdID0geDE7XG4gICAgICBpZiAoeDEgPiB0ZXh0MV9sZW5ndGgpIHtcbiAgICAgICAgLy8gUmFuIG9mZiB0aGUgcmlnaHQgb2YgdGhlIGdyYXBoLlxuICAgICAgICBrMWVuZCArPSAyO1xuICAgICAgfSBlbHNlIGlmICh5MSA+IHRleHQyX2xlbmd0aCkge1xuICAgICAgICAvLyBSYW4gb2ZmIHRoZSBib3R0b20gb2YgdGhlIGdyYXBoLlxuICAgICAgICBrMXN0YXJ0ICs9IDI7XG4gICAgICB9IGVsc2UgaWYgKGZyb250KSB7XG4gICAgICAgIHZhciBrMl9vZmZzZXQgPSB2X29mZnNldCArIGRlbHRhIC0gazE7XG4gICAgICAgIGlmIChrMl9vZmZzZXQgPj0gMCAmJiBrMl9vZmZzZXQgPCB2X2xlbmd0aCAmJiB2MltrMl9vZmZzZXRdICE9IC0xKSB7XG4gICAgICAgICAgLy8gTWlycm9yIHgyIG9udG8gdG9wLWxlZnQgY29vcmRpbmF0ZSBzeXN0ZW0uXG4gICAgICAgICAgdmFyIHgyID0gdGV4dDFfbGVuZ3RoIC0gdjJbazJfb2Zmc2V0XTtcbiAgICAgICAgICBpZiAoeDEgPj0geDIpIHtcbiAgICAgICAgICAgIC8vIE92ZXJsYXAgZGV0ZWN0ZWQuXG4gICAgICAgICAgICByZXR1cm4gZGlmZl9iaXNlY3RTcGxpdF8odGV4dDEsIHRleHQyLCB4MSwgeTEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFdhbGsgdGhlIHJldmVyc2UgcGF0aCBvbmUgc3RlcC5cbiAgICBmb3IgKHZhciBrMiA9IC1kICsgazJzdGFydDsgazIgPD0gZCAtIGsyZW5kOyBrMiArPSAyKSB7XG4gICAgICB2YXIgazJfb2Zmc2V0ID0gdl9vZmZzZXQgKyBrMjtcbiAgICAgIHZhciB4MjtcbiAgICAgIGlmIChrMiA9PSAtZCB8fCAoazIgIT0gZCAmJiB2MltrMl9vZmZzZXQgLSAxXSA8IHYyW2syX29mZnNldCArIDFdKSkge1xuICAgICAgICB4MiA9IHYyW2syX29mZnNldCArIDFdO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgeDIgPSB2MltrMl9vZmZzZXQgLSAxXSArIDE7XG4gICAgICB9XG4gICAgICB2YXIgeTIgPSB4MiAtIGsyO1xuICAgICAgd2hpbGUgKHgyIDwgdGV4dDFfbGVuZ3RoICYmIHkyIDwgdGV4dDJfbGVuZ3RoICYmXG4gICAgICAgICAgICAgdGV4dDEuY2hhckF0KHRleHQxX2xlbmd0aCAtIHgyIC0gMSkgPT1cbiAgICAgICAgICAgICB0ZXh0Mi5jaGFyQXQodGV4dDJfbGVuZ3RoIC0geTIgLSAxKSkge1xuICAgICAgICB4MisrO1xuICAgICAgICB5MisrO1xuICAgICAgfVxuICAgICAgdjJbazJfb2Zmc2V0XSA9IHgyO1xuICAgICAgaWYgKHgyID4gdGV4dDFfbGVuZ3RoKSB7XG4gICAgICAgIC8vIFJhbiBvZmYgdGhlIGxlZnQgb2YgdGhlIGdyYXBoLlxuICAgICAgICBrMmVuZCArPSAyO1xuICAgICAgfSBlbHNlIGlmICh5MiA+IHRleHQyX2xlbmd0aCkge1xuICAgICAgICAvLyBSYW4gb2ZmIHRoZSB0b3Agb2YgdGhlIGdyYXBoLlxuICAgICAgICBrMnN0YXJ0ICs9IDI7XG4gICAgICB9IGVsc2UgaWYgKCFmcm9udCkge1xuICAgICAgICB2YXIgazFfb2Zmc2V0ID0gdl9vZmZzZXQgKyBkZWx0YSAtIGsyO1xuICAgICAgICBpZiAoazFfb2Zmc2V0ID49IDAgJiYgazFfb2Zmc2V0IDwgdl9sZW5ndGggJiYgdjFbazFfb2Zmc2V0XSAhPSAtMSkge1xuICAgICAgICAgIHZhciB4MSA9IHYxW2sxX29mZnNldF07XG4gICAgICAgICAgdmFyIHkxID0gdl9vZmZzZXQgKyB4MSAtIGsxX29mZnNldDtcbiAgICAgICAgICAvLyBNaXJyb3IgeDIgb250byB0b3AtbGVmdCBjb29yZGluYXRlIHN5c3RlbS5cbiAgICAgICAgICB4MiA9IHRleHQxX2xlbmd0aCAtIHgyO1xuICAgICAgICAgIGlmICh4MSA+PSB4Mikge1xuICAgICAgICAgICAgLy8gT3ZlcmxhcCBkZXRlY3RlZC5cbiAgICAgICAgICAgIHJldHVybiBkaWZmX2Jpc2VjdFNwbGl0Xyh0ZXh0MSwgdGV4dDIsIHgxLCB5MSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC8vIERpZmYgdG9vayB0b28gbG9uZyBhbmQgaGl0IHRoZSBkZWFkbGluZSBvclxuICAvLyBudW1iZXIgb2YgZGlmZnMgZXF1YWxzIG51bWJlciBvZiBjaGFyYWN0ZXJzLCBubyBjb21tb25hbGl0eSBhdCBhbGwuXG4gIHJldHVybiBbW0RJRkZfREVMRVRFLCB0ZXh0MV0sIFtESUZGX0lOU0VSVCwgdGV4dDJdXTtcbn07XG5cblxuLyoqXG4gKiBHaXZlbiB0aGUgbG9jYXRpb24gb2YgdGhlICdtaWRkbGUgc25ha2UnLCBzcGxpdCB0aGUgZGlmZiBpbiB0d28gcGFydHNcbiAqIGFuZCByZWN1cnNlLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQxIE9sZCBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQyIE5ldyBzdHJpbmcgdG8gYmUgZGlmZmVkLlxuICogQHBhcmFtIHtudW1iZXJ9IHggSW5kZXggb2Ygc3BsaXQgcG9pbnQgaW4gdGV4dDEuXG4gKiBAcGFyYW0ge251bWJlcn0geSBJbmRleCBvZiBzcGxpdCBwb2ludCBpbiB0ZXh0Mi5cbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBvZiBkaWZmIHR1cGxlcy5cbiAqL1xuZnVuY3Rpb24gZGlmZl9iaXNlY3RTcGxpdF8odGV4dDEsIHRleHQyLCB4LCB5KSB7XG4gIHZhciB0ZXh0MWEgPSB0ZXh0MS5zdWJzdHJpbmcoMCwgeCk7XG4gIHZhciB0ZXh0MmEgPSB0ZXh0Mi5zdWJzdHJpbmcoMCwgeSk7XG4gIHZhciB0ZXh0MWIgPSB0ZXh0MS5zdWJzdHJpbmcoeCk7XG4gIHZhciB0ZXh0MmIgPSB0ZXh0Mi5zdWJzdHJpbmcoeSk7XG5cbiAgLy8gQ29tcHV0ZSBib3RoIGRpZmZzIHNlcmlhbGx5LlxuICB2YXIgZGlmZnMgPSBkaWZmX21haW4odGV4dDFhLCB0ZXh0MmEpO1xuICB2YXIgZGlmZnNiID0gZGlmZl9tYWluKHRleHQxYiwgdGV4dDJiKTtcblxuICByZXR1cm4gZGlmZnMuY29uY2F0KGRpZmZzYik7XG59O1xuXG5cbi8qKlxuICogRGV0ZXJtaW5lIHRoZSBjb21tb24gcHJlZml4IG9mIHR3byBzdHJpbmdzLlxuICogQHBhcmFtIHtzdHJpbmd9IHRleHQxIEZpcnN0IHN0cmluZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MiBTZWNvbmQgc3RyaW5nLlxuICogQHJldHVybiB7bnVtYmVyfSBUaGUgbnVtYmVyIG9mIGNoYXJhY3RlcnMgY29tbW9uIHRvIHRoZSBzdGFydCBvZiBlYWNoXG4gKiAgICAgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBkaWZmX2NvbW1vblByZWZpeCh0ZXh0MSwgdGV4dDIpIHtcbiAgLy8gUXVpY2sgY2hlY2sgZm9yIGNvbW1vbiBudWxsIGNhc2VzLlxuICBpZiAoIXRleHQxIHx8ICF0ZXh0MiB8fCB0ZXh0MS5jaGFyQXQoMCkgIT0gdGV4dDIuY2hhckF0KDApKSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgLy8gQmluYXJ5IHNlYXJjaC5cbiAgLy8gUGVyZm9ybWFuY2UgYW5hbHlzaXM6IGh0dHA6Ly9uZWlsLmZyYXNlci5uYW1lL25ld3MvMjAwNy8xMC8wOS9cbiAgdmFyIHBvaW50ZXJtaW4gPSAwO1xuICB2YXIgcG9pbnRlcm1heCA9IE1hdGgubWluKHRleHQxLmxlbmd0aCwgdGV4dDIubGVuZ3RoKTtcbiAgdmFyIHBvaW50ZXJtaWQgPSBwb2ludGVybWF4O1xuICB2YXIgcG9pbnRlcnN0YXJ0ID0gMDtcbiAgd2hpbGUgKHBvaW50ZXJtaW4gPCBwb2ludGVybWlkKSB7XG4gICAgaWYgKHRleHQxLnN1YnN0cmluZyhwb2ludGVyc3RhcnQsIHBvaW50ZXJtaWQpID09XG4gICAgICAgIHRleHQyLnN1YnN0cmluZyhwb2ludGVyc3RhcnQsIHBvaW50ZXJtaWQpKSB7XG4gICAgICBwb2ludGVybWluID0gcG9pbnRlcm1pZDtcbiAgICAgIHBvaW50ZXJzdGFydCA9IHBvaW50ZXJtaW47XG4gICAgfSBlbHNlIHtcbiAgICAgIHBvaW50ZXJtYXggPSBwb2ludGVybWlkO1xuICAgIH1cbiAgICBwb2ludGVybWlkID0gTWF0aC5mbG9vcigocG9pbnRlcm1heCAtIHBvaW50ZXJtaW4pIC8gMiArIHBvaW50ZXJtaW4pO1xuICB9XG4gIHJldHVybiBwb2ludGVybWlkO1xufTtcblxuXG4vKipcbiAqIERldGVybWluZSB0aGUgY29tbW9uIHN1ZmZpeCBvZiB0d28gc3RyaW5ncy5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MSBGaXJzdCBzdHJpbmcuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dDIgU2Vjb25kIHN0cmluZy5cbiAqIEByZXR1cm4ge251bWJlcn0gVGhlIG51bWJlciBvZiBjaGFyYWN0ZXJzIGNvbW1vbiB0byB0aGUgZW5kIG9mIGVhY2ggc3RyaW5nLlxuICovXG5mdW5jdGlvbiBkaWZmX2NvbW1vblN1ZmZpeCh0ZXh0MSwgdGV4dDIpIHtcbiAgLy8gUXVpY2sgY2hlY2sgZm9yIGNvbW1vbiBudWxsIGNhc2VzLlxuICBpZiAoIXRleHQxIHx8ICF0ZXh0MiB8fFxuICAgICAgdGV4dDEuY2hhckF0KHRleHQxLmxlbmd0aCAtIDEpICE9IHRleHQyLmNoYXJBdCh0ZXh0Mi5sZW5ndGggLSAxKSkge1xuICAgIHJldHVybiAwO1xuICB9XG4gIC8vIEJpbmFyeSBzZWFyY2guXG4gIC8vIFBlcmZvcm1hbmNlIGFuYWx5c2lzOiBodHRwOi8vbmVpbC5mcmFzZXIubmFtZS9uZXdzLzIwMDcvMTAvMDkvXG4gIHZhciBwb2ludGVybWluID0gMDtcbiAgdmFyIHBvaW50ZXJtYXggPSBNYXRoLm1pbih0ZXh0MS5sZW5ndGgsIHRleHQyLmxlbmd0aCk7XG4gIHZhciBwb2ludGVybWlkID0gcG9pbnRlcm1heDtcbiAgdmFyIHBvaW50ZXJlbmQgPSAwO1xuICB3aGlsZSAocG9pbnRlcm1pbiA8IHBvaW50ZXJtaWQpIHtcbiAgICBpZiAodGV4dDEuc3Vic3RyaW5nKHRleHQxLmxlbmd0aCAtIHBvaW50ZXJtaWQsIHRleHQxLmxlbmd0aCAtIHBvaW50ZXJlbmQpID09XG4gICAgICAgIHRleHQyLnN1YnN0cmluZyh0ZXh0Mi5sZW5ndGggLSBwb2ludGVybWlkLCB0ZXh0Mi5sZW5ndGggLSBwb2ludGVyZW5kKSkge1xuICAgICAgcG9pbnRlcm1pbiA9IHBvaW50ZXJtaWQ7XG4gICAgICBwb2ludGVyZW5kID0gcG9pbnRlcm1pbjtcbiAgICB9IGVsc2Uge1xuICAgICAgcG9pbnRlcm1heCA9IHBvaW50ZXJtaWQ7XG4gICAgfVxuICAgIHBvaW50ZXJtaWQgPSBNYXRoLmZsb29yKChwb2ludGVybWF4IC0gcG9pbnRlcm1pbikgLyAyICsgcG9pbnRlcm1pbik7XG4gIH1cbiAgcmV0dXJuIHBvaW50ZXJtaWQ7XG59O1xuXG5cbi8qKlxuICogRG8gdGhlIHR3byB0ZXh0cyBzaGFyZSBhIHN1YnN0cmluZyB3aGljaCBpcyBhdCBsZWFzdCBoYWxmIHRoZSBsZW5ndGggb2YgdGhlXG4gKiBsb25nZXIgdGV4dD9cbiAqIFRoaXMgc3BlZWR1cCBjYW4gcHJvZHVjZSBub24tbWluaW1hbCBkaWZmcy5cbiAqIEBwYXJhbSB7c3RyaW5nfSB0ZXh0MSBGaXJzdCBzdHJpbmcuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dDIgU2Vjb25kIHN0cmluZy5cbiAqIEByZXR1cm4ge0FycmF5LjxzdHJpbmc+fSBGaXZlIGVsZW1lbnQgQXJyYXksIGNvbnRhaW5pbmcgdGhlIHByZWZpeCBvZlxuICogICAgIHRleHQxLCB0aGUgc3VmZml4IG9mIHRleHQxLCB0aGUgcHJlZml4IG9mIHRleHQyLCB0aGUgc3VmZml4IG9mXG4gKiAgICAgdGV4dDIgYW5kIHRoZSBjb21tb24gbWlkZGxlLiAgT3IgbnVsbCBpZiB0aGVyZSB3YXMgbm8gbWF0Y2guXG4gKi9cbmZ1bmN0aW9uIGRpZmZfaGFsZk1hdGNoXyh0ZXh0MSwgdGV4dDIpIHtcbiAgdmFyIGxvbmd0ZXh0ID0gdGV4dDEubGVuZ3RoID4gdGV4dDIubGVuZ3RoID8gdGV4dDEgOiB0ZXh0MjtcbiAgdmFyIHNob3J0dGV4dCA9IHRleHQxLmxlbmd0aCA+IHRleHQyLmxlbmd0aCA/IHRleHQyIDogdGV4dDE7XG4gIGlmIChsb25ndGV4dC5sZW5ndGggPCA0IHx8IHNob3J0dGV4dC5sZW5ndGggKiAyIDwgbG9uZ3RleHQubGVuZ3RoKSB7XG4gICAgcmV0dXJuIG51bGw7ICAvLyBQb2ludGxlc3MuXG4gIH1cblxuICAvKipcbiAgICogRG9lcyBhIHN1YnN0cmluZyBvZiBzaG9ydHRleHQgZXhpc3Qgd2l0aGluIGxvbmd0ZXh0IHN1Y2ggdGhhdCB0aGUgc3Vic3RyaW5nXG4gICAqIGlzIGF0IGxlYXN0IGhhbGYgdGhlIGxlbmd0aCBvZiBsb25ndGV4dD9cbiAgICogQ2xvc3VyZSwgYnV0IGRvZXMgbm90IHJlZmVyZW5jZSBhbnkgZXh0ZXJuYWwgdmFyaWFibGVzLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbG9uZ3RleHQgTG9uZ2VyIHN0cmluZy5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHNob3J0dGV4dCBTaG9ydGVyIHN0cmluZy5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGkgU3RhcnQgaW5kZXggb2YgcXVhcnRlciBsZW5ndGggc3Vic3RyaW5nIHdpdGhpbiBsb25ndGV4dC5cbiAgICogQHJldHVybiB7QXJyYXkuPHN0cmluZz59IEZpdmUgZWxlbWVudCBBcnJheSwgY29udGFpbmluZyB0aGUgcHJlZml4IG9mXG4gICAqICAgICBsb25ndGV4dCwgdGhlIHN1ZmZpeCBvZiBsb25ndGV4dCwgdGhlIHByZWZpeCBvZiBzaG9ydHRleHQsIHRoZSBzdWZmaXhcbiAgICogICAgIG9mIHNob3J0dGV4dCBhbmQgdGhlIGNvbW1vbiBtaWRkbGUuICBPciBudWxsIGlmIHRoZXJlIHdhcyBubyBtYXRjaC5cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGZ1bmN0aW9uIGRpZmZfaGFsZk1hdGNoSV8obG9uZ3RleHQsIHNob3J0dGV4dCwgaSkge1xuICAgIC8vIFN0YXJ0IHdpdGggYSAxLzQgbGVuZ3RoIHN1YnN0cmluZyBhdCBwb3NpdGlvbiBpIGFzIGEgc2VlZC5cbiAgICB2YXIgc2VlZCA9IGxvbmd0ZXh0LnN1YnN0cmluZyhpLCBpICsgTWF0aC5mbG9vcihsb25ndGV4dC5sZW5ndGggLyA0KSk7XG4gICAgdmFyIGogPSAtMTtcbiAgICB2YXIgYmVzdF9jb21tb24gPSAnJztcbiAgICB2YXIgYmVzdF9sb25ndGV4dF9hLCBiZXN0X2xvbmd0ZXh0X2IsIGJlc3Rfc2hvcnR0ZXh0X2EsIGJlc3Rfc2hvcnR0ZXh0X2I7XG4gICAgd2hpbGUgKChqID0gc2hvcnR0ZXh0LmluZGV4T2Yoc2VlZCwgaiArIDEpKSAhPSAtMSkge1xuICAgICAgdmFyIHByZWZpeExlbmd0aCA9IGRpZmZfY29tbW9uUHJlZml4KGxvbmd0ZXh0LnN1YnN0cmluZyhpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaG9ydHRleHQuc3Vic3RyaW5nKGopKTtcbiAgICAgIHZhciBzdWZmaXhMZW5ndGggPSBkaWZmX2NvbW1vblN1ZmZpeChsb25ndGV4dC5zdWJzdHJpbmcoMCwgaSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2hvcnR0ZXh0LnN1YnN0cmluZygwLCBqKSk7XG4gICAgICBpZiAoYmVzdF9jb21tb24ubGVuZ3RoIDwgc3VmZml4TGVuZ3RoICsgcHJlZml4TGVuZ3RoKSB7XG4gICAgICAgIGJlc3RfY29tbW9uID0gc2hvcnR0ZXh0LnN1YnN0cmluZyhqIC0gc3VmZml4TGVuZ3RoLCBqKSArXG4gICAgICAgICAgICBzaG9ydHRleHQuc3Vic3RyaW5nKGosIGogKyBwcmVmaXhMZW5ndGgpO1xuICAgICAgICBiZXN0X2xvbmd0ZXh0X2EgPSBsb25ndGV4dC5zdWJzdHJpbmcoMCwgaSAtIHN1ZmZpeExlbmd0aCk7XG4gICAgICAgIGJlc3RfbG9uZ3RleHRfYiA9IGxvbmd0ZXh0LnN1YnN0cmluZyhpICsgcHJlZml4TGVuZ3RoKTtcbiAgICAgICAgYmVzdF9zaG9ydHRleHRfYSA9IHNob3J0dGV4dC5zdWJzdHJpbmcoMCwgaiAtIHN1ZmZpeExlbmd0aCk7XG4gICAgICAgIGJlc3Rfc2hvcnR0ZXh0X2IgPSBzaG9ydHRleHQuc3Vic3RyaW5nKGogKyBwcmVmaXhMZW5ndGgpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoYmVzdF9jb21tb24ubGVuZ3RoICogMiA+PSBsb25ndGV4dC5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBbYmVzdF9sb25ndGV4dF9hLCBiZXN0X2xvbmd0ZXh0X2IsXG4gICAgICAgICAgICAgIGJlc3Rfc2hvcnR0ZXh0X2EsIGJlc3Rfc2hvcnR0ZXh0X2IsIGJlc3RfY29tbW9uXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgLy8gRmlyc3QgY2hlY2sgaWYgdGhlIHNlY29uZCBxdWFydGVyIGlzIHRoZSBzZWVkIGZvciBhIGhhbGYtbWF0Y2guXG4gIHZhciBobTEgPSBkaWZmX2hhbGZNYXRjaElfKGxvbmd0ZXh0LCBzaG9ydHRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGguY2VpbChsb25ndGV4dC5sZW5ndGggLyA0KSk7XG4gIC8vIENoZWNrIGFnYWluIGJhc2VkIG9uIHRoZSB0aGlyZCBxdWFydGVyLlxuICB2YXIgaG0yID0gZGlmZl9oYWxmTWF0Y2hJXyhsb25ndGV4dCwgc2hvcnR0ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLmNlaWwobG9uZ3RleHQubGVuZ3RoIC8gMikpO1xuICB2YXIgaG07XG4gIGlmICghaG0xICYmICFobTIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSBlbHNlIGlmICghaG0yKSB7XG4gICAgaG0gPSBobTE7XG4gIH0gZWxzZSBpZiAoIWhtMSkge1xuICAgIGhtID0gaG0yO1xuICB9IGVsc2Uge1xuICAgIC8vIEJvdGggbWF0Y2hlZC4gIFNlbGVjdCB0aGUgbG9uZ2VzdC5cbiAgICBobSA9IGhtMVs0XS5sZW5ndGggPiBobTJbNF0ubGVuZ3RoID8gaG0xIDogaG0yO1xuICB9XG5cbiAgLy8gQSBoYWxmLW1hdGNoIHdhcyBmb3VuZCwgc29ydCBvdXQgdGhlIHJldHVybiBkYXRhLlxuICB2YXIgdGV4dDFfYSwgdGV4dDFfYiwgdGV4dDJfYSwgdGV4dDJfYjtcbiAgaWYgKHRleHQxLmxlbmd0aCA+IHRleHQyLmxlbmd0aCkge1xuICAgIHRleHQxX2EgPSBobVswXTtcbiAgICB0ZXh0MV9iID0gaG1bMV07XG4gICAgdGV4dDJfYSA9IGhtWzJdO1xuICAgIHRleHQyX2IgPSBobVszXTtcbiAgfSBlbHNlIHtcbiAgICB0ZXh0Ml9hID0gaG1bMF07XG4gICAgdGV4dDJfYiA9IGhtWzFdO1xuICAgIHRleHQxX2EgPSBobVsyXTtcbiAgICB0ZXh0MV9iID0gaG1bM107XG4gIH1cbiAgdmFyIG1pZF9jb21tb24gPSBobVs0XTtcbiAgcmV0dXJuIFt0ZXh0MV9hLCB0ZXh0MV9iLCB0ZXh0Ml9hLCB0ZXh0Ml9iLCBtaWRfY29tbW9uXTtcbn07XG5cblxuLyoqXG4gKiBSZW9yZGVyIGFuZCBtZXJnZSBsaWtlIGVkaXQgc2VjdGlvbnMuICBNZXJnZSBlcXVhbGl0aWVzLlxuICogQW55IGVkaXQgc2VjdGlvbiBjYW4gbW92ZSBhcyBsb25nIGFzIGl0IGRvZXNuJ3QgY3Jvc3MgYW4gZXF1YWxpdHkuXG4gKiBAcGFyYW0ge0FycmF5fSBkaWZmcyBBcnJheSBvZiBkaWZmIHR1cGxlcy5cbiAqL1xuZnVuY3Rpb24gZGlmZl9jbGVhbnVwTWVyZ2UoZGlmZnMpIHtcbiAgZGlmZnMucHVzaChbRElGRl9FUVVBTCwgJyddKTsgIC8vIEFkZCBhIGR1bW15IGVudHJ5IGF0IHRoZSBlbmQuXG4gIHZhciBwb2ludGVyID0gMDtcbiAgdmFyIGNvdW50X2RlbGV0ZSA9IDA7XG4gIHZhciBjb3VudF9pbnNlcnQgPSAwO1xuICB2YXIgdGV4dF9kZWxldGUgPSAnJztcbiAgdmFyIHRleHRfaW5zZXJ0ID0gJyc7XG4gIHZhciBjb21tb25sZW5ndGg7XG4gIHdoaWxlIChwb2ludGVyIDwgZGlmZnMubGVuZ3RoKSB7XG4gICAgc3dpdGNoIChkaWZmc1twb2ludGVyXVswXSkge1xuICAgICAgY2FzZSBESUZGX0lOU0VSVDpcbiAgICAgICAgY291bnRfaW5zZXJ0Kys7XG4gICAgICAgIHRleHRfaW5zZXJ0ICs9IGRpZmZzW3BvaW50ZXJdWzFdO1xuICAgICAgICBwb2ludGVyKys7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBESUZGX0RFTEVURTpcbiAgICAgICAgY291bnRfZGVsZXRlKys7XG4gICAgICAgIHRleHRfZGVsZXRlICs9IGRpZmZzW3BvaW50ZXJdWzFdO1xuICAgICAgICBwb2ludGVyKys7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBESUZGX0VRVUFMOlxuICAgICAgICAvLyBVcG9uIHJlYWNoaW5nIGFuIGVxdWFsaXR5LCBjaGVjayBmb3IgcHJpb3IgcmVkdW5kYW5jaWVzLlxuICAgICAgICBpZiAoY291bnRfZGVsZXRlICsgY291bnRfaW5zZXJ0ID4gMSkge1xuICAgICAgICAgIGlmIChjb3VudF9kZWxldGUgIT09IDAgJiYgY291bnRfaW5zZXJ0ICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBGYWN0b3Igb3V0IGFueSBjb21tb24gcHJlZml4aWVzLlxuICAgICAgICAgICAgY29tbW9ubGVuZ3RoID0gZGlmZl9jb21tb25QcmVmaXgodGV4dF9pbnNlcnQsIHRleHRfZGVsZXRlKTtcbiAgICAgICAgICAgIGlmIChjb21tb25sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICAgaWYgKChwb2ludGVyIC0gY291bnRfZGVsZXRlIC0gY291bnRfaW5zZXJ0KSA+IDAgJiZcbiAgICAgICAgICAgICAgICAgIGRpZmZzW3BvaW50ZXIgLSBjb3VudF9kZWxldGUgLSBjb3VudF9pbnNlcnQgLSAxXVswXSA9PVxuICAgICAgICAgICAgICAgICAgRElGRl9FUVVBTCkge1xuICAgICAgICAgICAgICAgIGRpZmZzW3BvaW50ZXIgLSBjb3VudF9kZWxldGUgLSBjb3VudF9pbnNlcnQgLSAxXVsxXSArPVxuICAgICAgICAgICAgICAgICAgICB0ZXh0X2luc2VydC5zdWJzdHJpbmcoMCwgY29tbW9ubGVuZ3RoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBkaWZmcy5zcGxpY2UoMCwgMCwgW0RJRkZfRVFVQUwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0X2luc2VydC5zdWJzdHJpbmcoMCwgY29tbW9ubGVuZ3RoKV0pO1xuICAgICAgICAgICAgICAgIHBvaW50ZXIrKztcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB0ZXh0X2luc2VydCA9IHRleHRfaW5zZXJ0LnN1YnN0cmluZyhjb21tb25sZW5ndGgpO1xuICAgICAgICAgICAgICB0ZXh0X2RlbGV0ZSA9IHRleHRfZGVsZXRlLnN1YnN0cmluZyhjb21tb25sZW5ndGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRmFjdG9yIG91dCBhbnkgY29tbW9uIHN1ZmZpeGllcy5cbiAgICAgICAgICAgIGNvbW1vbmxlbmd0aCA9IGRpZmZfY29tbW9uU3VmZml4KHRleHRfaW5zZXJ0LCB0ZXh0X2RlbGV0ZSk7XG4gICAgICAgICAgICBpZiAoY29tbW9ubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgIGRpZmZzW3BvaW50ZXJdWzFdID0gdGV4dF9pbnNlcnQuc3Vic3RyaW5nKHRleHRfaW5zZXJ0Lmxlbmd0aCAtXG4gICAgICAgICAgICAgICAgICBjb21tb25sZW5ndGgpICsgZGlmZnNbcG9pbnRlcl1bMV07XG4gICAgICAgICAgICAgIHRleHRfaW5zZXJ0ID0gdGV4dF9pbnNlcnQuc3Vic3RyaW5nKDAsIHRleHRfaW5zZXJ0Lmxlbmd0aCAtXG4gICAgICAgICAgICAgICAgICBjb21tb25sZW5ndGgpO1xuICAgICAgICAgICAgICB0ZXh0X2RlbGV0ZSA9IHRleHRfZGVsZXRlLnN1YnN0cmluZygwLCB0ZXh0X2RlbGV0ZS5sZW5ndGggLVxuICAgICAgICAgICAgICAgICAgY29tbW9ubGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgLy8gRGVsZXRlIHRoZSBvZmZlbmRpbmcgcmVjb3JkcyBhbmQgYWRkIHRoZSBtZXJnZWQgb25lcy5cbiAgICAgICAgICBpZiAoY291bnRfZGVsZXRlID09PSAwKSB7XG4gICAgICAgICAgICBkaWZmcy5zcGxpY2UocG9pbnRlciAtIGNvdW50X2luc2VydCxcbiAgICAgICAgICAgICAgICBjb3VudF9kZWxldGUgKyBjb3VudF9pbnNlcnQsIFtESUZGX0lOU0VSVCwgdGV4dF9pbnNlcnRdKTtcbiAgICAgICAgICB9IGVsc2UgaWYgKGNvdW50X2luc2VydCA9PT0gMCkge1xuICAgICAgICAgICAgZGlmZnMuc3BsaWNlKHBvaW50ZXIgLSBjb3VudF9kZWxldGUsXG4gICAgICAgICAgICAgICAgY291bnRfZGVsZXRlICsgY291bnRfaW5zZXJ0LCBbRElGRl9ERUxFVEUsIHRleHRfZGVsZXRlXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGRpZmZzLnNwbGljZShwb2ludGVyIC0gY291bnRfZGVsZXRlIC0gY291bnRfaW5zZXJ0LFxuICAgICAgICAgICAgICAgIGNvdW50X2RlbGV0ZSArIGNvdW50X2luc2VydCwgW0RJRkZfREVMRVRFLCB0ZXh0X2RlbGV0ZV0sXG4gICAgICAgICAgICAgICAgW0RJRkZfSU5TRVJULCB0ZXh0X2luc2VydF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBwb2ludGVyID0gcG9pbnRlciAtIGNvdW50X2RlbGV0ZSAtIGNvdW50X2luc2VydCArXG4gICAgICAgICAgICAgICAgICAgIChjb3VudF9kZWxldGUgPyAxIDogMCkgKyAoY291bnRfaW5zZXJ0ID8gMSA6IDApICsgMTtcbiAgICAgICAgfSBlbHNlIGlmIChwb2ludGVyICE9PSAwICYmIGRpZmZzW3BvaW50ZXIgLSAxXVswXSA9PSBESUZGX0VRVUFMKSB7XG4gICAgICAgICAgLy8gTWVyZ2UgdGhpcyBlcXVhbGl0eSB3aXRoIHRoZSBwcmV2aW91cyBvbmUuXG4gICAgICAgICAgZGlmZnNbcG9pbnRlciAtIDFdWzFdICs9IGRpZmZzW3BvaW50ZXJdWzFdO1xuICAgICAgICAgIGRpZmZzLnNwbGljZShwb2ludGVyLCAxKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwb2ludGVyKys7XG4gICAgICAgIH1cbiAgICAgICAgY291bnRfaW5zZXJ0ID0gMDtcbiAgICAgICAgY291bnRfZGVsZXRlID0gMDtcbiAgICAgICAgdGV4dF9kZWxldGUgPSAnJztcbiAgICAgICAgdGV4dF9pbnNlcnQgPSAnJztcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGlmIChkaWZmc1tkaWZmcy5sZW5ndGggLSAxXVsxXSA9PT0gJycpIHtcbiAgICBkaWZmcy5wb3AoKTsgIC8vIFJlbW92ZSB0aGUgZHVtbXkgZW50cnkgYXQgdGhlIGVuZC5cbiAgfVxuXG4gIC8vIFNlY29uZCBwYXNzOiBsb29rIGZvciBzaW5nbGUgZWRpdHMgc3Vycm91bmRlZCBvbiBib3RoIHNpZGVzIGJ5IGVxdWFsaXRpZXNcbiAgLy8gd2hpY2ggY2FuIGJlIHNoaWZ0ZWQgc2lkZXdheXMgdG8gZWxpbWluYXRlIGFuIGVxdWFsaXR5LlxuICAvLyBlLmc6IEE8aW5zPkJBPC9pbnM+QyAtPiA8aW5zPkFCPC9pbnM+QUNcbiAgdmFyIGNoYW5nZXMgPSBmYWxzZTtcbiAgcG9pbnRlciA9IDE7XG4gIC8vIEludGVudGlvbmFsbHkgaWdub3JlIHRoZSBmaXJzdCBhbmQgbGFzdCBlbGVtZW50IChkb24ndCBuZWVkIGNoZWNraW5nKS5cbiAgd2hpbGUgKHBvaW50ZXIgPCBkaWZmcy5sZW5ndGggLSAxKSB7XG4gICAgaWYgKGRpZmZzW3BvaW50ZXIgLSAxXVswXSA9PSBESUZGX0VRVUFMICYmXG4gICAgICAgIGRpZmZzW3BvaW50ZXIgKyAxXVswXSA9PSBESUZGX0VRVUFMKSB7XG4gICAgICAvLyBUaGlzIGlzIGEgc2luZ2xlIGVkaXQgc3Vycm91bmRlZCBieSBlcXVhbGl0aWVzLlxuICAgICAgaWYgKGRpZmZzW3BvaW50ZXJdWzFdLnN1YnN0cmluZyhkaWZmc1twb2ludGVyXVsxXS5sZW5ndGggLVxuICAgICAgICAgIGRpZmZzW3BvaW50ZXIgLSAxXVsxXS5sZW5ndGgpID09IGRpZmZzW3BvaW50ZXIgLSAxXVsxXSkge1xuICAgICAgICAvLyBTaGlmdCB0aGUgZWRpdCBvdmVyIHRoZSBwcmV2aW91cyBlcXVhbGl0eS5cbiAgICAgICAgZGlmZnNbcG9pbnRlcl1bMV0gPSBkaWZmc1twb2ludGVyIC0gMV1bMV0gK1xuICAgICAgICAgICAgZGlmZnNbcG9pbnRlcl1bMV0uc3Vic3RyaW5nKDAsIGRpZmZzW3BvaW50ZXJdWzFdLmxlbmd0aCAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlmZnNbcG9pbnRlciAtIDFdWzFdLmxlbmd0aCk7XG4gICAgICAgIGRpZmZzW3BvaW50ZXIgKyAxXVsxXSA9IGRpZmZzW3BvaW50ZXIgLSAxXVsxXSArIGRpZmZzW3BvaW50ZXIgKyAxXVsxXTtcbiAgICAgICAgZGlmZnMuc3BsaWNlKHBvaW50ZXIgLSAxLCAxKTtcbiAgICAgICAgY2hhbmdlcyA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKGRpZmZzW3BvaW50ZXJdWzFdLnN1YnN0cmluZygwLCBkaWZmc1twb2ludGVyICsgMV1bMV0ubGVuZ3RoKSA9PVxuICAgICAgICAgIGRpZmZzW3BvaW50ZXIgKyAxXVsxXSkge1xuICAgICAgICAvLyBTaGlmdCB0aGUgZWRpdCBvdmVyIHRoZSBuZXh0IGVxdWFsaXR5LlxuICAgICAgICBkaWZmc1twb2ludGVyIC0gMV1bMV0gKz0gZGlmZnNbcG9pbnRlciArIDFdWzFdO1xuICAgICAgICBkaWZmc1twb2ludGVyXVsxXSA9XG4gICAgICAgICAgICBkaWZmc1twb2ludGVyXVsxXS5zdWJzdHJpbmcoZGlmZnNbcG9pbnRlciArIDFdWzFdLmxlbmd0aCkgK1xuICAgICAgICAgICAgZGlmZnNbcG9pbnRlciArIDFdWzFdO1xuICAgICAgICBkaWZmcy5zcGxpY2UocG9pbnRlciArIDEsIDEpO1xuICAgICAgICBjaGFuZ2VzID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9pbnRlcisrO1xuICB9XG4gIC8vIElmIHNoaWZ0cyB3ZXJlIG1hZGUsIHRoZSBkaWZmIG5lZWRzIHJlb3JkZXJpbmcgYW5kIGFub3RoZXIgc2hpZnQgc3dlZXAuXG4gIGlmIChjaGFuZ2VzKSB7XG4gICAgZGlmZl9jbGVhbnVwTWVyZ2UoZGlmZnMpO1xuICB9XG59O1xuXG5cbnZhciBkaWZmID0gZGlmZl9tYWluO1xuZGlmZi5JTlNFUlQgPSBESUZGX0lOU0VSVDtcbmRpZmYuREVMRVRFID0gRElGRl9ERUxFVEU7XG5kaWZmLkVRVUFMID0gRElGRl9FUVVBTDtcblxubW9kdWxlLmV4cG9ydHMgPSBkaWZmO1xuXG4vKlxuICogTW9kaWZ5IGEgZGlmZiBzdWNoIHRoYXQgdGhlIGN1cnNvciBwb3NpdGlvbiBwb2ludHMgdG8gdGhlIHN0YXJ0IG9mIGEgY2hhbmdlOlxuICogRS5nLlxuICogICBjdXJzb3Jfbm9ybWFsaXplX2RpZmYoW1tESUZGX0VRVUFMLCAnYWJjJ11dLCAxKVxuICogICAgID0+IFsxLCBbW0RJRkZfRVFVQUwsICdhJ10sIFtESUZGX0VRVUFMLCAnYmMnXV1dXG4gKiAgIGN1cnNvcl9ub3JtYWxpemVfZGlmZihbW0RJRkZfSU5TRVJULCAnbmV3J10sIFtESUZGX0RFTEVURSwgJ3h5eiddXSwgMilcbiAqICAgICA9PiBbMiwgW1tESUZGX0lOU0VSVCwgJ25ldyddLCBbRElGRl9ERUxFVEUsICd4eSddLCBbRElGRl9ERUxFVEUsICd6J11dXVxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IGRpZmZzIEFycmF5IG9mIGRpZmYgdHVwbGVzXG4gKiBAcGFyYW0ge0ludH0gY3Vyc29yX3BvcyBTdWdnZXN0ZWQgZWRpdCBwb3NpdGlvbi4gTXVzdCBub3QgYmUgb3V0IG9mIGJvdW5kcyFcbiAqIEByZXR1cm4ge0FycmF5fSBBIHR1cGxlIFtjdXJzb3IgbG9jYXRpb24gaW4gdGhlIG1vZGlmaWVkIGRpZmYsIG1vZGlmaWVkIGRpZmZdXG4gKi9cbmZ1bmN0aW9uIGN1cnNvcl9ub3JtYWxpemVfZGlmZiAoZGlmZnMsIGN1cnNvcl9wb3MpIHtcbiAgaWYgKGN1cnNvcl9wb3MgPT09IDApIHtcbiAgICByZXR1cm4gW0RJRkZfRVFVQUwsIGRpZmZzXTtcbiAgfVxuICBmb3IgKHZhciBjdXJyZW50X3BvcyA9IDAsIGkgPSAwOyBpIDwgZGlmZnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZCA9IGRpZmZzW2ldO1xuICAgIGlmIChkWzBdID09PSBESUZGX0RFTEVURSB8fCBkWzBdID09PSBESUZGX0VRVUFMKSB7XG4gICAgICB2YXIgbmV4dF9wb3MgPSBjdXJyZW50X3BvcyArIGRbMV0ubGVuZ3RoO1xuICAgICAgaWYgKGN1cnNvcl9wb3MgPT09IG5leHRfcG9zKSB7XG4gICAgICAgIHJldHVybiBbaSArIDEsIGRpZmZzXTtcbiAgICAgIH0gZWxzZSBpZiAoY3Vyc29yX3BvcyA8IG5leHRfcG9zKSB7XG4gICAgICAgIC8vIGNvcHkgdG8gcHJldmVudCBzaWRlIGVmZmVjdHNcbiAgICAgICAgZGlmZnMgPSBkaWZmcy5zbGljZSgpO1xuICAgICAgICAvLyBzcGxpdCBkIGludG8gdHdvIGRpZmYgY2hhbmdlc1xuICAgICAgICB2YXIgc3BsaXRfcG9zID0gY3Vyc29yX3BvcyAtIGN1cnJlbnRfcG9zO1xuICAgICAgICB2YXIgZF9sZWZ0ID0gW2RbMF0sIGRbMV0uc2xpY2UoMCwgc3BsaXRfcG9zKV07XG4gICAgICAgIHZhciBkX3JpZ2h0ID0gW2RbMF0sIGRbMV0uc2xpY2Uoc3BsaXRfcG9zKV07XG4gICAgICAgIGRpZmZzLnNwbGljZShpLCAxLCBkX2xlZnQsIGRfcmlnaHQpO1xuICAgICAgICByZXR1cm4gW2kgKyAxLCBkaWZmc107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50X3BvcyA9IG5leHRfcG9zO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ2N1cnNvcl9wb3MgaXMgb3V0IG9mIGJvdW5kcyEnKVxufVxuXG4vKlxuICogTW9kaWZ5IGEgZGlmZiBzdWNoIHRoYXQgdGhlIGVkaXQgcG9zaXRpb24gaXMgXCJzaGlmdGVkXCIgdG8gdGhlIHByb3Bvc2VkIGVkaXQgbG9jYXRpb24gKGN1cnNvcl9wb3NpdGlvbikuXG4gKlxuICogQ2FzZSAxKVxuICogICBDaGVjayBpZiBhIG5haXZlIHNoaWZ0IGlzIHBvc3NpYmxlOlxuICogICAgIFswLCBYXSwgWyAxLCBZXSAtPiBbIDEsIFldLCBbMCwgWF0gICAgKGlmIFggKyBZID09PSBZICsgWClcbiAqICAgICBbMCwgWF0sIFstMSwgWV0gLT4gWy0xLCBZXSwgWzAsIFhdICAgIChpZiBYICsgWSA9PT0gWSArIFgpIC0gaG9sZHMgc2FtZSByZXN1bHRcbiAqIENhc2UgMilcbiAqICAgQ2hlY2sgaWYgdGhlIGZvbGxvd2luZyBzaGlmdHMgYXJlIHBvc3NpYmxlOlxuICogICAgIFswLCAncHJlJ10sIFsgMSwgJ3ByZWZpeCddIC0+IFsgMSwgJ3ByZSddLCBbMCwgJ3ByZSddLCBbIDEsICdmaXgnXVxuICogICAgIFswLCAncHJlJ10sIFstMSwgJ3ByZWZpeCddIC0+IFstMSwgJ3ByZSddLCBbMCwgJ3ByZSddLCBbLTEsICdmaXgnXVxuICogICAgICAgICBeICAgICAgICAgICAgXlxuICogICAgICAgICBkICAgICAgICAgIGRfbmV4dFxuICpcbiAqIEBwYXJhbSB7QXJyYXl9IGRpZmZzIEFycmF5IG9mIGRpZmYgdHVwbGVzXG4gKiBAcGFyYW0ge0ludH0gY3Vyc29yX3BvcyBTdWdnZXN0ZWQgZWRpdCBwb3NpdGlvbi4gTXVzdCBub3QgYmUgb3V0IG9mIGJvdW5kcyFcbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBvZiBkaWZmIHR1cGxlc1xuICovXG5mdW5jdGlvbiBmaXhfY3Vyc29yIChkaWZmcywgY3Vyc29yX3Bvcykge1xuICB2YXIgbm9ybSA9IGN1cnNvcl9ub3JtYWxpemVfZGlmZihkaWZmcywgY3Vyc29yX3Bvcyk7XG4gIHZhciBuZGlmZnMgPSBub3JtWzFdO1xuICB2YXIgY3Vyc29yX3BvaW50ZXIgPSBub3JtWzBdO1xuICB2YXIgZCA9IG5kaWZmc1tjdXJzb3JfcG9pbnRlcl07XG4gIHZhciBkX25leHQgPSBuZGlmZnNbY3Vyc29yX3BvaW50ZXIgKyAxXTtcblxuICBpZiAoZCA9PSBudWxsKSB7XG4gICAgLy8gVGV4dCB3YXMgZGVsZXRlZCBmcm9tIGVuZCBvZiBvcmlnaW5hbCBzdHJpbmcsXG4gICAgLy8gY3Vyc29yIGlzIG5vdyBvdXQgb2YgYm91bmRzIGluIG5ldyBzdHJpbmdcbiAgICByZXR1cm4gZGlmZnM7XG4gIH0gZWxzZSBpZiAoZFswXSAhPT0gRElGRl9FUVVBTCkge1xuICAgIC8vIEEgbW9kaWZpY2F0aW9uIGhhcHBlbmVkIGF0IHRoZSBjdXJzb3IgbG9jYXRpb24uXG4gICAgLy8gVGhpcyBpcyB0aGUgZXhwZWN0ZWQgb3V0Y29tZSwgc28gd2UgY2FuIHJldHVybiB0aGUgb3JpZ2luYWwgZGlmZi5cbiAgICByZXR1cm4gZGlmZnM7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGRfbmV4dCAhPSBudWxsICYmIGRbMV0gKyBkX25leHRbMV0gPT09IGRfbmV4dFsxXSArIGRbMV0pIHtcbiAgICAgIC8vIENhc2UgMSlcbiAgICAgIC8vIEl0IGlzIHBvc3NpYmxlIHRvIHBlcmZvcm0gYSBuYWl2ZSBzaGlmdFxuICAgICAgbmRpZmZzLnNwbGljZShjdXJzb3JfcG9pbnRlciwgMiwgZF9uZXh0LCBkKVxuICAgICAgcmV0dXJuIG1lcmdlX3R1cGxlcyhuZGlmZnMsIGN1cnNvcl9wb2ludGVyLCAyKVxuICAgIH0gZWxzZSBpZiAoZF9uZXh0ICE9IG51bGwgJiYgZF9uZXh0WzFdLmluZGV4T2YoZFsxXSkgPT09IDApIHtcbiAgICAgIC8vIENhc2UgMilcbiAgICAgIC8vIGRbMV0gaXMgYSBwcmVmaXggb2YgZF9uZXh0WzFdXG4gICAgICAvLyBXZSBjYW4gYXNzdW1lIHRoYXQgZF9uZXh0WzBdICE9PSAwLCBzaW5jZSBkWzBdID09PSAwXG4gICAgICAvLyBTaGlmdCBlZGl0IGxvY2F0aW9ucy4uXG4gICAgICBuZGlmZnMuc3BsaWNlKGN1cnNvcl9wb2ludGVyLCAyLCBbZF9uZXh0WzBdLCBkWzFdXSwgWzAsIGRbMV1dKTtcbiAgICAgIHZhciBzdWZmaXggPSBkX25leHRbMV0uc2xpY2UoZFsxXS5sZW5ndGgpO1xuICAgICAgaWYgKHN1ZmZpeC5sZW5ndGggPiAwKSB7XG4gICAgICAgIG5kaWZmcy5zcGxpY2UoY3Vyc29yX3BvaW50ZXIgKyAyLCAwLCBbZF9uZXh0WzBdLCBzdWZmaXhdKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBtZXJnZV90dXBsZXMobmRpZmZzLCBjdXJzb3JfcG9pbnRlciwgMylcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTm90IHBvc3NpYmxlIHRvIHBlcmZvcm0gYW55IG1vZGlmaWNhdGlvblxuICAgICAgcmV0dXJuIGRpZmZzO1xuICAgIH1cbiAgfVxufVxuXG4vKlxuICogQ2hlY2sgZGlmZiBkaWQgbm90IHNwbGl0IHN1cnJvZ2F0ZSBwYWlycy5cbiAqIEV4LiBbMCwgJ1xcdUQ4M0QnXSwgWy0xLCAnXFx1REMzNiddLCBbMSwgJ1xcdURDMkYnXSAtPiBbLTEsICdcXHVEODNEXFx1REMzNiddLCBbMSwgJ1xcdUQ4M0RcXHVEQzJGJ11cbiAqICAgICAnXFx1RDgzRFxcdURDMzYnID09PSAn8J+QticsICdcXHVEODNEXFx1REMyRicgPT09ICfwn5CvJ1xuICpcbiAqIEBwYXJhbSB7QXJyYXl9IGRpZmZzIEFycmF5IG9mIGRpZmYgdHVwbGVzXG4gKiBAcmV0dXJuIHtBcnJheX0gQXJyYXkgb2YgZGlmZiB0dXBsZXNcbiAqL1xuZnVuY3Rpb24gZml4X2Vtb2ppIChkaWZmcykge1xuICB2YXIgY29tcGFjdCA9IGZhbHNlO1xuICB2YXIgc3RhcnRzX3dpdGhfcGFpcl9lbmQgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gc3RyLmNoYXJDb2RlQXQoMCkgPj0gMHhEQzAwICYmIHN0ci5jaGFyQ29kZUF0KDApIDw9IDB4REZGRjtcbiAgfVxuICB2YXIgZW5kc193aXRoX3BhaXJfc3RhcnQgPSBmdW5jdGlvbihzdHIpIHtcbiAgICByZXR1cm4gc3RyLmNoYXJDb2RlQXQoc3RyLmxlbmd0aC0xKSA+PSAweEQ4MDAgJiYgc3RyLmNoYXJDb2RlQXQoc3RyLmxlbmd0aC0xKSA8PSAweERCRkY7XG4gIH1cbiAgZm9yICh2YXIgaSA9IDI7IGkgPCBkaWZmcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmIChkaWZmc1tpLTJdWzBdID09PSBESUZGX0VRVUFMICYmIGVuZHNfd2l0aF9wYWlyX3N0YXJ0KGRpZmZzW2ktMl1bMV0pICYmXG4gICAgICAgIGRpZmZzW2ktMV1bMF0gPT09IERJRkZfREVMRVRFICYmIHN0YXJ0c193aXRoX3BhaXJfZW5kKGRpZmZzW2ktMV1bMV0pICYmXG4gICAgICAgIGRpZmZzW2ldWzBdID09PSBESUZGX0lOU0VSVCAmJiBzdGFydHNfd2l0aF9wYWlyX2VuZChkaWZmc1tpXVsxXSkpIHtcbiAgICAgIGNvbXBhY3QgPSB0cnVlO1xuXG4gICAgICBkaWZmc1tpLTFdWzFdID0gZGlmZnNbaS0yXVsxXS5zbGljZSgtMSkgKyBkaWZmc1tpLTFdWzFdO1xuICAgICAgZGlmZnNbaV1bMV0gPSBkaWZmc1tpLTJdWzFdLnNsaWNlKC0xKSArIGRpZmZzW2ldWzFdO1xuXG4gICAgICBkaWZmc1tpLTJdWzFdID0gZGlmZnNbaS0yXVsxXS5zbGljZSgwLCAtMSk7XG4gICAgfVxuICB9XG4gIGlmICghY29tcGFjdCkge1xuICAgIHJldHVybiBkaWZmcztcbiAgfVxuICB2YXIgZml4ZWRfZGlmZnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBkaWZmcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmIChkaWZmc1tpXVsxXS5sZW5ndGggPiAwKSB7XG4gICAgICBmaXhlZF9kaWZmcy5wdXNoKGRpZmZzW2ldKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZpeGVkX2RpZmZzO1xufVxuXG4vKlxuICogVHJ5IHRvIG1lcmdlIHR1cGxlcyB3aXRoIHRoZWlyIG5laWdib3JzIGluIGEgZ2l2ZW4gcmFuZ2UuXG4gKiBFLmcuIFswLCAnYSddLCBbMCwgJ2InXSAtPiBbMCwgJ2FiJ11cbiAqXG4gKiBAcGFyYW0ge0FycmF5fSBkaWZmcyBBcnJheSBvZiBkaWZmIHR1cGxlcy5cbiAqIEBwYXJhbSB7SW50fSBzdGFydCBQb3NpdGlvbiBvZiB0aGUgZmlyc3QgZWxlbWVudCB0byBtZXJnZSAoZGlmZnNbc3RhcnRdIGlzIGFsc28gbWVyZ2VkIHdpdGggZGlmZnNbc3RhcnQgLSAxXSkuXG4gKiBAcGFyYW0ge0ludH0gbGVuZ3RoIE51bWJlciBvZiBjb25zZWN1dGl2ZSBlbGVtZW50cyB0byBjaGVjay5cbiAqIEByZXR1cm4ge0FycmF5fSBBcnJheSBvZiBtZXJnZWQgZGlmZiB0dXBsZXMuXG4gKi9cbmZ1bmN0aW9uIG1lcmdlX3R1cGxlcyAoZGlmZnMsIHN0YXJ0LCBsZW5ndGgpIHtcbiAgLy8gQ2hlY2sgZnJvbSAoc3RhcnQtMSkgdG8gKHN0YXJ0K2xlbmd0aCkuXG4gIGZvciAodmFyIGkgPSBzdGFydCArIGxlbmd0aCAtIDE7IGkgPj0gMCAmJiBpID49IHN0YXJ0IC0gMTsgaS0tKSB7XG4gICAgaWYgKGkgKyAxIDwgZGlmZnMubGVuZ3RoKSB7XG4gICAgICB2YXIgbGVmdF9kID0gZGlmZnNbaV07XG4gICAgICB2YXIgcmlnaHRfZCA9IGRpZmZzW2krMV07XG4gICAgICBpZiAobGVmdF9kWzBdID09PSByaWdodF9kWzFdKSB7XG4gICAgICAgIGRpZmZzLnNwbGljZShpLCAyLCBbbGVmdF9kWzBdLCBsZWZ0X2RbMV0gKyByaWdodF9kWzFdXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBkaWZmcztcbn1cblxuXG4vKioqLyB9KSxcbi8qIDUyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBPYmplY3Qua2V5cyA9PT0gJ2Z1bmN0aW9uJ1xuICA/IE9iamVjdC5rZXlzIDogc2hpbTtcblxuZXhwb3J0cy5zaGltID0gc2hpbTtcbmZ1bmN0aW9uIHNoaW0gKG9iaikge1xuICB2YXIga2V5cyA9IFtdO1xuICBmb3IgKHZhciBrZXkgaW4gb2JqKSBrZXlzLnB1c2goa2V5KTtcbiAgcmV0dXJuIGtleXM7XG59XG5cblxuLyoqKi8gfSksXG4vKiA1MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG52YXIgc3VwcG9ydHNBcmd1bWVudHNDbGFzcyA9IChmdW5jdGlvbigpe1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50cylcbn0pKCkgPT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG5cbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHN1cHBvcnRzQXJndW1lbnRzQ2xhc3MgPyBzdXBwb3J0ZWQgOiB1bnN1cHBvcnRlZDtcblxuZXhwb3J0cy5zdXBwb3J0ZWQgPSBzdXBwb3J0ZWQ7XG5mdW5jdGlvbiBzdXBwb3J0ZWQob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqZWN0KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcbn07XG5cbmV4cG9ydHMudW5zdXBwb3J0ZWQgPSB1bnN1cHBvcnRlZDtcbmZ1bmN0aW9uIHVuc3VwcG9ydGVkKG9iamVjdCl7XG4gIHJldHVybiBvYmplY3QgJiZcbiAgICB0eXBlb2Ygb2JqZWN0ID09ICdvYmplY3QnICYmXG4gICAgdHlwZW9mIG9iamVjdC5sZW5ndGggPT0gJ251bWJlcicgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCAnY2FsbGVlJykgJiZcbiAgICAhT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKG9iamVjdCwgJ2NhbGxlZScpIHx8XG4gICAgZmFsc2U7XG59O1xuXG5cbi8qKiovIH0pLFxuLyogNTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eVxuICAsIHByZWZpeCA9ICd+JztcblxuLyoqXG4gKiBDb25zdHJ1Y3RvciB0byBjcmVhdGUgYSBzdG9yYWdlIGZvciBvdXIgYEVFYCBvYmplY3RzLlxuICogQW4gYEV2ZW50c2AgaW5zdGFuY2UgaXMgYSBwbGFpbiBvYmplY3Qgd2hvc2UgcHJvcGVydGllcyBhcmUgZXZlbnQgbmFtZXMuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gRXZlbnRzKCkge31cblxuLy9cbi8vIFdlIHRyeSB0byBub3QgaW5oZXJpdCBmcm9tIGBPYmplY3QucHJvdG90eXBlYC4gSW4gc29tZSBlbmdpbmVzIGNyZWF0aW5nIGFuXG4vLyBpbnN0YW5jZSBpbiB0aGlzIHdheSBpcyBmYXN0ZXIgdGhhbiBjYWxsaW5nIGBPYmplY3QuY3JlYXRlKG51bGwpYCBkaXJlY3RseS5cbi8vIElmIGBPYmplY3QuY3JlYXRlKG51bGwpYCBpcyBub3Qgc3VwcG9ydGVkIHdlIHByZWZpeCB0aGUgZXZlbnQgbmFtZXMgd2l0aCBhXG4vLyBjaGFyYWN0ZXIgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGJ1aWx0LWluIG9iamVjdCBwcm9wZXJ0aWVzIGFyZSBub3Rcbi8vIG92ZXJyaWRkZW4gb3IgdXNlZCBhcyBhbiBhdHRhY2sgdmVjdG9yLlxuLy9cbmlmIChPYmplY3QuY3JlYXRlKSB7XG4gIEV2ZW50cy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuXG4gIC8vXG4gIC8vIFRoaXMgaGFjayBpcyBuZWVkZWQgYmVjYXVzZSB0aGUgYF9fcHJvdG9fX2AgcHJvcGVydHkgaXMgc3RpbGwgaW5oZXJpdGVkIGluXG4gIC8vIHNvbWUgb2xkIGJyb3dzZXJzIGxpa2UgQW5kcm9pZCA0LCBpUGhvbmUgNS4xLCBPcGVyYSAxMSBhbmQgU2FmYXJpIDUuXG4gIC8vXG4gIGlmICghbmV3IEV2ZW50cygpLl9fcHJvdG9fXykgcHJlZml4ID0gZmFsc2U7XG59XG5cbi8qKlxuICogUmVwcmVzZW50YXRpb24gb2YgYSBzaW5nbGUgZXZlbnQgbGlzdGVuZXIuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGxpc3RlbmVyIGZ1bmN0aW9uLlxuICogQHBhcmFtIHtNaXhlZH0gY29udGV4dCBUaGUgY29udGV4dCB0byBpbnZva2UgdGhlIGxpc3RlbmVyIHdpdGguXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvbmNlPWZhbHNlXSBTcGVjaWZ5IGlmIHRoZSBsaXN0ZW5lciBpcyBhIG9uZS10aW1lIGxpc3RlbmVyLlxuICogQGNvbnN0cnVjdG9yXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gRUUoZm4sIGNvbnRleHQsIG9uY2UpIHtcbiAgdGhpcy5mbiA9IGZuO1xuICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICB0aGlzLm9uY2UgPSBvbmNlIHx8IGZhbHNlO1xufVxuXG4vKipcbiAqIE1pbmltYWwgYEV2ZW50RW1pdHRlcmAgaW50ZXJmYWNlIHRoYXQgaXMgbW9sZGVkIGFnYWluc3QgdGhlIE5vZGUuanNcbiAqIGBFdmVudEVtaXR0ZXJgIGludGVyZmFjZS5cbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIEV2ZW50RW1pdHRlcigpIHtcbiAgdGhpcy5fZXZlbnRzID0gbmV3IEV2ZW50cygpO1xuICB0aGlzLl9ldmVudHNDb3VudCA9IDA7XG59XG5cbi8qKlxuICogUmV0dXJuIGFuIGFycmF5IGxpc3RpbmcgdGhlIGV2ZW50cyBmb3Igd2hpY2ggdGhlIGVtaXR0ZXIgaGFzIHJlZ2lzdGVyZWRcbiAqIGxpc3RlbmVycy5cbiAqXG4gKiBAcmV0dXJucyB7QXJyYXl9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLmV2ZW50TmFtZXMgPSBmdW5jdGlvbiBldmVudE5hbWVzKCkge1xuICB2YXIgbmFtZXMgPSBbXVxuICAgICwgZXZlbnRzXG4gICAgLCBuYW1lO1xuXG4gIGlmICh0aGlzLl9ldmVudHNDb3VudCA9PT0gMCkgcmV0dXJuIG5hbWVzO1xuXG4gIGZvciAobmFtZSBpbiAoZXZlbnRzID0gdGhpcy5fZXZlbnRzKSkge1xuICAgIGlmIChoYXMuY2FsbChldmVudHMsIG5hbWUpKSBuYW1lcy5wdXNoKHByZWZpeCA/IG5hbWUuc2xpY2UoMSkgOiBuYW1lKTtcbiAgfVxuXG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgcmV0dXJuIG5hbWVzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGV2ZW50cykpO1xuICB9XG5cbiAgcmV0dXJuIG5hbWVzO1xufTtcblxuLyoqXG4gKiBSZXR1cm4gdGhlIGxpc3RlbmVycyByZWdpc3RlcmVkIGZvciBhIGdpdmVuIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfFN5bWJvbH0gZXZlbnQgVGhlIGV2ZW50IG5hbWUuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGV4aXN0cyBPbmx5IGNoZWNrIGlmIHRoZXJlIGFyZSBsaXN0ZW5lcnMuXG4gKiBAcmV0dXJucyB7QXJyYXl8Qm9vbGVhbn1cbiAqIEBhcGkgcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUubGlzdGVuZXJzID0gZnVuY3Rpb24gbGlzdGVuZXJzKGV2ZW50LCBleGlzdHMpIHtcbiAgdmFyIGV2dCA9IHByZWZpeCA/IHByZWZpeCArIGV2ZW50IDogZXZlbnRcbiAgICAsIGF2YWlsYWJsZSA9IHRoaXMuX2V2ZW50c1tldnRdO1xuXG4gIGlmIChleGlzdHMpIHJldHVybiAhIWF2YWlsYWJsZTtcbiAgaWYgKCFhdmFpbGFibGUpIHJldHVybiBbXTtcbiAgaWYgKGF2YWlsYWJsZS5mbikgcmV0dXJuIFthdmFpbGFibGUuZm5dO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsID0gYXZhaWxhYmxlLmxlbmd0aCwgZWUgPSBuZXcgQXJyYXkobCk7IGkgPCBsOyBpKyspIHtcbiAgICBlZVtpXSA9IGF2YWlsYWJsZVtpXS5mbjtcbiAgfVxuXG4gIHJldHVybiBlZTtcbn07XG5cbi8qKlxuICogQ2FsbHMgZWFjaCBvZiB0aGUgbGlzdGVuZXJzIHJlZ2lzdGVyZWQgZm9yIGEgZ2l2ZW4gZXZlbnQuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd8U3ltYm9sfSBldmVudCBUaGUgZXZlbnQgbmFtZS5cbiAqIEByZXR1cm5zIHtCb29sZWFufSBgdHJ1ZWAgaWYgdGhlIGV2ZW50IGhhZCBsaXN0ZW5lcnMsIGVsc2UgYGZhbHNlYC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUuZW1pdCA9IGZ1bmN0aW9uIGVtaXQoZXZlbnQsIGExLCBhMiwgYTMsIGE0LCBhNSkge1xuICB2YXIgZXZ0ID0gcHJlZml4ID8gcHJlZml4ICsgZXZlbnQgOiBldmVudDtcblxuICBpZiAoIXRoaXMuX2V2ZW50c1tldnRdKSByZXR1cm4gZmFsc2U7XG5cbiAgdmFyIGxpc3RlbmVycyA9IHRoaXMuX2V2ZW50c1tldnRdXG4gICAgLCBsZW4gPSBhcmd1bWVudHMubGVuZ3RoXG4gICAgLCBhcmdzXG4gICAgLCBpO1xuXG4gIGlmIChsaXN0ZW5lcnMuZm4pIHtcbiAgICBpZiAobGlzdGVuZXJzLm9uY2UpIHRoaXMucmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVycy5mbiwgdW5kZWZpbmVkLCB0cnVlKTtcblxuICAgIHN3aXRjaCAobGVuKSB7XG4gICAgICBjYXNlIDE6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCksIHRydWU7XG4gICAgICBjYXNlIDI6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEpLCB0cnVlO1xuICAgICAgY2FzZSAzOiByZXR1cm4gbGlzdGVuZXJzLmZuLmNhbGwobGlzdGVuZXJzLmNvbnRleHQsIGExLCBhMiksIHRydWU7XG4gICAgICBjYXNlIDQ6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEsIGEyLCBhMyksIHRydWU7XG4gICAgICBjYXNlIDU6IHJldHVybiBsaXN0ZW5lcnMuZm4uY2FsbChsaXN0ZW5lcnMuY29udGV4dCwgYTEsIGEyLCBhMywgYTQpLCB0cnVlO1xuICAgICAgY2FzZSA2OiByZXR1cm4gbGlzdGVuZXJzLmZuLmNhbGwobGlzdGVuZXJzLmNvbnRleHQsIGExLCBhMiwgYTMsIGE0LCBhNSksIHRydWU7XG4gICAgfVxuXG4gICAgZm9yIChpID0gMSwgYXJncyA9IG5ldyBBcnJheShsZW4gLTEpOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGFyZ3NbaSAtIDFdID0gYXJndW1lbnRzW2ldO1xuICAgIH1cblxuICAgIGxpc3RlbmVycy5mbi5hcHBseShsaXN0ZW5lcnMuY29udGV4dCwgYXJncyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGxlbmd0aCA9IGxpc3RlbmVycy5sZW5ndGhcbiAgICAgICwgajtcblxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgaWYgKGxpc3RlbmVyc1tpXS5vbmNlKSB0aGlzLnJlbW92ZUxpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcnNbaV0uZm4sIHVuZGVmaW5lZCwgdHJ1ZSk7XG5cbiAgICAgIHN3aXRjaCAobGVuKSB7XG4gICAgICAgIGNhc2UgMTogbGlzdGVuZXJzW2ldLmZuLmNhbGwobGlzdGVuZXJzW2ldLmNvbnRleHQpOyBicmVhaztcbiAgICAgICAgY2FzZSAyOiBsaXN0ZW5lcnNbaV0uZm4uY2FsbChsaXN0ZW5lcnNbaV0uY29udGV4dCwgYTEpOyBicmVhaztcbiAgICAgICAgY2FzZSAzOiBsaXN0ZW5lcnNbaV0uZm4uY2FsbChsaXN0ZW5lcnNbaV0uY29udGV4dCwgYTEsIGEyKTsgYnJlYWs7XG4gICAgICAgIGNhc2UgNDogbGlzdGVuZXJzW2ldLmZuLmNhbGwobGlzdGVuZXJzW2ldLmNvbnRleHQsIGExLCBhMiwgYTMpOyBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBpZiAoIWFyZ3MpIGZvciAoaiA9IDEsIGFyZ3MgPSBuZXcgQXJyYXkobGVuIC0xKTsgaiA8IGxlbjsgaisrKSB7XG4gICAgICAgICAgICBhcmdzW2ogLSAxXSA9IGFyZ3VtZW50c1tqXTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBsaXN0ZW5lcnNbaV0uZm4uYXBwbHkobGlzdGVuZXJzW2ldLmNvbnRleHQsIGFyZ3MpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBBZGQgYSBsaXN0ZW5lciBmb3IgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xTeW1ib2x9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGxpc3RlbmVyIGZ1bmN0aW9uLlxuICogQHBhcmFtIHtNaXhlZH0gW2NvbnRleHQ9dGhpc10gVGhlIGNvbnRleHQgdG8gaW52b2tlIHRoZSBsaXN0ZW5lciB3aXRoLlxuICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gYHRoaXNgLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbiA9IGZ1bmN0aW9uIG9uKGV2ZW50LCBmbiwgY29udGV4dCkge1xuICB2YXIgbGlzdGVuZXIgPSBuZXcgRUUoZm4sIGNvbnRleHQgfHwgdGhpcylcbiAgICAsIGV2dCA9IHByZWZpeCA/IHByZWZpeCArIGV2ZW50IDogZXZlbnQ7XG5cbiAgaWYgKCF0aGlzLl9ldmVudHNbZXZ0XSkgdGhpcy5fZXZlbnRzW2V2dF0gPSBsaXN0ZW5lciwgdGhpcy5fZXZlbnRzQ291bnQrKztcbiAgZWxzZSBpZiAoIXRoaXMuX2V2ZW50c1tldnRdLmZuKSB0aGlzLl9ldmVudHNbZXZ0XS5wdXNoKGxpc3RlbmVyKTtcbiAgZWxzZSB0aGlzLl9ldmVudHNbZXZ0XSA9IFt0aGlzLl9ldmVudHNbZXZ0XSwgbGlzdGVuZXJdO1xuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLyoqXG4gKiBBZGQgYSBvbmUtdGltZSBsaXN0ZW5lciBmb3IgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xTeW1ib2x9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGxpc3RlbmVyIGZ1bmN0aW9uLlxuICogQHBhcmFtIHtNaXhlZH0gW2NvbnRleHQ9dGhpc10gVGhlIGNvbnRleHQgdG8gaW52b2tlIHRoZSBsaXN0ZW5lciB3aXRoLlxuICogQHJldHVybnMge0V2ZW50RW1pdHRlcn0gYHRoaXNgLlxuICogQGFwaSBwdWJsaWNcbiAqL1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24gb25jZShldmVudCwgZm4sIGNvbnRleHQpIHtcbiAgdmFyIGxpc3RlbmVyID0gbmV3IEVFKGZuLCBjb250ZXh0IHx8IHRoaXMsIHRydWUpXG4gICAgLCBldnQgPSBwcmVmaXggPyBwcmVmaXggKyBldmVudCA6IGV2ZW50O1xuXG4gIGlmICghdGhpcy5fZXZlbnRzW2V2dF0pIHRoaXMuX2V2ZW50c1tldnRdID0gbGlzdGVuZXIsIHRoaXMuX2V2ZW50c0NvdW50Kys7XG4gIGVsc2UgaWYgKCF0aGlzLl9ldmVudHNbZXZ0XS5mbikgdGhpcy5fZXZlbnRzW2V2dF0ucHVzaChsaXN0ZW5lcik7XG4gIGVsc2UgdGhpcy5fZXZlbnRzW2V2dF0gPSBbdGhpcy5fZXZlbnRzW2V2dF0sIGxpc3RlbmVyXTtcblxuICByZXR1cm4gdGhpcztcbn07XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBsaXN0ZW5lcnMgb2YgYSBnaXZlbiBldmVudC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xTeW1ib2x9IGV2ZW50IFRoZSBldmVudCBuYW1lLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gT25seSByZW1vdmUgdGhlIGxpc3RlbmVycyB0aGF0IG1hdGNoIHRoaXMgZnVuY3Rpb24uXG4gKiBAcGFyYW0ge01peGVkfSBjb250ZXh0IE9ubHkgcmVtb3ZlIHRoZSBsaXN0ZW5lcnMgdGhhdCBoYXZlIHRoaXMgY29udGV4dC5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gb25jZSBPbmx5IHJlbW92ZSBvbmUtdGltZSBsaXN0ZW5lcnMuXG4gKiBAcmV0dXJucyB7RXZlbnRFbWl0dGVyfSBgdGhpc2AuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyID0gZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIoZXZlbnQsIGZuLCBjb250ZXh0LCBvbmNlKSB7XG4gIHZhciBldnQgPSBwcmVmaXggPyBwcmVmaXggKyBldmVudCA6IGV2ZW50O1xuXG4gIGlmICghdGhpcy5fZXZlbnRzW2V2dF0pIHJldHVybiB0aGlzO1xuICBpZiAoIWZuKSB7XG4gICAgaWYgKC0tdGhpcy5fZXZlbnRzQ291bnQgPT09IDApIHRoaXMuX2V2ZW50cyA9IG5ldyBFdmVudHMoKTtcbiAgICBlbHNlIGRlbGV0ZSB0aGlzLl9ldmVudHNbZXZ0XTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHZhciBsaXN0ZW5lcnMgPSB0aGlzLl9ldmVudHNbZXZ0XTtcblxuICBpZiAobGlzdGVuZXJzLmZuKSB7XG4gICAgaWYgKFxuICAgICAgICAgbGlzdGVuZXJzLmZuID09PSBmblxuICAgICAgJiYgKCFvbmNlIHx8IGxpc3RlbmVycy5vbmNlKVxuICAgICAgJiYgKCFjb250ZXh0IHx8IGxpc3RlbmVycy5jb250ZXh0ID09PSBjb250ZXh0KVxuICAgICkge1xuICAgICAgaWYgKC0tdGhpcy5fZXZlbnRzQ291bnQgPT09IDApIHRoaXMuX2V2ZW50cyA9IG5ldyBFdmVudHMoKTtcbiAgICAgIGVsc2UgZGVsZXRlIHRoaXMuX2V2ZW50c1tldnRdO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKHZhciBpID0gMCwgZXZlbnRzID0gW10sIGxlbmd0aCA9IGxpc3RlbmVycy5sZW5ndGg7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgaWYgKFxuICAgICAgICAgICBsaXN0ZW5lcnNbaV0uZm4gIT09IGZuXG4gICAgICAgIHx8IChvbmNlICYmICFsaXN0ZW5lcnNbaV0ub25jZSlcbiAgICAgICAgfHwgKGNvbnRleHQgJiYgbGlzdGVuZXJzW2ldLmNvbnRleHQgIT09IGNvbnRleHQpXG4gICAgICApIHtcbiAgICAgICAgZXZlbnRzLnB1c2gobGlzdGVuZXJzW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvL1xuICAgIC8vIFJlc2V0IHRoZSBhcnJheSwgb3IgcmVtb3ZlIGl0IGNvbXBsZXRlbHkgaWYgd2UgaGF2ZSBubyBtb3JlIGxpc3RlbmVycy5cbiAgICAvL1xuICAgIGlmIChldmVudHMubGVuZ3RoKSB0aGlzLl9ldmVudHNbZXZ0XSA9IGV2ZW50cy5sZW5ndGggPT09IDEgPyBldmVudHNbMF0gOiBldmVudHM7XG4gICAgZWxzZSBpZiAoLS10aGlzLl9ldmVudHNDb3VudCA9PT0gMCkgdGhpcy5fZXZlbnRzID0gbmV3IEV2ZW50cygpO1xuICAgIGVsc2UgZGVsZXRlIHRoaXMuX2V2ZW50c1tldnRdO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbGwgbGlzdGVuZXJzLCBvciB0aG9zZSBvZiB0aGUgc3BlY2lmaWVkIGV2ZW50LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfFN5bWJvbH0gW2V2ZW50XSBUaGUgZXZlbnQgbmFtZS5cbiAqIEByZXR1cm5zIHtFdmVudEVtaXR0ZXJ9IGB0aGlzYC5cbiAqIEBhcGkgcHVibGljXG4gKi9cbkV2ZW50RW1pdHRlci5wcm90b3R5cGUucmVtb3ZlQWxsTGlzdGVuZXJzID0gZnVuY3Rpb24gcmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KSB7XG4gIHZhciBldnQ7XG5cbiAgaWYgKGV2ZW50KSB7XG4gICAgZXZ0ID0gcHJlZml4ID8gcHJlZml4ICsgZXZlbnQgOiBldmVudDtcbiAgICBpZiAodGhpcy5fZXZlbnRzW2V2dF0pIHtcbiAgICAgIGlmICgtLXRoaXMuX2V2ZW50c0NvdW50ID09PSAwKSB0aGlzLl9ldmVudHMgPSBuZXcgRXZlbnRzKCk7XG4gICAgICBlbHNlIGRlbGV0ZSB0aGlzLl9ldmVudHNbZXZ0XTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fZXZlbnRzID0gbmV3IEV2ZW50cygpO1xuICAgIHRoaXMuX2V2ZW50c0NvdW50ID0gMDtcbiAgfVxuXG4gIHJldHVybiB0aGlzO1xufTtcblxuLy9cbi8vIEFsaWFzIG1ldGhvZHMgbmFtZXMgYmVjYXVzZSBwZW9wbGUgcm9sbCBsaWtlIHRoYXQuXG4vL1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5vZmYgPSBFdmVudEVtaXR0ZXIucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyO1xuRXZlbnRFbWl0dGVyLnByb3RvdHlwZS5hZGRMaXN0ZW5lciA9IEV2ZW50RW1pdHRlci5wcm90b3R5cGUub247XG5cbi8vXG4vLyBUaGlzIGZ1bmN0aW9uIGRvZXNuJ3QgYXBwbHkgYW55bW9yZS5cbi8vXG5FdmVudEVtaXR0ZXIucHJvdG90eXBlLnNldE1heExpc3RlbmVycyA9IGZ1bmN0aW9uIHNldE1heExpc3RlbmVycygpIHtcbiAgcmV0dXJuIHRoaXM7XG59O1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBwcmVmaXguXG4vL1xuRXZlbnRFbWl0dGVyLnByZWZpeGVkID0gcHJlZml4O1xuXG4vL1xuLy8gQWxsb3cgYEV2ZW50RW1pdHRlcmAgdG8gYmUgaW1wb3J0ZWQgYXMgbW9kdWxlIG5hbWVzcGFjZS5cbi8vXG5FdmVudEVtaXR0ZXIuRXZlbnRFbWl0dGVyID0gRXZlbnRFbWl0dGVyO1xuXG4vL1xuLy8gRXhwb3NlIHRoZSBtb2R1bGUuXG4vL1xuaWYgKCd1bmRlZmluZWQnICE9PSB0eXBlb2YgbW9kdWxlKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gRXZlbnRFbWl0dGVyO1xufVxuXG5cbi8qKiovIH0pLFxuLyogNTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMubWF0Y2hUZXh0ID0gZXhwb3J0cy5tYXRjaFNwYWNpbmcgPSBleHBvcnRzLm1hdGNoTmV3bGluZSA9IGV4cG9ydHMubWF0Y2hCbG90ID0gZXhwb3J0cy5tYXRjaEF0dHJpYnV0b3IgPSBleHBvcnRzLmRlZmF1bHQgPSB1bmRlZmluZWQ7XG5cbnZhciBfdHlwZW9mID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPT09IFwic3ltYm9sXCIgPyBmdW5jdGlvbiAob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9IDogZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2V4dGVuZDIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX2V4dGVuZDMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leHRlbmQyKTtcblxudmFyIF9xdWlsbERlbHRhID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKTtcblxudmFyIF9xdWlsbERlbHRhMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsRGVsdGEpO1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfcXVpbGwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXG52YXIgX3F1aWxsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsKTtcblxudmFyIF9sb2dnZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEwKTtcblxudmFyIF9sb2dnZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbG9nZ2VyKTtcblxudmFyIF9tb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuXG52YXIgX21vZHVsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tb2R1bGUpO1xuXG52YXIgX2FsaWduID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNik7XG5cbnZhciBfYmFja2dyb3VuZCA9IF9fd2VicGFja19yZXF1aXJlX18oMzcpO1xuXG52YXIgX2NvZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxudmFyIF9jb2RlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZGUpO1xuXG52YXIgX2NvbG9yID0gX193ZWJwYWNrX3JlcXVpcmVfXygyNik7XG5cbnZhciBfZGlyZWN0aW9uID0gX193ZWJwYWNrX3JlcXVpcmVfXygzOCk7XG5cbnZhciBfZm9udCA9IF9fd2VicGFja19yZXF1aXJlX18oMzkpO1xuXG52YXIgX3NpemUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgZGVidWcgPSAoMCwgX2xvZ2dlcjIuZGVmYXVsdCkoJ3F1aWxsOmNsaXBib2FyZCcpO1xuXG52YXIgRE9NX0tFWSA9ICdfX3FsLW1hdGNoZXInO1xuXG52YXIgQ0xJUEJPQVJEX0NPTkZJRyA9IFtbTm9kZS5URVhUX05PREUsIG1hdGNoVGV4dF0sIFtOb2RlLlRFWFRfTk9ERSwgbWF0Y2hOZXdsaW5lXSwgWydicicsIG1hdGNoQnJlYWtdLCBbTm9kZS5FTEVNRU5UX05PREUsIG1hdGNoTmV3bGluZV0sIFtOb2RlLkVMRU1FTlRfTk9ERSwgbWF0Y2hCbG90XSwgW05vZGUuRUxFTUVOVF9OT0RFLCBtYXRjaFNwYWNpbmddLCBbTm9kZS5FTEVNRU5UX05PREUsIG1hdGNoQXR0cmlidXRvcl0sIFtOb2RlLkVMRU1FTlRfTk9ERSwgbWF0Y2hTdHlsZXNdLCBbJ2xpJywgbWF0Y2hJbmRlbnRdLCBbJ2InLCBtYXRjaEFsaWFzLmJpbmQobWF0Y2hBbGlhcywgJ2JvbGQnKV0sIFsnaScsIG1hdGNoQWxpYXMuYmluZChtYXRjaEFsaWFzLCAnaXRhbGljJyldLCBbJ3N0eWxlJywgbWF0Y2hJZ25vcmVdXTtcblxudmFyIEFUVFJJQlVURV9BVFRSSUJVVE9SUyA9IFtfYWxpZ24uQWxpZ25BdHRyaWJ1dGUsIF9kaXJlY3Rpb24uRGlyZWN0aW9uQXR0cmlidXRlXS5yZWR1Y2UoZnVuY3Rpb24gKG1lbW8sIGF0dHIpIHtcbiAgbWVtb1thdHRyLmtleU5hbWVdID0gYXR0cjtcbiAgcmV0dXJuIG1lbW87XG59LCB7fSk7XG5cbnZhciBTVFlMRV9BVFRSSUJVVE9SUyA9IFtfYWxpZ24uQWxpZ25TdHlsZSwgX2JhY2tncm91bmQuQmFja2dyb3VuZFN0eWxlLCBfY29sb3IuQ29sb3JTdHlsZSwgX2RpcmVjdGlvbi5EaXJlY3Rpb25TdHlsZSwgX2ZvbnQuRm9udFN0eWxlLCBfc2l6ZS5TaXplU3R5bGVdLnJlZHVjZShmdW5jdGlvbiAobWVtbywgYXR0cikge1xuICBtZW1vW2F0dHIua2V5TmFtZV0gPSBhdHRyO1xuICByZXR1cm4gbWVtbztcbn0sIHt9KTtcblxudmFyIENsaXBib2FyZCA9IGZ1bmN0aW9uIChfTW9kdWxlKSB7XG4gIF9pbmhlcml0cyhDbGlwYm9hcmQsIF9Nb2R1bGUpO1xuXG4gIGZ1bmN0aW9uIENsaXBib2FyZChxdWlsbCwgb3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDbGlwYm9hcmQpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKENsaXBib2FyZC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKENsaXBib2FyZCkpLmNhbGwodGhpcywgcXVpbGwsIG9wdGlvbnMpKTtcblxuICAgIF90aGlzLnF1aWxsLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCBfdGhpcy5vblBhc3RlLmJpbmQoX3RoaXMpKTtcbiAgICBfdGhpcy5jb250YWluZXIgPSBfdGhpcy5xdWlsbC5hZGRDb250YWluZXIoJ3FsLWNsaXBib2FyZCcpO1xuICAgIF90aGlzLmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2NvbnRlbnRlZGl0YWJsZScsIHRydWUpO1xuICAgIF90aGlzLmNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgLTEpO1xuICAgIF90aGlzLm1hdGNoZXJzID0gW107XG4gICAgQ0xJUEJPQVJEX0NPTkZJRy5jb25jYXQoX3RoaXMub3B0aW9ucy5tYXRjaGVycykuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksXG4gICAgICAgICAgc2VsZWN0b3IgPSBfcmVmMlswXSxcbiAgICAgICAgICBtYXRjaGVyID0gX3JlZjJbMV07XG5cbiAgICAgIGlmICghb3B0aW9ucy5tYXRjaFZpc3VhbCAmJiBtYXRjaGVyID09PSBtYXRjaFNwYWNpbmcpIHJldHVybjtcbiAgICAgIF90aGlzLmFkZE1hdGNoZXIoc2VsZWN0b3IsIG1hdGNoZXIpO1xuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDbGlwYm9hcmQsIFt7XG4gICAga2V5OiAnYWRkTWF0Y2hlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGFkZE1hdGNoZXIoc2VsZWN0b3IsIG1hdGNoZXIpIHtcbiAgICAgIHRoaXMubWF0Y2hlcnMucHVzaChbc2VsZWN0b3IsIG1hdGNoZXJdKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjb252ZXJ0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29udmVydChodG1sKSB7XG4gICAgICBpZiAodHlwZW9mIGh0bWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMuY29udGFpbmVyLmlubmVySFRNTCA9IGh0bWwucmVwbGFjZSgvXFw+XFxyP1xcbiArXFw8L2csICc+PCcpOyAvLyBSZW1vdmUgc3BhY2VzIGJldHdlZW4gdGFnc1xuICAgICAgICByZXR1cm4gdGhpcy5jb252ZXJ0KCk7XG4gICAgICB9XG4gICAgICB2YXIgZm9ybWF0cyA9IHRoaXMucXVpbGwuZ2V0Rm9ybWF0KHRoaXMucXVpbGwuc2VsZWN0aW9uLnNhdmVkUmFuZ2UuaW5kZXgpO1xuICAgICAgaWYgKGZvcm1hdHNbX2NvZGUyLmRlZmF1bHQuYmxvdE5hbWVdKSB7XG4gICAgICAgIHZhciB0ZXh0ID0gdGhpcy5jb250YWluZXIuaW5uZXJUZXh0O1xuICAgICAgICB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgcmV0dXJuIG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLmluc2VydCh0ZXh0LCBfZGVmaW5lUHJvcGVydHkoe30sIF9jb2RlMi5kZWZhdWx0LmJsb3ROYW1lLCBmb3JtYXRzW19jb2RlMi5kZWZhdWx0LmJsb3ROYW1lXSkpO1xuICAgICAgfVxuXG4gICAgICB2YXIgX3ByZXBhcmVNYXRjaGluZyA9IHRoaXMucHJlcGFyZU1hdGNoaW5nKCksXG4gICAgICAgICAgX3ByZXBhcmVNYXRjaGluZzIgPSBfc2xpY2VkVG9BcnJheShfcHJlcGFyZU1hdGNoaW5nLCAyKSxcbiAgICAgICAgICBlbGVtZW50TWF0Y2hlcnMgPSBfcHJlcGFyZU1hdGNoaW5nMlswXSxcbiAgICAgICAgICB0ZXh0TWF0Y2hlcnMgPSBfcHJlcGFyZU1hdGNoaW5nMlsxXTtcblxuICAgICAgdmFyIGRlbHRhID0gdHJhdmVyc2UodGhpcy5jb250YWluZXIsIGVsZW1lbnRNYXRjaGVycywgdGV4dE1hdGNoZXJzKTtcbiAgICAgIC8vIFJlbW92ZSB0cmFpbGluZyBuZXdsaW5lXG4gICAgICBpZiAoZGVsdGFFbmRzV2l0aChkZWx0YSwgJ1xcbicpICYmIGRlbHRhLm9wc1tkZWx0YS5vcHMubGVuZ3RoIC0gMV0uYXR0cmlidXRlcyA9PSBudWxsKSB7XG4gICAgICAgIGRlbHRhID0gZGVsdGEuY29tcG9zZShuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKS5yZXRhaW4oZGVsdGEubGVuZ3RoKCkgLSAxKS5kZWxldGUoMSkpO1xuICAgICAgfVxuICAgICAgZGVidWcubG9nKCdjb252ZXJ0JywgdGhpcy5jb250YWluZXIuaW5uZXJIVE1MLCBkZWx0YSk7XG4gICAgICB0aGlzLmNvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICAgIHJldHVybiBkZWx0YTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdkYW5nZXJvdXNseVBhc3RlSFRNTCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRhbmdlcm91c2x5UGFzdGVIVE1MKGluZGV4LCBodG1sKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5BUEk7XG5cbiAgICAgIGlmICh0eXBlb2YgaW5kZXggPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRoaXMucXVpbGwuc2V0Q29udGVudHModGhpcy5jb252ZXJ0KGluZGV4KSwgaHRtbCk7XG4gICAgICAgIHRoaXMucXVpbGwuc2V0U2VsZWN0aW9uKDAsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcGFzdGUgPSB0aGlzLmNvbnZlcnQoaHRtbCk7XG4gICAgICAgIHRoaXMucXVpbGwudXBkYXRlQ29udGVudHMobmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKGluZGV4KS5jb25jYXQocGFzdGUpLCBzb3VyY2UpO1xuICAgICAgICB0aGlzLnF1aWxsLnNldFNlbGVjdGlvbihpbmRleCArIHBhc3RlLmxlbmd0aCgpLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ29uUGFzdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBvblBhc3RlKGUpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAoZS5kZWZhdWx0UHJldmVudGVkIHx8ICF0aGlzLnF1aWxsLmlzRW5hYmxlZCgpKSByZXR1cm47XG4gICAgICB2YXIgcmFuZ2UgPSB0aGlzLnF1aWxsLmdldFNlbGVjdGlvbigpO1xuICAgICAgdmFyIGRlbHRhID0gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkucmV0YWluKHJhbmdlLmluZGV4KTtcbiAgICAgIHZhciBzY3JvbGxUb3AgPSB0aGlzLnF1aWxsLnNjcm9sbGluZ0NvbnRhaW5lci5zY3JvbGxUb3A7XG4gICAgICB0aGlzLmNvbnRhaW5lci5mb2N1cygpO1xuICAgICAgdGhpcy5xdWlsbC5zZWxlY3Rpb24udXBkYXRlKF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlNJTEVOVCk7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZGVsdGEgPSBkZWx0YS5jb25jYXQoX3RoaXMyLmNvbnZlcnQoKSkuZGVsZXRlKHJhbmdlLmxlbmd0aCk7XG4gICAgICAgIF90aGlzMi5xdWlsbC51cGRhdGVDb250ZW50cyhkZWx0YSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgIC8vIHJhbmdlLmxlbmd0aCBjb250cmlidXRlcyB0byBkZWx0YS5sZW5ndGgoKVxuICAgICAgICBfdGhpczIucXVpbGwuc2V0U2VsZWN0aW9uKGRlbHRhLmxlbmd0aCgpIC0gcmFuZ2UubGVuZ3RoLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICAgICAgICBfdGhpczIucXVpbGwuc2Nyb2xsaW5nQ29udGFpbmVyLnNjcm9sbFRvcCA9IHNjcm9sbFRvcDtcbiAgICAgICAgX3RoaXMyLnF1aWxsLmZvY3VzKCk7XG4gICAgICB9LCAxKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwcmVwYXJlTWF0Y2hpbmcnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwcmVwYXJlTWF0Y2hpbmcoKSB7XG4gICAgICB2YXIgX3RoaXMzID0gdGhpcztcblxuICAgICAgdmFyIGVsZW1lbnRNYXRjaGVycyA9IFtdLFxuICAgICAgICAgIHRleHRNYXRjaGVycyA9IFtdO1xuICAgICAgdGhpcy5tYXRjaGVycy5mb3JFYWNoKGZ1bmN0aW9uIChwYWlyKSB7XG4gICAgICAgIHZhciBfcGFpciA9IF9zbGljZWRUb0FycmF5KHBhaXIsIDIpLFxuICAgICAgICAgICAgc2VsZWN0b3IgPSBfcGFpclswXSxcbiAgICAgICAgICAgIG1hdGNoZXIgPSBfcGFpclsxXTtcblxuICAgICAgICBzd2l0Y2ggKHNlbGVjdG9yKSB7XG4gICAgICAgICAgY2FzZSBOb2RlLlRFWFRfTk9ERTpcbiAgICAgICAgICAgIHRleHRNYXRjaGVycy5wdXNoKG1hdGNoZXIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBOb2RlLkVMRU1FTlRfTk9ERTpcbiAgICAgICAgICAgIGVsZW1lbnRNYXRjaGVycy5wdXNoKG1hdGNoZXIpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIFtdLmZvckVhY2guY2FsbChfdGhpczMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgICAgICAgICAvLyBUT0RPIHVzZSB3ZWFrbWFwXG4gICAgICAgICAgICAgIG5vZGVbRE9NX0tFWV0gPSBub2RlW0RPTV9LRVldIHx8IFtdO1xuICAgICAgICAgICAgICBub2RlW0RPTV9LRVldLnB1c2gobWF0Y2hlcik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBbZWxlbWVudE1hdGNoZXJzLCB0ZXh0TWF0Y2hlcnNdO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDbGlwYm9hcmQ7XG59KF9tb2R1bGUyLmRlZmF1bHQpO1xuXG5DbGlwYm9hcmQuREVGQVVMVFMgPSB7XG4gIG1hdGNoZXJzOiBbXSxcbiAgbWF0Y2hWaXN1YWw6IHRydWVcbn07XG5cbmZ1bmN0aW9uIGFwcGx5Rm9ybWF0KGRlbHRhLCBmb3JtYXQsIHZhbHVlKSB7XG4gIGlmICgodHlwZW9mIGZvcm1hdCA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoZm9ybWF0KSkgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGZvcm1hdCkucmVkdWNlKGZ1bmN0aW9uIChkZWx0YSwga2V5KSB7XG4gICAgICByZXR1cm4gYXBwbHlGb3JtYXQoZGVsdGEsIGtleSwgZm9ybWF0W2tleV0pO1xuICAgIH0sIGRlbHRhKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZGVsdGEucmVkdWNlKGZ1bmN0aW9uIChkZWx0YSwgb3ApIHtcbiAgICAgIGlmIChvcC5hdHRyaWJ1dGVzICYmIG9wLmF0dHJpYnV0ZXNbZm9ybWF0XSkge1xuICAgICAgICByZXR1cm4gZGVsdGEucHVzaChvcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gZGVsdGEuaW5zZXJ0KG9wLmluc2VydCwgKDAsIF9leHRlbmQzLmRlZmF1bHQpKHt9LCBfZGVmaW5lUHJvcGVydHkoe30sIGZvcm1hdCwgdmFsdWUpLCBvcC5hdHRyaWJ1dGVzKSk7XG4gICAgICB9XG4gICAgfSwgbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVTdHlsZShub2RlKSB7XG4gIGlmIChub2RlLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkgcmV0dXJuIHt9O1xuICB2YXIgRE9NX0tFWSA9ICdfX3FsLWNvbXB1dGVkLXN0eWxlJztcbiAgcmV0dXJuIG5vZGVbRE9NX0tFWV0gfHwgKG5vZGVbRE9NX0tFWV0gPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShub2RlKSk7XG59XG5cbmZ1bmN0aW9uIGRlbHRhRW5kc1dpdGgoZGVsdGEsIHRleHQpIHtcbiAgdmFyIGVuZFRleHQgPSBcIlwiO1xuICBmb3IgKHZhciBpID0gZGVsdGEub3BzLmxlbmd0aCAtIDE7IGkgPj0gMCAmJiBlbmRUZXh0Lmxlbmd0aCA8IHRleHQubGVuZ3RoOyAtLWkpIHtcbiAgICB2YXIgb3AgPSBkZWx0YS5vcHNbaV07XG4gICAgaWYgKHR5cGVvZiBvcC5pbnNlcnQgIT09ICdzdHJpbmcnKSBicmVhaztcbiAgICBlbmRUZXh0ID0gb3AuaW5zZXJ0ICsgZW5kVGV4dDtcbiAgfVxuICByZXR1cm4gZW5kVGV4dC5zbGljZSgtMSAqIHRleHQubGVuZ3RoKSA9PT0gdGV4dDtcbn1cblxuZnVuY3Rpb24gaXNMaW5lKG5vZGUpIHtcbiAgaWYgKG5vZGUuY2hpbGROb2Rlcy5sZW5ndGggPT09IDApIHJldHVybiBmYWxzZTsgLy8gRXhjbHVkZSBlbWJlZCBibG9ja3NcbiAgdmFyIHN0eWxlID0gY29tcHV0ZVN0eWxlKG5vZGUpO1xuICByZXR1cm4gWydibG9jaycsICdsaXN0LWl0ZW0nXS5pbmRleE9mKHN0eWxlLmRpc3BsYXkpID4gLTE7XG59XG5cbmZ1bmN0aW9uIHRyYXZlcnNlKG5vZGUsIGVsZW1lbnRNYXRjaGVycywgdGV4dE1hdGNoZXJzKSB7XG4gIC8vIFBvc3Qtb3JkZXJcbiAgaWYgKG5vZGUubm9kZVR5cGUgPT09IG5vZGUuVEVYVF9OT0RFKSB7XG4gICAgcmV0dXJuIHRleHRNYXRjaGVycy5yZWR1Y2UoZnVuY3Rpb24gKGRlbHRhLCBtYXRjaGVyKSB7XG4gICAgICByZXR1cm4gbWF0Y2hlcihub2RlLCBkZWx0YSk7XG4gICAgfSwgbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCkpO1xuICB9IGVsc2UgaWYgKG5vZGUubm9kZVR5cGUgPT09IG5vZGUuRUxFTUVOVF9OT0RFKSB7XG4gICAgcmV0dXJuIFtdLnJlZHVjZS5jYWxsKG5vZGUuY2hpbGROb2RlcyB8fCBbXSwgZnVuY3Rpb24gKGRlbHRhLCBjaGlsZE5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbkRlbHRhID0gdHJhdmVyc2UoY2hpbGROb2RlLCBlbGVtZW50TWF0Y2hlcnMsIHRleHRNYXRjaGVycyk7XG4gICAgICBpZiAoY2hpbGROb2RlLm5vZGVUeXBlID09PSBub2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICBjaGlsZHJlbkRlbHRhID0gZWxlbWVudE1hdGNoZXJzLnJlZHVjZShmdW5jdGlvbiAoY2hpbGRyZW5EZWx0YSwgbWF0Y2hlcikge1xuICAgICAgICAgIHJldHVybiBtYXRjaGVyKGNoaWxkTm9kZSwgY2hpbGRyZW5EZWx0YSk7XG4gICAgICAgIH0sIGNoaWxkcmVuRGVsdGEpO1xuICAgICAgICBjaGlsZHJlbkRlbHRhID0gKGNoaWxkTm9kZVtET01fS0VZXSB8fCBbXSkucmVkdWNlKGZ1bmN0aW9uIChjaGlsZHJlbkRlbHRhLCBtYXRjaGVyKSB7XG4gICAgICAgICAgcmV0dXJuIG1hdGNoZXIoY2hpbGROb2RlLCBjaGlsZHJlbkRlbHRhKTtcbiAgICAgICAgfSwgY2hpbGRyZW5EZWx0YSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZGVsdGEuY29uY2F0KGNoaWxkcmVuRGVsdGEpO1xuICAgIH0sIG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbmV3IF9xdWlsbERlbHRhMi5kZWZhdWx0KCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWF0Y2hBbGlhcyhmb3JtYXQsIG5vZGUsIGRlbHRhKSB7XG4gIHJldHVybiBhcHBseUZvcm1hdChkZWx0YSwgZm9ybWF0LCB0cnVlKTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hBdHRyaWJ1dG9yKG5vZGUsIGRlbHRhKSB7XG4gIHZhciBhdHRyaWJ1dGVzID0gX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLkF0dHJpYnV0ZS5rZXlzKG5vZGUpO1xuICB2YXIgY2xhc3NlcyA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5DbGFzcy5rZXlzKG5vZGUpO1xuICB2YXIgc3R5bGVzID0gX3BhcmNobWVudDIuZGVmYXVsdC5BdHRyaWJ1dG9yLlN0eWxlLmtleXMobm9kZSk7XG4gIHZhciBmb3JtYXRzID0ge307XG4gIGF0dHJpYnV0ZXMuY29uY2F0KGNsYXNzZXMpLmNvbmNhdChzdHlsZXMpLmZvckVhY2goZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB2YXIgYXR0ciA9IF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkobmFtZSwgX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5BVFRSSUJVVEUpO1xuICAgIGlmIChhdHRyICE9IG51bGwpIHtcbiAgICAgIGZvcm1hdHNbYXR0ci5hdHRyTmFtZV0gPSBhdHRyLnZhbHVlKG5vZGUpO1xuICAgICAgaWYgKGZvcm1hdHNbYXR0ci5hdHRyTmFtZV0pIHJldHVybjtcbiAgICB9XG4gICAgYXR0ciA9IEFUVFJJQlVURV9BVFRSSUJVVE9SU1tuYW1lXTtcbiAgICBpZiAoYXR0ciAhPSBudWxsICYmIChhdHRyLmF0dHJOYW1lID09PSBuYW1lIHx8IGF0dHIua2V5TmFtZSA9PT0gbmFtZSkpIHtcbiAgICAgIGZvcm1hdHNbYXR0ci5hdHRyTmFtZV0gPSBhdHRyLnZhbHVlKG5vZGUpIHx8IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgYXR0ciA9IFNUWUxFX0FUVFJJQlVUT1JTW25hbWVdO1xuICAgIGlmIChhdHRyICE9IG51bGwgJiYgKGF0dHIuYXR0ck5hbWUgPT09IG5hbWUgfHwgYXR0ci5rZXlOYW1lID09PSBuYW1lKSkge1xuICAgICAgYXR0ciA9IFNUWUxFX0FUVFJJQlVUT1JTW25hbWVdO1xuICAgICAgZm9ybWF0c1thdHRyLmF0dHJOYW1lXSA9IGF0dHIudmFsdWUobm9kZSkgfHwgdW5kZWZpbmVkO1xuICAgIH1cbiAgfSk7XG4gIGlmIChPYmplY3Qua2V5cyhmb3JtYXRzKS5sZW5ndGggPiAwKSB7XG4gICAgZGVsdGEgPSBhcHBseUZvcm1hdChkZWx0YSwgZm9ybWF0cyk7XG4gIH1cbiAgcmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBtYXRjaEJsb3Qobm9kZSwgZGVsdGEpIHtcbiAgdmFyIG1hdGNoID0gX3BhcmNobWVudDIuZGVmYXVsdC5xdWVyeShub2RlKTtcbiAgaWYgKG1hdGNoID09IG51bGwpIHJldHVybiBkZWx0YTtcbiAgaWYgKG1hdGNoLnByb3RvdHlwZSBpbnN0YW5jZW9mIF9wYXJjaG1lbnQyLmRlZmF1bHQuRW1iZWQpIHtcbiAgICB2YXIgZW1iZWQgPSB7fTtcbiAgICB2YXIgdmFsdWUgPSBtYXRjaC52YWx1ZShub2RlKTtcbiAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgICAgZW1iZWRbbWF0Y2guYmxvdE5hbWVdID0gdmFsdWU7XG4gICAgICBkZWx0YSA9IG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLmluc2VydChlbWJlZCwgbWF0Y2guZm9ybWF0cyhub2RlKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHR5cGVvZiBtYXRjaC5mb3JtYXRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZGVsdGEgPSBhcHBseUZvcm1hdChkZWx0YSwgbWF0Y2guYmxvdE5hbWUsIG1hdGNoLmZvcm1hdHMobm9kZSkpO1xuICB9XG4gIHJldHVybiBkZWx0YTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hCcmVhayhub2RlLCBkZWx0YSkge1xuICBpZiAoIWRlbHRhRW5kc1dpdGgoZGVsdGEsICdcXG4nKSkge1xuICAgIGRlbHRhLmluc2VydCgnXFxuJyk7XG4gIH1cbiAgcmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBtYXRjaElnbm9yZSgpIHtcbiAgcmV0dXJuIG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpO1xufVxuXG5mdW5jdGlvbiBtYXRjaEluZGVudChub2RlLCBkZWx0YSkge1xuICB2YXIgbWF0Y2ggPSBfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KG5vZGUpO1xuICBpZiAobWF0Y2ggPT0gbnVsbCB8fCBtYXRjaC5ibG90TmFtZSAhPT0gJ2xpc3QtaXRlbScgfHwgIWRlbHRhRW5kc1dpdGgoZGVsdGEsICdcXG4nKSkge1xuICAgIHJldHVybiBkZWx0YTtcbiAgfVxuICB2YXIgaW5kZW50ID0gLTEsXG4gICAgICBwYXJlbnQgPSBub2RlLnBhcmVudE5vZGU7XG4gIHdoaWxlICghcGFyZW50LmNsYXNzTGlzdC5jb250YWlucygncWwtY2xpcGJvYXJkJykpIHtcbiAgICBpZiAoKF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkocGFyZW50KSB8fCB7fSkuYmxvdE5hbWUgPT09ICdsaXN0Jykge1xuICAgICAgaW5kZW50ICs9IDE7XG4gICAgfVxuICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuICB9XG4gIGlmIChpbmRlbnQgPD0gMCkgcmV0dXJuIGRlbHRhO1xuICByZXR1cm4gZGVsdGEuY29tcG9zZShuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKS5yZXRhaW4oZGVsdGEubGVuZ3RoKCkgLSAxKS5yZXRhaW4oMSwgeyBpbmRlbnQ6IGluZGVudCB9KSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoTmV3bGluZShub2RlLCBkZWx0YSkge1xuICBpZiAoIWRlbHRhRW5kc1dpdGgoZGVsdGEsICdcXG4nKSkge1xuICAgIGlmIChpc0xpbmUobm9kZSkgfHwgZGVsdGEubGVuZ3RoKCkgPiAwICYmIG5vZGUubmV4dFNpYmxpbmcgJiYgaXNMaW5lKG5vZGUubmV4dFNpYmxpbmcpKSB7XG4gICAgICBkZWx0YS5pbnNlcnQoJ1xcbicpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIG1hdGNoU3BhY2luZyhub2RlLCBkZWx0YSkge1xuICBpZiAoaXNMaW5lKG5vZGUpICYmIG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nICE9IG51bGwgJiYgIWRlbHRhRW5kc1dpdGgoZGVsdGEsICdcXG5cXG4nKSkge1xuICAgIHZhciBub2RlSGVpZ2h0ID0gbm9kZS5vZmZzZXRIZWlnaHQgKyBwYXJzZUZsb2F0KGNvbXB1dGVTdHlsZShub2RlKS5tYXJnaW5Ub3ApICsgcGFyc2VGbG9hdChjb21wdXRlU3R5bGUobm9kZSkubWFyZ2luQm90dG9tKTtcbiAgICBpZiAobm9kZS5uZXh0RWxlbWVudFNpYmxpbmcub2Zmc2V0VG9wID4gbm9kZS5vZmZzZXRUb3AgKyBub2RlSGVpZ2h0ICogMS41KSB7XG4gICAgICBkZWx0YS5pbnNlcnQoJ1xcbicpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIG1hdGNoU3R5bGVzKG5vZGUsIGRlbHRhKSB7XG4gIHZhciBmb3JtYXRzID0ge307XG4gIHZhciBzdHlsZSA9IG5vZGUuc3R5bGUgfHwge307XG4gIGlmIChzdHlsZS5mb250U3R5bGUgJiYgY29tcHV0ZVN0eWxlKG5vZGUpLmZvbnRTdHlsZSA9PT0gJ2l0YWxpYycpIHtcbiAgICBmb3JtYXRzLml0YWxpYyA9IHRydWU7XG4gIH1cbiAgaWYgKHN0eWxlLmZvbnRXZWlnaHQgJiYgKGNvbXB1dGVTdHlsZShub2RlKS5mb250V2VpZ2h0LnN0YXJ0c1dpdGgoJ2JvbGQnKSB8fCBwYXJzZUludChjb21wdXRlU3R5bGUobm9kZSkuZm9udFdlaWdodCkgPj0gNzAwKSkge1xuICAgIGZvcm1hdHMuYm9sZCA9IHRydWU7XG4gIH1cbiAgaWYgKE9iamVjdC5rZXlzKGZvcm1hdHMpLmxlbmd0aCA+IDApIHtcbiAgICBkZWx0YSA9IGFwcGx5Rm9ybWF0KGRlbHRhLCBmb3JtYXRzKTtcbiAgfVxuICBpZiAocGFyc2VGbG9hdChzdHlsZS50ZXh0SW5kZW50IHx8IDApID4gMCkge1xuICAgIC8vIENvdWxkIGJlIDAuNWluXG4gICAgZGVsdGEgPSBuZXcgX3F1aWxsRGVsdGEyLmRlZmF1bHQoKS5pbnNlcnQoJ1xcdCcpLmNvbmNhdChkZWx0YSk7XG4gIH1cbiAgcmV0dXJuIGRlbHRhO1xufVxuXG5mdW5jdGlvbiBtYXRjaFRleHQobm9kZSwgZGVsdGEpIHtcbiAgdmFyIHRleHQgPSBub2RlLmRhdGE7XG4gIC8vIFdvcmQgcmVwcmVzZW50cyBlbXB0eSBsaW5lIHdpdGggPG86cD4mbmJzcDs8L286cD5cbiAgaWYgKG5vZGUucGFyZW50Tm9kZS50YWdOYW1lID09PSAnTzpQJykge1xuICAgIHJldHVybiBkZWx0YS5pbnNlcnQodGV4dC50cmltKCkpO1xuICB9XG4gIGlmICh0ZXh0LnRyaW0oKS5sZW5ndGggPT09IDAgJiYgbm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC5jb250YWlucygncWwtY2xpcGJvYXJkJykpIHtcbiAgICByZXR1cm4gZGVsdGE7XG4gIH1cbiAgaWYgKCFjb21wdXRlU3R5bGUobm9kZS5wYXJlbnROb2RlKS53aGl0ZVNwYWNlLnN0YXJ0c1dpdGgoJ3ByZScpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtc3R5bGVcbiAgICB2YXIgcmVwbGFjZXIgPSBmdW5jdGlvbiByZXBsYWNlcihjb2xsYXBzZSwgbWF0Y2gpIHtcbiAgICAgIG1hdGNoID0gbWF0Y2gucmVwbGFjZSgvW15cXHUwMGEwXS9nLCAnJyk7IC8vIFxcdTAwYTAgaXMgbmJzcDtcbiAgICAgIHJldHVybiBtYXRjaC5sZW5ndGggPCAxICYmIGNvbGxhcHNlID8gJyAnIDogbWF0Y2g7XG4gICAgfTtcbiAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cXHJcXG4vZywgJyAnKS5yZXBsYWNlKC9cXG4vZywgJyAnKTtcbiAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKC9cXHNcXHMrL2csIHJlcGxhY2VyLmJpbmQocmVwbGFjZXIsIHRydWUpKTsgLy8gY29sbGFwc2Ugd2hpdGVzcGFjZVxuICAgIGlmIChub2RlLnByZXZpb3VzU2libGluZyA9PSBudWxsICYmIGlzTGluZShub2RlLnBhcmVudE5vZGUpIHx8IG5vZGUucHJldmlvdXNTaWJsaW5nICE9IG51bGwgJiYgaXNMaW5lKG5vZGUucHJldmlvdXNTaWJsaW5nKSkge1xuICAgICAgdGV4dCA9IHRleHQucmVwbGFjZSgvXlxccysvLCByZXBsYWNlci5iaW5kKHJlcGxhY2VyLCBmYWxzZSkpO1xuICAgIH1cbiAgICBpZiAobm9kZS5uZXh0U2libGluZyA9PSBudWxsICYmIGlzTGluZShub2RlLnBhcmVudE5vZGUpIHx8IG5vZGUubmV4dFNpYmxpbmcgIT0gbnVsbCAmJiBpc0xpbmUobm9kZS5uZXh0U2libGluZykpIHtcbiAgICAgIHRleHQgPSB0ZXh0LnJlcGxhY2UoL1xccyskLywgcmVwbGFjZXIuYmluZChyZXBsYWNlciwgZmFsc2UpKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRlbHRhLmluc2VydCh0ZXh0KTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gQ2xpcGJvYXJkO1xuZXhwb3J0cy5tYXRjaEF0dHJpYnV0b3IgPSBtYXRjaEF0dHJpYnV0b3I7XG5leHBvcnRzLm1hdGNoQmxvdCA9IG1hdGNoQmxvdDtcbmV4cG9ydHMubWF0Y2hOZXdsaW5lID0gbWF0Y2hOZXdsaW5lO1xuZXhwb3J0cy5tYXRjaFNwYWNpbmcgPSBtYXRjaFNwYWNpbmc7XG5leHBvcnRzLm1hdGNoVGV4dCA9IG1hdGNoVGV4dDtcblxuLyoqKi8gfSksXG4vKiA1NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfaW5saW5lID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcblxudmFyIF9pbmxpbmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5saW5lKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgQm9sZCA9IGZ1bmN0aW9uIChfSW5saW5lKSB7XG4gIF9pbmhlcml0cyhCb2xkLCBfSW5saW5lKTtcblxuICBmdW5jdGlvbiBCb2xkKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCb2xkKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQm9sZC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJvbGQpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhCb2xkLCBbe1xuICAgIGtleTogJ29wdGltaXplJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3B0aW1pemUoY29udGV4dCkge1xuICAgICAgX2dldChCb2xkLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJvbGQucHJvdG90eXBlKSwgJ29wdGltaXplJywgdGhpcykuY2FsbCh0aGlzLCBjb250ZXh0KTtcbiAgICAgIGlmICh0aGlzLmRvbU5vZGUudGFnTmFtZSAhPT0gdGhpcy5zdGF0aWNzLnRhZ05hbWVbMF0pIHtcbiAgICAgICAgdGhpcy5yZXBsYWNlV2l0aCh0aGlzLnN0YXRpY3MuYmxvdE5hbWUpO1xuICAgICAgfVxuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKCkge1xuICAgICAgcmV0dXJuIF9nZXQoQm9sZC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJvbGQpLCAnY3JlYXRlJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0cygpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBCb2xkO1xufShfaW5saW5lMi5kZWZhdWx0KTtcblxuQm9sZC5ibG90TmFtZSA9ICdib2xkJztcbkJvbGQudGFnTmFtZSA9IFsnU1RST05HJywgJ0InXTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gQm9sZDtcblxuLyoqKi8gfSksXG4vKiA1NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5hZGRDb250cm9scyA9IGV4cG9ydHMuZGVmYXVsdCA9IHVuZGVmaW5lZDtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3F1aWxsRGVsdGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXG52YXIgX3F1aWxsRGVsdGEyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGxEZWx0YSk7XG5cbnZhciBfcGFyY2htZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxudmFyIF9wYXJjaG1lbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcGFyY2htZW50KTtcblxudmFyIF9xdWlsbCA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG5cbnZhciBfcXVpbGwyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcXVpbGwpO1xuXG52YXIgX2xvZ2dlciA9IF9fd2VicGFja19yZXF1aXJlX18oMTApO1xuXG52YXIgX2xvZ2dlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9sb2dnZXIpO1xuXG52YXIgX21vZHVsZSA9IF9fd2VicGFja19yZXF1aXJlX18oOSk7XG5cbnZhciBfbW9kdWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21vZHVsZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIGRlYnVnID0gKDAsIF9sb2dnZXIyLmRlZmF1bHQpKCdxdWlsbDp0b29sYmFyJyk7XG5cbnZhciBUb29sYmFyID0gZnVuY3Rpb24gKF9Nb2R1bGUpIHtcbiAgX2luaGVyaXRzKFRvb2xiYXIsIF9Nb2R1bGUpO1xuXG4gIGZ1bmN0aW9uIFRvb2xiYXIocXVpbGwsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVG9vbGJhcik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoVG9vbGJhci5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFRvb2xiYXIpKS5jYWxsKHRoaXMsIHF1aWxsLCBvcHRpb25zKSk7XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShfdGhpcy5vcHRpb25zLmNvbnRhaW5lcikpIHtcbiAgICAgIHZhciBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIGFkZENvbnRyb2xzKGNvbnRhaW5lciwgX3RoaXMub3B0aW9ucy5jb250YWluZXIpO1xuICAgICAgcXVpbGwuY29udGFpbmVyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGNvbnRhaW5lciwgcXVpbGwuY29udGFpbmVyKTtcbiAgICAgIF90aGlzLmNvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBfdGhpcy5vcHRpb25zLmNvbnRhaW5lciA9PT0gJ3N0cmluZycpIHtcbiAgICAgIF90aGlzLmNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoX3RoaXMub3B0aW9ucy5jb250YWluZXIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfdGhpcy5jb250YWluZXIgPSBfdGhpcy5vcHRpb25zLmNvbnRhaW5lcjtcbiAgICB9XG4gICAgaWYgKCEoX3RoaXMuY29udGFpbmVyIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICB2YXIgX3JldDtcblxuICAgICAgcmV0dXJuIF9yZXQgPSBkZWJ1Zy5lcnJvcignQ29udGFpbmVyIHJlcXVpcmVkIGZvciB0b29sYmFyJywgX3RoaXMub3B0aW9ucyksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzLCBfcmV0KTtcbiAgICB9XG4gICAgX3RoaXMuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3FsLXRvb2xiYXInKTtcbiAgICBfdGhpcy5jb250cm9scyA9IFtdO1xuICAgIF90aGlzLmhhbmRsZXJzID0ge307XG4gICAgT2JqZWN0LmtleXMoX3RoaXMub3B0aW9ucy5oYW5kbGVycykuZm9yRWFjaChmdW5jdGlvbiAoZm9ybWF0KSB7XG4gICAgICBfdGhpcy5hZGRIYW5kbGVyKGZvcm1hdCwgX3RoaXMub3B0aW9ucy5oYW5kbGVyc1tmb3JtYXRdKTtcbiAgICB9KTtcbiAgICBbXS5mb3JFYWNoLmNhbGwoX3RoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbiwgc2VsZWN0JyksIGZ1bmN0aW9uIChpbnB1dCkge1xuICAgICAgX3RoaXMuYXR0YWNoKGlucHV0KTtcbiAgICB9KTtcbiAgICBfdGhpcy5xdWlsbC5vbihfcXVpbGwyLmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIGZ1bmN0aW9uICh0eXBlLCByYW5nZSkge1xuICAgICAgaWYgKHR5cGUgPT09IF9xdWlsbDIuZGVmYXVsdC5ldmVudHMuU0VMRUNUSU9OX0NIQU5HRSkge1xuICAgICAgICBfdGhpcy51cGRhdGUocmFuZ2UpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIF90aGlzLnF1aWxsLm9uKF9xdWlsbDIuZGVmYXVsdC5ldmVudHMuU0NST0xMX09QVElNSVpFLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3RoaXMkcXVpbGwkc2VsZWN0aW9uID0gX3RoaXMucXVpbGwuc2VsZWN0aW9uLmdldFJhbmdlKCksXG4gICAgICAgICAgX3RoaXMkcXVpbGwkc2VsZWN0aW9uMiA9IF9zbGljZWRUb0FycmF5KF90aGlzJHF1aWxsJHNlbGVjdGlvbiwgMSksXG4gICAgICAgICAgcmFuZ2UgPSBfdGhpcyRxdWlsbCRzZWxlY3Rpb24yWzBdOyAvLyBxdWlsbC5nZXRTZWxlY3Rpb24gdHJpZ2dlcnMgdXBkYXRlXG5cblxuICAgICAgX3RoaXMudXBkYXRlKHJhbmdlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVG9vbGJhciwgW3tcbiAgICBrZXk6ICdhZGRIYW5kbGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkSGFuZGxlcihmb3JtYXQsIGhhbmRsZXIpIHtcbiAgICAgIHRoaXMuaGFuZGxlcnNbZm9ybWF0XSA9IGhhbmRsZXI7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnYXR0YWNoJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYXR0YWNoKGlucHV0KSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgdmFyIGZvcm1hdCA9IFtdLmZpbmQuY2FsbChpbnB1dC5jbGFzc0xpc3QsIGZ1bmN0aW9uIChjbGFzc05hbWUpIHtcbiAgICAgICAgcmV0dXJuIGNsYXNzTmFtZS5pbmRleE9mKCdxbC0nKSA9PT0gMDtcbiAgICAgIH0pO1xuICAgICAgaWYgKCFmb3JtYXQpIHJldHVybjtcbiAgICAgIGZvcm1hdCA9IGZvcm1hdC5zbGljZSgncWwtJy5sZW5ndGgpO1xuICAgICAgaWYgKGlucHV0LnRhZ05hbWUgPT09ICdCVVRUT04nKSB7XG4gICAgICAgIGlucHV0LnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgICAgIH1cbiAgICAgIGlmICh0aGlzLmhhbmRsZXJzW2Zvcm1hdF0gPT0gbnVsbCkge1xuICAgICAgICBpZiAodGhpcy5xdWlsbC5zY3JvbGwud2hpdGVsaXN0ICE9IG51bGwgJiYgdGhpcy5xdWlsbC5zY3JvbGwud2hpdGVsaXN0W2Zvcm1hdF0gPT0gbnVsbCkge1xuICAgICAgICAgIGRlYnVnLndhcm4oJ2lnbm9yaW5nIGF0dGFjaGluZyB0byBkaXNhYmxlZCBmb3JtYXQnLCBmb3JtYXQsIGlucHV0KTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkoZm9ybWF0KSA9PSBudWxsKSB7XG4gICAgICAgICAgZGVidWcud2FybignaWdub3JpbmcgYXR0YWNoaW5nIHRvIG5vbmV4aXN0ZW50IGZvcm1hdCcsIGZvcm1hdCwgaW5wdXQpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgdmFyIGV2ZW50TmFtZSA9IGlucHV0LnRhZ05hbWUgPT09ICdTRUxFQ1QnID8gJ2NoYW5nZScgOiAnY2xpY2snO1xuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IHZvaWQgMDtcbiAgICAgICAgaWYgKGlucHV0LnRhZ05hbWUgPT09ICdTRUxFQ1QnKSB7XG4gICAgICAgICAgaWYgKGlucHV0LnNlbGVjdGVkSW5kZXggPCAwKSByZXR1cm47XG4gICAgICAgICAgdmFyIHNlbGVjdGVkID0gaW5wdXQub3B0aW9uc1tpbnB1dC5zZWxlY3RlZEluZGV4XTtcbiAgICAgICAgICBpZiAoc2VsZWN0ZWQuaGFzQXR0cmlidXRlKCdzZWxlY3RlZCcpKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IGZhbHNlO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHNlbGVjdGVkLnZhbHVlIHx8IGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdxbC1hY3RpdmUnKSkge1xuICAgICAgICAgICAgdmFsdWUgPSBmYWxzZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFsdWUgPSBpbnB1dC52YWx1ZSB8fCAhaW5wdXQuaGFzQXR0cmlidXRlKCd2YWx1ZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgX3RoaXMyLnF1aWxsLmZvY3VzKCk7XG5cbiAgICAgICAgdmFyIF9xdWlsbCRzZWxlY3Rpb24kZ2V0UiA9IF90aGlzMi5xdWlsbC5zZWxlY3Rpb24uZ2V0UmFuZ2UoKSxcbiAgICAgICAgICAgIF9xdWlsbCRzZWxlY3Rpb24kZ2V0UjIgPSBfc2xpY2VkVG9BcnJheShfcXVpbGwkc2VsZWN0aW9uJGdldFIsIDEpLFxuICAgICAgICAgICAgcmFuZ2UgPSBfcXVpbGwkc2VsZWN0aW9uJGdldFIyWzBdO1xuXG4gICAgICAgIGlmIChfdGhpczIuaGFuZGxlcnNbZm9ybWF0XSAhPSBudWxsKSB7XG4gICAgICAgICAgX3RoaXMyLmhhbmRsZXJzW2Zvcm1hdF0uY2FsbChfdGhpczIsIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIGlmIChfcGFyY2htZW50Mi5kZWZhdWx0LnF1ZXJ5KGZvcm1hdCkucHJvdG90eXBlIGluc3RhbmNlb2YgX3BhcmNobWVudDIuZGVmYXVsdC5FbWJlZCkge1xuICAgICAgICAgIHZhbHVlID0gcHJvbXB0KCdFbnRlciAnICsgZm9ybWF0KTtcbiAgICAgICAgICBpZiAoIXZhbHVlKSByZXR1cm47XG4gICAgICAgICAgX3RoaXMyLnF1aWxsLnVwZGF0ZUNvbnRlbnRzKG5ldyBfcXVpbGxEZWx0YTIuZGVmYXVsdCgpLnJldGFpbihyYW5nZS5pbmRleCkuZGVsZXRlKHJhbmdlLmxlbmd0aCkuaW5zZXJ0KF9kZWZpbmVQcm9wZXJ0eSh7fSwgZm9ybWF0LCB2YWx1ZSkpLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczIucXVpbGwuZm9ybWF0KGZvcm1hdCwgdmFsdWUsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9XG4gICAgICAgIF90aGlzMi51cGRhdGUocmFuZ2UpO1xuICAgICAgfSk7XG4gICAgICAvLyBUT0RPIHVzZSB3ZWFrbWFwXG4gICAgICB0aGlzLmNvbnRyb2xzLnB1c2goW2Zvcm1hdCwgaW5wdXRdKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd1cGRhdGUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUocmFuZ2UpIHtcbiAgICAgIHZhciBmb3JtYXRzID0gcmFuZ2UgPT0gbnVsbCA/IHt9IDogdGhpcy5xdWlsbC5nZXRGb3JtYXQocmFuZ2UpO1xuICAgICAgdGhpcy5jb250cm9scy5mb3JFYWNoKGZ1bmN0aW9uIChwYWlyKSB7XG4gICAgICAgIHZhciBfcGFpciA9IF9zbGljZWRUb0FycmF5KHBhaXIsIDIpLFxuICAgICAgICAgICAgZm9ybWF0ID0gX3BhaXJbMF0sXG4gICAgICAgICAgICBpbnB1dCA9IF9wYWlyWzFdO1xuXG4gICAgICAgIGlmIChpbnB1dC50YWdOYW1lID09PSAnU0VMRUNUJykge1xuICAgICAgICAgIHZhciBvcHRpb24gPSB2b2lkIDA7XG4gICAgICAgICAgaWYgKHJhbmdlID09IG51bGwpIHtcbiAgICAgICAgICAgIG9wdGlvbiA9IG51bGw7XG4gICAgICAgICAgfSBlbHNlIGlmIChmb3JtYXRzW2Zvcm1hdF0gPT0gbnVsbCkge1xuICAgICAgICAgICAgb3B0aW9uID0gaW5wdXQucXVlcnlTZWxlY3Rvcignb3B0aW9uW3NlbGVjdGVkXScpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoZm9ybWF0c1tmb3JtYXRdKSkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gZm9ybWF0c1tmb3JtYXRdO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS5yZXBsYWNlKC9cXFwiL2csICdcXFxcXCInKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wdGlvbiA9IGlucHV0LnF1ZXJ5U2VsZWN0b3IoJ29wdGlvblt2YWx1ZT1cIicgKyB2YWx1ZSArICdcIl0nKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKG9wdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgICBpbnB1dC52YWx1ZSA9ICcnOyAvLyBUT0RPIG1ha2UgY29uZmlndXJhYmxlP1xuICAgICAgICAgICAgaW5wdXQuc2VsZWN0ZWRJbmRleCA9IC0xO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvcHRpb24uc2VsZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAocmFuZ2UgPT0gbnVsbCkge1xuICAgICAgICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZSgncWwtYWN0aXZlJyk7XG4gICAgICAgICAgfSBlbHNlIGlmIChpbnB1dC5oYXNBdHRyaWJ1dGUoJ3ZhbHVlJykpIHtcbiAgICAgICAgICAgIC8vIGJvdGggYmVpbmcgbnVsbCBzaG91bGQgbWF0Y2ggKGRlZmF1bHQgdmFsdWVzKVxuICAgICAgICAgICAgLy8gJzEnIHNob3VsZCBtYXRjaCB3aXRoIDEgKGhlYWRlcnMpXG4gICAgICAgICAgICB2YXIgaXNBY3RpdmUgPSBmb3JtYXRzW2Zvcm1hdF0gPT09IGlucHV0LmdldEF0dHJpYnV0ZSgndmFsdWUnKSB8fCBmb3JtYXRzW2Zvcm1hdF0gIT0gbnVsbCAmJiBmb3JtYXRzW2Zvcm1hdF0udG9TdHJpbmcoKSA9PT0gaW5wdXQuZ2V0QXR0cmlidXRlKCd2YWx1ZScpIHx8IGZvcm1hdHNbZm9ybWF0XSA9PSBudWxsICYmICFpbnB1dC5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJyk7XG4gICAgICAgICAgICBpbnB1dC5jbGFzc0xpc3QudG9nZ2xlKCdxbC1hY3RpdmUnLCBpc0FjdGl2ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlucHV0LmNsYXNzTGlzdC50b2dnbGUoJ3FsLWFjdGl2ZScsIGZvcm1hdHNbZm9ybWF0XSAhPSBudWxsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUb29sYmFyO1xufShfbW9kdWxlMi5kZWZhdWx0KTtcblxuVG9vbGJhci5ERUZBVUxUUyA9IHt9O1xuXG5mdW5jdGlvbiBhZGRCdXR0b24oY29udGFpbmVyLCBmb3JtYXQsIHZhbHVlKSB7XG4gIHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3FsLScgKyBmb3JtYXQpO1xuICBpZiAodmFsdWUgIT0gbnVsbCkge1xuICAgIGlucHV0LnZhbHVlID0gdmFsdWU7XG4gIH1cbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKGlucHV0KTtcbn1cblxuZnVuY3Rpb24gYWRkQ29udHJvbHMoY29udGFpbmVyLCBncm91cHMpIHtcbiAgaWYgKCFBcnJheS5pc0FycmF5KGdyb3Vwc1swXSkpIHtcbiAgICBncm91cHMgPSBbZ3JvdXBzXTtcbiAgfVxuICBncm91cHMuZm9yRWFjaChmdW5jdGlvbiAoY29udHJvbHMpIHtcbiAgICB2YXIgZ3JvdXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgZ3JvdXAuY2xhc3NMaXN0LmFkZCgncWwtZm9ybWF0cycpO1xuICAgIGNvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKGNvbnRyb2wpIHtcbiAgICAgIGlmICh0eXBlb2YgY29udHJvbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgYWRkQnV0dG9uKGdyb3VwLCBjb250cm9sKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBmb3JtYXQgPSBPYmplY3Qua2V5cyhjb250cm9sKVswXTtcbiAgICAgICAgdmFyIHZhbHVlID0gY29udHJvbFtmb3JtYXRdO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICBhZGRTZWxlY3QoZ3JvdXAsIGZvcm1hdCwgdmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFkZEJ1dHRvbihncm91cCwgZm9ybWF0LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZ3JvdXApO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gYWRkU2VsZWN0KGNvbnRhaW5lciwgZm9ybWF0LCB2YWx1ZXMpIHtcbiAgdmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gIGlucHV0LmNsYXNzTGlzdC5hZGQoJ3FsLScgKyBmb3JtYXQpO1xuICB2YWx1ZXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHtcbiAgICB2YXIgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgaWYgKHZhbHVlICE9PSBmYWxzZSkge1xuICAgICAgb3B0aW9uLnNldEF0dHJpYnV0ZSgndmFsdWUnLCB2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG9wdGlvbi5zZXRBdHRyaWJ1dGUoJ3NlbGVjdGVkJywgJ3NlbGVjdGVkJyk7XG4gICAgfVxuICAgIGlucHV0LmFwcGVuZENoaWxkKG9wdGlvbik7XG4gIH0pO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQoaW5wdXQpO1xufVxuXG5Ub29sYmFyLkRFRkFVTFRTID0ge1xuICBjb250YWluZXI6IG51bGwsXG4gIGhhbmRsZXJzOiB7XG4gICAgY2xlYW46IGZ1bmN0aW9uIGNsZWFuKCkge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHZhciByYW5nZSA9IHRoaXMucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICBpZiAocmFuZ2UgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgaWYgKHJhbmdlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIHZhciBmb3JtYXRzID0gdGhpcy5xdWlsbC5nZXRGb3JtYXQoKTtcbiAgICAgICAgT2JqZWN0LmtleXMoZm9ybWF0cykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICAgIC8vIENsZWFuIGZ1bmN0aW9uYWxpdHkgaW4gZXhpc3RpbmcgYXBwcyBvbmx5IGNsZWFuIGlubGluZSBmb3JtYXRzXG4gICAgICAgICAgaWYgKF9wYXJjaG1lbnQyLmRlZmF1bHQucXVlcnkobmFtZSwgX3BhcmNobWVudDIuZGVmYXVsdC5TY29wZS5JTkxJTkUpICE9IG51bGwpIHtcbiAgICAgICAgICAgIF90aGlzMy5xdWlsbC5mb3JtYXQobmFtZSwgZmFsc2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnF1aWxsLnJlbW92ZUZvcm1hdChyYW5nZSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICB9XG4gICAgfSxcbiAgICBkaXJlY3Rpb246IGZ1bmN0aW9uIGRpcmVjdGlvbih2YWx1ZSkge1xuICAgICAgdmFyIGFsaWduID0gdGhpcy5xdWlsbC5nZXRGb3JtYXQoKVsnYWxpZ24nXTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gJ3J0bCcgJiYgYWxpZ24gPT0gbnVsbCkge1xuICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnYWxpZ24nLCAncmlnaHQnLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH0gZWxzZSBpZiAoIXZhbHVlICYmIGFsaWduID09PSAncmlnaHQnKSB7XG4gICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdhbGlnbicsIGZhbHNlLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdkaXJlY3Rpb24nLCB2YWx1ZSwgX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgfSxcbiAgICBpbmRlbnQ6IGZ1bmN0aW9uIGluZGVudCh2YWx1ZSkge1xuICAgICAgdmFyIHJhbmdlID0gdGhpcy5xdWlsbC5nZXRTZWxlY3Rpb24oKTtcbiAgICAgIHZhciBmb3JtYXRzID0gdGhpcy5xdWlsbC5nZXRGb3JtYXQocmFuZ2UpO1xuICAgICAgdmFyIGluZGVudCA9IHBhcnNlSW50KGZvcm1hdHMuaW5kZW50IHx8IDApO1xuICAgICAgaWYgKHZhbHVlID09PSAnKzEnIHx8IHZhbHVlID09PSAnLTEnKSB7XG4gICAgICAgIHZhciBtb2RpZmllciA9IHZhbHVlID09PSAnKzEnID8gMSA6IC0xO1xuICAgICAgICBpZiAoZm9ybWF0cy5kaXJlY3Rpb24gPT09ICdydGwnKSBtb2RpZmllciAqPSAtMTtcbiAgICAgICAgdGhpcy5xdWlsbC5mb3JtYXQoJ2luZGVudCcsIGluZGVudCArIG1vZGlmaWVyLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsodmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZSA9PT0gdHJ1ZSkge1xuICAgICAgICB2YWx1ZSA9IHByb21wdCgnRW50ZXIgbGluayBVUkw6Jyk7XG4gICAgICB9XG4gICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnbGluaycsIHZhbHVlLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICB9LFxuICAgIGxpc3Q6IGZ1bmN0aW9uIGxpc3QodmFsdWUpIHtcbiAgICAgIHZhciByYW5nZSA9IHRoaXMucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICB2YXIgZm9ybWF0cyA9IHRoaXMucXVpbGwuZ2V0Rm9ybWF0KHJhbmdlKTtcbiAgICAgIGlmICh2YWx1ZSA9PT0gJ2NoZWNrJykge1xuICAgICAgICBpZiAoZm9ybWF0c1snbGlzdCddID09PSAnY2hlY2tlZCcgfHwgZm9ybWF0c1snbGlzdCddID09PSAndW5jaGVja2VkJykge1xuICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdsaXN0JywgZmFsc2UsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdsaXN0JywgJ3VuY2hlY2tlZCcsIF9xdWlsbDIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnbGlzdCcsIHZhbHVlLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFRvb2xiYXI7XG5leHBvcnRzLmFkZENvbnRyb2xzID0gYWRkQ29udHJvbHM7XG5cbi8qKiovIH0pLFxuLyogNTggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHBvbHlsaW5lIGNsYXNzPVxcXCJxbC1ldmVuIHFsLXN0cm9rZVxcXCIgcG9pbnRzPVxcXCI1IDcgMyA5IDUgMTFcXFwiPjwvcG9seWxpbmU+IDxwb2x5bGluZSBjbGFzcz1cXFwicWwtZXZlbiBxbC1zdHJva2VcXFwiIHBvaW50cz1cXFwiMTMgNyAxNSA5IDEzIDExXFxcIj48L3BvbHlsaW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTAgeDI9OCB5MT01IHkyPTEzPjwvbGluZT4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogNTkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BpY2tlciA9IF9fd2VicGFja19yZXF1aXJlX18oMjgpO1xuXG52YXIgX3BpY2tlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9waWNrZXIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBDb2xvclBpY2tlciA9IGZ1bmN0aW9uIChfUGlja2VyKSB7XG4gIF9pbmhlcml0cyhDb2xvclBpY2tlciwgX1BpY2tlcik7XG5cbiAgZnVuY3Rpb24gQ29sb3JQaWNrZXIoc2VsZWN0LCBsYWJlbCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2xvclBpY2tlcik7XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoQ29sb3JQaWNrZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihDb2xvclBpY2tlcikpLmNhbGwodGhpcywgc2VsZWN0KSk7XG5cbiAgICBfdGhpcy5sYWJlbC5pbm5lckhUTUwgPSBsYWJlbDtcbiAgICBfdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZCgncWwtY29sb3ItcGlja2VyJyk7XG4gICAgW10uc2xpY2UuY2FsbChfdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnFsLXBpY2tlci1pdGVtJyksIDAsIDcpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZCgncWwtcHJpbWFyeScpO1xuICAgIH0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDb2xvclBpY2tlciwgW3tcbiAgICBrZXk6ICdidWlsZEl0ZW0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBidWlsZEl0ZW0ob3B0aW9uKSB7XG4gICAgICB2YXIgaXRlbSA9IF9nZXQoQ29sb3JQaWNrZXIucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29sb3JQaWNrZXIucHJvdG90eXBlKSwgJ2J1aWxkSXRlbScsIHRoaXMpLmNhbGwodGhpcywgb3B0aW9uKTtcbiAgICAgIGl0ZW0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gb3B0aW9uLmdldEF0dHJpYnV0ZSgndmFsdWUnKSB8fCAnJztcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3NlbGVjdEl0ZW0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWxlY3RJdGVtKGl0ZW0sIHRyaWdnZXIpIHtcbiAgICAgIF9nZXQoQ29sb3JQaWNrZXIucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQ29sb3JQaWNrZXIucHJvdG90eXBlKSwgJ3NlbGVjdEl0ZW0nLCB0aGlzKS5jYWxsKHRoaXMsIGl0ZW0sIHRyaWdnZXIpO1xuICAgICAgdmFyIGNvbG9yTGFiZWwgPSB0aGlzLmxhYmVsLnF1ZXJ5U2VsZWN0b3IoJy5xbC1jb2xvci1sYWJlbCcpO1xuICAgICAgdmFyIHZhbHVlID0gaXRlbSA/IGl0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJykgfHwgJycgOiAnJztcbiAgICAgIGlmIChjb2xvckxhYmVsKSB7XG4gICAgICAgIGlmIChjb2xvckxhYmVsLnRhZ05hbWUgPT09ICdsaW5lJykge1xuICAgICAgICAgIGNvbG9yTGFiZWwuc3R5bGUuc3Ryb2tlID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29sb3JMYWJlbC5zdHlsZS5maWxsID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29sb3JQaWNrZXI7XG59KF9waWNrZXIyLmRlZmF1bHQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBDb2xvclBpY2tlcjtcblxuLyoqKi8gfSksXG4vKiA2MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfcGlja2VyID0gX193ZWJwYWNrX3JlcXVpcmVfXygyOCk7XG5cbnZhciBfcGlja2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BpY2tlcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEljb25QaWNrZXIgPSBmdW5jdGlvbiAoX1BpY2tlcikge1xuICBfaW5oZXJpdHMoSWNvblBpY2tlciwgX1BpY2tlcik7XG5cbiAgZnVuY3Rpb24gSWNvblBpY2tlcihzZWxlY3QsIGljb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEljb25QaWNrZXIpO1xuXG4gICAgdmFyIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEljb25QaWNrZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJY29uUGlja2VyKSkuY2FsbCh0aGlzLCBzZWxlY3QpKTtcblxuICAgIF90aGlzLmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdxbC1pY29uLXBpY2tlcicpO1xuICAgIFtdLmZvckVhY2guY2FsbChfdGhpcy5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnLnFsLXBpY2tlci1pdGVtJyksIGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICBpdGVtLmlubmVySFRNTCA9IGljb25zW2l0ZW0uZ2V0QXR0cmlidXRlKCdkYXRhLXZhbHVlJykgfHwgJyddO1xuICAgIH0pO1xuICAgIF90aGlzLmRlZmF1bHRJdGVtID0gX3RoaXMuY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5xbC1zZWxlY3RlZCcpO1xuICAgIF90aGlzLnNlbGVjdEl0ZW0oX3RoaXMuZGVmYXVsdEl0ZW0pO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhJY29uUGlja2VyLCBbe1xuICAgIGtleTogJ3NlbGVjdEl0ZW0nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzZWxlY3RJdGVtKGl0ZW0sIHRyaWdnZXIpIHtcbiAgICAgIF9nZXQoSWNvblBpY2tlci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJY29uUGlja2VyLnByb3RvdHlwZSksICdzZWxlY3RJdGVtJywgdGhpcykuY2FsbCh0aGlzLCBpdGVtLCB0cmlnZ2VyKTtcbiAgICAgIGl0ZW0gPSBpdGVtIHx8IHRoaXMuZGVmYXVsdEl0ZW07XG4gICAgICB0aGlzLmxhYmVsLmlubmVySFRNTCA9IGl0ZW0uaW5uZXJIVE1MO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJY29uUGlja2VyO1xufShfcGlja2VyMi5kZWZhdWx0KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gSWNvblBpY2tlcjtcblxuLyoqKi8gfSksXG4vKiA2MSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG52YXIgVG9vbHRpcCA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gVG9vbHRpcChxdWlsbCwgYm91bmRzQ29udGFpbmVyKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBUb29sdGlwKTtcblxuICAgIHRoaXMucXVpbGwgPSBxdWlsbDtcbiAgICB0aGlzLmJvdW5kc0NvbnRhaW5lciA9IGJvdW5kc0NvbnRhaW5lciB8fCBkb2N1bWVudC5ib2R5O1xuICAgIHRoaXMucm9vdCA9IHF1aWxsLmFkZENvbnRhaW5lcigncWwtdG9vbHRpcCcpO1xuICAgIHRoaXMucm9vdC5pbm5lckhUTUwgPSB0aGlzLmNvbnN0cnVjdG9yLlRFTVBMQVRFO1xuICAgIGlmICh0aGlzLnF1aWxsLnJvb3QgPT09IHRoaXMucXVpbGwuc2Nyb2xsaW5nQ29udGFpbmVyKSB7XG4gICAgICB0aGlzLnF1aWxsLnJvb3QuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpcy5yb290LnN0eWxlLm1hcmdpblRvcCA9IC0xICogX3RoaXMucXVpbGwucm9vdC5zY3JvbGxUb3AgKyAncHgnO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuaGlkZSgpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFRvb2x0aXAsIFt7XG4gICAga2V5OiAnaGlkZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhpZGUoKSB7XG4gICAgICB0aGlzLnJvb3QuY2xhc3NMaXN0LmFkZCgncWwtaGlkZGVuJyk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncG9zaXRpb24nLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBwb3NpdGlvbihyZWZlcmVuY2UpIHtcbiAgICAgIHZhciBsZWZ0ID0gcmVmZXJlbmNlLmxlZnQgKyByZWZlcmVuY2Uud2lkdGggLyAyIC0gdGhpcy5yb290Lm9mZnNldFdpZHRoIC8gMjtcbiAgICAgIC8vIHJvb3Quc2Nyb2xsVG9wIHNob3VsZCBiZSAwIGlmIHNjcm9sbENvbnRhaW5lciAhPT0gcm9vdFxuICAgICAgdmFyIHRvcCA9IHJlZmVyZW5jZS5ib3R0b20gKyB0aGlzLnF1aWxsLnJvb3Quc2Nyb2xsVG9wO1xuICAgICAgdGhpcy5yb290LnN0eWxlLmxlZnQgPSBsZWZ0ICsgJ3B4JztcbiAgICAgIHRoaXMucm9vdC5zdHlsZS50b3AgPSB0b3AgKyAncHgnO1xuICAgICAgdGhpcy5yb290LmNsYXNzTGlzdC5yZW1vdmUoJ3FsLWZsaXAnKTtcbiAgICAgIHZhciBjb250YWluZXJCb3VuZHMgPSB0aGlzLmJvdW5kc0NvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHZhciByb290Qm91bmRzID0gdGhpcy5yb290LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdmFyIHNoaWZ0ID0gMDtcbiAgICAgIGlmIChyb290Qm91bmRzLnJpZ2h0ID4gY29udGFpbmVyQm91bmRzLnJpZ2h0KSB7XG4gICAgICAgIHNoaWZ0ID0gY29udGFpbmVyQm91bmRzLnJpZ2h0IC0gcm9vdEJvdW5kcy5yaWdodDtcbiAgICAgICAgdGhpcy5yb290LnN0eWxlLmxlZnQgPSBsZWZ0ICsgc2hpZnQgKyAncHgnO1xuICAgICAgfVxuICAgICAgaWYgKHJvb3RCb3VuZHMubGVmdCA8IGNvbnRhaW5lckJvdW5kcy5sZWZ0KSB7XG4gICAgICAgIHNoaWZ0ID0gY29udGFpbmVyQm91bmRzLmxlZnQgLSByb290Qm91bmRzLmxlZnQ7XG4gICAgICAgIHRoaXMucm9vdC5zdHlsZS5sZWZ0ID0gbGVmdCArIHNoaWZ0ICsgJ3B4JztcbiAgICAgIH1cbiAgICAgIGlmIChyb290Qm91bmRzLmJvdHRvbSA+IGNvbnRhaW5lckJvdW5kcy5ib3R0b20pIHtcbiAgICAgICAgdmFyIGhlaWdodCA9IHJvb3RCb3VuZHMuYm90dG9tIC0gcm9vdEJvdW5kcy50b3A7XG4gICAgICAgIHZhciB2ZXJ0aWNhbFNoaWZ0ID0gcmVmZXJlbmNlLmJvdHRvbSAtIHJlZmVyZW5jZS50b3AgKyBoZWlnaHQ7XG4gICAgICAgIHRoaXMucm9vdC5zdHlsZS50b3AgPSB0b3AgLSB2ZXJ0aWNhbFNoaWZ0ICsgJ3B4JztcbiAgICAgICAgdGhpcy5yb290LmNsYXNzTGlzdC5hZGQoJ3FsLWZsaXAnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzaGlmdDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzaG93JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2hvdygpIHtcbiAgICAgIHRoaXMucm9vdC5jbGFzc0xpc3QucmVtb3ZlKCdxbC1lZGl0aW5nJyk7XG4gICAgICB0aGlzLnJvb3QuY2xhc3NMaXN0LnJlbW92ZSgncWwtaGlkZGVuJyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFRvb2x0aXA7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFRvb2x0aXA7XG5cbi8qKiovIH0pLFxuLyogNjIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZXh0ZW5kID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKTtcblxudmFyIF9leHRlbmQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZXh0ZW5kKTtcblxudmFyIF9lbWl0dGVyID0gX193ZWJwYWNrX3JlcXVpcmVfXyg4KTtcblxudmFyIF9lbWl0dGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2VtaXR0ZXIpO1xuXG52YXIgX2Jhc2UgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQzKTtcblxudmFyIF9iYXNlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Jhc2UpO1xuXG52YXIgX2xpbmsgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KTtcblxudmFyIF9saW5rMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xpbmspO1xuXG52YXIgX3NlbGVjdGlvbiA9IF9fd2VicGFja19yZXF1aXJlX18oMTUpO1xuXG52YXIgX2ljb25zID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0MSk7XG5cbnZhciBfaWNvbnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaWNvbnMpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBUT09MQkFSX0NPTkZJRyA9IFtbeyBoZWFkZXI6IFsnMScsICcyJywgJzMnLCBmYWxzZV0gfV0sIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJywgJ2xpbmsnXSwgW3sgbGlzdDogJ29yZGVyZWQnIH0sIHsgbGlzdDogJ2J1bGxldCcgfV0sIFsnY2xlYW4nXV07XG5cbnZhciBTbm93VGhlbWUgPSBmdW5jdGlvbiAoX0Jhc2VUaGVtZSkge1xuICBfaW5oZXJpdHMoU25vd1RoZW1lLCBfQmFzZVRoZW1lKTtcblxuICBmdW5jdGlvbiBTbm93VGhlbWUocXVpbGwsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU25vd1RoZW1lKTtcblxuICAgIGlmIChvcHRpb25zLm1vZHVsZXMudG9vbGJhciAhPSBudWxsICYmIG9wdGlvbnMubW9kdWxlcy50b29sYmFyLmNvbnRhaW5lciA9PSBudWxsKSB7XG4gICAgICBvcHRpb25zLm1vZHVsZXMudG9vbGJhci5jb250YWluZXIgPSBUT09MQkFSX0NPTkZJRztcbiAgICB9XG5cbiAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoU25vd1RoZW1lLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU25vd1RoZW1lKSkuY2FsbCh0aGlzLCBxdWlsbCwgb3B0aW9ucykpO1xuXG4gICAgX3RoaXMucXVpbGwuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3FsLXNub3cnKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU25vd1RoZW1lLCBbe1xuICAgIGtleTogJ2V4dGVuZFRvb2xiYXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBleHRlbmRUb29sYmFyKHRvb2xiYXIpIHtcbiAgICAgIHRvb2xiYXIuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3FsLXNub3cnKTtcbiAgICAgIHRoaXMuYnVpbGRCdXR0b25zKFtdLnNsaWNlLmNhbGwodG9vbGJhci5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uJykpLCBfaWNvbnMyLmRlZmF1bHQpO1xuICAgICAgdGhpcy5idWlsZFBpY2tlcnMoW10uc2xpY2UuY2FsbCh0b29sYmFyLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3QnKSksIF9pY29uczIuZGVmYXVsdCk7XG4gICAgICB0aGlzLnRvb2x0aXAgPSBuZXcgU25vd1Rvb2x0aXAodGhpcy5xdWlsbCwgdGhpcy5vcHRpb25zLmJvdW5kcyk7XG4gICAgICBpZiAodG9vbGJhci5jb250YWluZXIucXVlcnlTZWxlY3RvcignLnFsLWxpbmsnKSkge1xuICAgICAgICB0aGlzLnF1aWxsLmtleWJvYXJkLmFkZEJpbmRpbmcoeyBrZXk6ICdLJywgc2hvcnRLZXk6IHRydWUgfSwgZnVuY3Rpb24gKHJhbmdlLCBjb250ZXh0KSB7XG4gICAgICAgICAgdG9vbGJhci5oYW5kbGVyc1snbGluayddLmNhbGwodG9vbGJhciwgIWNvbnRleHQuZm9ybWF0LmxpbmspO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU25vd1RoZW1lO1xufShfYmFzZTIuZGVmYXVsdCk7XG5cblNub3dUaGVtZS5ERUZBVUxUUyA9ICgwLCBfZXh0ZW5kMi5kZWZhdWx0KSh0cnVlLCB7fSwgX2Jhc2UyLmRlZmF1bHQuREVGQVVMVFMsIHtcbiAgbW9kdWxlczoge1xuICAgIHRvb2xiYXI6IHtcbiAgICAgIGhhbmRsZXJzOiB7XG4gICAgICAgIGxpbms6IGZ1bmN0aW9uIGxpbmsodmFsdWUpIHtcbiAgICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIHZhciByYW5nZSA9IHRoaXMucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgICAgICBpZiAocmFuZ2UgPT0gbnVsbCB8fCByYW5nZS5sZW5ndGggPT0gMCkgcmV0dXJuO1xuICAgICAgICAgICAgdmFyIHByZXZpZXcgPSB0aGlzLnF1aWxsLmdldFRleHQocmFuZ2UpO1xuICAgICAgICAgICAgaWYgKC9eXFxTK0BcXFMrXFwuXFxTKyQvLnRlc3QocHJldmlldykgJiYgcHJldmlldy5pbmRleE9mKCdtYWlsdG86JykgIT09IDApIHtcbiAgICAgICAgICAgICAgcHJldmlldyA9ICdtYWlsdG86JyArIHByZXZpZXc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgdG9vbHRpcCA9IHRoaXMucXVpbGwudGhlbWUudG9vbHRpcDtcbiAgICAgICAgICAgIHRvb2x0aXAuZWRpdCgnbGluaycsIHByZXZpZXcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnF1aWxsLmZvcm1hdCgnbGluaycsIGZhbHNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuXG52YXIgU25vd1Rvb2x0aXAgPSBmdW5jdGlvbiAoX0Jhc2VUb29sdGlwKSB7XG4gIF9pbmhlcml0cyhTbm93VG9vbHRpcCwgX0Jhc2VUb29sdGlwKTtcblxuICBmdW5jdGlvbiBTbm93VG9vbHRpcChxdWlsbCwgYm91bmRzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNub3dUb29sdGlwKTtcblxuICAgIHZhciBfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoU25vd1Rvb2x0aXAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTbm93VG9vbHRpcCkpLmNhbGwodGhpcywgcXVpbGwsIGJvdW5kcykpO1xuXG4gICAgX3RoaXMyLnByZXZpZXcgPSBfdGhpczIucm9vdC5xdWVyeVNlbGVjdG9yKCdhLnFsLXByZXZpZXcnKTtcbiAgICByZXR1cm4gX3RoaXMyO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFNub3dUb29sdGlwLCBbe1xuICAgIGtleTogJ2xpc3RlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpc3RlbigpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBfZ2V0KFNub3dUb29sdGlwLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFNub3dUb29sdGlwLnByb3RvdHlwZSksICdsaXN0ZW4nLCB0aGlzKS5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5yb290LnF1ZXJ5U2VsZWN0b3IoJ2EucWwtYWN0aW9uJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgaWYgKF90aGlzMy5yb290LmNsYXNzTGlzdC5jb250YWlucygncWwtZWRpdGluZycpKSB7XG4gICAgICAgICAgX3RoaXMzLnNhdmUoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpczMuZWRpdCgnbGluaycsIF90aGlzMy5wcmV2aWV3LnRleHRDb250ZW50KTtcbiAgICAgICAgfVxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnJvb3QucXVlcnlTZWxlY3RvcignYS5xbC1yZW1vdmUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBpZiAoX3RoaXMzLmxpbmtSYW5nZSAhPSBudWxsKSB7XG4gICAgICAgICAgdmFyIHJhbmdlID0gX3RoaXMzLmxpbmtSYW5nZTtcbiAgICAgICAgICBfdGhpczMucmVzdG9yZUZvY3VzKCk7XG4gICAgICAgICAgX3RoaXMzLnF1aWxsLmZvcm1hdFRleHQocmFuZ2UsICdsaW5rJywgZmFsc2UsIF9lbWl0dGVyMi5kZWZhdWx0LnNvdXJjZXMuVVNFUik7XG4gICAgICAgICAgZGVsZXRlIF90aGlzMy5saW5rUmFuZ2U7XG4gICAgICAgIH1cbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgX3RoaXMzLmhpZGUoKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5xdWlsbC5vbihfZW1pdHRlcjIuZGVmYXVsdC5ldmVudHMuU0VMRUNUSU9OX0NIQU5HRSwgZnVuY3Rpb24gKHJhbmdlLCBvbGRSYW5nZSwgc291cmNlKSB7XG4gICAgICAgIGlmIChyYW5nZSA9PSBudWxsKSByZXR1cm47XG4gICAgICAgIGlmIChyYW5nZS5sZW5ndGggPT09IDAgJiYgc291cmNlID09PSBfZW1pdHRlcjIuZGVmYXVsdC5zb3VyY2VzLlVTRVIpIHtcbiAgICAgICAgICB2YXIgX3F1aWxsJHNjcm9sbCRkZXNjZW5kID0gX3RoaXMzLnF1aWxsLnNjcm9sbC5kZXNjZW5kYW50KF9saW5rMi5kZWZhdWx0LCByYW5nZS5pbmRleCksXG4gICAgICAgICAgICAgIF9xdWlsbCRzY3JvbGwkZGVzY2VuZDIgPSBfc2xpY2VkVG9BcnJheShfcXVpbGwkc2Nyb2xsJGRlc2NlbmQsIDIpLFxuICAgICAgICAgICAgICBsaW5rID0gX3F1aWxsJHNjcm9sbCRkZXNjZW5kMlswXSxcbiAgICAgICAgICAgICAgb2Zmc2V0ID0gX3F1aWxsJHNjcm9sbCRkZXNjZW5kMlsxXTtcblxuICAgICAgICAgIGlmIChsaW5rICE9IG51bGwpIHtcbiAgICAgICAgICAgIF90aGlzMy5saW5rUmFuZ2UgPSBuZXcgX3NlbGVjdGlvbi5SYW5nZShyYW5nZS5pbmRleCAtIG9mZnNldCwgbGluay5sZW5ndGgoKSk7XG4gICAgICAgICAgICB2YXIgcHJldmlldyA9IF9saW5rMi5kZWZhdWx0LmZvcm1hdHMobGluay5kb21Ob2RlKTtcbiAgICAgICAgICAgIF90aGlzMy5wcmV2aWV3LnRleHRDb250ZW50ID0gcHJldmlldztcbiAgICAgICAgICAgIF90aGlzMy5wcmV2aWV3LnNldEF0dHJpYnV0ZSgnaHJlZicsIHByZXZpZXcpO1xuICAgICAgICAgICAgX3RoaXMzLnNob3coKTtcbiAgICAgICAgICAgIF90aGlzMy5wb3NpdGlvbihfdGhpczMucXVpbGwuZ2V0Qm91bmRzKF90aGlzMy5saW5rUmFuZ2UpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVsZXRlIF90aGlzMy5saW5rUmFuZ2U7XG4gICAgICAgIH1cbiAgICAgICAgX3RoaXMzLmhpZGUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3Nob3cnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzaG93KCkge1xuICAgICAgX2dldChTbm93VG9vbHRpcC5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTbm93VG9vbHRpcC5wcm90b3R5cGUpLCAnc2hvdycsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLnJvb3QucmVtb3ZlQXR0cmlidXRlKCdkYXRhLW1vZGUnKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU25vd1Rvb2x0aXA7XG59KF9iYXNlLkJhc2VUb29sdGlwKTtcblxuU25vd1Rvb2x0aXAuVEVNUExBVEUgPSBbJzxhIGNsYXNzPVwicWwtcHJldmlld1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIiB0YXJnZXQ9XCJfYmxhbmtcIiBocmVmPVwiYWJvdXQ6YmxhbmtcIj48L2E+JywgJzxpbnB1dCB0eXBlPVwidGV4dFwiIGRhdGEtZm9ybXVsYT1cImU9bWNeMlwiIGRhdGEtbGluaz1cImh0dHBzOi8vcXVpbGxqcy5jb21cIiBkYXRhLXZpZGVvPVwiRW1iZWQgVVJMXCI+JywgJzxhIGNsYXNzPVwicWwtYWN0aW9uXCI+PC9hPicsICc8YSBjbGFzcz1cInFsLXJlbW92ZVwiPjwvYT4nXS5qb2luKCcnKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gU25vd1RoZW1lO1xuXG4vKioqLyB9KSxcbi8qIDYzICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY29yZSA9IF9fd2VicGFja19yZXF1aXJlX18oMjkpO1xuXG52YXIgX2NvcmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY29yZSk7XG5cbnZhciBfYWxpZ24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDM2KTtcblxudmFyIF9kaXJlY3Rpb24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDM4KTtcblxudmFyIF9pbmRlbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDY0KTtcblxudmFyIF9ibG9ja3F1b3RlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2NSk7XG5cbnZhciBfYmxvY2txdW90ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ibG9ja3F1b3RlKTtcblxudmFyIF9oZWFkZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDY2KTtcblxudmFyIF9oZWFkZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaGVhZGVyKTtcblxudmFyIF9saXN0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2Nyk7XG5cbnZhciBfbGlzdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9saXN0KTtcblxudmFyIF9iYWNrZ3JvdW5kID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNyk7XG5cbnZhciBfY29sb3IgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI2KTtcblxudmFyIF9mb250ID0gX193ZWJwYWNrX3JlcXVpcmVfXygzOSk7XG5cbnZhciBfc2l6ZSA9IF9fd2VicGFja19yZXF1aXJlX18oNDApO1xuXG52YXIgX2JvbGQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU2KTtcblxudmFyIF9ib2xkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2JvbGQpO1xuXG52YXIgX2l0YWxpYyA9IF9fd2VicGFja19yZXF1aXJlX18oNjgpO1xuXG52YXIgX2l0YWxpYzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pdGFsaWMpO1xuXG52YXIgX2xpbmsgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KTtcblxudmFyIF9saW5rMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xpbmspO1xuXG52YXIgX3NjcmlwdCA9IF9fd2VicGFja19yZXF1aXJlX18oNjkpO1xuXG52YXIgX3NjcmlwdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY3JpcHQpO1xuXG52YXIgX3N0cmlrZSA9IF9fd2VicGFja19yZXF1aXJlX18oNzApO1xuXG52YXIgX3N0cmlrZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zdHJpa2UpO1xuXG52YXIgX3VuZGVybGluZSA9IF9fd2VicGFja19yZXF1aXJlX18oNzEpO1xuXG52YXIgX3VuZGVybGluZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91bmRlcmxpbmUpO1xuXG52YXIgX2ltYWdlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3Mik7XG5cbnZhciBfaW1hZ2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW1hZ2UpO1xuXG52YXIgX3ZpZGVvID0gX193ZWJwYWNrX3JlcXVpcmVfXyg3Myk7XG5cbnZhciBfdmlkZW8yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfdmlkZW8pO1xuXG52YXIgX2NvZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxudmFyIF9jb2RlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZGUpO1xuXG52YXIgX2Zvcm11bGEgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDc0KTtcblxudmFyIF9mb3JtdWxhMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Zvcm11bGEpO1xuXG52YXIgX3N5bnRheCA9IF9fd2VicGFja19yZXF1aXJlX18oNzUpO1xuXG52YXIgX3N5bnRheDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zeW50YXgpO1xuXG52YXIgX3Rvb2xiYXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDU3KTtcblxudmFyIF90b29sYmFyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Rvb2xiYXIpO1xuXG52YXIgX2ljb25zID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0MSk7XG5cbnZhciBfaWNvbnMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaWNvbnMpO1xuXG52YXIgX3BpY2tlciA9IF9fd2VicGFja19yZXF1aXJlX18oMjgpO1xuXG52YXIgX3BpY2tlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9waWNrZXIpO1xuXG52YXIgX2NvbG9yUGlja2VyID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1OSk7XG5cbnZhciBfY29sb3JQaWNrZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY29sb3JQaWNrZXIpO1xuXG52YXIgX2ljb25QaWNrZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYwKTtcblxudmFyIF9pY29uUGlja2VyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ljb25QaWNrZXIpO1xuXG52YXIgX3Rvb2x0aXAgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYxKTtcblxudmFyIF90b29sdGlwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Rvb2x0aXApO1xuXG52YXIgX2J1YmJsZSA9IF9fd2VicGFja19yZXF1aXJlX18oMTA4KTtcblxudmFyIF9idWJibGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnViYmxlKTtcblxudmFyIF9zbm93ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2Mik7XG5cbnZhciBfc25vdzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zbm93KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuX2NvcmUyLmRlZmF1bHQucmVnaXN0ZXIoe1xuICAnYXR0cmlidXRvcnMvYXR0cmlidXRlL2RpcmVjdGlvbic6IF9kaXJlY3Rpb24uRGlyZWN0aW9uQXR0cmlidXRlLFxuXG4gICdhdHRyaWJ1dG9ycy9jbGFzcy9hbGlnbic6IF9hbGlnbi5BbGlnbkNsYXNzLFxuICAnYXR0cmlidXRvcnMvY2xhc3MvYmFja2dyb3VuZCc6IF9iYWNrZ3JvdW5kLkJhY2tncm91bmRDbGFzcyxcbiAgJ2F0dHJpYnV0b3JzL2NsYXNzL2NvbG9yJzogX2NvbG9yLkNvbG9yQ2xhc3MsXG4gICdhdHRyaWJ1dG9ycy9jbGFzcy9kaXJlY3Rpb24nOiBfZGlyZWN0aW9uLkRpcmVjdGlvbkNsYXNzLFxuICAnYXR0cmlidXRvcnMvY2xhc3MvZm9udCc6IF9mb250LkZvbnRDbGFzcyxcbiAgJ2F0dHJpYnV0b3JzL2NsYXNzL3NpemUnOiBfc2l6ZS5TaXplQ2xhc3MsXG5cbiAgJ2F0dHJpYnV0b3JzL3N0eWxlL2FsaWduJzogX2FsaWduLkFsaWduU3R5bGUsXG4gICdhdHRyaWJ1dG9ycy9zdHlsZS9iYWNrZ3JvdW5kJzogX2JhY2tncm91bmQuQmFja2dyb3VuZFN0eWxlLFxuICAnYXR0cmlidXRvcnMvc3R5bGUvY29sb3InOiBfY29sb3IuQ29sb3JTdHlsZSxcbiAgJ2F0dHJpYnV0b3JzL3N0eWxlL2RpcmVjdGlvbic6IF9kaXJlY3Rpb24uRGlyZWN0aW9uU3R5bGUsXG4gICdhdHRyaWJ1dG9ycy9zdHlsZS9mb250JzogX2ZvbnQuRm9udFN0eWxlLFxuICAnYXR0cmlidXRvcnMvc3R5bGUvc2l6ZSc6IF9zaXplLlNpemVTdHlsZVxufSwgdHJ1ZSk7XG5cbl9jb3JlMi5kZWZhdWx0LnJlZ2lzdGVyKHtcbiAgJ2Zvcm1hdHMvYWxpZ24nOiBfYWxpZ24uQWxpZ25DbGFzcyxcbiAgJ2Zvcm1hdHMvZGlyZWN0aW9uJzogX2RpcmVjdGlvbi5EaXJlY3Rpb25DbGFzcyxcbiAgJ2Zvcm1hdHMvaW5kZW50JzogX2luZGVudC5JbmRlbnRDbGFzcyxcblxuICAnZm9ybWF0cy9iYWNrZ3JvdW5kJzogX2JhY2tncm91bmQuQmFja2dyb3VuZFN0eWxlLFxuICAnZm9ybWF0cy9jb2xvcic6IF9jb2xvci5Db2xvclN0eWxlLFxuICAnZm9ybWF0cy9mb250JzogX2ZvbnQuRm9udENsYXNzLFxuICAnZm9ybWF0cy9zaXplJzogX3NpemUuU2l6ZUNsYXNzLFxuXG4gICdmb3JtYXRzL2Jsb2NrcXVvdGUnOiBfYmxvY2txdW90ZTIuZGVmYXVsdCxcbiAgJ2Zvcm1hdHMvY29kZS1ibG9jayc6IF9jb2RlMi5kZWZhdWx0LFxuICAnZm9ybWF0cy9oZWFkZXInOiBfaGVhZGVyMi5kZWZhdWx0LFxuICAnZm9ybWF0cy9saXN0JzogX2xpc3QyLmRlZmF1bHQsXG5cbiAgJ2Zvcm1hdHMvYm9sZCc6IF9ib2xkMi5kZWZhdWx0LFxuICAnZm9ybWF0cy9jb2RlJzogX2NvZGUuQ29kZSxcbiAgJ2Zvcm1hdHMvaXRhbGljJzogX2l0YWxpYzIuZGVmYXVsdCxcbiAgJ2Zvcm1hdHMvbGluayc6IF9saW5rMi5kZWZhdWx0LFxuICAnZm9ybWF0cy9zY3JpcHQnOiBfc2NyaXB0Mi5kZWZhdWx0LFxuICAnZm9ybWF0cy9zdHJpa2UnOiBfc3RyaWtlMi5kZWZhdWx0LFxuICAnZm9ybWF0cy91bmRlcmxpbmUnOiBfdW5kZXJsaW5lMi5kZWZhdWx0LFxuXG4gICdmb3JtYXRzL2ltYWdlJzogX2ltYWdlMi5kZWZhdWx0LFxuICAnZm9ybWF0cy92aWRlbyc6IF92aWRlbzIuZGVmYXVsdCxcblxuICAnZm9ybWF0cy9saXN0L2l0ZW0nOiBfbGlzdC5MaXN0SXRlbSxcblxuICAnbW9kdWxlcy9mb3JtdWxhJzogX2Zvcm11bGEyLmRlZmF1bHQsXG4gICdtb2R1bGVzL3N5bnRheCc6IF9zeW50YXgyLmRlZmF1bHQsXG4gICdtb2R1bGVzL3Rvb2xiYXInOiBfdG9vbGJhcjIuZGVmYXVsdCxcblxuICAndGhlbWVzL2J1YmJsZSc6IF9idWJibGUyLmRlZmF1bHQsXG4gICd0aGVtZXMvc25vdyc6IF9zbm93Mi5kZWZhdWx0LFxuXG4gICd1aS9pY29ucyc6IF9pY29uczIuZGVmYXVsdCxcbiAgJ3VpL3BpY2tlcic6IF9waWNrZXIyLmRlZmF1bHQsXG4gICd1aS9pY29uLXBpY2tlcic6IF9pY29uUGlja2VyMi5kZWZhdWx0LFxuICAndWkvY29sb3ItcGlja2VyJzogX2NvbG9yUGlja2VyMi5kZWZhdWx0LFxuICAndWkvdG9vbHRpcCc6IF90b29sdGlwMi5kZWZhdWx0XG59LCB0cnVlKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gX2NvcmUyLmRlZmF1bHQ7XG5cbi8qKiovIH0pLFxuLyogNjQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuSW5kZW50Q2xhc3MgPSB1bmRlZmluZWQ7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9wYXJjaG1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG52YXIgX3BhcmNobWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wYXJjaG1lbnQpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBJZGVudEF0dHJpYnV0b3IgPSBmdW5jdGlvbiAoX1BhcmNobWVudCRBdHRyaWJ1dG9yKSB7XG4gIF9pbmhlcml0cyhJZGVudEF0dHJpYnV0b3IsIF9QYXJjaG1lbnQkQXR0cmlidXRvcik7XG5cbiAgZnVuY3Rpb24gSWRlbnRBdHRyaWJ1dG9yKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBJZGVudEF0dHJpYnV0b3IpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChJZGVudEF0dHJpYnV0b3IuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJZGVudEF0dHJpYnV0b3IpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhJZGVudEF0dHJpYnV0b3IsIFt7XG4gICAga2V5OiAnYWRkJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkKG5vZGUsIHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09ICcrMScgfHwgdmFsdWUgPT09ICctMScpIHtcbiAgICAgICAgdmFyIGluZGVudCA9IHRoaXMudmFsdWUobm9kZSkgfHwgMDtcbiAgICAgICAgdmFsdWUgPSB2YWx1ZSA9PT0gJysxJyA/IGluZGVudCArIDEgOiBpbmRlbnQgLSAxO1xuICAgICAgfVxuICAgICAgaWYgKHZhbHVlID09PSAwKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlKG5vZGUpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBfZ2V0KElkZW50QXR0cmlidXRvci5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJZGVudEF0dHJpYnV0b3IucHJvdG90eXBlKSwgJ2FkZCcsIHRoaXMpLmNhbGwodGhpcywgbm9kZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2NhbkFkZCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNhbkFkZChub2RlLCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIF9nZXQoSWRlbnRBdHRyaWJ1dG9yLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKElkZW50QXR0cmlidXRvci5wcm90b3R5cGUpLCAnY2FuQWRkJywgdGhpcykuY2FsbCh0aGlzLCBub2RlLCB2YWx1ZSkgfHwgX2dldChJZGVudEF0dHJpYnV0b3IucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSWRlbnRBdHRyaWJ1dG9yLnByb3RvdHlwZSksICdjYW5BZGQnLCB0aGlzKS5jYWxsKHRoaXMsIG5vZGUsIHBhcnNlSW50KHZhbHVlKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndmFsdWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShub2RlKSB7XG4gICAgICByZXR1cm4gcGFyc2VJbnQoX2dldChJZGVudEF0dHJpYnV0b3IucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSWRlbnRBdHRyaWJ1dG9yLnByb3RvdHlwZSksICd2YWx1ZScsIHRoaXMpLmNhbGwodGhpcywgbm9kZSkpIHx8IHVuZGVmaW5lZDsgLy8gRG9uJ3QgcmV0dXJuIE5hTlxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBJZGVudEF0dHJpYnV0b3I7XG59KF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5DbGFzcyk7XG5cbnZhciBJbmRlbnRDbGFzcyA9IG5ldyBJZGVudEF0dHJpYnV0b3IoJ2luZGVudCcsICdxbC1pbmRlbnQnLCB7XG4gIHNjb3BlOiBfcGFyY2htZW50Mi5kZWZhdWx0LlNjb3BlLkJMT0NLLFxuICB3aGl0ZWxpc3Q6IFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4XVxufSk7XG5cbmV4cG9ydHMuSW5kZW50Q2xhc3MgPSBJbmRlbnRDbGFzcztcblxuLyoqKi8gfSksXG4vKiA2NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2Jsb2NrID0gX193ZWJwYWNrX3JlcXVpcmVfXyg0KTtcblxudmFyIF9ibG9jazIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ibG9jayk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEJsb2NrcXVvdGUgPSBmdW5jdGlvbiAoX0Jsb2NrKSB7XG4gIF9pbmhlcml0cyhCbG9ja3F1b3RlLCBfQmxvY2spO1xuXG4gIGZ1bmN0aW9uIEJsb2NrcXVvdGUoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEJsb2NrcXVvdGUpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChCbG9ja3F1b3RlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQmxvY2txdW90ZSkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgcmV0dXJuIEJsb2NrcXVvdGU7XG59KF9ibG9jazIuZGVmYXVsdCk7XG5cbkJsb2NrcXVvdGUuYmxvdE5hbWUgPSAnYmxvY2txdW90ZSc7XG5CbG9ja3F1b3RlLnRhZ05hbWUgPSAnYmxvY2txdW90ZSc7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEJsb2NrcXVvdGU7XG5cbi8qKiovIH0pLFxuLyogNjYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9ibG9jayA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cbnZhciBfYmxvY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmxvY2spO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBIZWFkZXIgPSBmdW5jdGlvbiAoX0Jsb2NrKSB7XG4gIF9pbmhlcml0cyhIZWFkZXIsIF9CbG9jayk7XG5cbiAgZnVuY3Rpb24gSGVhZGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIZWFkZXIpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChIZWFkZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihIZWFkZXIpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhIZWFkZXIsIG51bGwsIFt7XG4gICAga2V5OiAnZm9ybWF0cycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdHMoZG9tTm9kZSkge1xuICAgICAgcmV0dXJuIHRoaXMudGFnTmFtZS5pbmRleE9mKGRvbU5vZGUudGFnTmFtZSkgKyAxO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBIZWFkZXI7XG59KF9ibG9jazIuZGVmYXVsdCk7XG5cbkhlYWRlci5ibG90TmFtZSA9ICdoZWFkZXInO1xuSGVhZGVyLnRhZ05hbWUgPSBbJ0gxJywgJ0gyJywgJ0gzJywgJ0g0JywgJ0g1JywgJ0g2J107XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEhlYWRlcjtcblxuLyoqKi8gfSksXG4vKiA2NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5MaXN0SXRlbSA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfYmxvY2sgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuXG52YXIgX2Jsb2NrMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Jsb2NrKTtcblxudmFyIF9jb250YWluZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI1KTtcblxudmFyIF9jb250YWluZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfY29udGFpbmVyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTGlzdEl0ZW0gPSBmdW5jdGlvbiAoX0Jsb2NrKSB7XG4gIF9pbmhlcml0cyhMaXN0SXRlbSwgX0Jsb2NrKTtcblxuICBmdW5jdGlvbiBMaXN0SXRlbSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTGlzdEl0ZW0pO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMaXN0SXRlbS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExpc3RJdGVtKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTGlzdEl0ZW0sIFt7XG4gICAga2V5OiAnZm9ybWF0JyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0KG5hbWUsIHZhbHVlKSB7XG4gICAgICBpZiAobmFtZSA9PT0gTGlzdC5ibG90TmFtZSAmJiAhdmFsdWUpIHtcbiAgICAgICAgdGhpcy5yZXBsYWNlV2l0aChfcGFyY2htZW50Mi5kZWZhdWx0LmNyZWF0ZSh0aGlzLnN0YXRpY3Muc2NvcGUpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQoTGlzdEl0ZW0ucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGlzdEl0ZW0ucHJvdG90eXBlKSwgJ2Zvcm1hdCcsIHRoaXMpLmNhbGwodGhpcywgbmFtZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbW92ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIGlmICh0aGlzLnByZXYgPT0gbnVsbCAmJiB0aGlzLm5leHQgPT0gbnVsbCkge1xuICAgICAgICB0aGlzLnBhcmVudC5yZW1vdmUoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQoTGlzdEl0ZW0ucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGlzdEl0ZW0ucHJvdG90eXBlKSwgJ3JlbW92ZScsIHRoaXMpLmNhbGwodGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVwbGFjZVdpdGgnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXBsYWNlV2l0aChuYW1lLCB2YWx1ZSkge1xuICAgICAgdGhpcy5wYXJlbnQuaXNvbGF0ZSh0aGlzLm9mZnNldCh0aGlzLnBhcmVudCksIHRoaXMubGVuZ3RoKCkpO1xuICAgICAgaWYgKG5hbWUgPT09IHRoaXMucGFyZW50LnN0YXRpY3MuYmxvdE5hbWUpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQucmVwbGFjZVdpdGgobmFtZSwgdmFsdWUpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucGFyZW50LnVud3JhcCgpO1xuICAgICAgICByZXR1cm4gX2dldChMaXN0SXRlbS5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMaXN0SXRlbS5wcm90b3R5cGUpLCAncmVwbGFjZVdpdGgnLCB0aGlzKS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2Zvcm1hdHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRzKGRvbU5vZGUpIHtcbiAgICAgIHJldHVybiBkb21Ob2RlLnRhZ05hbWUgPT09IHRoaXMudGFnTmFtZSA/IHVuZGVmaW5lZCA6IF9nZXQoTGlzdEl0ZW0uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMaXN0SXRlbSksICdmb3JtYXRzJywgdGhpcykuY2FsbCh0aGlzLCBkb21Ob2RlKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTGlzdEl0ZW07XG59KF9ibG9jazIuZGVmYXVsdCk7XG5cbkxpc3RJdGVtLmJsb3ROYW1lID0gJ2xpc3QtaXRlbSc7XG5MaXN0SXRlbS50YWdOYW1lID0gJ0xJJztcblxudmFyIExpc3QgPSBmdW5jdGlvbiAoX0NvbnRhaW5lcikge1xuICBfaW5oZXJpdHMoTGlzdCwgX0NvbnRhaW5lcik7XG5cbiAgX2NyZWF0ZUNsYXNzKExpc3QsIG51bGwsIFt7XG4gICAga2V5OiAnY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKHZhbHVlKSB7XG4gICAgICB2YXIgdGFnTmFtZSA9IHZhbHVlID09PSAnb3JkZXJlZCcgPyAnT0wnIDogJ1VMJztcbiAgICAgIHZhciBub2RlID0gX2dldChMaXN0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGlzdCksICdjcmVhdGUnLCB0aGlzKS5jYWxsKHRoaXMsIHRhZ05hbWUpO1xuICAgICAgaWYgKHZhbHVlID09PSAnY2hlY2tlZCcgfHwgdmFsdWUgPT09ICd1bmNoZWNrZWQnKSB7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnLCB2YWx1ZSA9PT0gJ2NoZWNrZWQnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRzKGRvbU5vZGUpIHtcbiAgICAgIGlmIChkb21Ob2RlLnRhZ05hbWUgPT09ICdPTCcpIHJldHVybiAnb3JkZXJlZCc7XG4gICAgICBpZiAoZG9tTm9kZS50YWdOYW1lID09PSAnVUwnKSB7XG4gICAgICAgIGlmIChkb21Ob2RlLmhhc0F0dHJpYnV0ZSgnZGF0YS1jaGVja2VkJykpIHtcbiAgICAgICAgICByZXR1cm4gZG9tTm9kZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtY2hlY2tlZCcpID09PSAndHJ1ZScgPyAnY2hlY2tlZCcgOiAndW5jaGVja2VkJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJ2J1bGxldCc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICB9XSk7XG5cbiAgZnVuY3Rpb24gTGlzdChkb21Ob2RlKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpc3QpO1xuXG4gICAgdmFyIF90aGlzMiA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChMaXN0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTGlzdCkpLmNhbGwodGhpcywgZG9tTm9kZSkpO1xuXG4gICAgdmFyIGxpc3RFdmVudEhhbmRsZXIgPSBmdW5jdGlvbiBsaXN0RXZlbnRIYW5kbGVyKGUpIHtcbiAgICAgIGlmIChlLnRhcmdldC5wYXJlbnROb2RlICE9PSBkb21Ob2RlKSByZXR1cm47XG4gICAgICB2YXIgZm9ybWF0ID0gX3RoaXMyLnN0YXRpY3MuZm9ybWF0cyhkb21Ob2RlKTtcbiAgICAgIHZhciBibG90ID0gX3BhcmNobWVudDIuZGVmYXVsdC5maW5kKGUudGFyZ2V0KTtcbiAgICAgIGlmIChmb3JtYXQgPT09ICdjaGVja2VkJykge1xuICAgICAgICBibG90LmZvcm1hdCgnbGlzdCcsICd1bmNoZWNrZWQnKTtcbiAgICAgIH0gZWxzZSBpZiAoZm9ybWF0ID09PSAndW5jaGVja2VkJykge1xuICAgICAgICBibG90LmZvcm1hdCgnbGlzdCcsICdjaGVja2VkJyk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGRvbU5vZGUuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGxpc3RFdmVudEhhbmRsZXIpO1xuICAgIGRvbU5vZGUuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgbGlzdEV2ZW50SGFuZGxlcik7XG4gICAgcmV0dXJuIF90aGlzMjtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMaXN0LCBbe1xuICAgIGtleTogJ2Zvcm1hdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdChuYW1lLCB2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmNoaWxkcmVuLnRhaWwuZm9ybWF0KG5hbWUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0cygpIHtcbiAgICAgIC8vIFdlIGRvbid0IGluaGVyaXQgZnJvbSBGb3JtYXRCbG90XG4gICAgICByZXR1cm4gX2RlZmluZVByb3BlcnR5KHt9LCB0aGlzLnN0YXRpY3MuYmxvdE5hbWUsIHRoaXMuc3RhdGljcy5mb3JtYXRzKHRoaXMuZG9tTm9kZSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2luc2VydEJlZm9yZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGluc2VydEJlZm9yZShibG90LCByZWYpIHtcbiAgICAgIGlmIChibG90IGluc3RhbmNlb2YgTGlzdEl0ZW0pIHtcbiAgICAgICAgX2dldChMaXN0LnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExpc3QucHJvdG90eXBlKSwgJ2luc2VydEJlZm9yZScsIHRoaXMpLmNhbGwodGhpcywgYmxvdCwgcmVmKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBpbmRleCA9IHJlZiA9PSBudWxsID8gdGhpcy5sZW5ndGgoKSA6IHJlZi5vZmZzZXQodGhpcyk7XG4gICAgICAgIHZhciBhZnRlciA9IHRoaXMuc3BsaXQoaW5kZXgpO1xuICAgICAgICBhZnRlci5wYXJlbnQuaW5zZXJ0QmVmb3JlKGJsb3QsIGFmdGVyKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdvcHRpbWl6ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wdGltaXplKGNvbnRleHQpIHtcbiAgICAgIF9nZXQoTGlzdC5wcm90b3R5cGUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihMaXN0LnByb3RvdHlwZSksICdvcHRpbWl6ZScsIHRoaXMpLmNhbGwodGhpcywgY29udGV4dCk7XG4gICAgICB2YXIgbmV4dCA9IHRoaXMubmV4dDtcbiAgICAgIGlmIChuZXh0ICE9IG51bGwgJiYgbmV4dC5wcmV2ID09PSB0aGlzICYmIG5leHQuc3RhdGljcy5ibG90TmFtZSA9PT0gdGhpcy5zdGF0aWNzLmJsb3ROYW1lICYmIG5leHQuZG9tTm9kZS50YWdOYW1lID09PSB0aGlzLmRvbU5vZGUudGFnTmFtZSAmJiBuZXh0LmRvbU5vZGUuZ2V0QXR0cmlidXRlKCdkYXRhLWNoZWNrZWQnKSA9PT0gdGhpcy5kb21Ob2RlLmdldEF0dHJpYnV0ZSgnZGF0YS1jaGVja2VkJykpIHtcbiAgICAgICAgbmV4dC5tb3ZlQ2hpbGRyZW4odGhpcyk7XG4gICAgICAgIG5leHQucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVwbGFjZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlcGxhY2UodGFyZ2V0KSB7XG4gICAgICBpZiAodGFyZ2V0LnN0YXRpY3MuYmxvdE5hbWUgIT09IHRoaXMuc3RhdGljcy5ibG90TmFtZSkge1xuICAgICAgICB2YXIgaXRlbSA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuY3JlYXRlKHRoaXMuc3RhdGljcy5kZWZhdWx0Q2hpbGQpO1xuICAgICAgICB0YXJnZXQubW92ZUNoaWxkcmVuKGl0ZW0pO1xuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGl0ZW0pO1xuICAgICAgfVxuICAgICAgX2dldChMaXN0LnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKExpc3QucHJvdG90eXBlKSwgJ3JlcGxhY2UnLCB0aGlzKS5jYWxsKHRoaXMsIHRhcmdldCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExpc3Q7XG59KF9jb250YWluZXIyLmRlZmF1bHQpO1xuXG5MaXN0LmJsb3ROYW1lID0gJ2xpc3QnO1xuTGlzdC5zY29wZSA9IF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuQkxPQ0tfQkxPVDtcbkxpc3QudGFnTmFtZSA9IFsnT0wnLCAnVUwnXTtcbkxpc3QuZGVmYXVsdENoaWxkID0gJ2xpc3QtaXRlbSc7XG5MaXN0LmFsbG93ZWRDaGlsZHJlbiA9IFtMaXN0SXRlbV07XG5cbmV4cG9ydHMuTGlzdEl0ZW0gPSBMaXN0SXRlbTtcbmV4cG9ydHMuZGVmYXVsdCA9IExpc3Q7XG5cbi8qKiovIH0pLFxuLyogNjggKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9ib2xkID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1Nik7XG5cbnZhciBfYm9sZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ib2xkKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgSXRhbGljID0gZnVuY3Rpb24gKF9Cb2xkKSB7XG4gIF9pbmhlcml0cyhJdGFsaWMsIF9Cb2xkKTtcblxuICBmdW5jdGlvbiBJdGFsaWMoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEl0YWxpYyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEl0YWxpYy5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEl0YWxpYykpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgcmV0dXJuIEl0YWxpYztcbn0oX2JvbGQyLmRlZmF1bHQpO1xuXG5JdGFsaWMuYmxvdE5hbWUgPSAnaXRhbGljJztcbkl0YWxpYy50YWdOYW1lID0gWydFTScsICdJJ107XG5cbmV4cG9ydHMuZGVmYXVsdCA9IEl0YWxpYztcblxuLyoqKi8gfSksXG4vKiA2OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfaW5saW5lID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcblxudmFyIF9pbmxpbmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5saW5lKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgU2NyaXB0ID0gZnVuY3Rpb24gKF9JbmxpbmUpIHtcbiAgX2luaGVyaXRzKFNjcmlwdCwgX0lubGluZSk7XG5cbiAgZnVuY3Rpb24gU2NyaXB0KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTY3JpcHQpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChTY3JpcHQuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihTY3JpcHQpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTY3JpcHQsIG51bGwsIFt7XG4gICAga2V5OiAnY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKHZhbHVlKSB7XG4gICAgICBpZiAodmFsdWUgPT09ICdzdXBlcicpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N1cCcpO1xuICAgICAgfSBlbHNlIGlmICh2YWx1ZSA9PT0gJ3N1YicpIHtcbiAgICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N1YicpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIF9nZXQoU2NyaXB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU2NyaXB0KSwgJ2NyZWF0ZScsIHRoaXMpLmNhbGwodGhpcywgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRzKGRvbU5vZGUpIHtcbiAgICAgIGlmIChkb21Ob2RlLnRhZ05hbWUgPT09ICdTVUInKSByZXR1cm4gJ3N1Yic7XG4gICAgICBpZiAoZG9tTm9kZS50YWdOYW1lID09PSAnU1VQJykgcmV0dXJuICdzdXBlcic7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTY3JpcHQ7XG59KF9pbmxpbmUyLmRlZmF1bHQpO1xuXG5TY3JpcHQuYmxvdE5hbWUgPSAnc2NyaXB0JztcblNjcmlwdC50YWdOYW1lID0gWydTVUInLCAnU1VQJ107XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFNjcmlwdDtcblxuLyoqKi8gfSksXG4vKiA3MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2lubGluZSA9IF9fd2VicGFja19yZXF1aXJlX18oNik7XG5cbnZhciBfaW5saW5lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lubGluZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFN0cmlrZSA9IGZ1bmN0aW9uIChfSW5saW5lKSB7XG4gIF9pbmhlcml0cyhTdHJpa2UsIF9JbmxpbmUpO1xuXG4gIGZ1bmN0aW9uIFN0cmlrZSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3RyaWtlKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoU3RyaWtlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU3RyaWtlKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICByZXR1cm4gU3RyaWtlO1xufShfaW5saW5lMi5kZWZhdWx0KTtcblxuU3RyaWtlLmJsb3ROYW1lID0gJ3N0cmlrZSc7XG5TdHJpa2UudGFnTmFtZSA9ICdTJztcblxuZXhwb3J0cy5kZWZhdWx0ID0gU3RyaWtlO1xuXG4vKioqLyB9KSxcbi8qIDcxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfaW5saW5lID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcblxudmFyIF9pbmxpbmUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5saW5lKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgVW5kZXJsaW5lID0gZnVuY3Rpb24gKF9JbmxpbmUpIHtcbiAgX2luaGVyaXRzKFVuZGVybGluZSwgX0lubGluZSk7XG5cbiAgZnVuY3Rpb24gVW5kZXJsaW5lKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBVbmRlcmxpbmUpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChVbmRlcmxpbmUuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihVbmRlcmxpbmUpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIHJldHVybiBVbmRlcmxpbmU7XG59KF9pbmxpbmUyLmRlZmF1bHQpO1xuXG5VbmRlcmxpbmUuYmxvdE5hbWUgPSAndW5kZXJsaW5lJztcblVuZGVybGluZS50YWdOYW1lID0gJ1UnO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBVbmRlcmxpbmU7XG5cbi8qKiovIH0pLFxuLyogNzIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG5cblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfbGluayA9IF9fd2VicGFja19yZXF1aXJlX18oMjcpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBBVFRSSUJVVEVTID0gWydhbHQnLCAnaGVpZ2h0JywgJ3dpZHRoJ107XG5cbnZhciBJbWFnZSA9IGZ1bmN0aW9uIChfUGFyY2htZW50JEVtYmVkKSB7XG4gIF9pbmhlcml0cyhJbWFnZSwgX1BhcmNobWVudCRFbWJlZCk7XG5cbiAgZnVuY3Rpb24gSW1hZ2UoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEltYWdlKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoSW1hZ2UuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJbWFnZSkpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEltYWdlLCBbe1xuICAgIGtleTogJ2Zvcm1hdCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGZvcm1hdChuYW1lLCB2YWx1ZSkge1xuICAgICAgaWYgKEFUVFJJQlVURVMuaW5kZXhPZihuYW1lKSA+IC0xKSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgIHRoaXMuZG9tTm9kZS5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuZG9tTm9kZS5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9nZXQoSW1hZ2UucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoSW1hZ2UucHJvdG90eXBlKSwgJ2Zvcm1hdCcsIHRoaXMpLmNhbGwodGhpcywgbmFtZSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKHZhbHVlKSB7XG4gICAgICB2YXIgbm9kZSA9IF9nZXQoSW1hZ2UuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihJbWFnZSksICdjcmVhdGUnLCB0aGlzKS5jYWxsKHRoaXMsIHZhbHVlKTtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIG5vZGUuc2V0QXR0cmlidXRlKCdzcmMnLCB0aGlzLnNhbml0aXplKHZhbHVlKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdmb3JtYXRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZm9ybWF0cyhkb21Ob2RlKSB7XG4gICAgICByZXR1cm4gQVRUUklCVVRFUy5yZWR1Y2UoZnVuY3Rpb24gKGZvcm1hdHMsIGF0dHJpYnV0ZSkge1xuICAgICAgICBpZiAoZG9tTm9kZS5oYXNBdHRyaWJ1dGUoYXR0cmlidXRlKSkge1xuICAgICAgICAgIGZvcm1hdHNbYXR0cmlidXRlXSA9IGRvbU5vZGUuZ2V0QXR0cmlidXRlKGF0dHJpYnV0ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvcm1hdHM7XG4gICAgICB9LCB7fSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAnbWF0Y2gnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBtYXRjaCh1cmwpIHtcbiAgICAgIHJldHVybiAoL1xcLihqcGU/Z3xnaWZ8cG5nKSQvLnRlc3QodXJsKSB8fCAvXmRhdGE6aW1hZ2VcXC8uKztiYXNlNjQvLnRlc3QodXJsKVxuICAgICAgKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzYW5pdGl6ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNhbml0aXplKHVybCkge1xuICAgICAgcmV0dXJuICgwLCBfbGluay5zYW5pdGl6ZSkodXJsLCBbJ2h0dHAnLCAnaHR0cHMnLCAnZGF0YSddKSA/IHVybCA6ICcvLzowJztcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd2YWx1ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKGRvbU5vZGUpIHtcbiAgICAgIHJldHVybiBkb21Ob2RlLmdldEF0dHJpYnV0ZSgnc3JjJyk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEltYWdlO1xufShfcGFyY2htZW50Mi5kZWZhdWx0LkVtYmVkKTtcblxuSW1hZ2UuYmxvdE5hbWUgPSAnaW1hZ2UnO1xuSW1hZ2UudGFnTmFtZSA9ICdJTUcnO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBJbWFnZTtcblxuLyoqKi8gfSksXG4vKiA3MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX2dldCA9IGZ1bmN0aW9uIGdldChvYmplY3QsIHByb3BlcnR5LCByZWNlaXZlcikgeyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgcmV0dXJuIGdldChwYXJlbnQsIHByb3BlcnR5LCByZWNlaXZlcik7IH0gfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gZGVzYykgeyByZXR1cm4gZGVzYy52YWx1ZTsgfSBlbHNlIHsgdmFyIGdldHRlciA9IGRlc2MuZ2V0OyBpZiAoZ2V0dGVyID09PSB1bmRlZmluZWQpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSByZXR1cm4gZ2V0dGVyLmNhbGwocmVjZWl2ZXIpOyB9IH07XG5cbnZhciBfYmxvY2sgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuXG52YXIgX2xpbmsgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI3KTtcblxudmFyIF9saW5rMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2xpbmspO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBBVFRSSUJVVEVTID0gWydoZWlnaHQnLCAnd2lkdGgnXTtcblxudmFyIFZpZGVvID0gZnVuY3Rpb24gKF9CbG9ja0VtYmVkKSB7XG4gIF9pbmhlcml0cyhWaWRlbywgX0Jsb2NrRW1iZWQpO1xuXG4gIGZ1bmN0aW9uIFZpZGVvKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBWaWRlbyk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFZpZGVvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVmlkZW8pKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhWaWRlbywgW3tcbiAgICBrZXk6ICdmb3JtYXQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXQobmFtZSwgdmFsdWUpIHtcbiAgICAgIGlmIChBVFRSSUJVVEVTLmluZGV4T2YobmFtZSkgPiAtMSkge1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICB0aGlzLmRvbU5vZGUuc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmRvbU5vZGUucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfZ2V0KFZpZGVvLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFZpZGVvLnByb3RvdHlwZSksICdmb3JtYXQnLCB0aGlzKS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1dLCBbe1xuICAgIGtleTogJ2NyZWF0ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNyZWF0ZSh2YWx1ZSkge1xuICAgICAgdmFyIG5vZGUgPSBfZ2V0KFZpZGVvLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoVmlkZW8pLCAnY3JlYXRlJywgdGhpcykuY2FsbCh0aGlzLCB2YWx1ZSk7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnZnJhbWVib3JkZXInLCAnMCcpO1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ2FsbG93ZnVsbHNjcmVlbicsIHRydWUpO1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3NyYycsIHRoaXMuc2FuaXRpemUodmFsdWUpKTtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2Zvcm1hdHMnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBmb3JtYXRzKGRvbU5vZGUpIHtcbiAgICAgIHJldHVybiBBVFRSSUJVVEVTLnJlZHVjZShmdW5jdGlvbiAoZm9ybWF0cywgYXR0cmlidXRlKSB7XG4gICAgICAgIGlmIChkb21Ob2RlLmhhc0F0dHJpYnV0ZShhdHRyaWJ1dGUpKSB7XG4gICAgICAgICAgZm9ybWF0c1thdHRyaWJ1dGVdID0gZG9tTm9kZS5nZXRBdHRyaWJ1dGUoYXR0cmlidXRlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZm9ybWF0cztcbiAgICAgIH0sIHt9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdzYW5pdGl6ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNhbml0aXplKHVybCkge1xuICAgICAgcmV0dXJuIF9saW5rMi5kZWZhdWx0LnNhbml0aXplKHVybCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAndmFsdWUnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZShkb21Ob2RlKSB7XG4gICAgICByZXR1cm4gZG9tTm9kZS5nZXRBdHRyaWJ1dGUoJ3NyYycpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBWaWRlbztcbn0oX2Jsb2NrLkJsb2NrRW1iZWQpO1xuXG5WaWRlby5ibG90TmFtZSA9ICd2aWRlbyc7XG5WaWRlby5jbGFzc05hbWUgPSAncWwtdmlkZW8nO1xuVmlkZW8udGFnTmFtZSA9ICdJRlJBTUUnO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBWaWRlbztcblxuLyoqKi8gfSksXG4vKiA3NCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5Gb3JtdWxhQmxvdCA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX2VtYmVkID0gX193ZWJwYWNrX3JlcXVpcmVfXygzNSk7XG5cbnZhciBfZW1iZWQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1iZWQpO1xuXG52YXIgX3F1aWxsID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KTtcblxudmFyIF9xdWlsbDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9xdWlsbCk7XG5cbnZhciBfbW9kdWxlID0gX193ZWJwYWNrX3JlcXVpcmVfXyg5KTtcblxudmFyIF9tb2R1bGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfbW9kdWxlKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgRm9ybXVsYUJsb3QgPSBmdW5jdGlvbiAoX0VtYmVkKSB7XG4gIF9pbmhlcml0cyhGb3JtdWxhQmxvdCwgX0VtYmVkKTtcblxuICBmdW5jdGlvbiBGb3JtdWxhQmxvdCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRm9ybXVsYUJsb3QpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChGb3JtdWxhQmxvdC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEZvcm11bGFCbG90KSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoRm9ybXVsYUJsb3QsIG51bGwsIFt7XG4gICAga2V5OiAnY3JlYXRlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlKHZhbHVlKSB7XG4gICAgICB2YXIgbm9kZSA9IF9nZXQoRm9ybXVsYUJsb3QuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihGb3JtdWxhQmxvdCksICdjcmVhdGUnLCB0aGlzKS5jYWxsKHRoaXMsIHZhbHVlKTtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHdpbmRvdy5rYXRleC5yZW5kZXIodmFsdWUsIG5vZGUsIHtcbiAgICAgICAgICB0aHJvd09uRXJyb3I6IGZhbHNlLFxuICAgICAgICAgIGVycm9yQ29sb3I6ICcjZjAwJ1xuICAgICAgICB9KTtcbiAgICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtdmFsdWUnLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICd2YWx1ZScsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKGRvbU5vZGUpIHtcbiAgICAgIHJldHVybiBkb21Ob2RlLmdldEF0dHJpYnV0ZSgnZGF0YS12YWx1ZScpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBGb3JtdWxhQmxvdDtcbn0oX2VtYmVkMi5kZWZhdWx0KTtcblxuRm9ybXVsYUJsb3QuYmxvdE5hbWUgPSAnZm9ybXVsYSc7XG5Gb3JtdWxhQmxvdC5jbGFzc05hbWUgPSAncWwtZm9ybXVsYSc7XG5Gb3JtdWxhQmxvdC50YWdOYW1lID0gJ1NQQU4nO1xuXG52YXIgRm9ybXVsYSA9IGZ1bmN0aW9uIChfTW9kdWxlKSB7XG4gIF9pbmhlcml0cyhGb3JtdWxhLCBfTW9kdWxlKTtcblxuICBfY3JlYXRlQ2xhc3MoRm9ybXVsYSwgbnVsbCwgW3tcbiAgICBrZXk6ICdyZWdpc3RlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlZ2lzdGVyKCkge1xuICAgICAgX3F1aWxsMi5kZWZhdWx0LnJlZ2lzdGVyKEZvcm11bGFCbG90LCB0cnVlKTtcbiAgICB9XG4gIH1dKTtcblxuICBmdW5jdGlvbiBGb3JtdWxhKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb3JtdWxhKTtcblxuICAgIHZhciBfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCAoRm9ybXVsYS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEZvcm11bGEpKS5jYWxsKHRoaXMpKTtcblxuICAgIGlmICh3aW5kb3cua2F0ZXggPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGb3JtdWxhIG1vZHVsZSByZXF1aXJlcyBLYVRlWC4nKTtcbiAgICB9XG4gICAgcmV0dXJuIF90aGlzMjtcbiAgfVxuXG4gIHJldHVybiBGb3JtdWxhO1xufShfbW9kdWxlMi5kZWZhdWx0KTtcblxuZXhwb3J0cy5Gb3JtdWxhQmxvdCA9IEZvcm11bGFCbG90O1xuZXhwb3J0cy5kZWZhdWx0ID0gRm9ybXVsYTtcblxuLyoqKi8gfSksXG4vKiA3NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcblxuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZXhwb3J0cy5Db2RlVG9rZW4gPSBleHBvcnRzLkNvZGVCbG9jayA9IHVuZGVmaW5lZDtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQob2JqZWN0LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpIHsgaWYgKG9iamVjdCA9PT0gbnVsbCkgb2JqZWN0ID0gRnVuY3Rpb24ucHJvdG90eXBlOyB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBwcm9wZXJ0eSk7IGlmIChkZXNjID09PSB1bmRlZmluZWQpIHsgdmFyIHBhcmVudCA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmplY3QpOyBpZiAocGFyZW50ID09PSBudWxsKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gZWxzZSB7IHJldHVybiBnZXQocGFyZW50LCBwcm9wZXJ0eSwgcmVjZWl2ZXIpOyB9IH0gZWxzZSBpZiAoXCJ2YWx1ZVwiIGluIGRlc2MpIHsgcmV0dXJuIGRlc2MudmFsdWU7IH0gZWxzZSB7IHZhciBnZXR0ZXIgPSBkZXNjLmdldDsgaWYgKGdldHRlciA9PT0gdW5kZWZpbmVkKSB7IHJldHVybiB1bmRlZmluZWQ7IH0gcmV0dXJuIGdldHRlci5jYWxsKHJlY2VpdmVyKTsgfSB9O1xuXG52YXIgX3BhcmNobWVudCA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbnZhciBfcGFyY2htZW50MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3BhcmNobWVudCk7XG5cbnZhciBfcXVpbGwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXG52YXIgX3F1aWxsMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3F1aWxsKTtcblxudmFyIF9tb2R1bGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpO1xuXG52YXIgX21vZHVsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tb2R1bGUpO1xuXG52YXIgX2NvZGUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEzKTtcblxudmFyIF9jb2RlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZGUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7IGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7IH0gfVxuXG5mdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7IGlmICghc2VsZikgeyB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7IH0gcmV0dXJuIGNhbGwgJiYgKHR5cGVvZiBjYWxsID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpID8gY2FsbCA6IHNlbGY7IH1cblxuZnVuY3Rpb24gX2luaGVyaXRzKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7IGlmICh0eXBlb2Ygc3VwZXJDbGFzcyAhPT0gXCJmdW5jdGlvblwiICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLCBub3QgXCIgKyB0eXBlb2Ygc3VwZXJDbGFzcyk7IH0gc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7IGNvbnN0cnVjdG9yOiB7IHZhbHVlOiBzdWJDbGFzcywgZW51bWVyYWJsZTogZmFsc2UsIHdyaXRhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSB9KTsgaWYgKHN1cGVyQ2xhc3MpIE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcykgOiBzdWJDbGFzcy5fX3Byb3RvX18gPSBzdXBlckNsYXNzOyB9XG5cbnZhciBTeW50YXhDb2RlQmxvY2sgPSBmdW5jdGlvbiAoX0NvZGVCbG9jaykge1xuICBfaW5oZXJpdHMoU3ludGF4Q29kZUJsb2NrLCBfQ29kZUJsb2NrKTtcblxuICBmdW5jdGlvbiBTeW50YXhDb2RlQmxvY2soKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN5bnRheENvZGVCbG9jayk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFN5bnRheENvZGVCbG9jay5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFN5bnRheENvZGVCbG9jaykpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFN5bnRheENvZGVCbG9jaywgW3tcbiAgICBrZXk6ICdyZXBsYWNlV2l0aCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlcGxhY2VXaXRoKGJsb2NrKSB7XG4gICAgICB0aGlzLmRvbU5vZGUudGV4dENvbnRlbnQgPSB0aGlzLmRvbU5vZGUudGV4dENvbnRlbnQ7XG4gICAgICB0aGlzLmF0dGFjaCgpO1xuICAgICAgX2dldChTeW50YXhDb2RlQmxvY2sucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoU3ludGF4Q29kZUJsb2NrLnByb3RvdHlwZSksICdyZXBsYWNlV2l0aCcsIHRoaXMpLmNhbGwodGhpcywgYmxvY2spO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2hpZ2hsaWdodCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhpZ2hsaWdodChfaGlnaGxpZ2h0KSB7XG4gICAgICB2YXIgdGV4dCA9IHRoaXMuZG9tTm9kZS50ZXh0Q29udGVudDtcbiAgICAgIGlmICh0aGlzLmNhY2hlZFRleHQgIT09IHRleHQpIHtcbiAgICAgICAgaWYgKHRleHQudHJpbSgpLmxlbmd0aCA+IDAgfHwgdGhpcy5jYWNoZWRUZXh0ID09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLmRvbU5vZGUuaW5uZXJIVE1MID0gX2hpZ2hsaWdodCh0ZXh0KTtcbiAgICAgICAgICB0aGlzLmRvbU5vZGUubm9ybWFsaXplKCk7XG4gICAgICAgICAgdGhpcy5hdHRhY2goKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNhY2hlZFRleHQgPSB0ZXh0O1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTeW50YXhDb2RlQmxvY2s7XG59KF9jb2RlMi5kZWZhdWx0KTtcblxuU3ludGF4Q29kZUJsb2NrLmNsYXNzTmFtZSA9ICdxbC1zeW50YXgnO1xuXG52YXIgQ29kZVRva2VuID0gbmV3IF9wYXJjaG1lbnQyLmRlZmF1bHQuQXR0cmlidXRvci5DbGFzcygndG9rZW4nLCAnaGxqcycsIHtcbiAgc2NvcGU6IF9wYXJjaG1lbnQyLmRlZmF1bHQuU2NvcGUuSU5MSU5FXG59KTtcblxudmFyIFN5bnRheCA9IGZ1bmN0aW9uIChfTW9kdWxlKSB7XG4gIF9pbmhlcml0cyhTeW50YXgsIF9Nb2R1bGUpO1xuXG4gIF9jcmVhdGVDbGFzcyhTeW50YXgsIG51bGwsIFt7XG4gICAga2V5OiAncmVnaXN0ZXInLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3RlcigpIHtcbiAgICAgIF9xdWlsbDIuZGVmYXVsdC5yZWdpc3RlcihDb2RlVG9rZW4sIHRydWUpO1xuICAgICAgX3F1aWxsMi5kZWZhdWx0LnJlZ2lzdGVyKFN5bnRheENvZGVCbG9jaywgdHJ1ZSk7XG4gICAgfVxuICB9XSk7XG5cbiAgZnVuY3Rpb24gU3ludGF4KHF1aWxsLCBvcHRpb25zKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN5bnRheCk7XG5cbiAgICB2YXIgX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKFN5bnRheC5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKFN5bnRheCkpLmNhbGwodGhpcywgcXVpbGwsIG9wdGlvbnMpKTtcblxuICAgIGlmICh0eXBlb2YgX3RoaXMyLm9wdGlvbnMuaGlnaGxpZ2h0ICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N5bnRheCBtb2R1bGUgcmVxdWlyZXMgaGlnaGxpZ2h0LmpzLiBQbGVhc2UgaW5jbHVkZSB0aGUgbGlicmFyeSBvbiB0aGUgcGFnZSBiZWZvcmUgUXVpbGwuJyk7XG4gICAgfVxuICAgIHZhciB0aW1lciA9IG51bGw7XG4gICAgX3RoaXMyLnF1aWxsLm9uKF9xdWlsbDIuZGVmYXVsdC5ldmVudHMuU0NST0xMX09QVElNSVpFLCBmdW5jdGlvbiAoKSB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMyLmhpZ2hsaWdodCgpO1xuICAgICAgICB0aW1lciA9IG51bGw7XG4gICAgICB9LCBfdGhpczIub3B0aW9ucy5pbnRlcnZhbCk7XG4gICAgfSk7XG4gICAgX3RoaXMyLmhpZ2hsaWdodCgpO1xuICAgIHJldHVybiBfdGhpczI7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoU3ludGF4LCBbe1xuICAgIGtleTogJ2hpZ2hsaWdodCcsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhpZ2hsaWdodCgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5xdWlsbC5zZWxlY3Rpb24uY29tcG9zaW5nKSByZXR1cm47XG4gICAgICB0aGlzLnF1aWxsLnVwZGF0ZShfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5VU0VSKTtcbiAgICAgIHZhciByYW5nZSA9IHRoaXMucXVpbGwuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICB0aGlzLnF1aWxsLnNjcm9sbC5kZXNjZW5kYW50cyhTeW50YXhDb2RlQmxvY2spLmZvckVhY2goZnVuY3Rpb24gKGNvZGUpIHtcbiAgICAgICAgY29kZS5oaWdobGlnaHQoX3RoaXMzLm9wdGlvbnMuaGlnaGxpZ2h0KTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5xdWlsbC51cGRhdGUoX3F1aWxsMi5kZWZhdWx0LnNvdXJjZXMuU0lMRU5UKTtcbiAgICAgIGlmIChyYW5nZSAhPSBudWxsKSB7XG4gICAgICAgIHRoaXMucXVpbGwuc2V0U2VsZWN0aW9uKHJhbmdlLCBfcXVpbGwyLmRlZmF1bHQuc291cmNlcy5TSUxFTlQpO1xuICAgICAgfVxuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTeW50YXg7XG59KF9tb2R1bGUyLmRlZmF1bHQpO1xuXG5TeW50YXguREVGQVVMVFMgPSB7XG4gIGhpZ2hsaWdodDogZnVuY3Rpb24gKCkge1xuICAgIGlmICh3aW5kb3cuaGxqcyA9PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRleHQpIHtcbiAgICAgIHZhciByZXN1bHQgPSB3aW5kb3cuaGxqcy5oaWdobGlnaHRBdXRvKHRleHQpO1xuICAgICAgcmV0dXJuIHJlc3VsdC52YWx1ZTtcbiAgICB9O1xuICB9KCksXG4gIGludGVydmFsOiAxMDAwXG59O1xuXG5leHBvcnRzLkNvZGVCbG9jayA9IFN5bnRheENvZGVCbG9jaztcbmV4cG9ydHMuQ29kZVRva2VuID0gQ29kZVRva2VuO1xuZXhwb3J0cy5kZWZhdWx0ID0gU3ludGF4O1xuXG4vKioqLyB9KSxcbi8qIDc2ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0zIHgyPTE1IHkxPTkgeTI9OT48L2xpbmU+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0zIHgyPTEzIHkxPTE0IHkyPTE0PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTMgeDI9OSB5MT00IHkyPTQ+PC9saW5lPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA3NyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTUgeDI9MyB5MT05IHkyPTk+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTQgeDI9NCB5MT0xNCB5Mj0xND48L2xpbmU+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0xMiB4Mj02IHkxPTQgeTI9ND48L2xpbmU+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDc4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0xNSB4Mj0zIHkxPTkgeTI9OT48L2xpbmU+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0xNSB4Mj01IHkxPTE0IHkyPTE0PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTE1IHgyPTkgeTE9NCB5Mj00PjwvbGluZT4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogNzkgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTE1IHgyPTMgeTE9OSB5Mj05PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTE1IHgyPTMgeTE9MTQgeTI9MTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTUgeDI9MyB5MT00IHkyPTQ+PC9saW5lPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4MCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8ZyBjbGFzcz1cXFwicWwtZmlsbCBxbC1jb2xvci1sYWJlbFxcXCI+IDxwb2x5Z29uIHBvaW50cz1cXFwiNiA2Ljg2OCA2IDYgNSA2IDUgNyA1Ljk0MiA3IDYgNi44NjhcXFwiPjwvcG9seWdvbj4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTQgeT00PjwvcmVjdD4gPHBvbHlnb24gcG9pbnRzPVxcXCI2LjgxNyA1IDYgNSA2IDYgNi4zOCA2IDYuODE3IDVcXFwiPjwvcG9seWdvbj4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTIgeT02PjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTMgeT01PjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTQgeT03PjwvcmVjdD4gPHBvbHlnb24gcG9pbnRzPVxcXCI0IDExLjQzOSA0IDExIDMgMTEgMyAxMiAzLjc1NSAxMiA0IDExLjQzOVxcXCI+PC9wb2x5Z29uPiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MiB5PTEyPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTIgeT05PjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTIgeT0xNT48L3JlY3Q+IDxwb2x5Z29uIHBvaW50cz1cXFwiNC42MyAxMCA0IDEwIDQgMTEgNC4xOTIgMTEgNC42MyAxMFxcXCI+PC9wb2x5Z29uPiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MyB5PTg+PC9yZWN0PiA8cGF0aCBkPU0xMC44MzIsNC4yTDExLDQuNTgyVjRIMTAuNzA4QTEuOTQ4LDEuOTQ4LDAsMCwxLDEwLjgzMiw0LjJaPjwvcGF0aD4gPHBhdGggZD1NNyw0LjU4Mkw3LjE2OCw0LjJBMS45MjksMS45MjksMCwwLDEsNy4yOTIsNEg3VjQuNTgyWj48L3BhdGg+IDxwYXRoIGQ9TTgsMTNINy42ODNsLTAuMzUxLjhhMS45MzMsMS45MzMsMCwwLDEtLjEyNC4ySDhWMTNaPjwvcGF0aD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTEyIHk9Mj48L3JlY3Q+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD0xMSB5PTM+PC9yZWN0PiA8cGF0aCBkPU05LDNIOFYzLjI4MkExLjk4NSwxLjk4NSwwLDAsMSw5LDNaPjwvcGF0aD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTIgeT0zPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTYgeT0yPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTMgeT0yPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTUgeT0zPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTkgeT0yPjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTE1IHk9MTQ+PC9yZWN0PiA8cG9seWdvbiBwb2ludHM9XFxcIjEzLjQ0NyAxMC4xNzQgMTMuNDY5IDEwLjIyNSAxMy40NzIgMTAuMjMyIDEzLjgwOCAxMSAxNCAxMSAxNCAxMCAxMy4zNyAxMCAxMy40NDcgMTAuMTc0XFxcIj48L3BvbHlnb24+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD0xMyB5PTc+PC9yZWN0PiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MTUgeT01PjwvcmVjdD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTE0IHk9Nj48L3JlY3Q+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD0xNSB5PTg+PC9yZWN0PiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MTQgeT05PjwvcmVjdD4gPHBhdGggZD1NMy43NzUsMTRIM3YxSDRWMTQuMzE0QTEuOTcsMS45NywwLDAsMSwzLjc3NSwxNFo+PC9wYXRoPiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MTQgeT0zPjwvcmVjdD4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMiA2Ljg2OCAxMiA2IDExLjYyIDYgMTIgNi44NjhcXFwiPjwvcG9seWdvbj4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTE1IHk9Mj48L3JlY3Q+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD0xMiB5PTU+PC9yZWN0PiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MTMgeT00PjwvcmVjdD4gPHBvbHlnb24gcG9pbnRzPVxcXCIxMi45MzMgOSAxMyA5IDEzIDggMTIuNDk1IDggMTIuOTMzIDlcXFwiPjwvcG9seWdvbj4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTkgeT0xND48L3JlY3Q+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD04IHk9MTU+PC9yZWN0PiA8cGF0aCBkPU02LDE0LjkyNlYxNUg3VjE0LjMxNkExLjk5MywxLjk5MywwLDAsMSw2LDE0LjkyNlo+PC9wYXRoPiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9NSB5PTE1PjwvcmVjdD4gPHBhdGggZD1NMTAuNjY4LDEzLjhMMTAuMzE3LDEzSDEwdjFoMC43OTJBMS45NDcsMS45NDcsMCwwLDEsMTAuNjY4LDEzLjhaPjwvcGF0aD4gPHJlY3QgaGVpZ2h0PTEgd2lkdGg9MSB4PTExIHk9MTU+PC9yZWN0PiA8cGF0aCBkPU0xNC4zMzIsMTIuMmExLjk5LDEuOTksMCwwLDEsLjE2Ni44SDE1VjEySDE0LjI0NVo+PC9wYXRoPiA8cmVjdCBoZWlnaHQ9MSB3aWR0aD0xIHg9MTQgeT0xNT48L3JlY3Q+IDxyZWN0IGhlaWdodD0xIHdpZHRoPTEgeD0xNSB5PTExPjwvcmVjdD4gPC9nPiA8cG9seWxpbmUgY2xhc3M9cWwtc3Ryb2tlIHBvaW50cz1cXFwiNS41IDEzIDkgNSAxMi41IDEzXFxcIj48L3BvbHlsaW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTEuNjMgeDI9Ni4zOCB5MT0xMSB5Mj0xMT48L2xpbmU+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDgxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxyZWN0IGNsYXNzPVxcXCJxbC1maWxsIHFsLXN0cm9rZVxcXCIgaGVpZ2h0PTMgd2lkdGg9MyB4PTQgeT01PjwvcmVjdD4gPHJlY3QgY2xhc3M9XFxcInFsLWZpbGwgcWwtc3Ryb2tlXFxcIiBoZWlnaHQ9MyB3aWR0aD0zIHg9MTEgeT01PjwvcmVjdD4gPHBhdGggY2xhc3M9XFxcInFsLWV2ZW4gcWwtZmlsbCBxbC1zdHJva2VcXFwiIGQ9TTcsOGMwLDQuMDMxLTMsNS0zLDU+PC9wYXRoPiA8cGF0aCBjbGFzcz1cXFwicWwtZXZlbiBxbC1maWxsIHFsLXN0cm9rZVxcXCIgZD1NMTQsOGMwLDQuMDMxLTMsNS0zLDU+PC9wYXRoPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8cGF0aCBjbGFzcz1xbC1zdHJva2UgZD1NNSw0SDkuNUEyLjUsMi41LDAsMCwxLDEyLDYuNXYwQTIuNSwyLjUsMCwwLDEsOS41LDlINUEwLDAsMCwwLDEsNSw5VjRBMCwwLDAsMCwxLDUsNFo+PC9wYXRoPiA8cGF0aCBjbGFzcz1xbC1zdHJva2UgZD1NNSw5aDUuNUEyLjUsMi41LDAsMCwxLDEzLDExLjV2MEEyLjUsMi41LDAsMCwxLDEwLjUsMTRINWEwLDAsMCwwLDEsMCwwVjlBMCwwLDAsMCwxLDUsOVo+PC9wYXRoPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyBjbGFzcz1cXFwiXFxcIiB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9NSB4Mj0xMyB5MT0zIHkyPTM+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9NiB4Mj05LjM1IHkxPTEyIHkyPTM+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTEgeDI9MTUgeTE9MTEgeTI9MTU+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTUgeDI9MTEgeTE9MTEgeTI9MTU+PC9saW5lPiA8cmVjdCBjbGFzcz1xbC1maWxsIGhlaWdodD0xIHJ4PTAuNSByeT0wLjUgd2lkdGg9NyB4PTIgeT0xND48L3JlY3Q+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDg0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPVxcXCJxbC1jb2xvci1sYWJlbCBxbC1zdHJva2UgcWwtdHJhbnNwYXJlbnRcXFwiIHgxPTMgeDI9MTUgeTE9MTUgeTI9MTU+PC9saW5lPiA8cG9seWxpbmUgY2xhc3M9cWwtc3Ryb2tlIHBvaW50cz1cXFwiNS41IDExIDkgMyAxMi41IDExXFxcIj48L3BvbHlsaW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MTEuNjMgeDI9Ni4zOCB5MT05IHkyPTk+PC9saW5lPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4NSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8cG9seWdvbiBjbGFzcz1cXFwicWwtc3Ryb2tlIHFsLWZpbGxcXFwiIHBvaW50cz1cXFwiMyAxMSA1IDkgMyA3IDMgMTFcXFwiPjwvcG9seWdvbj4gPGxpbmUgY2xhc3M9XFxcInFsLXN0cm9rZSBxbC1maWxsXFxcIiB4MT0xNSB4Mj0xMSB5MT00IHkyPTQ+PC9saW5lPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTExLDNhMywzLDAsMCwwLDAsNmgxVjNIMTFaPjwvcGF0aD4gPHJlY3QgY2xhc3M9cWwtZmlsbCBoZWlnaHQ9MTEgd2lkdGg9MSB4PTExIHk9ND48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTExIHdpZHRoPTEgeD0xMyB5PTQ+PC9yZWN0PiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4NiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8cG9seWdvbiBjbGFzcz1cXFwicWwtc3Ryb2tlIHFsLWZpbGxcXFwiIHBvaW50cz1cXFwiMTUgMTIgMTMgMTAgMTUgOCAxNSAxMlxcXCI+PC9wb2x5Z29uPiA8bGluZSBjbGFzcz1cXFwicWwtc3Ryb2tlIHFsLWZpbGxcXFwiIHgxPTkgeDI9NSB5MT00IHkyPTQ+PC9saW5lPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTUsM0EzLDMsMCwwLDAsNSw5SDZWM0g1Wj48L3BhdGg+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTExIHdpZHRoPTEgeD01IHk9ND48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTExIHdpZHRoPTEgeD03IHk9ND48L3JlY3Q+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDg3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NMTQsMTZINGExLDEsMCwwLDEsMC0ySDE0QTEsMSwwLDAsMSwxNCwxNlogLz4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xNCw0SDRBMSwxLDAsMCwxLDQsMkgxNEExLDEsMCwwLDEsMTQsNFogLz4gPHJlY3QgY2xhc3M9cWwtZmlsbCB4PTMgeT02IHdpZHRoPTEyIGhlaWdodD02IHJ4PTEgcnk9MSAvPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA4OCAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTEzLDE2SDVhMSwxLDAsMCwxLDAtMmg4QTEsMSwwLDAsMSwxMywxNlogLz4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xMyw0SDVBMSwxLDAsMCwxLDUsMmg4QTEsMSwwLDAsMSwxMyw0WiAvPiA8cmVjdCBjbGFzcz1xbC1maWxsIHg9MiB5PTYgd2lkdGg9MTQgaGVpZ2h0PTYgcng9MSByeT0xIC8+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDg5ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NMTUsOEgxM2ExLDEsMCwwLDEsMC0yaDJBMSwxLDAsMCwxLDE1LDhaIC8+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NMTUsMTJIMTNhMSwxLDAsMCwxLDAtMmgyQTEsMSwwLDAsMSwxNSwxMlogLz4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xNSwxNkg1YTEsMSwwLDAsMSwwLTJIMTVBMSwxLDAsMCwxLDE1LDE2WiAvPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTE1LDRINUExLDEsMCwwLDEsNSwySDE1QTEsMSwwLDAsMSwxNSw0WiAvPiA8cmVjdCBjbGFzcz1xbC1maWxsIHg9MiB5PTYgd2lkdGg9OCBoZWlnaHQ9NiByeD0xIHJ5PTEgLz4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogOTAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU01LDhIM0ExLDEsMCwwLDEsMyw2SDVBMSwxLDAsMCwxLDUsOFogLz4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU01LDEySDNhMSwxLDAsMCwxLDAtMkg1QTEsMSwwLDAsMSw1LDEyWiAvPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTEzLDE2SDNhMSwxLDAsMCwxLDAtMkgxM0ExLDEsMCwwLDEsMTMsMTZaIC8+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NMTMsNEgzQTEsMSwwLDAsMSwzLDJIMTNBMSwxLDAsMCwxLDEzLDRaIC8+IDxyZWN0IGNsYXNzPXFsLWZpbGwgeD04IHk9NiB3aWR0aD04IGhlaWdodD02IHJ4PTEgcnk9MSB0cmFuc2Zvcm09XFxcInRyYW5zbGF0ZSgyNCAxOCkgcm90YXRlKC0xODApXFxcIi8+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDkxICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NMTEuNzU5LDIuNDgyYTIuNTYxLDIuNTYxLDAsMCwwLTMuNTMuNjA3QTcuNjU2LDcuNjU2LDAsMCwwLDYuOCw2LjJDNi4xMDksOS4xODgsNS4yNzUsMTQuNjc3LDQuMTUsMTQuOTI3YTEuNTQ1LDEuNTQ1LDAsMCwwLTEuMy0uOTMzQTAuOTIyLDAuOTIyLDAsMCwwLDIsMTUuMDM2UzEuOTU0LDE2LDQuMTE5LDE2czMuMDkxLTIuNjkxLDMuNy01LjU1M2MwLjE3Ny0uODI2LjM2LTEuNzI2LDAuNTU0LTIuNkw4Ljc3NSw2LjJjMC4zODEtMS40MjEuODA3LTIuNTIxLDEuMzA2LTIuNjc2YTEuMDE0LDEuMDE0LDAsMCwwLDEuMDIuNTZBMC45NjYsMC45NjYsMCwwLDAsMTEuNzU5LDIuNDgyWj48L3BhdGg+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEuNiByeD0wLjggcnk9MC44IHdpZHRoPTUgeD01LjE1IHk9Ni4yPjwvcmVjdD4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xMy42NjMsMTIuMDI3YTEuNjYyLDEuNjYyLDAsMCwxLC4yNjYtMC4yNzZxMC4xOTMsMC4wNjkuNDU2LDAuMTM4YTIuMSwyLjEsMCwwLDAsLjUzNS4wNjksMS4wNzUsMS4wNzUsMCwwLDAsLjc2Ny0wLjMsMS4wNDQsMS4wNDQsMCwwLDAsLjMxNC0wLjgsMC44NCwwLjg0LDAsMCwwLS4yMzgtMC42MTksMC44LDAuOCwwLDAsMC0uNTk0LTAuMjM5LDEuMTU0LDEuMTU0LDAsMCwwLS43ODEuMyw0LjYwNyw0LjYwNywwLDAsMC0uNzgxLDFxLTAuMDkxLjE1LS4yMTgsMC4zNDZsLTAuMjQ2LjM4Yy0wLjA2OC0uMjg4LTAuMTM3LTAuNTgyLTAuMjEyLTAuODg1LTAuNDU5LTEuODQ3LTIuNDk0LS45ODQtMi45NDEtMC44LTAuNDgyLjItLjM1MywwLjY0Ny0wLjA5NCwwLjUyOWEwLjg2OSwwLjg2OSwwLDAsMSwxLjI4MS41ODVjMC4yMTcsMC43NTEuMzc3LDEuNDM2LDAuNTI3LDIuMDM4YTUuNjg4LDUuNjg4LDAsMCwxLS4zNjIuNDY3LDIuNjksMi42OSwwLDAsMS0uMjY0LjI3MXEtMC4yMjEtLjA4LTAuNDcxLTAuMTQ3YTIuMDI5LDIuMDI5LDAsMCwwLS41MjItMC4wNjYsMS4wNzksMS4wNzksMCwwLDAtLjc2OC4zQTEuMDU4LDEuMDU4LDAsMCwwLDksMTUuMTMxYTAuODIsMC44MiwwLDAsMCwuODMyLjg1MiwxLjEzNCwxLjEzNCwwLDAsMCwuNzg3LTAuMyw1LjExLDUuMTEsMCwwLDAsLjc3Ni0wLjk5M3EwLjE0MS0uMjE5LjIxNS0wLjM0YzAuMDQ2LS4wNzYuMTIyLTAuMTk0LDAuMjIzLTAuMzQ2YTIuNzg2LDIuNzg2LDAsMCwwLC45MTgsMS43MjYsMi41ODIsMi41ODIsMCwwLDAsMi4zNzYtLjE4NWMwLjMxNy0uMTgxLjIxMi0wLjU2NSwwLTAuNDk0QTAuODA3LDAuODA3LDAsMCwxLDE0LjE3NiwxNWE1LjE1OSw1LjE1OSwwLDAsMS0uOTEzLTIuNDQ2bDAsMFExMy40ODcsMTIuMjQsMTMuNjYzLDEyLjAyN1o+PC9wYXRoPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA5MiAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Qm94PVxcXCIwIDAgMTggMThcXFwiPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTEwLDRWMTRhMSwxLDAsMCwxLTIsMFYxMEgzdjRhMSwxLDAsMCwxLTIsMFY0QTEsMSwwLDAsMSwzLDRWOEg4VjRhMSwxLDAsMCwxLDIsMFptNi4wNjc4Nyw5LjIwOUgxNC45ODk3NVY3LjU5ODYzYS41NDA4NS41NDA4NSwwLDAsMC0uNjA1LS42MDU0N2gtLjYyNzQ0YTEuMDExMTksMS4wMTExOSwwLDAsMC0uNzQ4LjI5Njg4TDExLjY0NSw4LjU2NjQxYS41NDM1LjU0MzUsMCwwLDAtLjAyMi44NTg0bC4yODYxMy4zMDc2MmEuNTM4NjEuNTM4NjEsMCwwLDAsLjg0NzE3LjAzMzJsLjA5OTEyLS4wODc4OWExLjIxMzcsMS4yMTM3LDAsMCwwLC4yNDE3LS4zNTI1NGguMDIyNDZzLS4wMTEyMy4zMDg1OS0uMDExMjMuNjA1NDdWMTMuMjA5SDEyLjA0MWEuNTQwODUuNTQwODUsMCwwLDAtLjYwNS42MDU0N3YuNDM5NDVhLjU0MDg1LjU0MDg1LDAsMCwwLC42MDUuNjA1NDdoNC4wMjY4NmEuNTQwODUuNTQwODUsMCwwLDAsLjYwNS0uNjA1NDd2LS40Mzk0NUEuNTQwODUuNTQwODUsMCwwLDAsMTYuMDY3ODcsMTMuMjA5WiAvPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA5MyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Qm94PVxcXCIwIDAgMTggMThcXFwiPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTE2LjczOTc1LDEzLjgxNDQ1di40Mzk0NWEuNTQwODUuNTQwODUsMCwwLDEtLjYwNS42MDU0N0gxMS44NTVhLjU4MzkyLjU4MzkyLDAsMCwxLS42NDg5My0uNjA1NDdWMTQuMDEyN2MwLTIuOTA1MjcsMy4zOTk0MS0zLjQyMTg3LDMuMzk5NDEtNC41NTQ2OWEuNzc2NzUuNzc2NzUsMCwwLDAtLjg0NzE3LS43ODEyNSwxLjE3Njg0LDEuMTc2ODQsMCwwLDAtLjgzNTk0LjM4NDc3Yy0uMjc0OS4yNjM2Ny0uNTYxLjM3NC0uODU3OTEuMTMxODRsLS40MjkyLS4zNDA4MmMtLjMwODExLS4yNDIxOS0uMzg1MjUtLjUxNzU4LS4xNTQzLS44MTQ0NWEyLjk3MTU1LDIuOTcxNTUsMCwwLDEsMi40NTM2MS0xLjE3Njc2LDIuNDUzOTMsMi40NTM5MywwLDAsMSwyLjY4NDA4LDIuNDA5MThjMCwyLjQ1MzEyLTMuMTc5MiwyLjkyNjc2LTMuMjc4MzIsMy45Mzg0OGgyLjc5NDQzQS41NDA4NS41NDA4NSwwLDAsMSwxNi43Mzk3NSwxMy44MTQ0NVpNOSwzQS45OTk3NC45OTk3NCwwLDAsMCw4LDRWOEgzVjRBMSwxLDAsMCwwLDEsNFYxNGExLDEsMCwwLDAsMiwwVjEwSDh2NGExLDEsMCwwLDAsMiwwVjRBLjk5OTc0Ljk5OTc0LDAsMCwwLDksM1ogLz4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogOTQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTcgeDI9MTMgeTE9NCB5Mj00PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTUgeDI9MTEgeTE9MTQgeTI9MTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9OCB4Mj0xMCB5MT0xNCB5Mj00PjwvbGluZT4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogOTUgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHJlY3QgY2xhc3M9cWwtc3Ryb2tlIGhlaWdodD0xMCB3aWR0aD0xMiB4PTMgeT00PjwvcmVjdD4gPGNpcmNsZSBjbGFzcz1xbC1maWxsIGN4PTYgY3k9NyByPTE+PC9jaXJjbGU+IDxwb2x5bGluZSBjbGFzcz1cXFwicWwtZXZlbiBxbC1maWxsXFxcIiBwb2ludHM9XFxcIjUgMTIgNSAxMSA3IDkgOCAxMCAxMSA3IDEzIDkgMTMgMTIgNSAxMlxcXCI+PC9wb2x5bGluZT4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogOTYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTMgeDI9MTUgeTE9MTQgeTI9MTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MyB4Mj0xNSB5MT00IHkyPTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9OSB4Mj0xNSB5MT05IHkyPTk+PC9saW5lPiA8cG9seWxpbmUgY2xhc3M9XFxcInFsLWZpbGwgcWwtc3Ryb2tlXFxcIiBwb2ludHM9XFxcIjMgNyAzIDExIDUgOSAzIDdcXFwiPjwvcG9seWxpbmU+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDk3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0zIHgyPTE1IHkxPTE0IHkyPTE0PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTMgeDI9MTUgeTE9NCB5Mj00PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTkgeDI9MTUgeTE9OSB5Mj05PjwvbGluZT4gPHBvbHlsaW5lIGNsYXNzPXFsLXN0cm9rZSBwb2ludHM9XFxcIjUgNyA1IDExIDMgOSA1IDdcXFwiPjwvcG9seWxpbmU+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDk4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT03IHgyPTExIHkxPTcgeTI9MTE+PC9saW5lPiA8cGF0aCBjbGFzcz1cXFwicWwtZXZlbiBxbC1zdHJva2VcXFwiIGQ9TTguOSw0LjU3N2EzLjQ3NiwzLjQ3NiwwLDAsMSwuMzYsNC42NzlBMy40NzYsMy40NzYsMCwwLDEsNC41NzcsOC45QzMuMTg1LDcuNSwyLjAzNSw2LjQsNC4yMTcsNC4yMTdTNy41LDMuMTg1LDguOSw0LjU3N1o+PC9wYXRoPiA8cGF0aCBjbGFzcz1cXFwicWwtZXZlbiBxbC1zdHJva2VcXFwiIGQ9TTEzLjQyMyw5LjFhMy40NzYsMy40NzYsMCwwLDAtNC42NzktLjM2LDMuNDc2LDMuNDc2LDAsMCwwLC4zNiw0LjY3OWMxLjM5MiwxLjM5MiwyLjUsMi41NDIsNC42NzkuMzZTMTQuODE1LDEwLjUsMTMuNDIzLDkuMVo+PC9wYXRoPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiA5OSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9NyB4Mj0xNSB5MT00IHkyPTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9NyB4Mj0xNSB5MT05IHkyPTk+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9NyB4Mj0xNSB5MT0xNCB5Mj0xND48L2xpbmU+IDxsaW5lIGNsYXNzPVxcXCJxbC1zdHJva2UgcWwtdGhpblxcXCIgeDE9Mi41IHgyPTQuNSB5MT01LjUgeTI9NS41PjwvbGluZT4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0zLjUsNkEwLjUsMC41LDAsMCwxLDMsNS41VjMuMDg1bC0wLjI3Ni4xMzhBMC41LDAuNSwwLDAsMSwyLjA1MywzYy0wLjEyNC0uMjQ3LTAuMDIzLTAuMzI0LjIyNC0wLjQ0N2wxLS41QTAuNSwwLjUsMCwwLDEsNCwyLjV2M0EwLjUsMC41LDAsMCwxLDMuNSw2Wj48L3BhdGg+IDxwYXRoIGNsYXNzPVxcXCJxbC1zdHJva2UgcWwtdGhpblxcXCIgZD1NNC41LDEwLjVoLTJjMC0uMjM0LDEuODUtMS4wNzYsMS44NS0yLjIzNEEwLjk1OSwwLjk1OSwwLDAsMCwyLjUsOC4xNTY+PC9wYXRoPiA8cGF0aCBjbGFzcz1cXFwicWwtc3Ryb2tlIHFsLXRoaW5cXFwiIGQ9TTIuNSwxNC44NDZhMC45NTksMC45NTksMCwwLDAsMS44NS0uMTA5QTAuNywwLjcsMCwwLDAsMy43NSwxNGEwLjY4OCwwLjY4OCwwLDAsMCwuNi0wLjczNiwwLjk1OSwwLjk1OSwwLDAsMC0xLjg1LS4xMDk+PC9wYXRoPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiAxMDAgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTYgeDI9MTUgeTE9NCB5Mj00PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTYgeDI9MTUgeTE9OSB5Mj05PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTYgeDI9MTUgeTE9MTQgeTI9MTQ+PC9saW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9MyB4Mj0zIHkxPTQgeTI9ND48L2xpbmU+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT0zIHgyPTMgeTE9OSB5Mj05PjwvbGluZT4gPGxpbmUgY2xhc3M9cWwtc3Ryb2tlIHgxPTMgeDI9MyB5MT0xNCB5Mj0xND48L2xpbmU+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDEwMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyBjbGFzcz1cXFwiXFxcIiB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9OSB4Mj0xNSB5MT00IHkyPTQ+PC9saW5lPiA8cG9seWxpbmUgY2xhc3M9cWwtc3Ryb2tlIHBvaW50cz1cXFwiMyA0IDQgNSA2IDNcXFwiPjwvcG9seWxpbmU+IDxsaW5lIGNsYXNzPXFsLXN0cm9rZSB4MT05IHgyPTE1IHkxPTE0IHkyPTE0PjwvbGluZT4gPHBvbHlsaW5lIGNsYXNzPXFsLXN0cm9rZSBwb2ludHM9XFxcIjMgMTQgNCAxNSA2IDEzXFxcIj48L3BvbHlsaW5lPiA8bGluZSBjbGFzcz1xbC1zdHJva2UgeDE9OSB4Mj0xNSB5MT05IHkyPTk+PC9saW5lPiA8cG9seWxpbmUgY2xhc3M9cWwtc3Ryb2tlIHBvaW50cz1cXFwiMyA5IDQgMTAgNiA4XFxcIj48L3BvbHlsaW5lPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiAxMDIgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xNS41LDE1SDEzLjg2MWEzLjg1OCwzLjg1OCwwLDAsMCwxLjkxNC0yLjk3NSwxLjgsMS44LDAsMCwwLTEuNi0xLjc1MUExLjkyMSwxLjkyMSwwLDAsMCwxMi4wMjEsMTEuN2EwLjUwMDEzLDAuNTAwMTMsMCwxLDAsLjk1Ny4yOTFoMGEwLjkxNCwwLjkxNCwwLDAsMSwxLjA1My0uNzI1LDAuODEsMC44MSwwLDAsMSwuNzQ0Ljc2MmMwLDEuMDc2LTEuMTY5NzEsMS44Njk4Mi0xLjkzOTcxLDIuNDMwODJBMS40NTYzOSwxLjQ1NjM5LDAsMCwwLDEyLDE1LjVhMC41LDAuNSwwLDAsMCwuNS41aDNBMC41LDAuNSwwLDAsMCwxNS41LDE1WiAvPiA8cGF0aCBjbGFzcz1xbC1maWxsIGQ9TTkuNjUsNS4yNDFhMSwxLDAsMCwwLTEuNDA5LjEwOEw2LDcuOTY0LDMuNzU5LDUuMzQ5QTEsMSwwLDAsMCwyLjE5Miw2LjU5MTc4UTIuMjE1NDEsNi42MjEzLDIuMjQxLDYuNjQ5TDQuNjg0LDkuNSwyLjI0MSwxMi4zNUExLDEsMCwwLDAsMy43MSwxMy43MDcyMnEwLjAyNTU3LS4wMjc2OC4wNDktMC4wNTcyMkw2LDExLjAzNiw4LjI0MSwxMy42NWExLDEsMCwxLDAsMS41NjctMS4yNDI3N1E5Ljc4NDU5LDEyLjM3NzcsOS43NTksMTIuMzVMNy4zMTYsOS41LDkuNzU5LDYuNjUxQTEsMSwwLDAsMCw5LjY1LDUuMjQxWiAvPiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiAxMDMgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU0xNS41LDdIMTMuODYxYTQuMDE1LDQuMDE1LDAsMCwwLDEuOTE0LTIuOTc1LDEuOCwxLjgsMCwwLDAtMS42LTEuNzUxQTEuOTIyLDEuOTIyLDAsMCwwLDEyLjAyMSwzLjdhMC41LDAuNSwwLDEsMCwuOTU3LjI5MSwwLjkxNywwLjkxNywwLDAsMSwxLjA1My0uNzI1LDAuODEsMC44MSwwLDAsMSwuNzQ0Ljc2MmMwLDEuMDc3LTEuMTY0LDEuOTI1LTEuOTM0LDIuNDg2QTEuNDIzLDEuNDIzLDAsMCwwLDEyLDcuNWEwLjUsMC41LDAsMCwwLC41LjVoM0EwLjUsMC41LDAsMCwwLDE1LjUsN1ogLz4gPHBhdGggY2xhc3M9cWwtZmlsbCBkPU05LjY1MSw1LjI0MWExLDEsMCwwLDAtMS40MS4xMDhMNiw3Ljk2NCwzLjc1OSw1LjM0OWExLDEsMCwxLDAtMS41MTksMS4zTDQuNjgzLDkuNSwyLjI0MSwxMi4zNWExLDEsMCwxLDAsMS41MTksMS4zTDYsMTEuMDM2LDguMjQxLDEzLjY1YTEsMSwwLDAsMCwxLjUxOS0xLjNMNy4zMTcsOS41LDkuNzU5LDYuNjUxQTEsMSwwLDAsMCw5LjY1MSw1LjI0MVogLz4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogMTA0ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxsaW5lIGNsYXNzPVxcXCJxbC1zdHJva2UgcWwtdGhpblxcXCIgeDE9MTUuNSB4Mj0yLjUgeTE9OC41IHkyPTkuNT48L2xpbmU+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NOS4wMDcsOEM2LjU0Miw3Ljc5MSw2LDcuNTE5LDYsNi41LDYsNS43OTIsNy4yODMsNSw5LDVjMS41NzEsMCwyLjc2NS42NzksMi45NjksMS4zMDlhMSwxLDAsMCwwLDEuOS0uNjE3QzEzLjM1Niw0LjEwNiwxMS4zNTQsMyw5LDMsNi4yLDMsNCw0LjUzOCw0LDYuNWEzLjIsMy4yLDAsMCwwLC41LDEuODQzWj48L3BhdGg+IDxwYXRoIGNsYXNzPXFsLWZpbGwgZD1NOC45ODQsMTBDMTEuNDU3LDEwLjIwOCwxMiwxMC40NzksMTIsMTEuNWMwLDAuNzA4LTEuMjgzLDEuNS0zLDEuNS0xLjU3MSwwLTIuNzY1LS42NzktMi45NjktMS4zMDlhMSwxLDAsMSwwLTEuOS42MTdDNC42NDQsMTMuODk0LDYuNjQ2LDE1LDksMTVjMi44LDAsNS0xLjUzOCw1LTMuNWEzLjIsMy4yLDAsMCwwLS41LTEuODQzWj48L3BhdGg+IDwvc3ZnPlwiO1xuXG4vKioqLyB9KSxcbi8qIDEwNSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IFwiPHN2ZyB2aWV3Ym94PVxcXCIwIDAgMTggMThcXFwiPiA8cGF0aCBjbGFzcz1xbC1zdHJva2UgZD1NNSwzVjlhNC4wMTIsNC4wMTIsMCwwLDAsNCw0SDlhNC4wMTIsNC4wMTIsMCwwLDAsNC00VjM+PC9wYXRoPiA8cmVjdCBjbGFzcz1xbC1maWxsIGhlaWdodD0xIHJ4PTAuNSByeT0wLjUgd2lkdGg9MTIgeD0zIHk9MTU+PC9yZWN0PiA8L3N2Zz5cIjtcblxuLyoqKi8gfSksXG4vKiAxMDYgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgdmlld2JveD1cXFwiMCAwIDE4IDE4XFxcIj4gPHJlY3QgY2xhc3M9cWwtc3Ryb2tlIGhlaWdodD0xMiB3aWR0aD0xMiB4PTMgeT0zPjwvcmVjdD4gPHJlY3QgY2xhc3M9cWwtZmlsbCBoZWlnaHQ9MTIgd2lkdGg9MSB4PTUgeT0zPjwvcmVjdD4gPHJlY3QgY2xhc3M9cWwtZmlsbCBoZWlnaHQ9MTIgd2lkdGg9MSB4PTEyIHk9Mz48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTIgd2lkdGg9OCB4PTUgeT04PjwvcmVjdD4gPHJlY3QgY2xhc3M9cWwtZmlsbCBoZWlnaHQ9MSB3aWR0aD0zIHg9MyB5PTU+PC9yZWN0PiA8cmVjdCBjbGFzcz1xbC1maWxsIGhlaWdodD0xIHdpZHRoPTMgeD0zIHk9Nz48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEgd2lkdGg9MyB4PTMgeT0xMD48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEgd2lkdGg9MyB4PTMgeT0xMj48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEgd2lkdGg9MyB4PTEyIHk9NT48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEgd2lkdGg9MyB4PTEyIHk9Nz48L3JlY3Q+IDxyZWN0IGNsYXNzPXFsLWZpbGwgaGVpZ2h0PTEgd2lkdGg9MyB4PTEyIHk9MTA+PC9yZWN0PiA8cmVjdCBjbGFzcz1xbC1maWxsIGhlaWdodD0xIHdpZHRoPTMgeD0xMiB5PTEyPjwvcmVjdD4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogMTA3ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHZpZXdib3g9XFxcIjAgMCAxOCAxOFxcXCI+IDxwb2x5Z29uIGNsYXNzPXFsLXN0cm9rZSBwb2ludHM9XFxcIjcgMTEgOSAxMyAxMSAxMSA3IDExXFxcIj48L3BvbHlnb24+IDxwb2x5Z29uIGNsYXNzPXFsLXN0cm9rZSBwb2ludHM9XFxcIjcgNyA5IDUgMTEgNyA3IDdcXFwiPjwvcG9seWdvbj4gPC9zdmc+XCI7XG5cbi8qKiovIH0pLFxuLyogMTA4ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblwidXNlIHN0cmljdFwiO1xuXG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLkJ1YmJsZVRvb2x0aXAgPSB1bmRlZmluZWQ7XG5cbnZhciBfZ2V0ID0gZnVuY3Rpb24gZ2V0KG9iamVjdCwgcHJvcGVydHksIHJlY2VpdmVyKSB7IGlmIChvYmplY3QgPT09IG51bGwpIG9iamVjdCA9IEZ1bmN0aW9uLnByb3RvdHlwZTsgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgcHJvcGVydHkpOyBpZiAoZGVzYyA9PT0gdW5kZWZpbmVkKSB7IHZhciBwYXJlbnQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqZWN0KTsgaWYgKHBhcmVudCA9PT0gbnVsbCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IGVsc2UgeyByZXR1cm4gZ2V0KHBhcmVudCwgcHJvcGVydHksIHJlY2VpdmVyKTsgfSB9IGVsc2UgaWYgKFwidmFsdWVcIiBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmIChcInZhbHVlXCIgaW4gZGVzY3JpcHRvcikgZGVzY3JpcHRvci53cml0YWJsZSA9IHRydWU7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTsgfSB9IHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7IGlmIChzdGF0aWNQcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvciwgc3RhdGljUHJvcHMpOyByZXR1cm4gQ29uc3RydWN0b3I7IH07IH0oKTtcblxudmFyIF9leHRlbmQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXG52YXIgX2V4dGVuZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9leHRlbmQpO1xuXG52YXIgX2VtaXR0ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDgpO1xuXG52YXIgX2VtaXR0ZXIyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZW1pdHRlcik7XG5cbnZhciBfYmFzZSA9IF9fd2VicGFja19yZXF1aXJlX18oNDMpO1xuXG52YXIgX2Jhc2UyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYmFzZSk7XG5cbnZhciBfc2VsZWN0aW9uID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNSk7XG5cbnZhciBfaWNvbnMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQxKTtcblxudmFyIF9pY29uczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9pY29ucyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIFRPT0xCQVJfQ09ORklHID0gW1snYm9sZCcsICdpdGFsaWMnLCAnbGluayddLCBbeyBoZWFkZXI6IDEgfSwgeyBoZWFkZXI6IDIgfSwgJ2Jsb2NrcXVvdGUnXV07XG5cbnZhciBCdWJibGVUaGVtZSA9IGZ1bmN0aW9uIChfQmFzZVRoZW1lKSB7XG4gIF9pbmhlcml0cyhCdWJibGVUaGVtZSwgX0Jhc2VUaGVtZSk7XG5cbiAgZnVuY3Rpb24gQnViYmxlVGhlbWUocXVpbGwsIG9wdGlvbnMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnViYmxlVGhlbWUpO1xuXG4gICAgaWYgKG9wdGlvbnMubW9kdWxlcy50b29sYmFyICE9IG51bGwgJiYgb3B0aW9ucy5tb2R1bGVzLnRvb2xiYXIuY29udGFpbmVyID09IG51bGwpIHtcbiAgICAgIG9wdGlvbnMubW9kdWxlcy50b29sYmFyLmNvbnRhaW5lciA9IFRPT0xCQVJfQ09ORklHO1xuICAgIH1cblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChCdWJibGVUaGVtZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJ1YmJsZVRoZW1lKSkuY2FsbCh0aGlzLCBxdWlsbCwgb3B0aW9ucykpO1xuXG4gICAgX3RoaXMucXVpbGwuY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3FsLWJ1YmJsZScpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhCdWJibGVUaGVtZSwgW3tcbiAgICBrZXk6ICdleHRlbmRUb29sYmFyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZXh0ZW5kVG9vbGJhcih0b29sYmFyKSB7XG4gICAgICB0aGlzLnRvb2x0aXAgPSBuZXcgQnViYmxlVG9vbHRpcCh0aGlzLnF1aWxsLCB0aGlzLm9wdGlvbnMuYm91bmRzKTtcbiAgICAgIHRoaXMudG9vbHRpcC5yb290LmFwcGVuZENoaWxkKHRvb2xiYXIuY29udGFpbmVyKTtcbiAgICAgIHRoaXMuYnVpbGRCdXR0b25zKFtdLnNsaWNlLmNhbGwodG9vbGJhci5jb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uJykpLCBfaWNvbnMyLmRlZmF1bHQpO1xuICAgICAgdGhpcy5idWlsZFBpY2tlcnMoW10uc2xpY2UuY2FsbCh0b29sYmFyLmNvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKCdzZWxlY3QnKSksIF9pY29uczIuZGVmYXVsdCk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEJ1YmJsZVRoZW1lO1xufShfYmFzZTIuZGVmYXVsdCk7XG5cbkJ1YmJsZVRoZW1lLkRFRkFVTFRTID0gKDAsIF9leHRlbmQyLmRlZmF1bHQpKHRydWUsIHt9LCBfYmFzZTIuZGVmYXVsdC5ERUZBVUxUUywge1xuICBtb2R1bGVzOiB7XG4gICAgdG9vbGJhcjoge1xuICAgICAgaGFuZGxlcnM6IHtcbiAgICAgICAgbGluazogZnVuY3Rpb24gbGluayh2YWx1ZSkge1xuICAgICAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucXVpbGwuZm9ybWF0KCdsaW5rJywgZmFsc2UpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnF1aWxsLnRoZW1lLnRvb2x0aXAuZWRpdCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbnZhciBCdWJibGVUb29sdGlwID0gZnVuY3Rpb24gKF9CYXNlVG9vbHRpcCkge1xuICBfaW5oZXJpdHMoQnViYmxlVG9vbHRpcCwgX0Jhc2VUb29sdGlwKTtcblxuICBmdW5jdGlvbiBCdWJibGVUb29sdGlwKHF1aWxsLCBib3VuZHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnViYmxlVG9vbHRpcCk7XG5cbiAgICB2YXIgX3RoaXMyID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEJ1YmJsZVRvb2x0aXAuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihCdWJibGVUb29sdGlwKSkuY2FsbCh0aGlzLCBxdWlsbCwgYm91bmRzKSk7XG5cbiAgICBfdGhpczIucXVpbGwub24oX2VtaXR0ZXIyLmRlZmF1bHQuZXZlbnRzLkVESVRPUl9DSEFOR0UsIGZ1bmN0aW9uICh0eXBlLCByYW5nZSwgb2xkUmFuZ2UsIHNvdXJjZSkge1xuICAgICAgaWYgKHR5cGUgIT09IF9lbWl0dGVyMi5kZWZhdWx0LmV2ZW50cy5TRUxFQ1RJT05fQ0hBTkdFKSByZXR1cm47XG4gICAgICBpZiAocmFuZ2UgIT0gbnVsbCAmJiByYW5nZS5sZW5ndGggPiAwICYmIHNvdXJjZSA9PT0gX2VtaXR0ZXIyLmRlZmF1bHQuc291cmNlcy5VU0VSKSB7XG4gICAgICAgIF90aGlzMi5zaG93KCk7XG4gICAgICAgIC8vIExvY2sgb3VyIHdpZHRoIHNvIHdlIHdpbGwgZXhwYW5kIGJleW9uZCBvdXIgb2Zmc2V0UGFyZW50IGJvdW5kYXJpZXNcbiAgICAgICAgX3RoaXMyLnJvb3Quc3R5bGUubGVmdCA9ICcwcHgnO1xuICAgICAgICBfdGhpczIucm9vdC5zdHlsZS53aWR0aCA9ICcnO1xuICAgICAgICBfdGhpczIucm9vdC5zdHlsZS53aWR0aCA9IF90aGlzMi5yb290Lm9mZnNldFdpZHRoICsgJ3B4JztcbiAgICAgICAgdmFyIGxpbmVzID0gX3RoaXMyLnF1aWxsLmdldExpbmVzKHJhbmdlLmluZGV4LCByYW5nZS5sZW5ndGgpO1xuICAgICAgICBpZiAobGluZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgX3RoaXMyLnBvc2l0aW9uKF90aGlzMi5xdWlsbC5nZXRCb3VuZHMocmFuZ2UpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YXIgbGFzdExpbmUgPSBsaW5lc1tsaW5lcy5sZW5ndGggLSAxXTtcbiAgICAgICAgICB2YXIgaW5kZXggPSBfdGhpczIucXVpbGwuZ2V0SW5kZXgobGFzdExpbmUpO1xuICAgICAgICAgIHZhciBsZW5ndGggPSBNYXRoLm1pbihsYXN0TGluZS5sZW5ndGgoKSAtIDEsIHJhbmdlLmluZGV4ICsgcmFuZ2UubGVuZ3RoIC0gaW5kZXgpO1xuICAgICAgICAgIHZhciBfYm91bmRzID0gX3RoaXMyLnF1aWxsLmdldEJvdW5kcyhuZXcgX3NlbGVjdGlvbi5SYW5nZShpbmRleCwgbGVuZ3RoKSk7XG4gICAgICAgICAgX3RoaXMyLnBvc2l0aW9uKF9ib3VuZHMpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgIT09IF90aGlzMi50ZXh0Ym94ICYmIF90aGlzMi5xdWlsbC5oYXNGb2N1cygpKSB7XG4gICAgICAgIF90aGlzMi5oaWRlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIF90aGlzMjtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhCdWJibGVUb29sdGlwLCBbe1xuICAgIGtleTogJ2xpc3RlbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGxpc3RlbigpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICBfZ2V0KEJ1YmJsZVRvb2x0aXAucHJvdG90eXBlLl9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YoQnViYmxlVG9vbHRpcC5wcm90b3R5cGUpLCAnbGlzdGVuJywgdGhpcykuY2FsbCh0aGlzKTtcbiAgICAgIHRoaXMucm9vdC5xdWVyeVNlbGVjdG9yKCcucWwtY2xvc2UnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnJvb3QuY2xhc3NMaXN0LnJlbW92ZSgncWwtZWRpdGluZycpO1xuICAgICAgfSk7XG4gICAgICB0aGlzLnF1aWxsLm9uKF9lbWl0dGVyMi5kZWZhdWx0LmV2ZW50cy5TQ1JPTExfT1BUSU1JWkUsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gTGV0IHNlbGVjdGlvbiBiZSByZXN0b3JlZCBieSB0b29sYmFyIGhhbmRsZXJzIGJlZm9yZSByZXBvc2l0aW9uaW5nXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGlmIChfdGhpczMucm9vdC5jbGFzc0xpc3QuY29udGFpbnMoJ3FsLWhpZGRlbicpKSByZXR1cm47XG4gICAgICAgICAgdmFyIHJhbmdlID0gX3RoaXMzLnF1aWxsLmdldFNlbGVjdGlvbigpO1xuICAgICAgICAgIGlmIChyYW5nZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBfdGhpczMucG9zaXRpb24oX3RoaXMzLnF1aWxsLmdldEJvdW5kcyhyYW5nZSkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSwgMSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdjYW5jZWwnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgICB0aGlzLnNob3coKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdwb3NpdGlvbicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHBvc2l0aW9uKHJlZmVyZW5jZSkge1xuICAgICAgdmFyIHNoaWZ0ID0gX2dldChCdWJibGVUb29sdGlwLnByb3RvdHlwZS5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKEJ1YmJsZVRvb2x0aXAucHJvdG90eXBlKSwgJ3Bvc2l0aW9uJywgdGhpcykuY2FsbCh0aGlzLCByZWZlcmVuY2UpO1xuICAgICAgdmFyIGFycm93ID0gdGhpcy5yb290LnF1ZXJ5U2VsZWN0b3IoJy5xbC10b29sdGlwLWFycm93Jyk7XG4gICAgICBhcnJvdy5zdHlsZS5tYXJnaW5MZWZ0ID0gJyc7XG4gICAgICBpZiAoc2hpZnQgPT09IDApIHJldHVybiBzaGlmdDtcbiAgICAgIGFycm93LnN0eWxlLm1hcmdpbkxlZnQgPSAtMSAqIHNoaWZ0IC0gYXJyb3cub2Zmc2V0V2lkdGggLyAyICsgJ3B4JztcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQnViYmxlVG9vbHRpcDtcbn0oX2Jhc2UuQmFzZVRvb2x0aXApO1xuXG5CdWJibGVUb29sdGlwLlRFTVBMQVRFID0gWyc8c3BhbiBjbGFzcz1cInFsLXRvb2x0aXAtYXJyb3dcIj48L3NwYW4+JywgJzxkaXYgY2xhc3M9XCJxbC10b29sdGlwLWVkaXRvclwiPicsICc8aW5wdXQgdHlwZT1cInRleHRcIiBkYXRhLWZvcm11bGE9XCJlPW1jXjJcIiBkYXRhLWxpbms9XCJodHRwczovL3F1aWxsanMuY29tXCIgZGF0YS12aWRlbz1cIkVtYmVkIFVSTFwiPicsICc8YSBjbGFzcz1cInFsLWNsb3NlXCI+PC9hPicsICc8L2Rpdj4nXS5qb2luKCcnKTtcblxuZXhwb3J0cy5CdWJibGVUb29sdGlwID0gQnViYmxlVG9vbHRpcDtcbmV4cG9ydHMuZGVmYXVsdCA9IEJ1YmJsZVRoZW1lO1xuXG4vKioqLyB9KSxcbi8qIDEwOSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5tb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oNjMpO1xuXG5cbi8qKiovIH0pXG4vKioqKioqLyBdKVtcImRlZmF1bHRcIl07XG59KTsiXSwibmFtZXMiOlsid2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwibW9kdWxlcyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJpIiwibCIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsIm4iLCJfX2VzTW9kdWxlIiwiZ2V0RGVmYXVsdCIsImdldE1vZHVsZUV4cG9ydHMiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ2YWx1ZSIsImNvbnRhaW5lcl8xIiwiZm9ybWF0XzEiLCJsZWFmXzEiLCJzY3JvbGxfMSIsImlubGluZV8xIiwiYmxvY2tfMSIsImVtYmVkXzEiLCJ0ZXh0XzEiLCJhdHRyaWJ1dG9yXzEiLCJjbGFzc18xIiwic3R5bGVfMSIsInN0b3JlXzEiLCJSZWdpc3RyeSIsIlBhcmNobWVudCIsIlNjb3BlIiwiY3JlYXRlIiwiZmluZCIsInF1ZXJ5IiwicmVnaXN0ZXIiLCJDb250YWluZXIiLCJkZWZhdWx0IiwiRm9ybWF0IiwiTGVhZiIsIkVtYmVkIiwiU2Nyb2xsIiwiQmxvY2siLCJJbmxpbmUiLCJUZXh0IiwiQXR0cmlidXRvciIsIkF0dHJpYnV0ZSIsIkNsYXNzIiwiU3R5bGUiLCJTdG9yZSIsIl9fZXh0ZW5kcyIsImV4dGVuZFN0YXRpY3MiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwiYiIsIl9fIiwiY29uc3RydWN0b3IiLCJQYXJjaG1lbnRFcnJvciIsIl9zdXBlciIsIm1lc3NhZ2UiLCJfdGhpcyIsIkVycm9yIiwiYXR0cmlidXRlcyIsImNsYXNzZXMiLCJ0YWdzIiwidHlwZXMiLCJEQVRBX0tFWSIsImlucHV0IiwibWF0Y2giLCJCbG90Q2xhc3MiLCJub2RlIiwiTm9kZSIsIlRFWFRfTk9ERSIsImJ1YmJsZSIsImJsb3QiLCJwYXJlbnROb2RlIiwic2NvcGUiLCJBTlkiLCJMRVZFTCIsIkJMT0NLIiwiSU5MSU5FIiwiSFRNTEVsZW1lbnQiLCJuYW1lcyIsImdldEF0dHJpYnV0ZSIsInNwbGl0IiwidGFnTmFtZSIsIlRZUEUiLCJEZWZpbml0aW9ucyIsIl9pIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwibWFwIiwiRGVmaW5pdGlvbiIsImJsb3ROYW1lIiwiYXR0ck5hbWUiLCJrZXlOYW1lIiwiY2xhc3NOYW1lIiwiaXNBcnJheSIsInRvVXBwZXJDYXNlIiwidGFnTmFtZXMiLCJmb3JFYWNoIiwidGFnIiwiZGlmZiIsImVxdWFsIiwiZXh0ZW5kIiwib3AiLCJOVUxMX0NIQVJBQ1RFUiIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsIkRlbHRhIiwib3BzIiwiaW5zZXJ0IiwidGV4dCIsIm5ld09wIiwia2V5cyIsInB1c2giLCJyZXRhaW4iLCJpbmRleCIsImxhc3RPcCIsInVuc2hpZnQiLCJzcGxpY2UiLCJjaG9wIiwicG9wIiwiZmlsdGVyIiwicHJlZGljYXRlIiwicGFydGl0aW9uIiwicGFzc2VkIiwiZmFpbGVkIiwidGFyZ2V0IiwicmVkdWNlIiwiaW5pdGlhbCIsImNoYW5nZUxlbmd0aCIsImVsZW0iLCJkZWxldGUiLCJzbGljZSIsInN0YXJ0IiwiZW5kIiwiSW5maW5pdHkiLCJpdGVyIiwiaXRlcmF0b3IiLCJoYXNOZXh0IiwibmV4dE9wIiwibmV4dCIsImNvbXBvc2UiLCJvdGhlciIsInRoaXNJdGVyIiwib3RoZXJJdGVyIiwiZmlyc3RPdGhlciIsInBlZWsiLCJmaXJzdExlZnQiLCJwZWVrVHlwZSIsInBlZWtMZW5ndGgiLCJkZWx0YSIsIk1hdGgiLCJtaW4iLCJ0aGlzT3AiLCJvdGhlck9wIiwicmVzdCIsImNvbmNhdCIsInN0cmluZ3MiLCJwcmVwIiwiam9pbiIsImRpZmZSZXN1bHQiLCJjb21wb25lbnQiLCJvcExlbmd0aCIsIklOU0VSVCIsIkRFTEVURSIsIkVRVUFMIiwiZWFjaExpbmUiLCJuZXdsaW5lIiwibGluZSIsImluZGV4T2YiLCJ0cmFuc2Zvcm0iLCJwcmlvcml0eSIsInRyYW5zZm9ybVBvc2l0aW9uIiwib2Zmc2V0IiwibmV4dFR5cGUiLCJoYXNPd24iLCJ0b1N0ciIsInRvU3RyaW5nIiwiZ09QRCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImFyciIsImlzUGxhaW5PYmplY3QiLCJvYmoiLCJoYXNPd25Db25zdHJ1Y3RvciIsImhhc0lzUHJvdG90eXBlT2YiLCJrZXkiLCJzZXRQcm9wZXJ0eSIsIm9wdGlvbnMiLCJuZXdWYWx1ZSIsIndyaXRhYmxlIiwiZ2V0UHJvcGVydHkiLCJzcmMiLCJjb3B5IiwiY29weUlzQXJyYXkiLCJjbG9uZSIsImRlZXAiLCJCbG9ja0VtYmVkIiwiYnViYmxlRm9ybWF0cyIsInVuZGVmaW5lZCIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9nZXQiLCJyZWNlaXZlciIsIkZ1bmN0aW9uIiwiZGVzYyIsInBhcmVudCIsImdldFByb3RvdHlwZU9mIiwiX2V4dGVuZCIsIl9leHRlbmQyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9xdWlsbERlbHRhIiwiX3F1aWxsRGVsdGEyIiwiX3BhcmNobWVudCIsIl9wYXJjaG1lbnQyIiwiX2JyZWFrIiwiX2JyZWFrMiIsIl9pbmxpbmUiLCJfaW5saW5lMiIsIl90ZXh0IiwiX3RleHQyIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiTkVXTElORV9MRU5HVEgiLCJfUGFyY2htZW50JEVtYmVkIiwiYXBwbHkiLCJhdHRhY2giLCJkb21Ob2RlIiwiZm9ybWF0cyIsInZhbHVlcyIsImZvcm1hdCIsImF0dHJpYnV0ZSIsIkJMT0NLX0FUVFJJQlVURSIsImZvcm1hdEF0IiwiaW5zZXJ0QXQiLCJkZWYiLCJlbmRzV2l0aCIsImJsb2NrIiwiaW5zZXJ0QmVmb3JlIiwiQkxPQ0tfQkxPVCIsIl9QYXJjaG1lbnQkQmxvY2siLCJfdGhpczIiLCJjYWNoZSIsImRlc2NlbmRhbnRzIiwibGVhZiIsImRlbGV0ZUF0IiwibGluZXMiLCJzaGlmdCIsImNoaWxkcmVuIiwidGFpbCIsInJlZiIsImhlYWQiLCJyZW1vdmUiLCJtb3ZlQ2hpbGRyZW4iLCJvcHRpbWl6ZSIsImNvbnRleHQiLCJwYXRoIiwicmVtb3ZlQ2hpbGQiLCJjaGlsZCIsImZvcmNlIiwiZGVmYXVsdENoaWxkIiwiYWxsb3dlZENoaWxkcmVuIiwic3RhdGljcyIsIm92ZXJsb2FkIiwiZXhwYW5kQ29uZmlnIiwiX3R5cGVvZiIsIlN5bWJvbCIsIl9zbGljZWRUb0FycmF5Iiwic2xpY2VJdGVyYXRvciIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJfcyIsImRvbmUiLCJlcnIiLCJfZWRpdG9yIiwiX2VkaXRvcjIiLCJfZW1pdHRlcjMiLCJfZW1pdHRlcjQiLCJfbW9kdWxlIiwiX21vZHVsZTIiLCJfc2VsZWN0aW9uIiwiX3NlbGVjdGlvbjIiLCJfbG9nZ2VyIiwiX2xvZ2dlcjIiLCJfdGhlbWUiLCJfdGhlbWUyIiwiX2RlZmluZVByb3BlcnR5IiwiZGVidWciLCJRdWlsbCIsImxpbWl0IiwibGV2ZWwiLCJfX3F1aWxsIiwiX2ltcG9ydCIsImltcG9ydHMiLCJlcnJvciIsIm92ZXJ3cml0ZSIsIndhcm4iLCJzdGFydHNXaXRoIiwiY29udGFpbmVyIiwiaHRtbCIsImlubmVySFRNTCIsInRyaW0iLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRDb250YWluZXIiLCJzZXRBdHRyaWJ1dGUiLCJzY3JvbGxpbmdDb250YWluZXIiLCJlbWl0dGVyIiwic2Nyb2xsIiwid2hpdGVsaXN0IiwiZWRpdG9yIiwic2VsZWN0aW9uIiwidGhlbWUiLCJrZXlib2FyZCIsImFkZE1vZHVsZSIsImNsaXBib2FyZCIsImhpc3RvcnkiLCJpbml0Iiwib24iLCJldmVudHMiLCJFRElUT1JfQ0hBTkdFIiwidHlwZSIsIlRFWFRfQ0hBTkdFIiwidG9nZ2xlIiwiaXNCbGFuayIsIlNDUk9MTF9VUERBVEUiLCJzb3VyY2UiLCJtdXRhdGlvbnMiLCJyYW5nZSIsImxhc3RSYW5nZSIsIm1vZGlmeSIsInVwZGF0ZSIsImNvbnRlbnRzIiwiY29udmVydCIsInNldENvbnRlbnRzIiwiY2xlYXIiLCJwbGFjZWhvbGRlciIsInJlYWRPbmx5IiwiZGlzYWJsZSIsInJlZk5vZGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJibHVyIiwic2V0UmFuZ2UiLCJkZWxldGVUZXh0IiwiX3RoaXMzIiwiX292ZXJsb2FkIiwiX292ZXJsb2FkMiIsImVuYWJsZSIsImVuYWJsZWQiLCJmb2N1cyIsInNjcm9sbFRvcCIsInNjcm9sbEludG9WaWV3IiwiX3RoaXM0Iiwic291cmNlcyIsIkFQSSIsImdldFNlbGVjdGlvbiIsImNoYW5nZSIsImZvcm1hdExpbmUiLCJmb3JtYXRUZXh0Iiwic2V0U2VsZWN0aW9uIiwiU0lMRU5UIiwiX3RoaXM1IiwiX292ZXJsb2FkMyIsIl9vdmVybG9hZDQiLCJfdGhpczYiLCJfb3ZlcmxvYWQ1IiwiX292ZXJsb2FkNiIsImdldEJvdW5kcyIsImJvdW5kcyIsImNvbnRhaW5lckJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJvdHRvbSIsInRvcCIsImhlaWdodCIsImxlZnQiLCJyaWdodCIsIndpZHRoIiwiZ2V0Q29udGVudHMiLCJnZXRMZW5ndGgiLCJfb3ZlcmxvYWQ3IiwiX292ZXJsb2FkOCIsImdldEZvcm1hdCIsImdldEluZGV4IiwiZ2V0TGVhZiIsImdldExpbmUiLCJnZXRMaW5lcyIsIk51bWJlciIsIk1BWF9WQUxVRSIsImdldE1vZHVsZSIsImdldFJhbmdlIiwiZ2V0VGV4dCIsIl9vdmVybG9hZDkiLCJfb3ZlcmxvYWQxMCIsImhhc0ZvY3VzIiwiaW5zZXJ0RW1iZWQiLCJlbWJlZCIsIl90aGlzNyIsImluc2VydFRleHQiLCJfdGhpczgiLCJfb3ZlcmxvYWQxMSIsIl9vdmVybG9hZDEyIiwiaXNFbmFibGVkIiwiY29udGFpbnMiLCJvZmYiLCJvbmNlIiwicGFzdGVIVE1MIiwiZGFuZ2Vyb3VzbHlQYXN0ZUhUTUwiLCJyZW1vdmVGb3JtYXQiLCJfdGhpczkiLCJfb3ZlcmxvYWQxMyIsIl9vdmVybG9hZDE0IiwiX3RoaXMxMCIsImRlbGV0ZWQiLCJhcHBsaWVkIiwiYXBwbHlEZWx0YSIsInJldCIsIl9vdmVybG9hZDE1IiwiX292ZXJsb2FkMTYiLCJSYW5nZSIsInNldFRleHQiLCJVU0VSIiwidXBkYXRlQ29udGVudHMiLCJfdGhpczExIiwiREVGQVVMVFMiLCJzdHJpY3QiLCJ2ZXJzaW9uIiwidXNlckNvbmZpZyIsImltcG9ydCIsInRoZW1lQ29uZmlnIiwiY29uZmlnIiwibW9kdWxlTmFtZXMiLCJtb2R1bGVDb25maWciLCJtb2R1bGVDbGFzcyIsInRvb2xiYXIiLCJxdWVyeVNlbGVjdG9yIiwibW9kaWZpZXIiLCJvbGREZWx0YSIsInNoaWZ0UmFuZ2UiLCJfZW1pdHRlciIsImFyZ3MiLCJlbWl0IiwiX2VtaXR0ZXIyIiwiX21hcCIsInBvcyIsIl9tYXAyIiwiX21hcDMiLCJtYXgiLCJfbWFwNCIsIl9QYXJjaG1lbnQkSW5saW5lIiwiY29tcGFyZSIsIkJMT1QiLCJpc29sYXRlIiwid3JhcCIsInNlbGZJbmRleCIsIm9yZGVyIiwib3RoZXJJbmRleCIsIlRleHRCbG90IiwiX1BhcmNobWVudCRUZXh0IiwiX2V2ZW50ZW1pdHRlciIsIl9ldmVudGVtaXR0ZXIyIiwiRVZFTlRTIiwiZXZlbnROYW1lIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9sZW4iLCJfa2V5IiwicXVlcnlTZWxlY3RvckFsbCIsIl9ub2RlJF9fcXVpbGwkZW1pdHRlciIsImhhbmRsZURPTSIsIkVtaXR0ZXIiLCJfRXZlbnRFbWl0dGVyIiwibGlzdGVuZXJzIiwibG9nIiwiZXZlbnQiLCJfbGVuMiIsIl9rZXkyIiwiX3JlZiIsImhhbmRsZXIiLCJsaXN0ZW5ET00iLCJTQ1JPTExfQkVGT1JFX1VQREFURSIsIlNDUk9MTF9PUFRJTUlaRSIsIlNFTEVDVElPTl9DSEFOR0UiLCJNb2R1bGUiLCJxdWlsbCIsImxldmVscyIsIm1ldGhvZCIsIl9jb25zb2xlIiwiY29uc29sZSIsIm5hbWVzcGFjZSIsIm5zIiwibG9nZ2VyIiwiYmluZCIsIm5ld0xldmVsIiwicFNsaWNlIiwib2JqZWN0S2V5cyIsImlzQXJndW1lbnRzIiwiZGVlcEVxdWFsIiwiYWN0dWFsIiwiZXhwZWN0ZWQiLCJvcHRzIiwiRGF0ZSIsImdldFRpbWUiLCJvYmpFcXVpdiIsImlzVW5kZWZpbmVkT3JOdWxsIiwiaXNCdWZmZXIiLCJ4IiwiYSIsImthIiwia2IiLCJlIiwic29ydCIsImF0dHJpYnV0ZUJpdCIsIkFUVFJJQlVURSIsIml0ZW0iLCJjYW5BZGQiLCJyZXBsYWNlIiwicmVtb3ZlQXR0cmlidXRlIiwiQ29kZSIsIl9ibG9jayIsIl9ibG9jazIiLCJfSW5saW5lIiwiQ29kZUJsb2NrIiwiX0Jsb2NrIiwidGV4dENvbnRlbnQiLCJmcmFnIiwiX2Rlc2NlbmRhbnQiLCJkZXNjZW5kYW50IiwiX2Rlc2NlbmRhbnQyIiwibmV4dE5ld2xpbmUiLCJuZXdsaW5lSW5kZXgiLCJwcmV2TmV3bGluZSIsImlzb2xhdGVMZW5ndGgiLCJfZGVzY2VuZGFudDMiLCJfZGVzY2VuZGFudDQiLCJzZWFyY2hJbmRleCIsInJldmVyc2UiLCJsYXN0SW5kZXhPZiIsImFwcGVuZENoaWxkIiwicHJldiIsInVud3JhcCIsIlRBQiIsIl9vcCIsIl9vcDIiLCJfY29kZSIsIl9jb2RlMiIsIl9jdXJzb3IiLCJfY3Vyc29yMiIsIl9jbG9uZSIsIl9jbG9uZTIiLCJfZGVlcEVxdWFsIiwiX2RlZXBFcXVhbDIiLCJBU0NJSSIsIkVkaXRvciIsImdldERlbHRhIiwiY29uc3VtZU5leHROZXdsaW5lIiwic2Nyb2xsTGVuZ3RoIiwiYmF0Y2hTdGFydCIsIm5vcm1hbGl6ZURlbHRhIiwiX3Njcm9sbCRsaW5lIiwiX3Njcm9sbCRsaW5lMiIsIl9saW5lJGRlc2NlbmRhbnQiLCJfbGluZSRkZXNjZW5kYW50MiIsImJhdGNoRW5kIiwibGVuZ3RoUmVtYWluaW5nIiwibGluZUxlbmd0aCIsImNvZGVJbmRleCIsImNvZGVMZW5ndGgiLCJsZWF2ZXMiLCJfcGF0aCIsImZvcm1hdHNBcnIiLCJibG90cyIsImNvbWJpbmVGb3JtYXRzIiwiX3Njcm9sbCRsaW5lMyIsIl9zY3JvbGwkbGluZTQiLCJzdWZmaXhMZW5ndGgiLCJzdWZmaXgiLCJjdXJzb3JJbmRleCIsImRhdGEiLCJ0ZXh0QmxvdCIsIm9sZFZhbHVlIiwiQ09OVEVOVFMiLCJvbGRUZXh0IiwibmV3VGV4dCIsImRpZmZEZWx0YSIsImNvbWJpbmVkIiwibWVyZ2VkIiwiaW1hZ2UiLCJsaXN0IiwiYnVsbGV0IiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyMiIsImZyb20iLCJTZWxlY3Rpb24iLCJjb21wb3NpbmciLCJtb3VzZURvd24iLCJjdXJzb3IiLCJzYXZlZFJhbmdlIiwiaGFuZGxlQ29tcG9zaXRpb24iLCJoYW5kbGVEcmFnZ2luZyIsInNldFRpbWVvdXQiLCJuYXRpdmUiLCJnZXROYXRpdmVSYW5nZSIsInRleHROb2RlIiwic2V0TmF0aXZlUmFuZ2UiLCJpZ25vcmVkIiwiX2NvbnRleHQkcmFuZ2UiLCJzdGFydE5vZGUiLCJzdGFydE9mZnNldCIsImVuZE5vZGUiLCJlbmRPZmZzZXQiLCJyZXN0b3JlIiwiYm9keSIsIl9mb3JtYXQiLCJuYXRpdmVSYW5nZSIsImNvbGxhcHNlZCIsImFmdGVyIiwiX3Njcm9sbCRsZWFmIiwiX3Njcm9sbCRsZWFmMiIsIl9sZWFmJHBvc2l0aW9uIiwicG9zaXRpb24iLCJfbGVhZiRwb3NpdGlvbjIiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwiX3Njcm9sbCRsZWFmMyIsIl9zY3JvbGwkbGVhZjQiLCJfbGVhZiRwb3NpdGlvbjMiLCJfbGVhZiRwb3NpdGlvbjQiLCJzZXRFbmQiLCJzaWRlIiwicmVjdCIsInJhbmdlQ291bnQiLCJnZXRSYW5nZUF0Iiwibm9ybWFsaXplTmF0aXZlIiwiaW5mbyIsIm5vcm1hbGl6ZWQiLCJub3JtYWxpemVkVG9SYW5nZSIsImFjdGl2ZUVsZW1lbnQiLCJwb3NpdGlvbnMiLCJpbmRleGVzIiwiX3Bvc2l0aW9uIiwic3RhcnRDb250YWluZXIiLCJlbmRDb250YWluZXIiLCJjaGlsZE5vZGVzIiwibGFzdENoaWxkIiwicmFuZ2VUb05hdGl2ZSIsIl9zY3JvbGwkbGVhZjUiLCJfc2Nyb2xsJGxlYWY2IiwiX2xlYWYkcG9zaXRpb241IiwiX2xlYWYkcG9zaXRpb242IiwiZmlyc3QiLCJsYXN0Iiwic2Nyb2xsQm91bmRzIiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJvbGRSYW5nZSIsIl9nZXRSYW5nZSIsIl9nZXRSYW5nZTIiLCJCcmVhayIsImluc2VydEludG8iLCJsaW5rZWRfbGlzdF8xIiwic2hhZG93XzEiLCJDb250YWluZXJCbG90IiwiYnVpbGQiLCJtYWtlQmxvdCIsImZvckVhY2hBdCIsImNyaXRlcmlhIiwiX2EiLCJsZW5ndGhMZWZ0IiwiZGV0YWNoIiwiY2hpbGRCbG90IiwicmVmQmxvdCIsInNvbWUiLCJtZW1vIiwidGFyZ2V0UGFyZW50IiwiaW5jbHVzaXZlIiwiYWRkZWROb2RlcyIsInJlbW92ZWROb2RlcyIsIm11dGF0aW9uIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJET0NVTUVOVF9QT1NJVElPTl9DT05UQUlORURfQlkiLCJET0NVTUVOVF9QT1NJVElPTl9GT0xMT1dJTkciLCJuZXh0U2libGluZyIsInJlcGxhY2VDaGlsZCIsIkZvcm1hdEJsb3QiLCJ0b0xvd2VyQ2FzZSIsInJlcGxhY2VXaXRoIiwicmVwbGFjZW1lbnQiLCJ3cmFwcGVyIiwibW92ZSIsIkxlYWZCbG90IiwiSU5MSU5FX0JMT1QiLCJsaWIiLCJrZWVwTnVsbCIsIkl0ZXJhdG9yIiwicmV0T3AiLCJzdWJzdHIiLCJfaW5zdGFuY2VvZiIsIm5hdGl2ZU1hcCIsIk1hcCIsIl8iLCJuYXRpdmVTZXQiLCJTZXQiLCJuYXRpdmVQcm9taXNlIiwiUHJvbWlzZSIsImNpcmN1bGFyIiwiZGVwdGgiLCJpbmNsdWRlTm9uRW51bWVyYWJsZSIsImFsbFBhcmVudHMiLCJhbGxDaGlsZHJlbiIsInVzZUJ1ZmZlciIsIkJ1ZmZlciIsInByb3RvIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW4iLCJfX2lzQXJyYXkiLCJfX2lzUmVnRXhwIiwiUmVnRXhwIiwiX19nZXRSZWdFeHBGbGFncyIsImxhc3RJbmRleCIsIl9faXNEYXRlIiwiYWxsb2NVbnNhZmUiLCJrZXlDaGlsZCIsInZhbHVlQ2hpbGQiLCJzZXQiLCJlbnRyeUNoaWxkIiwiYXR0cnMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJzeW1ib2xzIiwic3ltYm9sIiwiYWxsUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5TmFtZXMiLCJwcm9wZXJ0eU5hbWUiLCJjbG9uZVByb3RvdHlwZSIsIl9fb2JqVG9TdHIiLCJyZSIsImZsYWdzIiwiZ2xvYmFsIiwiaWdub3JlQ2FzZSIsIm11bHRpbGluZSIsIl9jb250YWluZXIiLCJfY29udGFpbmVyMiIsImlzTGluZSIsIl9QYXJjaG1lbnQkU2Nyb2xsIiwiYmF0Y2giLCJfbGluZSIsIl9saW5lMiIsIl9saW5lMyIsIl9saW5lNCIsIl9uZXdsaW5lSW5kZXgiLCJvYnNlcnZlciIsInRha2VSZWNvcmRzIiwiU0hPUlRLRVkiLCJfcXVpbGwiLCJfcXVpbGwyIiwidGVzdCIsIm5hdmlnYXRvciIsInBsYXRmb3JtIiwiS2V5Ym9hcmQiLCJfTW9kdWxlIiwiZXZ0IiwiYmluZGluZyIsIm5vcm1hbGl6ZSIsIndoaWNoIiwia2V5Q29kZSIsImJpbmRpbmdzIiwiYWRkQmluZGluZyIsIkVOVEVSIiwic2hpZnRLZXkiLCJoYW5kbGVFbnRlciIsIm1ldGFLZXkiLCJjdHJsS2V5IiwiYWx0S2V5IiwidXNlckFnZW50IiwiQkFDS1NQQUNFIiwiaGFuZGxlQmFja3NwYWNlIiwiaGFuZGxlRGVsZXRlIiwicHJlZml4IiwiaGFuZGxlRGVsZXRlUmFuZ2UiLCJsaXN0ZW4iLCJkZWZhdWx0UHJldmVudGVkIiwiX3F1aWxsJGdldExpbmUiLCJfcXVpbGwkZ2V0TGluZTIiLCJfcXVpbGwkZ2V0TGVhZiIsIl9xdWlsbCRnZXRMZWFmMiIsImxlYWZTdGFydCIsIm9mZnNldFN0YXJ0IiwiX3JlZjIiLCJsZWFmRW5kIiwib2Zmc2V0RW5kIiwicHJlZml4VGV4dCIsInN1ZmZpeFRleHQiLCJjdXJDb250ZXh0IiwiZW1wdHkiLCJwcmV2ZW50ZWQiLCJldmVyeSIsInByZXZlbnREZWZhdWx0IiwiRVNDQVBFIiwiTEVGVCIsIlVQIiwiUklHSFQiLCJET1dOIiwibWFrZUZvcm1hdEhhbmRsZXIiLCJpbmRlbnQiLCJtYWtlQ29kZUJsb2NrSGFuZGxlciIsImN1dG9mZiIsIl9xdWlsbCRnZXRMaW5lMyIsIl9xdWlsbCRnZXRMaW5lNCIsIl9xdWlsbCRnZXRMaW5lNSIsIl9xdWlsbCRnZXRMaW5lNiIsImhlYWRlciIsIl9xdWlsbCRnZXRMaW5lNyIsIl9xdWlsbCRnZXRMaW5lOCIsIl9xdWlsbCRnZXRMaW5lOSIsIl9xdWlsbCRnZXRMaW5lMTAiLCJtYWtlRW1iZWRBcnJvd0hhbmRsZXIiLCJfcmVmMyIsIndoZXJlIiwiX3F1aWxsJGdldExlYWYzIiwiX3F1aWxsJGdldExlYWY0IiwiX3F1aWxsJGdldExpbmUxMSIsIl9xdWlsbCRnZXRMaW5lMTIiLCJfcXVpbGwkZ2V0TGluZTEzIiwiX3F1aWxsJGdldExpbmUxNCIsImN1ckZvcm1hdHMiLCJwcmV2Rm9ybWF0cyIsIm5leHRMZW5ndGgiLCJfcXVpbGwkZ2V0TGluZTE1IiwiX3F1aWxsJGdldExpbmUxNiIsIl9xdWlsbCRnZXRMaW5lMTciLCJfcXVpbGwkZ2V0TGluZTE4IiwibmV4dEZvcm1hdHMiLCJmaXJzdEZvcm1hdHMiLCJsYXN0Rm9ybWF0cyIsImxpbmVGb3JtYXRzIiwiX3F1aWxsJHNjcm9sbCRkZXNjZW5kIiwiX3F1aWxsJHNjcm9sbCRkZXNjZW5kMiIsInNjcm9sbEluZGV4Iiwic2hvcnRLZXkiLCJjaGFyQ29kZUF0IiwiQ3Vyc29yIiwiY3JlYXRlVGV4dE5vZGUiLCJfbGVuZ3RoIiwicmVzdG9yZVRleHQiLCJfUGFyY2htZW50JENvbnRhaW5lciIsIkNvbG9yU3R5bGUiLCJDb2xvckNsYXNzIiwiQ29sb3JBdHRyaWJ1dG9yIiwiX1BhcmNobWVudCRBdHRyaWJ1dG9yIiwicGFyc2VJbnQiLCJzYW5pdGl6ZSIsIkxpbmsiLCJ1cmwiLCJfc2FuaXRpemUiLCJQUk9UT0NPTF9XSElURUxJU1QiLCJTQU5JVElaRURfVVJMIiwicHJvdG9jb2xzIiwiYW5jaG9yIiwiaHJlZiIsInByb3RvY29sIiwiX2tleWJvYXJkIiwiX2tleWJvYXJkMiIsIl9kcm9wZG93biIsIl9kcm9wZG93bjIiLCJvcHRpb25zQ291bnRlciIsInRvZ2dsZUFyaWFBdHRyaWJ1dGUiLCJlbGVtZW50IiwiUGlja2VyIiwic2VsZWN0IiwiYnVpbGRQaWNrZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJsYWJlbCIsInRvZ2dsZVBpY2tlciIsImVzY2FwZSIsImJ1aWxkSXRlbSIsIm9wdGlvbiIsInRhYkluZGV4IiwiaGFzQXR0cmlidXRlIiwic2VsZWN0SXRlbSIsImJ1aWxkTGFiZWwiLCJidWlsZE9wdGlvbnMiLCJpZCIsInNlbGVjdGVkIiwiY2xvc2UiLCJ0cmlnZ2VyIiwic2VsZWN0ZWRJbmRleCIsIkV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiaXNBY3RpdmUiLCJfZW1iZWQiLCJfZW1iZWQyIiwiX3Njcm9sbCIsIl9zY3JvbGwyIiwiX2NsaXBib2FyZCIsIl9jbGlwYm9hcmQyIiwiX2hpc3RvcnkiLCJfaGlzdG9yeTIiLCJTaGFkb3dCbG90IiwiY2xvbmVOb2RlIiwicGFyZW50QmxvdCIsInJlZkRvbU5vZGUiLCJBdHRyaWJ1dG9yU3RvcmUiLCJzdHlsZXMiLCJhdHRyIiwiQ2xhc3NBdHRyaWJ1dG9yIiwibWF0Y2hlcyIsInJlc3VsdCIsImNhbWVsaXplIiwicGFydHMiLCJwYXJ0IiwiU3R5bGVBdHRyaWJ1dG9yIiwiVGhlbWUiLCJ0aGVtZXMiLCJHVUFSRF9URVhUIiwiY29udGVudE5vZGUiLCJjaGlsZE5vZGUiLCJsZWZ0R3VhcmQiLCJyaWdodEd1YXJkIiwicHJldkxlbmd0aCIsIkFsaWduU3R5bGUiLCJBbGlnbkNsYXNzIiwiQWxpZ25BdHRyaWJ1dGUiLCJCYWNrZ3JvdW5kU3R5bGUiLCJCYWNrZ3JvdW5kQ2xhc3MiLCJfY29sb3IiLCJEaXJlY3Rpb25TdHlsZSIsIkRpcmVjdGlvbkNsYXNzIiwiRGlyZWN0aW9uQXR0cmlidXRlIiwiRm9udENsYXNzIiwiRm9udFN0eWxlIiwiRm9udFN0eWxlQXR0cmlidXRvciIsIlNpemVTdHlsZSIsIlNpemVDbGFzcyIsImdldExhc3RDaGFuZ2VJbmRleCIsIkhpc3RvcnkiLCJsYXN0UmVjb3JkZWQiLCJpZ25vcmVDaGFuZ2UiLCJ1c2VyT25seSIsInJlY29yZCIsInVuZG8iLCJyZWRvIiwiZGVzdCIsInN0YWNrIiwiY2hhbmdlRGVsdGEiLCJ1bmRvRGVsdGEiLCJ0aW1lc3RhbXAiLCJub3ciLCJkZWxheSIsIm1heFN0YWNrIiwiZW5kc1dpdGhOZXdsaW5lQ2hhbmdlIiwiZGVsZXRlTGVuZ3RoIiwiY2hhbmdlSW5kZXgiLCJCYXNlVG9vbHRpcCIsIl9jb2xvclBpY2tlciIsIl9jb2xvclBpY2tlcjIiLCJfaWNvblBpY2tlciIsIl9pY29uUGlja2VyMiIsIl9waWNrZXIiLCJfcGlja2VyMiIsIl90b29sdGlwIiwiX3Rvb2x0aXAyIiwiQUxJR05TIiwiQ09MT1JTIiwiRk9OVFMiLCJIRUFERVJTIiwiU0laRVMiLCJCYXNlVGhlbWUiLCJfVGhlbWUiLCJsaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ0b29sdGlwIiwidGV4dGJveCIsImhpZGUiLCJwaWNrZXJzIiwicGlja2VyIiwiZXh0ZW5kVG9vbGJhciIsImJ1aWxkQnV0dG9ucyIsImJ1dHRvbnMiLCJpY29ucyIsImJ1dHRvbiIsImJ1aWxkUGlja2VycyIsInNlbGVjdHMiLCJmaWxsU2VsZWN0IiwiYWxpZ24iLCJoYW5kbGVycyIsImZvcm11bGEiLCJlZGl0IiwiZmlsZUlucHV0IiwiZmlsZXMiLCJyZWFkZXIiLCJGaWxlUmVhZGVyIiwib25sb2FkIiwicmVhZEFzRGF0YVVSTCIsImNsaWNrIiwidmlkZW8iLCJfVG9vbHRpcCIsImJvdW5kc0NvbnRhaW5lciIsInNhdmUiLCJjYW5jZWwiLCJtb2RlIiwicHJldmlldyIsInJlc3RvcmVGb2N1cyIsImxpbmtSYW5nZSIsImV4dHJhY3RWaWRlb1VybCIsImRlZmF1bHRWYWx1ZSIsIkxpbmtlZExpc3QiLCJhcHBlbmQiLCJub2RlcyIsImN1ciIsImN1ck5vZGUiLCJjYWxsYmFjayIsImN1ckluZGV4IiwiY3VyTGVuZ3RoIiwiT0JTRVJWRVJfQ09ORklHIiwiY2hhcmFjdGVyRGF0YSIsImNoYXJhY3RlckRhdGFPbGRWYWx1ZSIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJNQVhfT1BUSU1JWkVfSVRFUkFUSU9OUyIsIlNjcm9sbEJsb3QiLCJNdXRhdGlvbk9ic2VydmVyIiwib2JzZXJ2ZSIsImRpc2Nvbm5lY3QiLCJyZWNvcmRzIiwibWFyayIsIm1hcmtQYXJlbnQiLCJyZW1haW5pbmciLCJwcmV2aW91c1NpYmxpbmciLCJncmFuZENoaWxkIiwiaXNFcXVhbCIsIm9iajEiLCJvYmoyIiwicHJvcCIsIklubGluZUJsb3QiLCJCbG9ja0Jsb3QiLCJFbWJlZEJsb3QiLCJzcGxpdFRleHQiLCJfdG9nZ2xlIiwiRE9NVG9rZW5MaXN0IiwidG9rZW4iLCJzZWFyY2hTdHJpbmciLCJzdWJqZWN0U3RyaW5nIiwiaXNGaW5pdGUiLCJmbG9vciIsInRoaXNBcmciLCJleGVjQ29tbWFuZCIsIkRJRkZfREVMRVRFIiwiRElGRl9JTlNFUlQiLCJESUZGX0VRVUFMIiwiZGlmZl9tYWluIiwidGV4dDEiLCJ0ZXh0MiIsImN1cnNvcl9wb3MiLCJjb21tb25sZW5ndGgiLCJkaWZmX2NvbW1vblByZWZpeCIsImNvbW1vbnByZWZpeCIsInN1YnN0cmluZyIsImRpZmZfY29tbW9uU3VmZml4IiwiY29tbW9uc3VmZml4IiwiZGlmZnMiLCJkaWZmX2NvbXB1dGVfIiwiZGlmZl9jbGVhbnVwTWVyZ2UiLCJmaXhfY3Vyc29yIiwiZml4X2Vtb2ppIiwibG9uZ3RleHQiLCJzaG9ydHRleHQiLCJobSIsImRpZmZfaGFsZk1hdGNoXyIsInRleHQxX2EiLCJ0ZXh0MV9iIiwidGV4dDJfYSIsInRleHQyX2IiLCJtaWRfY29tbW9uIiwiZGlmZnNfYSIsImRpZmZzX2IiLCJkaWZmX2Jpc2VjdF8iLCJ0ZXh0MV9sZW5ndGgiLCJ0ZXh0Ml9sZW5ndGgiLCJtYXhfZCIsImNlaWwiLCJ2X29mZnNldCIsInZfbGVuZ3RoIiwidjEiLCJ2MiIsImZyb250IiwiazFzdGFydCIsImsxZW5kIiwiazJzdGFydCIsImsyZW5kIiwiazEiLCJrMV9vZmZzZXQiLCJ4MSIsInkxIiwiY2hhckF0IiwiazJfb2Zmc2V0IiwieDIiLCJkaWZmX2Jpc2VjdFNwbGl0XyIsImsyIiwieTIiLCJ5IiwidGV4dDFhIiwidGV4dDJhIiwidGV4dDFiIiwidGV4dDJiIiwiZGlmZnNiIiwicG9pbnRlcm1pbiIsInBvaW50ZXJtYXgiLCJwb2ludGVybWlkIiwicG9pbnRlcnN0YXJ0IiwicG9pbnRlcmVuZCIsImRpZmZfaGFsZk1hdGNoSV8iLCJzZWVkIiwiaiIsImJlc3RfY29tbW9uIiwiYmVzdF9sb25ndGV4dF9hIiwiYmVzdF9sb25ndGV4dF9iIiwiYmVzdF9zaG9ydHRleHRfYSIsImJlc3Rfc2hvcnR0ZXh0X2IiLCJwcmVmaXhMZW5ndGgiLCJobTEiLCJobTIiLCJwb2ludGVyIiwiY291bnRfZGVsZXRlIiwiY291bnRfaW5zZXJ0IiwidGV4dF9kZWxldGUiLCJ0ZXh0X2luc2VydCIsImNoYW5nZXMiLCJjdXJzb3Jfbm9ybWFsaXplX2RpZmYiLCJjdXJyZW50X3BvcyIsIm5leHRfcG9zIiwic3BsaXRfcG9zIiwiZF9sZWZ0IiwiZF9yaWdodCIsIm5vcm0iLCJuZGlmZnMiLCJjdXJzb3JfcG9pbnRlciIsImRfbmV4dCIsIm1lcmdlX3R1cGxlcyIsImNvbXBhY3QiLCJzdGFydHNfd2l0aF9wYWlyX2VuZCIsInN0ciIsImVuZHNfd2l0aF9wYWlyX3N0YXJ0IiwiZml4ZWRfZGlmZnMiLCJsZWZ0X2QiLCJyaWdodF9kIiwic2hpbSIsInN1cHBvcnRzQXJndW1lbnRzQ2xhc3MiLCJzdXBwb3J0ZWQiLCJ1bnN1cHBvcnRlZCIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwiaGFzIiwiRXZlbnRzIiwiRUUiLCJmbiIsIkV2ZW50RW1pdHRlciIsIl9ldmVudHMiLCJfZXZlbnRzQ291bnQiLCJldmVudE5hbWVzIiwiZXhpc3RzIiwiYXZhaWxhYmxlIiwiZWUiLCJhMSIsImEyIiwiYTMiLCJhNCIsImE1IiwibGVuIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJhZGRMaXN0ZW5lciIsInNldE1heExpc3RlbmVycyIsInByZWZpeGVkIiwibWF0Y2hUZXh0IiwibWF0Y2hTcGFjaW5nIiwibWF0Y2hOZXdsaW5lIiwibWF0Y2hCbG90IiwibWF0Y2hBdHRyaWJ1dG9yIiwiX2V4dGVuZDMiLCJfYWxpZ24iLCJfYmFja2dyb3VuZCIsIl9kaXJlY3Rpb24iLCJfZm9udCIsIl9zaXplIiwiRE9NX0tFWSIsIkNMSVBCT0FSRF9DT05GSUciLCJtYXRjaEJyZWFrIiwiRUxFTUVOVF9OT0RFIiwibWF0Y2hTdHlsZXMiLCJtYXRjaEluZGVudCIsIm1hdGNoQWxpYXMiLCJtYXRjaElnbm9yZSIsIkFUVFJJQlVURV9BVFRSSUJVVE9SUyIsIlNUWUxFX0FUVFJJQlVUT1JTIiwiQ2xpcGJvYXJkIiwib25QYXN0ZSIsIm1hdGNoZXJzIiwic2VsZWN0b3IiLCJtYXRjaGVyIiwibWF0Y2hWaXN1YWwiLCJhZGRNYXRjaGVyIiwiaW5uZXJUZXh0IiwiX3ByZXBhcmVNYXRjaGluZyIsInByZXBhcmVNYXRjaGluZyIsIl9wcmVwYXJlTWF0Y2hpbmcyIiwiZWxlbWVudE1hdGNoZXJzIiwidGV4dE1hdGNoZXJzIiwidHJhdmVyc2UiLCJkZWx0YUVuZHNXaXRoIiwicGFzdGUiLCJwYWlyIiwiX3BhaXIiLCJhcHBseUZvcm1hdCIsImNvbXB1dGVTdHlsZSIsIm5vZGVUeXBlIiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImVuZFRleHQiLCJjaGlsZHJlbkRlbHRhIiwibmV4dEVsZW1lbnRTaWJsaW5nIiwibm9kZUhlaWdodCIsIm9mZnNldEhlaWdodCIsInBhcnNlRmxvYXQiLCJtYXJnaW5Ub3AiLCJtYXJnaW5Cb3R0b20iLCJvZmZzZXRUb3AiLCJmb250U3R5bGUiLCJpdGFsaWMiLCJmb250V2VpZ2h0IiwiYm9sZCIsInRleHRJbmRlbnQiLCJ3aGl0ZVNwYWNlIiwicmVwbGFjZXIiLCJjb2xsYXBzZSIsIkJvbGQiLCJhZGRDb250cm9scyIsIlRvb2xiYXIiLCJfcmV0IiwiY29udHJvbHMiLCJhZGRIYW5kbGVyIiwiX3RoaXMkcXVpbGwkc2VsZWN0aW9uIiwiX3RoaXMkcXVpbGwkc2VsZWN0aW9uMiIsIl9xdWlsbCRzZWxlY3Rpb24kZ2V0UiIsIl9xdWlsbCRzZWxlY3Rpb24kZ2V0UjIiLCJwcm9tcHQiLCJhZGRCdXR0b24iLCJncm91cHMiLCJncm91cCIsImNvbnRyb2wiLCJhZGRTZWxlY3QiLCJjbGVhbiIsImRpcmVjdGlvbiIsImxpbmsiLCJDb2xvclBpY2tlciIsIl9QaWNrZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvckxhYmVsIiwic3Ryb2tlIiwiZmlsbCIsIkljb25QaWNrZXIiLCJkZWZhdWx0SXRlbSIsIlRvb2x0aXAiLCJURU1QTEFURSIsInJlZmVyZW5jZSIsIm9mZnNldFdpZHRoIiwicm9vdEJvdW5kcyIsInZlcnRpY2FsU2hpZnQiLCJzaG93IiwiX2Jhc2UiLCJfYmFzZTIiLCJfbGluayIsIl9saW5rMiIsIl9pY29ucyIsIl9pY29uczIiLCJUT09MQkFSX0NPTkZJRyIsIlNub3dUaGVtZSIsIl9CYXNlVGhlbWUiLCJTbm93VG9vbHRpcCIsIl9CYXNlVG9vbHRpcCIsIl9jb3JlIiwiX2NvcmUyIiwiX2luZGVudCIsIl9ibG9ja3F1b3RlIiwiX2Jsb2NrcXVvdGUyIiwiX2hlYWRlciIsIl9oZWFkZXIyIiwiX2xpc3QiLCJfbGlzdDIiLCJfYm9sZCIsIl9ib2xkMiIsIl9pdGFsaWMiLCJfaXRhbGljMiIsIl9zY3JpcHQiLCJfc2NyaXB0MiIsIl9zdHJpa2UiLCJfc3RyaWtlMiIsIl91bmRlcmxpbmUiLCJfdW5kZXJsaW5lMiIsIl9pbWFnZSIsIl9pbWFnZTIiLCJfdmlkZW8iLCJfdmlkZW8yIiwiX2Zvcm11bGEiLCJfZm9ybXVsYTIiLCJfc3ludGF4IiwiX3N5bnRheDIiLCJfdG9vbGJhciIsIl90b29sYmFyMiIsIl9idWJibGUiLCJfYnViYmxlMiIsIl9zbm93IiwiX3Nub3cyIiwiSW5kZW50Q2xhc3MiLCJMaXN0SXRlbSIsIklkZW50QXR0cmlidXRvciIsIkJsb2NrcXVvdGUiLCJIZWFkZXIiLCJMaXN0IiwiX0NvbnRhaW5lciIsImxpc3RFdmVudEhhbmRsZXIiLCJJdGFsaWMiLCJfQm9sZCIsIlNjcmlwdCIsIlN0cmlrZSIsIlVuZGVybGluZSIsIkFUVFJJQlVURVMiLCJJbWFnZSIsIlZpZGVvIiwiX0Jsb2NrRW1iZWQiLCJGb3JtdWxhQmxvdCIsIl9FbWJlZCIsImthdGV4IiwicmVuZGVyIiwidGhyb3dPbkVycm9yIiwiZXJyb3JDb2xvciIsIkZvcm11bGEiLCJDb2RlVG9rZW4iLCJTeW50YXhDb2RlQmxvY2siLCJfQ29kZUJsb2NrIiwiaGlnaGxpZ2h0IiwiX2hpZ2hsaWdodCIsImNhY2hlZFRleHQiLCJTeW50YXgiLCJ0aW1lciIsImNsZWFyVGltZW91dCIsImludGVydmFsIiwiY29kZSIsImhsanMiLCJoaWdobGlnaHRBdXRvIiwiQnViYmxlVG9vbHRpcCIsIkJ1YmJsZVRoZW1lIiwibGFzdExpbmUiLCJfYm91bmRzIiwiYXJyb3ciLCJtYXJnaW5MZWZ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/quill/dist/quill.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-quill/lib/index.js":
/*!***********************************************!*\
  !*** ./node_modules/react-quill/lib/index.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\nReact-Quill\nhttps://github.com/zenoamaro/react-quill\n*/ var __extends = (void 0) && (void 0).__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = (void 0) && (void 0).__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (void 0) && (void 0).__spreadArrays || function() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n};\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nvar react_dom_1 = __importDefault(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\nvar isEqual_1 = __importDefault(__webpack_require__(/*! lodash/isEqual */ \"(app-pages-browser)/./node_modules/lodash/isEqual.js\"));\nvar quill_1 = __importDefault(__webpack_require__(/*! quill */ \"(app-pages-browser)/./node_modules/quill/dist/quill.js\"));\nvar ReactQuill = /** @class */ function(_super) {\n    __extends(ReactQuill, _super);\n    function ReactQuill(props) {\n        var _this = _super.call(this, props) || this;\n        /*\n        Changing one of these props should cause a full re-render and a\n        re-instantiation of the Quill editor.\n        */ _this.dirtyProps = [\n            \"modules\",\n            \"formats\",\n            \"bounds\",\n            \"theme\",\n            \"children\"\n        ];\n        /*\n        Changing one of these props should cause a regular update. These are mostly\n        props that act on the container, rather than the quillized editing area.\n        */ _this.cleanProps = [\n            \"id\",\n            \"className\",\n            \"style\",\n            \"placeholder\",\n            \"tabIndex\",\n            \"onChange\",\n            \"onChangeSelection\",\n            \"onFocus\",\n            \"onBlur\",\n            \"onKeyPress\",\n            \"onKeyDown\",\n            \"onKeyUp\"\n        ];\n        _this.state = {\n            generation: 0\n        };\n        /*\n        Tracks the internal selection of the Quill editor\n        */ _this.selection = null;\n        _this.onEditorChange = function(eventName, rangeOrDelta, oldRangeOrDelta, source) {\n            var _a, _b, _c, _d;\n            if (eventName === \"text-change\") {\n                (_b = (_a = _this).onEditorChangeText) === null || _b === void 0 ? void 0 : _b.call(_a, _this.editor.root.innerHTML, rangeOrDelta, source, _this.unprivilegedEditor);\n            } else if (eventName === \"selection-change\") {\n                (_d = (_c = _this).onEditorChangeSelection) === null || _d === void 0 ? void 0 : _d.call(_c, rangeOrDelta, source, _this.unprivilegedEditor);\n            }\n        };\n        var value = _this.isControlled() ? props.value : props.defaultValue;\n        _this.value = value !== null && value !== void 0 ? value : \"\";\n        return _this;\n    }\n    ReactQuill.prototype.validateProps = function(props) {\n        var _a;\n        if (react_1.default.Children.count(props.children) > 1) throw new Error(\"The Quill editing area can only be composed of a single React element.\");\n        if (react_1.default.Children.count(props.children)) {\n            var child = react_1.default.Children.only(props.children);\n            if (((_a = child) === null || _a === void 0 ? void 0 : _a.type) === \"textarea\") throw new Error(\"Quill does not support editing on a <textarea>. Use a <div> instead.\");\n        }\n        if (this.lastDeltaChangeSet && props.value === this.lastDeltaChangeSet) throw new Error(\"You are passing the `delta` object from the `onChange` event back \" + \"as `value`. You most probably want `editor.getContents()` instead. \" + \"See: https://github.com/zenoamaro/react-quill#using-deltas\");\n    };\n    ReactQuill.prototype.shouldComponentUpdate = function(nextProps, nextState) {\n        var _this = this;\n        var _a;\n        this.validateProps(nextProps);\n        // If the editor hasn't been instantiated yet, or the component has been\n        // regenerated, we already know we should update.\n        if (!this.editor || this.state.generation !== nextState.generation) {\n            return true;\n        }\n        // Handle value changes in-place\n        if (\"value\" in nextProps) {\n            var prevContents = this.getEditorContents();\n            var nextContents = (_a = nextProps.value, _a !== null && _a !== void 0 ? _a : \"\");\n            // NOTE: Seeing that Quill is missing a way to prevent edits, we have to\n            //       settle for a hybrid between controlled and uncontrolled mode. We\n            //       can't prevent the change, but we'll still override content\n            //       whenever `value` differs from current state.\n            // NOTE: Comparing an HTML string and a Quill Delta will always trigger a\n            //       change, regardless of whether they represent the same document.\n            if (!this.isEqualValue(nextContents, prevContents)) {\n                this.setEditorContents(this.editor, nextContents);\n            }\n        }\n        // Handle read-only changes in-place\n        if (nextProps.readOnly !== this.props.readOnly) {\n            this.setEditorReadOnly(this.editor, nextProps.readOnly);\n        }\n        // Clean and Dirty props require a render\n        return __spreadArrays(this.cleanProps, this.dirtyProps).some(function(prop) {\n            return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n        });\n    };\n    ReactQuill.prototype.shouldComponentRegenerate = function(nextProps) {\n        var _this = this;\n        // Whenever a `dirtyProp` changes, the editor needs reinstantiation.\n        return this.dirtyProps.some(function(prop) {\n            return !isEqual_1.default(nextProps[prop], _this.props[prop]);\n        });\n    };\n    ReactQuill.prototype.componentDidMount = function() {\n        this.instantiateEditor();\n        this.setEditorContents(this.editor, this.getEditorContents());\n    };\n    ReactQuill.prototype.componentWillUnmount = function() {\n        this.destroyEditor();\n    };\n    ReactQuill.prototype.componentDidUpdate = function(prevProps, prevState) {\n        var _this = this;\n        // If we're changing one of the `dirtyProps`, the entire Quill Editor needs\n        // to be re-instantiated. Regenerating the editor will cause the whole tree,\n        // including the container, to be cleaned up and re-rendered from scratch.\n        // Store the contents so they can be restored later.\n        if (this.editor && this.shouldComponentRegenerate(prevProps)) {\n            var delta = this.editor.getContents();\n            var selection = this.editor.getSelection();\n            this.regenerationSnapshot = {\n                delta: delta,\n                selection: selection\n            };\n            this.setState({\n                generation: this.state.generation + 1\n            });\n            this.destroyEditor();\n        }\n        // The component has been regenerated, so it must be re-instantiated, and\n        // its content must be restored to the previous values from the snapshot.\n        if (this.state.generation !== prevState.generation) {\n            var _a = this.regenerationSnapshot, delta = _a.delta, selection_1 = _a.selection;\n            delete this.regenerationSnapshot;\n            this.instantiateEditor();\n            var editor_1 = this.editor;\n            editor_1.setContents(delta);\n            postpone(function() {\n                return _this.setEditorSelection(editor_1, selection_1);\n            });\n        }\n    };\n    ReactQuill.prototype.instantiateEditor = function() {\n        if (this.editor) {\n            this.hookEditor(this.editor);\n        } else {\n            this.editor = this.createEditor(this.getEditingArea(), this.getEditorConfig());\n        }\n    };\n    ReactQuill.prototype.destroyEditor = function() {\n        if (!this.editor) return;\n        this.unhookEditor(this.editor);\n    };\n    /*\n    We consider the component to be controlled if `value` is being sent in props.\n    */ ReactQuill.prototype.isControlled = function() {\n        return \"value\" in this.props;\n    };\n    ReactQuill.prototype.getEditorConfig = function() {\n        return {\n            bounds: this.props.bounds,\n            formats: this.props.formats,\n            modules: this.props.modules,\n            placeholder: this.props.placeholder,\n            readOnly: this.props.readOnly,\n            scrollingContainer: this.props.scrollingContainer,\n            tabIndex: this.props.tabIndex,\n            theme: this.props.theme\n        };\n    };\n    ReactQuill.prototype.getEditor = function() {\n        if (!this.editor) throw new Error(\"Accessing non-instantiated editor\");\n        return this.editor;\n    };\n    /**\n    Creates an editor on the given element. The editor will be passed the\n    configuration, have its events bound,\n    */ ReactQuill.prototype.createEditor = function(element, config) {\n        var editor = new quill_1.default(element, config);\n        if (config.tabIndex != null) {\n            this.setEditorTabIndex(editor, config.tabIndex);\n        }\n        this.hookEditor(editor);\n        return editor;\n    };\n    ReactQuill.prototype.hookEditor = function(editor) {\n        // Expose the editor on change events via a weaker, unprivileged proxy\n        // object that does not allow accidentally modifying editor state.\n        this.unprivilegedEditor = this.makeUnprivilegedEditor(editor);\n        // Using `editor-change` allows picking up silent updates, like selection\n        // changes on typing.\n        editor.on(\"editor-change\", this.onEditorChange);\n    };\n    ReactQuill.prototype.unhookEditor = function(editor) {\n        editor.off(\"editor-change\", this.onEditorChange);\n    };\n    ReactQuill.prototype.getEditorContents = function() {\n        return this.value;\n    };\n    ReactQuill.prototype.getEditorSelection = function() {\n        return this.selection;\n    };\n    /*\n    True if the value is a Delta instance or a Delta look-alike.\n    */ ReactQuill.prototype.isDelta = function(value) {\n        return value && value.ops;\n    };\n    /*\n    Special comparison function that knows how to compare Deltas.\n    */ ReactQuill.prototype.isEqualValue = function(value, nextValue) {\n        if (this.isDelta(value) && this.isDelta(nextValue)) {\n            return isEqual_1.default(value.ops, nextValue.ops);\n        } else {\n            return isEqual_1.default(value, nextValue);\n        }\n    };\n    /*\n    Replace the contents of the editor, but keep the previous selection hanging\n    around so that the cursor won't move.\n    */ ReactQuill.prototype.setEditorContents = function(editor, value) {\n        var _this = this;\n        this.value = value;\n        var sel = this.getEditorSelection();\n        if (typeof value === \"string\") {\n            editor.setContents(editor.clipboard.convert(value));\n        } else {\n            editor.setContents(value);\n        }\n        postpone(function() {\n            return _this.setEditorSelection(editor, sel);\n        });\n    };\n    ReactQuill.prototype.setEditorSelection = function(editor, range) {\n        this.selection = range;\n        if (range) {\n            // Validate bounds before applying.\n            var length_1 = editor.getLength();\n            range.index = Math.max(0, Math.min(range.index, length_1 - 1));\n            range.length = Math.max(0, Math.min(range.length, length_1 - 1 - range.index));\n            editor.setSelection(range);\n        }\n    };\n    ReactQuill.prototype.setEditorTabIndex = function(editor, tabIndex) {\n        var _a, _b;\n        if ((_b = (_a = editor) === null || _a === void 0 ? void 0 : _a.scroll) === null || _b === void 0 ? void 0 : _b.domNode) {\n            editor.scroll.domNode.tabIndex = tabIndex;\n        }\n    };\n    ReactQuill.prototype.setEditorReadOnly = function(editor, value) {\n        if (value) {\n            editor.disable();\n        } else {\n            editor.enable();\n        }\n    };\n    /*\n    Returns a weaker, unprivileged proxy object that only exposes read-only\n    accessors found on the editor instance, without any state-modifying methods.\n    */ ReactQuill.prototype.makeUnprivilegedEditor = function(editor) {\n        var e = editor;\n        return {\n            getHTML: function() {\n                return e.root.innerHTML;\n            },\n            getLength: e.getLength.bind(e),\n            getText: e.getText.bind(e),\n            getContents: e.getContents.bind(e),\n            getSelection: e.getSelection.bind(e),\n            getBounds: e.getBounds.bind(e)\n        };\n    };\n    ReactQuill.prototype.getEditingArea = function() {\n        if (!this.editingArea) {\n            throw new Error(\"Instantiating on missing editing area\");\n        }\n        var element = react_dom_1.default.findDOMNode(this.editingArea);\n        if (!element) {\n            throw new Error(\"Cannot find element for editing area\");\n        }\n        if (element.nodeType === 3) {\n            throw new Error(\"Editing area cannot be a text node\");\n        }\n        return element;\n    };\n    /*\n    Renders an editor area, unless it has been provided one to clone.\n    */ ReactQuill.prototype.renderEditingArea = function() {\n        var _this = this;\n        var _a = this.props, children = _a.children, preserveWhitespace = _a.preserveWhitespace;\n        var generation = this.state.generation;\n        var properties = {\n            key: generation,\n            ref: function(instance) {\n                _this.editingArea = instance;\n            }\n        };\n        if (react_1.default.Children.count(children)) {\n            return react_1.default.cloneElement(react_1.default.Children.only(children), properties);\n        }\n        return preserveWhitespace ? react_1.default.createElement(\"pre\", __assign({}, properties)) : react_1.default.createElement(\"div\", __assign({}, properties));\n    };\n    ReactQuill.prototype.render = function() {\n        var _a;\n        return react_1.default.createElement(\"div\", {\n            id: this.props.id,\n            style: this.props.style,\n            key: this.state.generation,\n            className: \"quill \" + (_a = this.props.className, _a !== null && _a !== void 0 ? _a : \"\"),\n            onKeyPress: this.props.onKeyPress,\n            onKeyDown: this.props.onKeyDown,\n            onKeyUp: this.props.onKeyUp\n        }, this.renderEditingArea());\n    };\n    ReactQuill.prototype.onEditorChangeText = function(value, delta, source, editor) {\n        var _a, _b;\n        if (!this.editor) return;\n        // We keep storing the same type of value as what the user gives us,\n        // so that value comparisons will be more stable and predictable.\n        var nextContents = this.isDelta(this.value) ? editor.getContents() : editor.getHTML();\n        if (nextContents !== this.getEditorContents()) {\n            // Taint this `delta` object, so we can recognize whether the user\n            // is trying to send it back as `value`, preventing a likely loop.\n            this.lastDeltaChangeSet = delta;\n            this.value = nextContents;\n            (_b = (_a = this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value, delta, source, editor);\n        }\n    };\n    ReactQuill.prototype.onEditorChangeSelection = function(nextSelection, source, editor) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.editor) return;\n        var currentSelection = this.getEditorSelection();\n        var hasGainedFocus = !currentSelection && nextSelection;\n        var hasLostFocus = currentSelection && !nextSelection;\n        if (isEqual_1.default(nextSelection, currentSelection)) return;\n        this.selection = nextSelection;\n        (_b = (_a = this.props).onChangeSelection) === null || _b === void 0 ? void 0 : _b.call(_a, nextSelection, source, editor);\n        if (hasGainedFocus) {\n            (_d = (_c = this.props).onFocus) === null || _d === void 0 ? void 0 : _d.call(_c, nextSelection, source, editor);\n        } else if (hasLostFocus) {\n            (_f = (_e = this.props).onBlur) === null || _f === void 0 ? void 0 : _f.call(_e, currentSelection, source, editor);\n        }\n    };\n    ReactQuill.prototype.focus = function() {\n        if (!this.editor) return;\n        this.editor.focus();\n    };\n    ReactQuill.prototype.blur = function() {\n        if (!this.editor) return;\n        this.selection = null;\n        this.editor.blur();\n    };\n    ReactQuill.displayName = \"React Quill\";\n    /*\n    Export Quill to be able to call `register`\n    */ ReactQuill.Quill = quill_1.default;\n    ReactQuill.defaultProps = {\n        theme: \"snow\",\n        modules: {},\n        readOnly: false\n    };\n    return ReactQuill;\n}(react_1.default.Component);\n/*\nSmall helper to execute a function in the next micro-tick.\n*/ function postpone(fn) {\n    Promise.resolve().then(fn);\n}\nmodule.exports = ReactQuill; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-quill/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-quill/dist/quill.snow.css":
/*!******************************************************!*\
  !*** ./node_modules/react-quill/dist/quill.snow.css ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"01a52a1220d3\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1xdWlsbC9kaXN0L3F1aWxsLnNub3cuY3NzIiwibWFwcGluZ3MiOiI7QUFBQSwrREFBZSxjQUFjO0FBQzdCLElBQUksSUFBVSxJQUFJLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtcXVpbGwvZGlzdC9xdWlsbC5zbm93LmNzcz9iNmJiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiMDFhNTJhMTIyMGQzXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-quill/dist/quill.snow.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/styles/styles.css":
/*!*******************************!*\
  !*** ./src/styles/styles.css ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"9acbe1c2dd56\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzPzFjZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI5YWNiZTFjMmRkNTZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/styles/styles.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/add-locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/client/add-locale.js ***!
  \*****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addLocale\", ({\n    enumerable: true,\n    get: function() {\n        return addLocale;\n    }\n}));\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst addLocale = function(path) {\n    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        args[_key - 1] = arguments[_key];\n    }\n    if (false) {}\n    return path;\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=add-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1sb2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLDBCQUEwQkMsbUJBQU9BLENBQUMsbUhBQTRCO0FBQ3BFLE1BQU1GLFlBQVksU0FBU0csSUFBSTtJQUMzQixJQUFJLElBQUlDLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsT0FBTyxJQUFJQyxNQUFNSixPQUFPLElBQUlBLE9BQU8sSUFBSSxJQUFJSyxPQUFPLEdBQUdBLE9BQU9MLE1BQU1LLE9BQU87UUFDdEdGLElBQUksQ0FBQ0UsT0FBTyxFQUFFLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztJQUNwQztJQUNBLElBQUlDLEtBQStCLEVBQUUsRUFFcEM7SUFDRCxPQUFPUDtBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU9QLFFBQVFrQixPQUFPLEtBQUssY0FBZSxPQUFPbEIsUUFBUWtCLE9BQU8sS0FBSyxZQUFZbEIsUUFBUWtCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT2xCLFFBQVFrQixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLckIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRa0IsT0FBTyxFQUFFLGNBQWM7UUFBRWpCLE9BQU87SUFBSztJQUNuRUgsT0FBT3NCLE1BQU0sQ0FBQ3BCLFFBQVFrQixPQUFPLEVBQUVsQjtJQUMvQnFCLE9BQU9yQixPQUFPLEdBQUdBLFFBQVFrQixPQUFPO0FBQ2xDLEVBRUEsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2FkZC1sb2NhbGUuanM/ZTJkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFkZExvY2FsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWRkTG9jYWxlO1xuICAgIH1cbn0pO1xuY29uc3QgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBhZGRMb2NhbGUgPSBmdW5jdGlvbihwYXRoKSB7XG4gICAgZm9yKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKXtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIHJldHVybiAoMCwgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2gubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gpKHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtbG9jYWxlXCIpLmFkZExvY2FsZShwYXRoLCAuLi5hcmdzKSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiYWRkTG9jYWxlIiwiX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2giLCJyZXF1aXJlIiwicGF0aCIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9JMThOX1NVUFBPUlQiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/add-locale.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getDomainLocale\", ({\n    enumerable: true,\n    get: function() {\n        return getDomainLocale;\n    }\n}));\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2dldC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCxtREFBa0Q7SUFDOUNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQywwQkFBMEJDLG1CQUFPQSxDQUFDLG1IQUE0QjtBQUNwRSxNQUFNQyxXQUFXQyxNQUFrQyxJQUFJO0FBQ3ZELFNBQVNKLGdCQUFnQk8sSUFBSSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsYUFBYTtJQUN6RCxJQUFJTixLQUErQixFQUFFLEVBV3BDLE1BQU07UUFDSCxPQUFPO0lBQ1g7QUFDSjtBQUVBLElBQUksQ0FBQyxPQUFPUixRQUFRMkIsT0FBTyxLQUFLLGNBQWUsT0FBTzNCLFFBQVEyQixPQUFPLEtBQUssWUFBWTNCLFFBQVEyQixPQUFPLEtBQUssSUFBSSxLQUFNLE9BQU8zQixRQUFRMkIsT0FBTyxDQUFDQyxVQUFVLEtBQUssYUFBYTtJQUNySzlCLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUTJCLE9BQU8sRUFBRSxjQUFjO1FBQUUxQixPQUFPO0lBQUs7SUFDbkVILE9BQU8rQixNQUFNLENBQUM3QixRQUFRMkIsT0FBTyxFQUFFM0I7SUFDL0I4QixPQUFPOUIsT0FBTyxHQUFHQSxRQUFRMkIsT0FBTztBQUNsQyxFQUVBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0RG9tYWluTG9jYWxlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXREb21haW5Mb2NhbGU7XG4gICAgfVxufSk7XG5jb25zdCBfbm9ybWFsaXpldHJhaWxpbmdzbGFzaCA9IHJlcXVpcmUoXCIuL25vcm1hbGl6ZS10cmFpbGluZy1zbGFzaFwiKTtcbmNvbnN0IGJhc2VQYXRoID0gcHJvY2Vzcy5lbnYuX19ORVhUX1JPVVRFUl9CQVNFUEFUSCB8fCBcIlwiO1xuZnVuY3Rpb24gZ2V0RG9tYWluTG9jYWxlKHBhdGgsIGxvY2FsZSwgbG9jYWxlcywgZG9tYWluTG9jYWxlcykge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IG5vcm1hbGl6ZUxvY2FsZVBhdGggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtbG9jYWxlLXBhdGhcIikubm9ybWFsaXplTG9jYWxlUGF0aDtcbiAgICAgICAgY29uc3QgZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZShcIi4vZGV0ZWN0LWRvbWFpbi1sb2NhbGVcIikuZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBsb2NhbGUgfHwgbm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZG9tYWluID0gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgdGFyZ2V0KTtcbiAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgY29uc3QgcHJvdG8gPSBcImh0dHBcIiArIChkb21haW4uaHR0cCA/IFwiXCIgOiBcInNcIikgKyBcIjovL1wiO1xuICAgICAgICAgICAgY29uc3QgZmluYWxMb2NhbGUgPSB0YXJnZXQgPT09IGRvbWFpbi5kZWZhdWx0TG9jYWxlID8gXCJcIiA6IFwiL1wiICsgdGFyZ2V0O1xuICAgICAgICAgICAgcmV0dXJuIFwiXCIgKyBwcm90byArIGRvbWFpbi5kb21haW4gKyAoMCwgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2gubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gpKFwiXCIgKyBiYXNlUGF0aCArIGZpbmFsTG9jYWxlICsgcGF0aCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJnZXREb21haW5Mb2NhbGUiLCJfbm9ybWFsaXpldHJhaWxpbmdzbGFzaCIsInJlcXVpcmUiLCJiYXNlUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJfX05FWFRfUk9VVEVSX0JBU0VQQVRIIiwicGF0aCIsImxvY2FsZSIsImxvY2FsZXMiLCJkb21haW5Mb2NhbGVzIiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJ0YXJnZXQiLCJkZXRlY3RlZExvY2FsZSIsImRvbWFpbiIsInVuZGVmaW5lZCIsInByb3RvIiwiaHR0cCIsImZpbmFsTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsIm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoIiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* __next_internal_client_entry_do_not_use__  cjs */ \nvar _s = $RefreshSig$();\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _jsxruntime = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst _resolvehref = __webpack_require__(/*! ./resolve-href */ \"(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js\");\nconst _islocalurl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _formaturl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _utils = __webpack_require__(/*! ../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _addlocale = __webpack_require__(/*! ./add-locale */ \"(app-pages-browser)/./node_modules/next/dist/client/add-locale.js\");\nconst _routercontextsharedruntime = __webpack_require__(/*! ../shared/lib/router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\");\nconst _approutercontextsharedruntime = __webpack_require__(/*! ../shared/lib/app-router-context.shared-runtime */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/app-router-context.shared-runtime.js\");\nconst _useintersection = __webpack_require__(/*! ./use-intersection */ \"(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js\");\nconst _getdomainlocale = __webpack_require__(/*! ./get-domain-locale */ \"(app-pages-browser)/./node_modules/next/dist/client/get-domain-locale.js\");\nconst _addbasepath = __webpack_require__(/*! ./add-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/add-base-path.js\");\nconst _routerreducertypes = __webpack_require__(/*! ./components/router-reducer/router-reducer-types */ \"(app-pages-browser)/./node_modules/next/dist/client/components/router-reducer/router-reducer-types.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options, appOptions, isAppRouter) {\n    if (false) {}\n    // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    if (!isAppRouter && !(0, _islocalurl.isLocalURL)(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    const prefetchPromise = isAppRouter ? router.prefetch(href, appOptions) : router.prefetch(href, as, options);\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(prefetchPromise).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute(\"target\");\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || // triggers resource download\n    event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter) {\n    const { nodeName } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    !isAppRouter && !(0, _islocalurl.isLocalURL)(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        const routerScroll = scroll != null ? scroll : true;\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll: routerScroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                scroll: routerScroll\n            });\n        }\n    };\n    if (isAppRouter) {\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formaturl.formatUrl)(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _s(_react.default.forwardRef(_c = _s(function LinkComponent(props, forwardedRef) {\n    _s();\n    let children;\n    const { href: hrefProp, as: asProp, children: childrenProp, prefetch: prefetchProp = null, passHref, replace, shallow, scroll, locale, onClick, onMouseEnter: onMouseEnterProp, onTouchStart: onTouchStartProp, legacyBehavior = false, ...restProps } = props;\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n            children: children\n        });\n    }\n    const pagesRouter = _react.default.useContext(_routercontextsharedruntime.RouterContext);\n    const appRouter = _react.default.useContext(_approutercontextsharedruntime.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    const prefetchEnabled = prefetchProp !== false;\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */ const appPrefetchKind = prefetchProp === null ? _routerreducertypes.PrefetchKind.AUTO : _routerreducertypes.PrefetchKind.FULL;\n    if (true) {\n        function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\" + args.key + \"` expects a \" + args.expected + \" in `<Link>`, but got `\" + args.actual + \"` instead.\" + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current && !isAppRouter) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(\"Dynamic href `\" + href + \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\");\n                }\n            }\n        }\n    }\n    const { href, as } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _resolvehref.resolveHref)(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _resolvehref.resolveHref)(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link');\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `' + hrefProp + '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link');\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(\"No children were passed to <Link> with `href` of `\" + hrefProp + \"` but one child is required https://nextjs.org/docs/messages/link-no-children\");\n                }\n                throw new Error(\"Multiple children were passed to <Link> with `href` of `\" + hrefProp + \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\" + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n            }\n        } else {}\n    } else {\n        if (true) {\n            if ((children == null ? void 0 : children.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useintersection.useIntersection)({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        }, {\n            kind: appPrefetchKind\n        }, isAppRouter);\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router,\n        isAppRouter,\n        appPrefetchKind\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if ((!prefetchEnabled || \"development\" === \"development\") && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, {\n                kind: appPrefetchKind\n            }, isAppRouter);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if ((0, _utils.isAbsoluteUrl)(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getdomainlocale.getDomainLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addbasepath.addBasePath)((0, _addlocale.addLocale)(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ (0, _jsxruntime.jsx)(\"a\", {\n        ...restProps,\n        ...childProps,\n        children: children\n    });\n}, \"wKD5mb5mk47bkaStGb/Fvd6RWZE=\")), \"wKD5mb5mk47bkaStGb/Fvd6RWZE=\");\n_c1 = Link;\nconst _default = Link;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Link$_react.default.forwardRef\");\n$RefreshReg$(_c1, \"Link\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2xpbmsuanMiLCJtYXBwaW5ncyI6Ijs7QUFFQTtBQUNBQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsY0FBY0QsbUJBQU9BLENBQUMscUdBQW1CO0FBQy9DLE1BQU1FLFNBQVMsV0FBVyxHQUFHSCx5QkFBeUJJLENBQUMsQ0FBQ0gsbUJBQU9BLENBQUMsbUZBQU87QUFDdkUsTUFBTUksZUFBZUosbUJBQU9BLENBQUMsMkZBQWdCO0FBQzdDLE1BQU1LLGNBQWNMLG1CQUFPQSxDQUFDLHFJQUF5QztBQUNyRSxNQUFNTSxhQUFhTixtQkFBT0EsQ0FBQyxpSUFBdUM7QUFDbEUsTUFBTU8sU0FBU1AsbUJBQU9BLENBQUMsNkZBQXFCO0FBQzVDLE1BQU1RLGFBQWFSLG1CQUFPQSxDQUFDLHVGQUFjO0FBQ3pDLE1BQU1TLDhCQUE4QlQsbUJBQU9BLENBQUMsNklBQTZDO0FBQ3pGLE1BQU1VLGlDQUFpQ1YsbUJBQU9BLENBQUMscUpBQWlEO0FBQ2hHLE1BQU1XLG1CQUFtQlgsbUJBQU9BLENBQUMsbUdBQW9CO0FBQ3JELE1BQU1ZLG1CQUFtQlosbUJBQU9BLENBQUMscUdBQXFCO0FBQ3RELE1BQU1hLGVBQWViLG1CQUFPQSxDQUFDLDZGQUFpQjtBQUM5QyxNQUFNYyxzQkFBc0JkLG1CQUFPQSxDQUFDLCtKQUFrRDtBQUN0RixNQUFNZSxhQUFhLElBQUlDO0FBQ3ZCLFNBQVNDLFNBQVNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxFQUFFLEVBQUVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxXQUFXO0lBQ2hFLElBQUksS0FBNkIsRUFBRSxFQUVsQztJQUNELGdK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LE9BQU8sRUFBRSxjQUFjO1FBQUVqRSxPQUFPO0lBQUs7SUFDbkVILE9BQU9vSyxNQUFNLENBQUNsSyxRQUFRa0UsT0FBTyxFQUFFbEU7SUFDL0JtSyxPQUFPbkssT0FBTyxHQUFHQSxRQUFRa0UsT0FBTztBQUNsQyxFQUVBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9saW5rLmpzP2U0ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2RlZmF1bHQ7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX2pzeHJ1bnRpbWUgPSByZXF1aXJlKFwicmVhY3QvanN4LXJ1bnRpbWVcIik7XG5jb25zdCBfcmVhY3QgPSAvKiNfX1BVUkVfXyovIF9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdC5fKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBfcmVzb2x2ZWhyZWYgPSByZXF1aXJlKFwiLi9yZXNvbHZlLWhyZWZcIik7XG5jb25zdCBfaXNsb2NhbHVybCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1sb2NhbC11cmxcIik7XG5jb25zdCBfZm9ybWF0dXJsID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC11cmxcIik7XG5jb25zdCBfdXRpbHMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi91dGlsc1wiKTtcbmNvbnN0IF9hZGRsb2NhbGUgPSByZXF1aXJlKFwiLi9hZGQtbG9jYWxlXCIpO1xuY29uc3QgX3JvdXRlcmNvbnRleHRzaGFyZWRydW50aW1lID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWVcIik7XG5jb25zdCBfYXBwcm91dGVyY29udGV4dHNoYXJlZHJ1bnRpbWUgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWVcIik7XG5jb25zdCBfdXNlaW50ZXJzZWN0aW9uID0gcmVxdWlyZShcIi4vdXNlLWludGVyc2VjdGlvblwiKTtcbmNvbnN0IF9nZXRkb21haW5sb2NhbGUgPSByZXF1aXJlKFwiLi9nZXQtZG9tYWluLWxvY2FsZVwiKTtcbmNvbnN0IF9hZGRiYXNlcGF0aCA9IHJlcXVpcmUoXCIuL2FkZC1iYXNlLXBhdGhcIik7XG5jb25zdCBfcm91dGVycmVkdWNlcnR5cGVzID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9yb3V0ZXItcmVkdWNlci9yb3V0ZXItcmVkdWNlci10eXBlc1wiKTtcbmNvbnN0IHByZWZldGNoZWQgPSBuZXcgU2V0KCk7XG5mdW5jdGlvbiBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCBvcHRpb25zLCBhcHBPcHRpb25zLCBpc0FwcFJvdXRlcikge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gYXBwLXJvdXRlciBzdXBwb3J0cyBleHRlcm5hbCB1cmxzIG91dCBvZiB0aGUgYm94IHNvIGl0IHNob3VsZG4ndCBzaG9ydC1jaXJjdWl0IGhlcmUgYXMgc3VwcG9ydCBmb3IgZS5nLiBgcmVwbGFjZWAgaXMgYWRkZWQgaW4gdGhlIGFwcC1yb3V0ZXIuXG4gICAgaWYgKCFpc0FwcFJvdXRlciAmJiAhKDAsIF9pc2xvY2FsdXJsLmlzTG9jYWxVUkwpKGhyZWYpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gV2Ugc2hvdWxkIG9ubHkgZGVkdXBlIHJlcXVlc3RzIHdoZW4gZXhwZXJpbWVudGFsLm9wdGltaXN0aWNDbGllbnRDYWNoZSBpc1xuICAgIC8vIGRpc2FibGVkLlxuICAgIGlmICghb3B0aW9ucy5ieXBhc3NQcmVmZXRjaGVkQ2hlY2spIHtcbiAgICAgICAgY29uc3QgbG9jYWxlID0gLy8gTGV0IHRoZSBsaW5rJ3MgbG9jYWxlIHByb3Agb3ZlcnJpZGUgdGhlIGRlZmF1bHQgcm91dGVyIGxvY2FsZS5cbiAgICAgICAgdHlwZW9mIG9wdGlvbnMubG9jYWxlICE9PSBcInVuZGVmaW5lZFwiID8gb3B0aW9ucy5sb2NhbGUgOiBcImxvY2FsZVwiIGluIHJvdXRlciA/IHJvdXRlci5sb2NhbGUgOiB1bmRlZmluZWQ7XG4gICAgICAgIGNvbnN0IHByZWZldGNoZWRLZXkgPSBocmVmICsgXCIlXCIgKyBhcyArIFwiJVwiICsgbG9jYWxlO1xuICAgICAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGZldGNoZWQgdGhlIGtleSwgdGhlbiBkb24ndCBwcmVmZXRjaCBpdCBhZ2FpbiFcbiAgICAgICAgaWYgKHByZWZldGNoZWQuaGFzKHByZWZldGNoZWRLZXkpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gTWFyayB0aGlzIFVSTCBhcyBwcmVmZXRjaGVkLlxuICAgICAgICBwcmVmZXRjaGVkLmFkZChwcmVmZXRjaGVkS2V5KTtcbiAgICB9XG4gICAgY29uc3QgcHJlZmV0Y2hQcm9taXNlID0gaXNBcHBSb3V0ZXIgPyByb3V0ZXIucHJlZmV0Y2goaHJlZiwgYXBwT3B0aW9ucykgOiByb3V0ZXIucHJlZmV0Y2goaHJlZiwgYXMsIG9wdGlvbnMpO1xuICAgIC8vIFByZWZldGNoIHRoZSBKU09OIHBhZ2UgaWYgYXNrZWQgKG9ubHkgaW4gdGhlIGNsaWVudClcbiAgICAvLyBXZSBuZWVkIHRvIGhhbmRsZSBhIHByZWZldGNoIGVycm9yIGhlcmUgc2luY2Ugd2UgbWF5IGJlXG4gICAgLy8gbG9hZGluZyB3aXRoIHByaW9yaXR5IHdoaWNoIGNhbiByZWplY3QgYnV0IHdlIGRvbid0XG4gICAgLy8gd2FudCB0byBmb3JjZSBuYXZpZ2F0aW9uIHNpbmNlIHRoaXMgaXMgb25seSBhIHByZWZldGNoXG4gICAgUHJvbWlzZS5yZXNvbHZlKHByZWZldGNoUHJvbWlzZSkuY2F0Y2goKGVycik9PntcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgLy8gcmV0aHJvdyB0byBzaG93IGludmFsaWQgVVJMIGVycm9yc1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5mdW5jdGlvbiBpc01vZGlmaWVkRXZlbnQoZXZlbnQpIHtcbiAgICBjb25zdCBldmVudFRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnRUYXJnZXQuZ2V0QXR0cmlidXRlKFwidGFyZ2V0XCIpO1xuICAgIHJldHVybiB0YXJnZXQgJiYgdGFyZ2V0ICE9PSBcIl9zZWxmXCIgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5jdHJsS2V5IHx8IGV2ZW50LnNoaWZ0S2V5IHx8IGV2ZW50LmFsdEtleSB8fCAvLyB0cmlnZ2VycyByZXNvdXJjZSBkb3dubG9hZFxuICAgIGV2ZW50Lm5hdGl2ZUV2ZW50ICYmIGV2ZW50Lm5hdGl2ZUV2ZW50LndoaWNoID09PSAyO1xufVxuZnVuY3Rpb24gbGlua0NsaWNrZWQoZSwgcm91dGVyLCBocmVmLCBhcywgcmVwbGFjZSwgc2hhbGxvdywgc2Nyb2xsLCBsb2NhbGUsIGlzQXBwUm91dGVyKSB7XG4gICAgY29uc3QgeyBub2RlTmFtZSB9ID0gZS5jdXJyZW50VGFyZ2V0O1xuICAgIC8vIGFuY2hvcnMgaW5zaWRlIGFuIHN2ZyBoYXZlIGEgbG93ZXJjYXNlIG5vZGVOYW1lXG4gICAgY29uc3QgaXNBbmNob3JOb2RlTmFtZSA9IG5vZGVOYW1lLnRvVXBwZXJDYXNlKCkgPT09IFwiQVwiO1xuICAgIGlmIChpc0FuY2hvck5vZGVOYW1lICYmIChpc01vZGlmaWVkRXZlbnQoZSkgfHwgLy8gYXBwLXJvdXRlciBzdXBwb3J0cyBleHRlcm5hbCB1cmxzIG91dCBvZiB0aGUgYm94IHNvIGl0IHNob3VsZG4ndCBzaG9ydC1jaXJjdWl0IGhlcmUgYXMgc3VwcG9ydCBmb3IgZS5nLiBgcmVwbGFjZWAgaXMgYWRkZWQgaW4gdGhlIGFwcC1yb3V0ZXIuXG4gICAgIWlzQXBwUm91dGVyICYmICEoMCwgX2lzbG9jYWx1cmwuaXNMb2NhbFVSTCkoaHJlZikpKSB7XG4gICAgICAgIC8vIGlnbm9yZSBjbGljayBmb3IgYnJvd3NlcuKAmXMgZGVmYXVsdCBiZWhhdmlvclxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBuYXZpZ2F0ZSA9ICgpPT57XG4gICAgICAgIC8vIElmIHRoZSByb3V0ZXIgaXMgYW4gTmV4dFJvdXRlciBpbnN0YW5jZSBpdCB3aWxsIGhhdmUgYGJlZm9yZVBvcFN0YXRlYFxuICAgICAgICBjb25zdCByb3V0ZXJTY3JvbGwgPSBzY3JvbGwgIT0gbnVsbCA/IHNjcm9sbCA6IHRydWU7XG4gICAgICAgIGlmIChcImJlZm9yZVBvcFN0YXRlXCIgaW4gcm91dGVyKSB7XG4gICAgICAgICAgICByb3V0ZXJbcmVwbGFjZSA/IFwicmVwbGFjZVwiIDogXCJwdXNoXCJdKGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgc2hhbGxvdyxcbiAgICAgICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICAgICAgc2Nyb2xsOiByb3V0ZXJTY3JvbGxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcm91dGVyW3JlcGxhY2UgPyBcInJlcGxhY2VcIiA6IFwicHVzaFwiXShhcyB8fCBocmVmLCB7XG4gICAgICAgICAgICAgICAgc2Nyb2xsOiByb3V0ZXJTY3JvbGxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBpZiAoaXNBcHBSb3V0ZXIpIHtcbiAgICAgICAgX3JlYWN0LmRlZmF1bHQuc3RhcnRUcmFuc2l0aW9uKG5hdmlnYXRlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBuYXZpZ2F0ZSgpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZvcm1hdFN0cmluZ09yVXJsKHVybE9iak9yU3RyaW5nKSB7XG4gICAgaWYgKHR5cGVvZiB1cmxPYmpPclN0cmluZyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gdXJsT2JqT3JTdHJpbmc7XG4gICAgfVxuICAgIHJldHVybiAoMCwgX2Zvcm1hdHVybC5mb3JtYXRVcmwpKHVybE9iak9yU3RyaW5nKTtcbn1cbi8qKlxuICogUmVhY3QgQ29tcG9uZW50IHRoYXQgZW5hYmxlcyBjbGllbnQtc2lkZSB0cmFuc2l0aW9ucyBiZXR3ZWVuIHJvdXRlcy5cbiAqLyBjb25zdCBMaW5rID0gLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIExpbmtDb21wb25lbnQocHJvcHMsIGZvcndhcmRlZFJlZikge1xuICAgIGxldCBjaGlsZHJlbjtcbiAgICBjb25zdCB7IGhyZWY6IGhyZWZQcm9wLCBhczogYXNQcm9wLCBjaGlsZHJlbjogY2hpbGRyZW5Qcm9wLCBwcmVmZXRjaDogcHJlZmV0Y2hQcm9wID0gbnVsbCwgcGFzc0hyZWYsIHJlcGxhY2UsIHNoYWxsb3csIHNjcm9sbCwgbG9jYWxlLCBvbkNsaWNrLCBvbk1vdXNlRW50ZXI6IG9uTW91c2VFbnRlclByb3AsIG9uVG91Y2hTdGFydDogb25Ub3VjaFN0YXJ0UHJvcCwgbGVnYWN5QmVoYXZpb3IgPSBmYWxzZSwgLi4ucmVzdFByb3BzIH0gPSBwcm9wcztcbiAgICBjaGlsZHJlbiA9IGNoaWxkcmVuUHJvcDtcbiAgICBpZiAobGVnYWN5QmVoYXZpb3IgJiYgKHR5cGVvZiBjaGlsZHJlbiA9PT0gXCJzdHJpbmdcIiB8fCB0eXBlb2YgY2hpbGRyZW4gPT09IFwibnVtYmVyXCIpKSB7XG4gICAgICAgIGNoaWxkcmVuID0gLyojX19QVVJFX18qLyAoMCwgX2pzeHJ1bnRpbWUuanN4KShcImFcIiwge1xuICAgICAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBwYWdlc1JvdXRlciA9IF9yZWFjdC5kZWZhdWx0LnVzZUNvbnRleHQoX3JvdXRlcmNvbnRleHRzaGFyZWRydW50aW1lLlJvdXRlckNvbnRleHQpO1xuICAgIGNvbnN0IGFwcFJvdXRlciA9IF9yZWFjdC5kZWZhdWx0LnVzZUNvbnRleHQoX2FwcHJvdXRlcmNvbnRleHRzaGFyZWRydW50aW1lLkFwcFJvdXRlckNvbnRleHQpO1xuICAgIGNvbnN0IHJvdXRlciA9IHBhZ2VzUm91dGVyICE9IG51bGwgPyBwYWdlc1JvdXRlciA6IGFwcFJvdXRlcjtcbiAgICAvLyBXZSdyZSBpbiB0aGUgYXBwIGRpcmVjdG9yeSBpZiB0aGVyZSBpcyBubyBwYWdlcyByb3V0ZXIuXG4gICAgY29uc3QgaXNBcHBSb3V0ZXIgPSAhcGFnZXNSb3V0ZXI7XG4gICAgY29uc3QgcHJlZmV0Y2hFbmFibGVkID0gcHJlZmV0Y2hQcm9wICE9PSBmYWxzZTtcbiAgICAvKipcbiAgICAgKiBUaGUgcG9zc2libGUgc3RhdGVzIGZvciBwcmVmZXRjaCBhcmU6XG4gICAgICogLSBudWxsOiB0aGlzIGlzIHRoZSBkZWZhdWx0IFwiYXV0b1wiIG1vZGUsIHdoZXJlIHdlIHdpbGwgcHJlZmV0Y2ggcGFydGlhbGx5IGlmIHRoZSBsaW5rIGlzIGluIHRoZSB2aWV3cG9ydFxuICAgICAqIC0gdHJ1ZTogd2Ugd2lsbCBwcmVmZXRjaCBpZiB0aGUgbGluayBpcyB2aXNpYmxlIGFuZCBwcmVmZXRjaCB0aGUgZnVsbCBwYWdlLCBub3QganVzdCBwYXJ0aWFsbHlcbiAgICAgKiAtIGZhbHNlOiB3ZSB3aWxsIG5vdCBwcmVmZXRjaCBpZiBpbiB0aGUgdmlld3BvcnQgYXQgYWxsXG4gICAgICovIGNvbnN0IGFwcFByZWZldGNoS2luZCA9IHByZWZldGNoUHJvcCA9PT0gbnVsbCA/IF9yb3V0ZXJyZWR1Y2VydHlwZXMuUHJlZmV0Y2hLaW5kLkFVVE8gOiBfcm91dGVycmVkdWNlcnR5cGVzLlByZWZldGNoS2luZC5GVUxMO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlUHJvcEVycm9yKGFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJGYWlsZWQgcHJvcCB0eXBlOiBUaGUgcHJvcCBgXCIgKyBhcmdzLmtleSArIFwiYCBleHBlY3RzIGEgXCIgKyBhcmdzLmV4cGVjdGVkICsgXCIgaW4gYDxMaW5rPmAsIGJ1dCBnb3QgYFwiICsgYXJncy5hY3R1YWwgKyBcImAgaW5zdGVhZC5cIiArICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gXCJcXG5PcGVuIHlvdXIgYnJvd3NlcidzIGNvbnNvbGUgdG8gdmlldyB0aGUgQ29tcG9uZW50IHN0YWNrIHRyYWNlLlwiIDogXCJcIikpO1xuICAgICAgICB9XG4gICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgIGNvbnN0IHJlcXVpcmVkUHJvcHNHdWFyZCA9IHtcbiAgICAgICAgICAgIGhyZWY6IHRydWVcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcmVxdWlyZWRQcm9wcyA9IE9iamVjdC5rZXlzKHJlcXVpcmVkUHJvcHNHdWFyZCk7XG4gICAgICAgIHJlcXVpcmVkUHJvcHMuZm9yRWFjaCgoa2V5KT0+e1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJocmVmXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSA9PSBudWxsIHx8IHR5cGVvZiBwcm9wc1trZXldICE9PSBcInN0cmluZ1wiICYmIHR5cGVvZiBwcm9wc1trZXldICE9PSBcIm9iamVjdFwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgc3RyaW5nYCBvciBgb2JqZWN0YFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiBwcm9wc1trZXldID09PSBudWxsID8gXCJudWxsXCIgOiB0eXBlb2YgcHJvcHNba2V5XVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIFR5cGVTY3JpcHQgdHJpY2sgZm9yIHR5cGUtZ3VhcmRpbmc6XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgICAgICAgICAgICAgIGNvbnN0IF8gPSBrZXk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzR3VhcmQgPSB7XG4gICAgICAgICAgICBhczogdHJ1ZSxcbiAgICAgICAgICAgIHJlcGxhY2U6IHRydWUsXG4gICAgICAgICAgICBzY3JvbGw6IHRydWUsXG4gICAgICAgICAgICBzaGFsbG93OiB0cnVlLFxuICAgICAgICAgICAgcGFzc0hyZWY6IHRydWUsXG4gICAgICAgICAgICBwcmVmZXRjaDogdHJ1ZSxcbiAgICAgICAgICAgIGxvY2FsZTogdHJ1ZSxcbiAgICAgICAgICAgIG9uQ2xpY2s6IHRydWUsXG4gICAgICAgICAgICBvbk1vdXNlRW50ZXI6IHRydWUsXG4gICAgICAgICAgICBvblRvdWNoU3RhcnQ6IHRydWUsXG4gICAgICAgICAgICBsZWdhY3lCZWhhdmlvcjogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvcHRpb25hbFByb3BzID0gT2JqZWN0LmtleXMob3B0aW9uYWxQcm9wc0d1YXJkKTtcbiAgICAgICAgb3B0aW9uYWxQcm9wcy5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgICAgICBjb25zdCB2YWxUeXBlID0gdHlwZW9mIHByb3BzW2tleV07XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBcImFzXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSBcInN0cmluZ1wiICYmIHZhbFR5cGUgIT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlUHJvcEVycm9yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBcImBzdHJpbmdgIG9yIGBvYmplY3RgXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwibG9jYWxlXCIpIHtcbiAgICAgICAgICAgICAgICBpZiAocHJvcHNba2V5XSAmJiB2YWxUeXBlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgc3RyaW5nYFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWN0dWFsOiB2YWxUeXBlXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcIm9uQ2xpY2tcIiB8fCBrZXkgPT09IFwib25Nb3VzZUVudGVyXCIgfHwga2V5ID09PSBcIm9uVG91Y2hTdGFydFwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gJiYgdmFsVHlwZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZVByb3BFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBleHBlY3RlZDogXCJgZnVuY3Rpb25gXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwicmVwbGFjZVwiIHx8IGtleSA9PT0gXCJzY3JvbGxcIiB8fCBrZXkgPT09IFwic2hhbGxvd1wiIHx8IGtleSA9PT0gXCJwYXNzSHJlZlwiIHx8IGtleSA9PT0gXCJwcmVmZXRjaFwiIHx8IGtleSA9PT0gXCJsZWdhY3lCZWhhdmlvclwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzW2tleV0gIT0gbnVsbCAmJiB2YWxUeXBlICE9PSBcImJvb2xlYW5cIikge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVQcm9wRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWQ6IFwiYGJvb2xlYW5gXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhY3R1YWw6IHZhbFR5cGVcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBUeXBlU2NyaXB0IHRyaWNrIGZvciB0eXBlLWd1YXJkaW5nOlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLXZhcnNcbiAgICAgICAgICAgICAgICBjb25zdCBfID0ga2V5O1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gVGhpcyBob29rIGlzIGluIGEgY29uZGl0aW9uYWwgYnV0IHRoYXQgaXMgb2sgYmVjYXVzZSBgcHJvY2Vzcy5lbnYuTk9ERV9FTlZgIG5ldmVyIGNoYW5nZXNcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL3J1bGVzLW9mLWhvb2tzXG4gICAgICAgIGNvbnN0IGhhc1dhcm5lZCA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihmYWxzZSk7XG4gICAgICAgIGlmIChwcm9wcy5wcmVmZXRjaCAmJiAhaGFzV2FybmVkLmN1cnJlbnQgJiYgIWlzQXBwUm91dGVyKSB7XG4gICAgICAgICAgICBoYXNXYXJuZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJOZXh0LmpzIGF1dG8tcHJlZmV0Y2hlcyBhdXRvbWF0aWNhbGx5IGJhc2VkIG9uIHZpZXdwb3J0LiBUaGUgcHJlZmV0Y2ggYXR0cmlidXRlIGlzIG5vIGxvbmdlciBuZWVkZWQuIE1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL3ByZWZldGNoLXRydWUtZGVwcmVjYXRlZFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgIGlmIChpc0FwcFJvdXRlciAmJiAhYXNQcm9wKSB7XG4gICAgICAgICAgICBsZXQgaHJlZjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaHJlZlByb3AgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBocmVmID0gaHJlZlByb3A7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBocmVmUHJvcCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgaHJlZlByb3AucGF0aG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBocmVmID0gaHJlZlByb3AucGF0aG5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaHJlZikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhc0R5bmFtaWNTZWdtZW50ID0gaHJlZi5zcGxpdChcIi9cIikuc29tZSgoc2VnbWVudCk9PnNlZ21lbnQuc3RhcnRzV2l0aChcIltcIikgJiYgc2VnbWVudC5lbmRzV2l0aChcIl1cIikpO1xuICAgICAgICAgICAgICAgIGlmIChoYXNEeW5hbWljU2VnbWVudCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEeW5hbWljIGhyZWYgYFwiICsgaHJlZiArIFwiYCBmb3VuZCBpbiA8TGluaz4gd2hpbGUgdXNpbmcgdGhlIGAvYXBwYCByb3V0ZXIsIHRoaXMgaXMgbm90IHN1cHBvcnRlZC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9hcHAtZGlyLWR5bmFtaWMtaHJlZlwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgeyBocmVmLCBhcyB9ID0gX3JlYWN0LmRlZmF1bHQudXNlTWVtbygoKT0+e1xuICAgICAgICBpZiAoIXBhZ2VzUm91dGVyKSB7XG4gICAgICAgICAgICBjb25zdCByZXNvbHZlZEhyZWYgPSBmb3JtYXRTdHJpbmdPclVybChocmVmUHJvcCk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGhyZWY6IHJlc29sdmVkSHJlZixcbiAgICAgICAgICAgICAgICBhczogYXNQcm9wID8gZm9ybWF0U3RyaW5nT3JVcmwoYXNQcm9wKSA6IHJlc29sdmVkSHJlZlxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbcmVzb2x2ZWRIcmVmLCByZXNvbHZlZEFzXSA9ICgwLCBfcmVzb2x2ZWhyZWYucmVzb2x2ZUhyZWYpKHBhZ2VzUm91dGVyLCBocmVmUHJvcCwgdHJ1ZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBocmVmOiByZXNvbHZlZEhyZWYsXG4gICAgICAgICAgICBhczogYXNQcm9wID8gKDAsIF9yZXNvbHZlaHJlZi5yZXNvbHZlSHJlZikocGFnZXNSb3V0ZXIsIGFzUHJvcCkgOiByZXNvbHZlZEFzIHx8IHJlc29sdmVkSHJlZlxuICAgICAgICB9O1xuICAgIH0sIFtcbiAgICAgICAgcGFnZXNSb3V0ZXIsXG4gICAgICAgIGhyZWZQcm9wLFxuICAgICAgICBhc1Byb3BcbiAgICBdKTtcbiAgICBjb25zdCBwcmV2aW91c0hyZWYgPSBfcmVhY3QuZGVmYXVsdC51c2VSZWYoaHJlZik7XG4gICAgY29uc3QgcHJldmlvdXNBcyA9IF9yZWFjdC5kZWZhdWx0LnVzZVJlZihhcyk7XG4gICAgLy8gVGhpcyB3aWxsIHJldHVybiB0aGUgZmlyc3QgY2hpbGQsIGlmIG11bHRpcGxlIGFyZSBwcm92aWRlZCBpdCB3aWxsIHRocm93IGFuIGVycm9yXG4gICAgbGV0IGNoaWxkO1xuICAgIGlmIChsZWdhY3lCZWhhdmlvcikge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwiZGV2ZWxvcG1lbnRcIikge1xuICAgICAgICAgICAgaWYgKG9uQ2xpY2spIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ1wib25DbGlja1wiIHdhcyBwYXNzZWQgdG8gPExpbms+IHdpdGggYGhyZWZgIG9mIGAnICsgaHJlZlByb3AgKyAnYCBidXQgXCJsZWdhY3lCZWhhdmlvclwiIHdhcyBzZXQuIFRoZSBsZWdhY3kgYmVoYXZpb3IgcmVxdWlyZXMgb25DbGljayBiZSBzZXQgb24gdGhlIGNoaWxkIG9mIG5leHQvbGluaycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG9uTW91c2VFbnRlclByb3ApIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ1wib25Nb3VzZUVudGVyXCIgd2FzIHBhc3NlZCB0byA8TGluaz4gd2l0aCBgaHJlZmAgb2YgYCcgKyBocmVmUHJvcCArICdgIGJ1dCBcImxlZ2FjeUJlaGF2aW9yXCIgd2FzIHNldC4gVGhlIGxlZ2FjeSBiZWhhdmlvciByZXF1aXJlcyBvbk1vdXNlRW50ZXIgYmUgc2V0IG9uIHRoZSBjaGlsZCBvZiBuZXh0L2xpbmsnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY2hpbGQgPSBfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGlmICghY2hpbGRyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gY2hpbGRyZW4gd2VyZSBwYXNzZWQgdG8gPExpbms+IHdpdGggYGhyZWZgIG9mIGBcIiArIGhyZWZQcm9wICsgXCJgIGJ1dCBvbmUgY2hpbGQgaXMgcmVxdWlyZWQgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbGluay1uby1jaGlsZHJlblwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTXVsdGlwbGUgY2hpbGRyZW4gd2VyZSBwYXNzZWQgdG8gPExpbms+IHdpdGggYGhyZWZgIG9mIGBcIiArIGhyZWZQcm9wICsgXCJgIGJ1dCBvbmx5IG9uZSBjaGlsZCBpcyBzdXBwb3J0ZWQgaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbGluay1tdWx0aXBsZS1jaGlsZHJlblwiICsgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyBcIiBcXG5PcGVuIHlvdXIgYnJvd3NlcidzIGNvbnNvbGUgdG8gdmlldyB0aGUgQ29tcG9uZW50IHN0YWNrIHRyYWNlLlwiIDogXCJcIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2hpbGQgPSBfcmVhY3QuZGVmYXVsdC5DaGlsZHJlbi5vbmx5KGNoaWxkcmVuKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gICAgICAgICAgICBpZiAoKGNoaWxkcmVuID09IG51bGwgPyB2b2lkIDAgOiBjaGlsZHJlbi50eXBlKSA9PT0gXCJhXCIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIDxMaW5rPiB3aXRoIDxhPiBjaGlsZC4gUGxlYXNlIHJlbW92ZSA8YT4gb3IgdXNlIDxMaW5rIGxlZ2FjeUJlaGF2aW9yPi5cXG5MZWFybiBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9pbnZhbGlkLW5ldy1saW5rLXdpdGgtZXh0cmEtYW5jaG9yXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGNoaWxkUmVmID0gbGVnYWN5QmVoYXZpb3IgPyBjaGlsZCAmJiB0eXBlb2YgY2hpbGQgPT09IFwib2JqZWN0XCIgJiYgY2hpbGQucmVmIDogZm9yd2FyZGVkUmVmO1xuICAgIGNvbnN0IFtzZXRJbnRlcnNlY3Rpb25SZWYsIGlzVmlzaWJsZSwgcmVzZXRWaXNpYmxlXSA9ICgwLCBfdXNlaW50ZXJzZWN0aW9uLnVzZUludGVyc2VjdGlvbikoe1xuICAgICAgICByb290TWFyZ2luOiBcIjIwMHB4XCJcbiAgICB9KTtcbiAgICBjb25zdCBzZXRSZWYgPSBfcmVhY3QuZGVmYXVsdC51c2VDYWxsYmFjaygoZWwpPT57XG4gICAgICAgIC8vIEJlZm9yZSB0aGUgbGluayBnZXR0aW5nIG9ic2VydmVkLCBjaGVjayBpZiB2aXNpYmxlIHN0YXRlIG5lZWQgdG8gYmUgcmVzZXRcbiAgICAgICAgaWYgKHByZXZpb3VzQXMuY3VycmVudCAhPT0gYXMgfHwgcHJldmlvdXNIcmVmLmN1cnJlbnQgIT09IGhyZWYpIHtcbiAgICAgICAgICAgIHJlc2V0VmlzaWJsZSgpO1xuICAgICAgICAgICAgcHJldmlvdXNBcy5jdXJyZW50ID0gYXM7XG4gICAgICAgICAgICBwcmV2aW91c0hyZWYuY3VycmVudCA9IGhyZWY7XG4gICAgICAgIH1cbiAgICAgICAgc2V0SW50ZXJzZWN0aW9uUmVmKGVsKTtcbiAgICAgICAgaWYgKGNoaWxkUmVmKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNoaWxkUmVmID09PSBcImZ1bmN0aW9uXCIpIGNoaWxkUmVmKGVsKTtcbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjaGlsZFJlZiA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgIGNoaWxkUmVmLmN1cnJlbnQgPSBlbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIFtcbiAgICAgICAgYXMsXG4gICAgICAgIGNoaWxkUmVmLFxuICAgICAgICBocmVmLFxuICAgICAgICByZXNldFZpc2libGUsXG4gICAgICAgIHNldEludGVyc2VjdGlvblJlZlxuICAgIF0pO1xuICAgIC8vIFByZWZldGNoIHRoZSBVUkwgaWYgd2UgaGF2ZW4ndCBhbHJlYWR5IGFuZCBpdCdzIHZpc2libGUuXG4gICAgX3JlYWN0LmRlZmF1bHQudXNlRWZmZWN0KCgpPT57XG4gICAgICAgIC8vIGluIGRldiwgd2Ugb25seSBwcmVmZXRjaCBvbiBob3ZlciB0byBhdm9pZCB3YXN0aW5nIHJlc291cmNlcyBhcyB0aGUgcHJlZmV0Y2ggd2lsbCB0cmlnZ2VyIGNvbXBpbGluZyB0aGUgcGFnZS5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgd2UgZG9uJ3QgbmVlZCB0byBwcmVmZXRjaCB0aGUgVVJMLCBkb24ndCBkbyBwcmVmZXRjaC5cbiAgICAgICAgaWYgKCFpc1Zpc2libGUgfHwgIXByZWZldGNoRW5hYmxlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIFByZWZldGNoIHRoZSBVUkwuXG4gICAgICAgIHByZWZldGNoKHJvdXRlciwgaHJlZiwgYXMsIHtcbiAgICAgICAgICAgIGxvY2FsZVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBraW5kOiBhcHBQcmVmZXRjaEtpbmRcbiAgICAgICAgfSwgaXNBcHBSb3V0ZXIpO1xuICAgIH0sIFtcbiAgICAgICAgYXMsXG4gICAgICAgIGhyZWYsXG4gICAgICAgIGlzVmlzaWJsZSxcbiAgICAgICAgbG9jYWxlLFxuICAgICAgICBwcmVmZXRjaEVuYWJsZWQsXG4gICAgICAgIHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5sb2NhbGUsXG4gICAgICAgIHJvdXRlcixcbiAgICAgICAgaXNBcHBSb3V0ZXIsXG4gICAgICAgIGFwcFByZWZldGNoS2luZFxuICAgIF0pO1xuICAgIGNvbnN0IGNoaWxkUHJvcHMgPSB7XG4gICAgICAgIHJlZjogc2V0UmVmLFxuICAgICAgICBvbkNsaWNrIChlKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ29tcG9uZW50IHJlbmRlcmVkIGluc2lkZSBuZXh0L2xpbmsgaGFzIHRvIHBhc3MgY2xpY2sgZXZlbnQgdG8gXCJvbkNsaWNrXCIgcHJvcC4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvbkNsaWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBvbkNsaWNrKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vbkNsaWNrID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBjaGlsZC5wcm9wcy5vbkNsaWNrKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFyb3V0ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZS5kZWZhdWx0UHJldmVudGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlua0NsaWNrZWQoZSwgcm91dGVyLCBocmVmLCBhcywgcmVwbGFjZSwgc2hhbGxvdywgc2Nyb2xsLCBsb2NhbGUsIGlzQXBwUm91dGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Nb3VzZUVudGVyIChlKSB7XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvbk1vdXNlRW50ZXJQcm9wID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXJQcm9wKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vbk1vdXNlRW50ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uTW91c2VFbnRlcihlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCghcHJlZmV0Y2hFbmFibGVkIHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcImRldmVsb3BtZW50XCIpICYmIGlzQXBwUm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcHJlZmV0Y2gocm91dGVyLCBocmVmLCBhcywge1xuICAgICAgICAgICAgICAgIGxvY2FsZSxcbiAgICAgICAgICAgICAgICBwcmlvcml0eTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAvLyBAc2VlIHtodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvZGlzY3Vzc2lvbnMvNDAyNjg/c29ydD10b3AjZGlzY3Vzc2lvbmNvbW1lbnQtMzU3MjY0Mn1cbiAgICAgICAgICAgICAgICBieXBhc3NQcmVmZXRjaGVkQ2hlY2s6IHRydWVcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBraW5kOiBhcHBQcmVmZXRjaEtpbmRcbiAgICAgICAgICAgIH0sIGlzQXBwUm91dGVyKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Ub3VjaFN0YXJ0IChlKSB7XG4gICAgICAgICAgICBpZiAoIWxlZ2FjeUJlaGF2aW9yICYmIHR5cGVvZiBvblRvdWNoU3RhcnRQcm9wID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICBvblRvdWNoU3RhcnRQcm9wKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZ2FjeUJlaGF2aW9yICYmIGNoaWxkLnByb3BzICYmIHR5cGVvZiBjaGlsZC5wcm9wcy5vblRvdWNoU3RhcnQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIGNoaWxkLnByb3BzLm9uVG91Y2hTdGFydChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghcm91dGVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFwcmVmZXRjaEVuYWJsZWQgJiYgaXNBcHBSb3V0ZXIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwcmVmZXRjaChyb3V0ZXIsIGhyZWYsIGFzLCB7XG4gICAgICAgICAgICAgICAgbG9jYWxlLFxuICAgICAgICAgICAgICAgIHByaW9yaXR5OiB0cnVlLFxuICAgICAgICAgICAgICAgIC8vIEBzZWUge2h0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9kaXNjdXNzaW9ucy80MDI2OD9zb3J0PXRvcCNkaXNjdXNzaW9uY29tbWVudC0zNTcyNjQyfVxuICAgICAgICAgICAgICAgIGJ5cGFzc1ByZWZldGNoZWRDaGVjazogdHJ1ZVxuICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgIGtpbmQ6IGFwcFByZWZldGNoS2luZFxuICAgICAgICAgICAgfSwgaXNBcHBSb3V0ZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICAvLyBJZiBjaGlsZCBpcyBhbiA8YT4gdGFnIGFuZCBkb2Vzbid0IGhhdmUgYSBocmVmIGF0dHJpYnV0ZSwgb3IgaWYgdGhlICdwYXNzSHJlZicgcHJvcGVydHkgaXNcbiAgICAvLyBkZWZpbmVkLCB3ZSBzcGVjaWZ5IHRoZSBjdXJyZW50ICdocmVmJywgc28gdGhhdCByZXBldGl0aW9uIGlzIG5vdCBuZWVkZWQgYnkgdGhlIHVzZXIuXG4gICAgLy8gSWYgdGhlIHVybCBpcyBhYnNvbHV0ZSwgd2UgY2FuIGJ5cGFzcyB0aGUgbG9naWMgdG8gcHJlcGVuZCB0aGUgZG9tYWluIGFuZCBsb2NhbGUuXG4gICAgaWYgKCgwLCBfdXRpbHMuaXNBYnNvbHV0ZVVybCkoYXMpKSB7XG4gICAgICAgIGNoaWxkUHJvcHMuaHJlZiA9IGFzO1xuICAgIH0gZWxzZSBpZiAoIWxlZ2FjeUJlaGF2aW9yIHx8IHBhc3NIcmVmIHx8IGNoaWxkLnR5cGUgPT09IFwiYVwiICYmICEoXCJocmVmXCIgaW4gY2hpbGQucHJvcHMpKSB7XG4gICAgICAgIGNvbnN0IGN1ckxvY2FsZSA9IHR5cGVvZiBsb2NhbGUgIT09IFwidW5kZWZpbmVkXCIgPyBsb2NhbGUgOiBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIubG9jYWxlO1xuICAgICAgICAvLyB3ZSBvbmx5IHJlbmRlciBkb21haW4gbG9jYWxlcyBpZiB3ZSBhcmUgY3VycmVudGx5IG9uIGEgZG9tYWluIGxvY2FsZVxuICAgICAgICAvLyBzbyB0aGF0IGxvY2FsZSBsaW5rcyBhcmUgc3RpbGwgdmlzaXRhYmxlIGluIGRldmVsb3BtZW50L3ByZXZpZXcgZW52c1xuICAgICAgICBjb25zdCBsb2NhbGVEb21haW4gPSAocGFnZXNSb3V0ZXIgPT0gbnVsbCA/IHZvaWQgMCA6IHBhZ2VzUm91dGVyLmlzTG9jYWxlRG9tYWluKSAmJiAoMCwgX2dldGRvbWFpbmxvY2FsZS5nZXREb21haW5Mb2NhbGUpKGFzLCBjdXJMb2NhbGUsIHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5sb2NhbGVzLCBwYWdlc1JvdXRlciA9PSBudWxsID8gdm9pZCAwIDogcGFnZXNSb3V0ZXIuZG9tYWluTG9jYWxlcyk7XG4gICAgICAgIGNoaWxkUHJvcHMuaHJlZiA9IGxvY2FsZURvbWFpbiB8fCAoMCwgX2FkZGJhc2VwYXRoLmFkZEJhc2VQYXRoKSgoMCwgX2FkZGxvY2FsZS5hZGRMb2NhbGUpKGFzLCBjdXJMb2NhbGUsIHBhZ2VzUm91dGVyID09IG51bGwgPyB2b2lkIDAgOiBwYWdlc1JvdXRlci5kZWZhdWx0TG9jYWxlKSk7XG4gICAgfVxuICAgIHJldHVybiBsZWdhY3lCZWhhdmlvciA/IC8qI19fUFVSRV9fKi8gX3JlYWN0LmRlZmF1bHQuY2xvbmVFbGVtZW50KGNoaWxkLCBjaGlsZFByb3BzKSA6IC8qI19fUFVSRV9fKi8gKDAsIF9qc3hydW50aW1lLmpzeCkoXCJhXCIsIHtcbiAgICAgICAgLi4ucmVzdFByb3BzLFxuICAgICAgICAuLi5jaGlsZFByb3BzLFxuICAgICAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgICB9KTtcbn0pO1xuY29uc3QgX2RlZmF1bHQgPSBMaW5rO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJfZGVmYXVsdCIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJfanN4cnVudGltZSIsIl9yZWFjdCIsIl8iLCJfcmVzb2x2ZWhyZWYiLCJfaXNsb2NhbHVybCIsIl9mb3JtYXR1cmwiLCJfdXRpbHMiLCJfYWRkbG9jYWxlIiwiX3JvdXRlcmNvbnRleHRzaGFyZWRydW50aW1lIiwiX2FwcHJvdXRlcmNvbnRleHRzaGFyZWRydW50aW1lIiwiX3VzZWludGVyc2VjdGlvbiIsIl9nZXRkb21haW5sb2NhbGUiLCJfYWRkYmFzZXBhdGgiLCJfcm91dGVycmVkdWNlcnR5cGVzIiwicHJlZmV0Y2hlZCIsIlNldCIsInByZWZldGNoIiwicm91dGVyIiwiaHJlZiIsImFzIiwib3B0aW9ucyIsImFwcE9wdGlvbnMiLCJpc0FwcFJvdXRlciIsImlzTG9jYWxVUkwiLCJieXBhc3NQcmVmZXRjaGVkQ2hlY2siLCJsb2NhbGUiLCJ1bmRlZmluZWQiLCJwcmVmZXRjaGVkS2V5IiwiaGFzIiwiYWRkIiwicHJlZmV0Y2hQcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJjYXRjaCIsImVyciIsInByb2Nlc3MiLCJpc01vZGlmaWVkRXZlbnQiLCJldmVudCIsImV2ZW50VGFyZ2V0IiwiY3VycmVudFRhcmdldCIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsIm1ldGFLZXkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJuYXRpdmVFdmVudCIsIndoaWNoIiwibGlua0NsaWNrZWQiLCJlIiwicmVwbGFjZSIsInNoYWxsb3ciLCJzY3JvbGwiLCJub2RlTmFtZSIsImlzQW5jaG9yTm9kZU5hbWUiLCJ0b1VwcGVyQ2FzZSIsInByZXZlbnREZWZhdWx0IiwibmF2aWdhdGUiLCJyb3V0ZXJTY3JvbGwiLCJkZWZhdWx0Iiwic3RhcnRUcmFuc2l0aW9uIiwiZm9ybWF0U3RyaW5nT3JVcmwiLCJ1cmxPYmpPclN0cmluZyIsImZvcm1hdFVybCIsIkxpbmsiLCJmb3J3YXJkUmVmIiwiTGlua0NvbXBvbmVudCIsInByb3BzIiwiZm9yd2FyZGVkUmVmIiwiY2hpbGRyZW4iLCJocmVmUHJvcCIsImFzUHJvcCIsImNoaWxkcmVuUHJvcCIsInByZWZldGNoUHJvcCIsInBhc3NIcmVmIiwib25DbGljayIsIm9uTW91c2VFbnRlciIsIm9uTW91c2VFbnRlclByb3AiLCJvblRvdWNoU3RhcnQiLCJvblRvdWNoU3RhcnRQcm9wIiwibGVnYWN5QmVoYXZpb3IiLCJyZXN0UHJvcHMiLCJqc3giLCJwYWdlc1JvdXRlciIsInVzZUNvbnRleHQiLCJSb3V0ZXJDb250ZXh0IiwiYXBwUm91dGVyIiwiQXBwUm91dGVyQ29udGV4dCIsInByZWZldGNoRW5hYmxlZCIsImFwcFByZWZldGNoS2luZCIsIlByZWZldGNoS2luZCIsIkFVVE8iLCJGVUxMIiwiY3JlYXRlUHJvcEVycm9yIiwiYXJncyIsIkVycm9yIiwia2V5IiwiZXhwZWN0ZWQiLCJhY3R1YWwiLCJyZXF1aXJlZFByb3BzR3VhcmQiLCJyZXF1aXJlZFByb3BzIiwia2V5cyIsImZvckVhY2giLCJvcHRpb25hbFByb3BzR3VhcmQiLCJvcHRpb25hbFByb3BzIiwidmFsVHlwZSIsImhhc1dhcm5lZCIsInVzZVJlZiIsImN1cnJlbnQiLCJjb25zb2xlIiwid2FybiIsInBhdGhuYW1lIiwiaGFzRHluYW1pY1NlZ21lbnQiLCJzcGxpdCIsInNvbWUiLCJzZWdtZW50Iiwic3RhcnRzV2l0aCIsImVuZHNXaXRoIiwidXNlTWVtbyIsInJlc29sdmVkSHJlZiIsInJlc29sdmVkQXMiLCJyZXNvbHZlSHJlZiIsInByZXZpb3VzSHJlZiIsInByZXZpb3VzQXMiLCJjaGlsZCIsIkNoaWxkcmVuIiwib25seSIsInR5cGUiLCJjaGlsZFJlZiIsInJlZiIsInNldEludGVyc2VjdGlvblJlZiIsImlzVmlzaWJsZSIsInJlc2V0VmlzaWJsZSIsInVzZUludGVyc2VjdGlvbiIsInJvb3RNYXJnaW4iLCJzZXRSZWYiLCJ1c2VDYWxsYmFjayIsImVsIiwidXNlRWZmZWN0Iiwia2luZCIsImNoaWxkUHJvcHMiLCJkZWZhdWx0UHJldmVudGVkIiwicHJpb3JpdHkiLCJpc0Fic29sdXRlVXJsIiwiY3VyTG9jYWxlIiwibG9jYWxlRG9tYWluIiwiaXNMb2NhbGVEb21haW4iLCJnZXREb21haW5Mb2NhbGUiLCJsb2NhbGVzIiwiZG9tYWluTG9jYWxlcyIsImFkZEJhc2VQYXRoIiwiYWRkTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImNsb25lRWxlbWVudCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iLCJtb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/link.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    requestIdleCallback: function() {\n        return requestIdleCallback;\n    },\n    cancelIdleCallback: function() {\n        return cancelIdleCallback;\n    }\n});\nconst requestIdleCallback = typeof self !== \"undefined\" && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function(cb) {\n    let start = Date.now();\n    return self.setTimeout(function() {\n        cb({\n            didTimeout: false,\n            timeRemaining: function() {\n                return Math.max(0, 50 - (Date.now() - start));\n            }\n        });\n    }, 1);\n};\nconst cancelIdleCallback = typeof self !== \"undefined\" && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function(id) {\n    return clearTimeout(id);\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-idle-callback.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcscUJBQXFCO1FBQ2pCLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELHNCQUFzQixPQUFPUSxTQUFTLGVBQWVBLEtBQUtSLG1CQUFtQixJQUFJUSxLQUFLUixtQkFBbUIsQ0FBQ1MsSUFBSSxDQUFDQyxXQUFXLFNBQVNDLEVBQUU7SUFDdkksSUFBSUMsUUFBUUMsS0FBS0MsR0FBRztJQUNwQixPQUFPTixLQUFLTyxVQUFVLENBQUM7UUFDbkJKLEdBQUc7WUFDQ0ssWUFBWTtZQUNaQyxlQUFlO2dCQUNYLE9BQU9DLEtBQUtDLEdBQUcsQ0FBQyxHQUFHLEtBQU1OLENBQUFBLEtBQUtDLEdBQUcsS0FBS0YsS0FBSTtZQUM5QztRQUNKO0lBQ0osR0FBRztBQUNQO0FBQ0EsTUFBTVgscUJBQXFCLE9BQU9PLFNBQVMsZUFBZUEsS0FBS1Asa0JBQWtCLElBQUlPLEtBQUtQLGtCQUFrQixDQUFDUSxJQUFJLENBQUNDLFdBQVcsU0FBU1UsRUFBRTtJQUNwSSxPQUFPQyxhQUFhRDtBQUN4QjtBQUVBLElBQUksQ0FBQyxPQUFPdkIsUUFBUXlCLE9BQU8sS0FBSyxjQUFlLE9BQU96QixRQUFReUIsT0FBTyxLQUFLLFlBQVl6QixRQUFReUIsT0FBTyxLQUFLLElBQUksS0FBTSxPQUFPekIsUUFBUXlCLE9BQU8sQ0FBQ0MsVUFBVSxLQUFLLGFBQWE7SUFDcks1QixPQUFPQyxjQUFjLENBQUNDLFFBQVF5QixPQUFPLEVBQUUsY0FBYztRQUFFeEIsT0FBTztJQUFLO0lBQ25FSCxPQUFPNkIsTUFBTSxDQUFDM0IsUUFBUXlCLE9BQU8sRUFBRXpCO0lBQy9CRSxPQUFPRixPQUFPLEdBQUdBLFFBQVF5QixPQUFPO0FBQ2xDLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcz8xZTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgcmVxdWVzdElkbGVDYWxsYmFjazogbnVsbCxcbiAgICBjYW5jZWxJZGxlQ2FsbGJhY2s6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgcmVxdWVzdElkbGVDYWxsYmFjazogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0SWRsZUNhbGxiYWNrO1xuICAgIH0sXG4gICAgY2FuY2VsSWRsZUNhbGxiYWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNhbmNlbElkbGVDYWxsYmFjaztcbiAgICB9XG59KTtcbmNvbnN0IHJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2sgJiYgc2VsZi5yZXF1ZXN0SWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihjYikge1xuICAgIGxldCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgcmV0dXJuIHNlbGYuc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICB0aW1lUmVtYWluaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEpO1xufTtcbmNvbnN0IGNhbmNlbElkbGVDYWxsYmFjayA9IHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrICYmIHNlbGYuY2FuY2VsSWRsZUNhbGxiYWNrLmJpbmQod2luZG93KSB8fCBmdW5jdGlvbihpZCkge1xuICAgIHJldHVybiBjbGVhclRpbWVvdXQoaWQpO1xufTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1pZGxlLWNhbGxiYWNrLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsInJlcXVlc3RJZGxlQ2FsbGJhY2siLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJzZWxmIiwiYmluZCIsIndpbmRvdyIsImNiIiwic3RhcnQiLCJEYXRlIiwibm93Iiwic2V0VGltZW91dCIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwiTWF0aCIsIm1heCIsImlkIiwiY2xlYXJUaW1lb3V0IiwiZGVmYXVsdCIsIl9fZXNNb2R1bGUiLCJhc3NpZ24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/resolve-href.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"resolveHref\", ({\n    enumerable: true,\n    get: function() {\n        return resolveHref;\n    }\n}));\nconst _querystring = __webpack_require__(/*! ../shared/lib/router/utils/querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\");\nconst _formaturl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nconst _omit = __webpack_require__(/*! ../shared/lib/router/utils/omit */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js\");\nconst _utils = __webpack_require__(/*! ../shared/lib/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _normalizetrailingslash = __webpack_require__(/*! ./normalize-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/client/normalize-trailing-slash.js\");\nconst _islocalurl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nconst _utils1 = __webpack_require__(/*! ../shared/lib/router/utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js\");\nconst _interpolateas = __webpack_require__(/*! ../shared/lib/router/utils/interpolate-as */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js\");\nfunction resolveHref(router, href, resolveAs) {\n    // we use a dummy base url for relative urls\n    let base;\n    let urlAsString = typeof href === \"string\" ? href : (0, _formaturl.formatWithValidation)(href);\n    // repeated slashes and backslashes in the URL are considered\n    // invalid and will never match a Next.js page/file\n    const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n    const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n    const urlParts = urlAsStringNoProto.split(\"?\", 1);\n    if ((urlParts[0] || \"\").match(/(\\/\\/|\\\\)/)) {\n        console.error(\"Invalid href '\" + urlAsString + \"' passed to next/router in page: '\" + router.pathname + \"'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.\");\n        const normalizedUrl = (0, _utils.normalizeRepeatedSlashes)(urlAsStringNoProto);\n        urlAsString = (urlProtoMatch ? urlProtoMatch[0] : \"\") + normalizedUrl;\n    }\n    // Return because it cannot be routed by the Next.js router\n    if (!(0, _islocalurl.isLocalURL)(urlAsString)) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n    try {\n        base = new URL(urlAsString.startsWith(\"#\") ? router.asPath : router.pathname, \"http://n\");\n    } catch (_) {\n        // fallback to / for invalid asPath values e.g. //\n        base = new URL(\"/\", \"http://n\");\n    }\n    try {\n        const finalUrl = new URL(urlAsString, base);\n        finalUrl.pathname = (0, _normalizetrailingslash.normalizePathTrailingSlash)(finalUrl.pathname);\n        let interpolatedAs = \"\";\n        if ((0, _utils1.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n            const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);\n            const { result, params } = (0, _interpolateas.interpolateAs)(finalUrl.pathname, finalUrl.pathname, query);\n            if (result) {\n                interpolatedAs = (0, _formaturl.formatWithValidation)({\n                    pathname: result,\n                    hash: finalUrl.hash,\n                    query: (0, _omit.omit)(query, params)\n                });\n            }\n        }\n        // if the origin didn't change, it means we received a relative href\n        const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n        return resolveAs ? [\n            resolvedHref,\n            interpolatedAs || resolvedHref\n        ] : resolvedHref;\n    } catch (_) {\n        return resolveAs ? [\n            urlAsString\n        ] : urlAsString;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=resolve-href.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3Jlc29sdmUtaHJlZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsK0NBQThDO0lBQzFDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsZUFBZUMsbUJBQU9BLENBQUMsbUlBQXdDO0FBQ3JFLE1BQU1DLGFBQWFELG1CQUFPQSxDQUFDLGlJQUF1QztBQUNsRSxNQUFNRSxRQUFRRixtQkFBT0EsQ0FBQyxxSEFBaUM7QUFDdkQsTUFBTUcsU0FBU0gsbUJBQU9BLENBQUMsNkZBQXFCO0FBQzVDLE1BQU1JLDBCQUEwQkosbUJBQU9BLENBQUMsbUhBQTRCO0FBQ3BFLE1BQU1LLGNBQWNMLG1CQUFPQSxDQUFDLHFJQUF5QztBQUNyRSxNQUFNTSxVQUFVTixtQkFBT0EsQ0FBQyxpSEFBNEI7QUFDcEQsTUFBTU8saUJBQWlCUCxtQkFBT0EsQ0FBQyx5SUFBMkM7QUFDMUUsU0FBU0YsWUFBWVUsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLFNBQVM7SUFDeEMsNENBQTRDO0lBQzVDLElBQUlDO0lBQ0osSUFBSUMsY0FBYyxPQUFPSCxTQUFTLFdBQVdBLE9BQU8sQ0FBQyxHQUFHUixXQUFXWSxvQkFBb0IsRUFBRUo7SUFDekYsNkRBQTZEO0lBQzdELG1EQUFtRDtJQUNuRCxNQUFNSyxnQkFBZ0JGLFlBQVlHLEtBQUssQ0FBQztJQUN4QyxNQUFNQyxxQkFBcUJGLGdCQUFnQkYsWUFBWUssS0FBSyxDQUFDSCxhQUFhLENBQUMsRUFBRSxDQUFDSSxNQUFNLElBQUlOO0lBQ3hGLE1BQU1PLFdBQVdILG1CQUFtQkksS0FBSyxDQUFDLEtBQUs7SUFDL0MsSUFBSSxDQUFDRCxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUMsRUFBR0osS0FBSyxDQUFDLGNBQWM7UUFDeENNLFFBQVFDLEtBQUssQ0FBQyxtQkFBbUJWLGNBQWMsdUNBQXVDSixPQUFPZSxRQUFRLEdBQUc7UUFDeEcsTUFBTUMsZ0JBQWdCLENBQUMsR0FBR3JCLE9BQU9zQix3QkFBd0IsRUFBRVQ7UUFDM0RKLGNBQWMsQ0FBQ0UsZ0JBQWdCQSxhQUFhLENBQUMsRUFBRSxHQUFHLEVBQUMsSUFBS1U7SUFDNUQ7SUFDQSwyREFBMkQ7SUFDM0QsSUFBSSxDQUFDLENBQUMsR0FBR25CLFlBQVlxQixVQUFVLEVBQUVkLGNBQWM7UUFDM0MsT0FBT0YsWUFBWTtZQUNmRTtTQUNILEdBQUdBO0lBQ1I7SUFDQSxJQUFJO1FBQ0FELE9BQU8sSUFBSWdCLElBQUlmLFlBQVlnQixVQUFVLENBQUMsT0FBT3BCLE9BQU9xQixNQUFNLEdBQUdyQixPQUFPZSxRQUFRLEVBQUU7SUFDbEYsRUFBRSxPQUFPTyxHQUFHO1FBQ1Isa0RBQWtEO1FBQ2xEbkIsT0FBTyxJQUFJZ0IsSUFBSSxLQUFLO0lBQ3hCO0lBQ0EsSUFBSTtRQUNBLE1BQU1JLFdBQVcsSUFBSUosSUFBSWYsYUFBYUQ7UUFDdENvQixTQUFTUixRQUFRLEdBQUcsQ0FBQyxHQUFHbkIsd0JBQXdCNEIsMEJBQTBCLEVBQUVELFNBQVNSLFFBQVE7UUFDN0YsSUFBSVUsaUJBQWlCO1FBQ3JCLElBQUksQ0FBQyxHQUFHM0IsUUFBUTRCLGNBQWMsRUFBRUgsU0FBU1IsUUFBUSxLQUFLUSxTQUFTSSxZQUFZLElBQUl6QixXQUFXO1lBQ3RGLE1BQU0wQixRQUFRLENBQUMsR0FBR3JDLGFBQWFzQyxzQkFBc0IsRUFBRU4sU0FBU0ksWUFBWTtZQUM1RSxNQUFNLEVBQUVHLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHaEMsZUFBZWlDLGFBQWEsRUFBRVQsU0FBU1IsUUFBUSxFQUFFUSxTQUFTUixRQUFRLEVBQUVhO1lBQ25HLElBQUlFLFFBQVE7Z0JBQ1JMLGlCQUFpQixDQUFDLEdBQUdoQyxXQUFXWSxvQkFBb0IsRUFBRTtvQkFDbERVLFVBQVVlO29CQUNWRyxNQUFNVixTQUFTVSxJQUFJO29CQUNuQkwsT0FBTyxDQUFDLEdBQUdsQyxNQUFNd0MsSUFBSSxFQUFFTixPQUFPRztnQkFDbEM7WUFDSjtRQUNKO1FBQ0Esb0VBQW9FO1FBQ3BFLE1BQU1JLGVBQWVaLFNBQVNhLE1BQU0sS0FBS2pDLEtBQUtpQyxNQUFNLEdBQUdiLFNBQVN0QixJQUFJLENBQUNRLEtBQUssQ0FBQ2MsU0FBU2EsTUFBTSxDQUFDMUIsTUFBTSxJQUFJYSxTQUFTdEIsSUFBSTtRQUNsSCxPQUFPQyxZQUFZO1lBQ2ZpQztZQUNBVixrQkFBa0JVO1NBQ3JCLEdBQUdBO0lBQ1IsRUFBRSxPQUFPYixHQUFHO1FBQ1IsT0FBT3BCLFlBQVk7WUFDZkU7U0FDSCxHQUFHQTtJQUNSO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT2xCLFFBQVFtRCxPQUFPLEtBQUssY0FBZSxPQUFPbkQsUUFBUW1ELE9BQU8sS0FBSyxZQUFZbkQsUUFBUW1ELE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT25ELFFBQVFtRCxPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLdEQsT0FBT0MsY0FBYyxDQUFDQyxRQUFRbUQsT0FBTyxFQUFFLGNBQWM7UUFBRWxELE9BQU87SUFBSztJQUNuRUgsT0FBT3VELE1BQU0sQ0FBQ3JELFFBQVFtRCxPQUFPLEVBQUVuRDtJQUMvQnNELE9BQU90RCxPQUFPLEdBQUdBLFFBQVFtRCxPQUFPO0FBQ2xDLEVBRUEsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3Jlc29sdmUtaHJlZi5qcz8yZjllIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicmVzb2x2ZUhyZWZcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVIcmVmO1xuICAgIH1cbn0pO1xuY29uc3QgX3F1ZXJ5c3RyaW5nID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3F1ZXJ5c3RyaW5nXCIpO1xuY29uc3QgX2Zvcm1hdHVybCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9mb3JtYXQtdXJsXCIpO1xuY29uc3QgX29taXQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvb21pdFwiKTtcbmNvbnN0IF91dGlscyA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3V0aWxzXCIpO1xuY29uc3QgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2ggPSByZXF1aXJlKFwiLi9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBfaXNsb2NhbHVybCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1sb2NhbC11cmxcIik7XG5jb25zdCBfdXRpbHMxID0gcmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzXCIpO1xuY29uc3QgX2ludGVycG9sYXRlYXMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW50ZXJwb2xhdGUtYXNcIik7XG5mdW5jdGlvbiByZXNvbHZlSHJlZihyb3V0ZXIsIGhyZWYsIHJlc29sdmVBcykge1xuICAgIC8vIHdlIHVzZSBhIGR1bW15IGJhc2UgdXJsIGZvciByZWxhdGl2ZSB1cmxzXG4gICAgbGV0IGJhc2U7XG4gICAgbGV0IHVybEFzU3RyaW5nID0gdHlwZW9mIGhyZWYgPT09IFwic3RyaW5nXCIgPyBocmVmIDogKDAsIF9mb3JtYXR1cmwuZm9ybWF0V2l0aFZhbGlkYXRpb24pKGhyZWYpO1xuICAgIC8vIHJlcGVhdGVkIHNsYXNoZXMgYW5kIGJhY2tzbGFzaGVzIGluIHRoZSBVUkwgYXJlIGNvbnNpZGVyZWRcbiAgICAvLyBpbnZhbGlkIGFuZCB3aWxsIG5ldmVyIG1hdGNoIGEgTmV4dC5qcyBwYWdlL2ZpbGVcbiAgICBjb25zdCB1cmxQcm90b01hdGNoID0gdXJsQXNTdHJpbmcubWF0Y2goL15bYS16QS1aXXsxLH06XFwvXFwvLyk7XG4gICAgY29uc3QgdXJsQXNTdHJpbmdOb1Byb3RvID0gdXJsUHJvdG9NYXRjaCA/IHVybEFzU3RyaW5nLnNsaWNlKHVybFByb3RvTWF0Y2hbMF0ubGVuZ3RoKSA6IHVybEFzU3RyaW5nO1xuICAgIGNvbnN0IHVybFBhcnRzID0gdXJsQXNTdHJpbmdOb1Byb3RvLnNwbGl0KFwiP1wiLCAxKTtcbiAgICBpZiAoKHVybFBhcnRzWzBdIHx8IFwiXCIpLm1hdGNoKC8oXFwvXFwvfFxcXFwpLykpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgaHJlZiAnXCIgKyB1cmxBc1N0cmluZyArIFwiJyBwYXNzZWQgdG8gbmV4dC9yb3V0ZXIgaW4gcGFnZTogJ1wiICsgcm91dGVyLnBhdGhuYW1lICsgXCInLiBSZXBlYXRlZCBmb3J3YXJkLXNsYXNoZXMgKC8vKSBvciBiYWNrc2xhc2hlcyBcXFxcIGFyZSBub3QgdmFsaWQgaW4gdGhlIGhyZWYuXCIpO1xuICAgICAgICBjb25zdCBub3JtYWxpemVkVXJsID0gKDAsIF91dGlscy5ub3JtYWxpemVSZXBlYXRlZFNsYXNoZXMpKHVybEFzU3RyaW5nTm9Qcm90byk7XG4gICAgICAgIHVybEFzU3RyaW5nID0gKHVybFByb3RvTWF0Y2ggPyB1cmxQcm90b01hdGNoWzBdIDogXCJcIikgKyBub3JtYWxpemVkVXJsO1xuICAgIH1cbiAgICAvLyBSZXR1cm4gYmVjYXVzZSBpdCBjYW5ub3QgYmUgcm91dGVkIGJ5IHRoZSBOZXh0LmpzIHJvdXRlclxuICAgIGlmICghKDAsIF9pc2xvY2FsdXJsLmlzTG9jYWxVUkwpKHVybEFzU3RyaW5nKSkge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZUFzID8gW1xuICAgICAgICAgICAgdXJsQXNTdHJpbmdcbiAgICAgICAgXSA6IHVybEFzU3RyaW5nO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBiYXNlID0gbmV3IFVSTCh1cmxBc1N0cmluZy5zdGFydHNXaXRoKFwiI1wiKSA/IHJvdXRlci5hc1BhdGggOiByb3V0ZXIucGF0aG5hbWUsIFwiaHR0cDovL25cIik7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgICAvLyBmYWxsYmFjayB0byAvIGZvciBpbnZhbGlkIGFzUGF0aCB2YWx1ZXMgZS5nLiAvL1xuICAgICAgICBiYXNlID0gbmV3IFVSTChcIi9cIiwgXCJodHRwOi8vblwiKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZmluYWxVcmwgPSBuZXcgVVJMKHVybEFzU3RyaW5nLCBiYXNlKTtcbiAgICAgICAgZmluYWxVcmwucGF0aG5hbWUgPSAoMCwgX25vcm1hbGl6ZXRyYWlsaW5nc2xhc2gubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2gpKGZpbmFsVXJsLnBhdGhuYW1lKTtcbiAgICAgICAgbGV0IGludGVycG9sYXRlZEFzID0gXCJcIjtcbiAgICAgICAgaWYgKCgwLCBfdXRpbHMxLmlzRHluYW1pY1JvdXRlKShmaW5hbFVybC5wYXRobmFtZSkgJiYgZmluYWxVcmwuc2VhcmNoUGFyYW1zICYmIHJlc29sdmVBcykge1xuICAgICAgICAgICAgY29uc3QgcXVlcnkgPSAoMCwgX3F1ZXJ5c3RyaW5nLnNlYXJjaFBhcmFtc1RvVXJsUXVlcnkpKGZpbmFsVXJsLnNlYXJjaFBhcmFtcyk7XG4gICAgICAgICAgICBjb25zdCB7IHJlc3VsdCwgcGFyYW1zIH0gPSAoMCwgX2ludGVycG9sYXRlYXMuaW50ZXJwb2xhdGVBcykoZmluYWxVcmwucGF0aG5hbWUsIGZpbmFsVXJsLnBhdGhuYW1lLCBxdWVyeSk7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaW50ZXJwb2xhdGVkQXMgPSAoMCwgX2Zvcm1hdHVybC5mb3JtYXRXaXRoVmFsaWRhdGlvbikoe1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogcmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBoYXNoOiBmaW5hbFVybC5oYXNoLFxuICAgICAgICAgICAgICAgICAgICBxdWVyeTogKDAsIF9vbWl0Lm9taXQpKHF1ZXJ5LCBwYXJhbXMpXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gaWYgdGhlIG9yaWdpbiBkaWRuJ3QgY2hhbmdlLCBpdCBtZWFucyB3ZSByZWNlaXZlZCBhIHJlbGF0aXZlIGhyZWZcbiAgICAgICAgY29uc3QgcmVzb2x2ZWRIcmVmID0gZmluYWxVcmwub3JpZ2luID09PSBiYXNlLm9yaWdpbiA/IGZpbmFsVXJsLmhyZWYuc2xpY2UoZmluYWxVcmwub3JpZ2luLmxlbmd0aCkgOiBmaW5hbFVybC5ocmVmO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZUFzID8gW1xuICAgICAgICAgICAgcmVzb2x2ZWRIcmVmLFxuICAgICAgICAgICAgaW50ZXJwb2xhdGVkQXMgfHwgcmVzb2x2ZWRIcmVmXG4gICAgICAgIF0gOiByZXNvbHZlZEhyZWY7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZUFzID8gW1xuICAgICAgICAgICAgdXJsQXNTdHJpbmdcbiAgICAgICAgXSA6IHVybEFzU3RyaW5nO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb2x2ZS1ocmVmLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJyZXNvbHZlSHJlZiIsIl9xdWVyeXN0cmluZyIsInJlcXVpcmUiLCJfZm9ybWF0dXJsIiwiX29taXQiLCJfdXRpbHMiLCJfbm9ybWFsaXpldHJhaWxpbmdzbGFzaCIsIl9pc2xvY2FsdXJsIiwiX3V0aWxzMSIsIl9pbnRlcnBvbGF0ZWFzIiwicm91dGVyIiwiaHJlZiIsInJlc29sdmVBcyIsImJhc2UiLCJ1cmxBc1N0cmluZyIsImZvcm1hdFdpdGhWYWxpZGF0aW9uIiwidXJsUHJvdG9NYXRjaCIsIm1hdGNoIiwidXJsQXNTdHJpbmdOb1Byb3RvIiwic2xpY2UiLCJsZW5ndGgiLCJ1cmxQYXJ0cyIsInNwbGl0IiwiY29uc29sZSIsImVycm9yIiwicGF0aG5hbWUiLCJub3JtYWxpemVkVXJsIiwibm9ybWFsaXplUmVwZWF0ZWRTbGFzaGVzIiwiaXNMb2NhbFVSTCIsIlVSTCIsInN0YXJ0c1dpdGgiLCJhc1BhdGgiLCJfIiwiZmluYWxVcmwiLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsImludGVycG9sYXRlZEFzIiwiaXNEeW5hbWljUm91dGUiLCJzZWFyY2hQYXJhbXMiLCJxdWVyeSIsInNlYXJjaFBhcmFtc1RvVXJsUXVlcnkiLCJyZXN1bHQiLCJwYXJhbXMiLCJpbnRlcnBvbGF0ZUFzIiwiaGFzaCIsIm9taXQiLCJyZXNvbHZlZEhyZWYiLCJvcmlnaW4iLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/resolve-href.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"useIntersection\", ({\n    enumerable: true,\n    get: function() {\n        return useIntersection;\n    }\n}));\nconst _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nconst _requestidlecallback = __webpack_require__(/*! ./request-idle-callback */ \"(app-pages-browser)/./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id, observer, elements } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef, rootMargin, disabled } = param;\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react.useState)(false);\n    const elementRef = (0, _react.useRef)(null);\n    const setElement = (0, _react.useCallback)((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react.useEffect)(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestidlecallback.requestIdleCallback)(()=>setVisible(true));\n                return ()=>(0, _requestidlecallback.cancelIdleCallback)(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react.useCallback)(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/client/use-intersection.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/escape-regexp.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// regexp is based on https://github.com/sindresorhus/escape-string-regexp\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"escapeStringRegexp\", ({\n    enumerable: true,\n    get: function() {\n        return escapeStringRegexp;\n    }\n}));\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/;\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g;\nfunction escapeStringRegexp(str) {\n    // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n    if (reHasRegExp.test(str)) {\n        return str.replace(reReplaceRegExp, \"\\\\$&\");\n    }\n    return str;\n} //# sourceMappingURL=escape-regexp.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9lc2NhcGUtcmVnZXhwLmpzIiwibWFwcGluZ3MiOiJBQUFBLDBFQUEwRTtBQUM3RDtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsY0FBYztBQUNwQixNQUFNQyxrQkFBa0I7QUFDeEIsU0FBU0YsbUJBQW1CRyxHQUFHO0lBQzNCLCtHQUErRztJQUMvRyxJQUFJRixZQUFZRyxJQUFJLENBQUNELE1BQU07UUFDdkIsT0FBT0EsSUFBSUUsT0FBTyxDQUFDSCxpQkFBaUI7SUFDeEM7SUFDQSxPQUFPQztBQUNYLEVBRUEseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9lc2NhcGUtcmVnZXhwLmpzP2RiZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVnZXhwIGlzIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zaW5kcmVzb3JodXMvZXNjYXBlLXN0cmluZy1yZWdleHBcblwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZXNjYXBlU3RyaW5nUmVnZXhwXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBlc2NhcGVTdHJpbmdSZWdleHA7XG4gICAgfVxufSk7XG5jb25zdCByZUhhc1JlZ0V4cCA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Li1dLztcbmNvbnN0IHJlUmVwbGFjZVJlZ0V4cCA9IC9bfFxcXFx7fSgpW1xcXV4kKyo/Li1dL2c7XG5mdW5jdGlvbiBlc2NhcGVTdHJpbmdSZWdleHAoc3RyKSB7XG4gICAgLy8gc2VlIGFsc286IGh0dHBzOi8vZ2l0aHViLmNvbS9sb2Rhc2gvbG9kYXNoL2Jsb2IvMmRhMDI0YzNiNGY5OTQ3YTQ4NTE3NjM5ZGU3NTYwNDU3Y2Q0ZWM2Yy9lc2NhcGVSZWdFeHAuanMjTDIzXG4gICAgaWYgKHJlSGFzUmVnRXhwLnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gc3RyLnJlcGxhY2UocmVSZXBsYWNlUmVnRXhwLCBcIlxcXFwkJlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXNjYXBlLXJlZ2V4cC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZXNjYXBlU3RyaW5nUmVnZXhwIiwicmVIYXNSZWdFeHAiLCJyZVJlcGxhY2VSZWdFeHAiLCJzdHIiLCJ0ZXN0IiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router-context.shared-runtime.js ***!
  \****************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouterContext\", ({\n    enumerable: true,\n    get: function() {\n        return RouterContext;\n    }\n}));\nconst _interop_require_default = __webpack_require__(/*! @swc/helpers/_/_interop_require_default */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_default.js\");\nconst _react = /*#__PURE__*/ _interop_require_default._(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\nconst RouterContext = _react.default.createContext(null);\nif (true) {\n    RouterContext.displayName = \"RouterContext\";\n} //# sourceMappingURL=router-context.shared-runtime.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsMkJBQTJCQyxtQkFBT0EsQ0FBQyxnSUFBeUM7QUFDbEYsTUFBTUMsU0FBUyxXQUFXLEdBQUdGLHlCQUF5QkcsQ0FBQyxDQUFDRixtQkFBT0EsQ0FBQyxtRkFBTztBQUN2RSxNQUFNRixnQkFBZ0JHLE9BQU9FLE9BQU8sQ0FBQ0MsYUFBYSxDQUFDO0FBQ25ELElBQUlDLElBQXFDLEVBQUU7SUFDdkNQLGNBQWNRLFdBQVcsR0FBRztBQUNoQyxFQUVBLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanM/OGZhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJvdXRlckNvbnRleHRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJvdXRlckNvbnRleHQ7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQgPSByZXF1aXJlKFwiQHN3Yy9oZWxwZXJzL18vX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0XCIpO1xuY29uc3QgX3JlYWN0ID0gLyojX19QVVJFX18qLyBfaW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuXyhyZXF1aXJlKFwicmVhY3RcIikpO1xuY29uc3QgUm91dGVyQ29udGV4dCA9IF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgUm91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUm91dGVyQ29udGV4dFwiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXItY29udGV4dC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUm91dGVyQ29udGV4dCIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJfcmVhY3QiLCJfIiwiZGVmYXVsdCIsImNyZWF0ZUNvbnRleHQiLCJwcm9jZXNzIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router-context.shared-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-url.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    formatUrl: function() {\n        return formatUrl;\n    },\n    urlObjectKeys: function() {\n        return urlObjectKeys;\n    },\n    formatWithValidation: function() {\n        return formatWithValidation;\n    }\n});\nconst _interop_require_wildcard = __webpack_require__(/*! @swc/helpers/_/_interop_require_wildcard */ \"(app-pages-browser)/./node_modules/@swc/helpers/esm/_interop_require_wildcard.js\");\nconst _querystring = /*#__PURE__*/ _interop_require_wildcard._(__webpack_require__(/*! ./querystring */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\"));\nconst slashedProtocols = /https?|ftp|gopher|file/;\nfunction formatUrl(urlObj) {\n    let { auth, hostname } = urlObj;\n    let protocol = urlObj.protocol || \"\";\n    let pathname = urlObj.pathname || \"\";\n    let hash = urlObj.hash || \"\";\n    let query = urlObj.query || \"\";\n    let host = false;\n    auth = auth ? encodeURIComponent(auth).replace(/%3A/i, \":\") + \"@\" : \"\";\n    if (urlObj.host) {\n        host = auth + urlObj.host;\n    } else if (hostname) {\n        host = auth + (~hostname.indexOf(\":\") ? \"[\" + hostname + \"]\" : hostname);\n        if (urlObj.port) {\n            host += \":\" + urlObj.port;\n        }\n    }\n    if (query && typeof query === \"object\") {\n        query = String(_querystring.urlQueryToSearchParams(query));\n    }\n    let search = urlObj.search || query && \"?\" + query || \"\";\n    if (protocol && !protocol.endsWith(\":\")) protocol += \":\";\n    if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n        host = \"//\" + (host || \"\");\n        if (pathname && pathname[0] !== \"/\") pathname = \"/\" + pathname;\n    } else if (!host) {\n        host = \"\";\n    }\n    if (hash && hash[0] !== \"#\") hash = \"#\" + hash;\n    if (search && search[0] !== \"?\") search = \"?\" + search;\n    pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n    search = search.replace(\"#\", \"%23\");\n    return \"\" + protocol + host + pathname + search + hash;\n}\nconst urlObjectKeys = [\n    \"auth\",\n    \"hash\",\n    \"host\",\n    \"hostname\",\n    \"href\",\n    \"path\",\n    \"pathname\",\n    \"port\",\n    \"protocol\",\n    \"query\",\n    \"search\",\n    \"slashes\"\n];\nfunction formatWithValidation(url) {\n    if (true) {\n        if (url !== null && typeof url === \"object\") {\n            Object.keys(url).forEach((key)=>{\n                if (!urlObjectKeys.includes(key)) {\n                    console.warn(\"Unknown key passed via urlObject into url.format: \" + key);\n                }\n            });\n        }\n    }\n    return formatUrl(url);\n} //# sourceMappingURL=format-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/format-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/index.js ***!
  \*****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getSortedRoutes: function() {\n        return _sortedroutes.getSortedRoutes;\n    },\n    isDynamicRoute: function() {\n        return _isdynamic.isDynamicRoute;\n    }\n});\nconst _sortedroutes = __webpack_require__(/*! ./sorted-routes */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js\");\nconst _isdynamic = __webpack_require__(/*! ./is-dynamic */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js\"); //# sourceMappingURL=index.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FHTjtBQUNBLFNBQVNHLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlULE9BQU9DLGNBQWMsQ0FBQ08sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLGlCQUFpQjtRQUNiLE9BQU9RLGNBQWNSLGVBQWU7SUFDeEM7SUFDQUMsZ0JBQWdCO1FBQ1osT0FBT1EsV0FBV1IsY0FBYztJQUNwQztBQUNKO0FBQ0EsTUFBTU8sZ0JBQWdCRSxtQkFBT0EsQ0FBQyw4R0FBaUI7QUFDL0MsTUFBTUQsYUFBYUMsbUJBQU9BLENBQUMsd0dBQWMsR0FFekMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW5kZXguanM/ZjUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldFNvcnRlZFJvdXRlczogbnVsbCxcbiAgICBpc0R5bmFtaWNSb3V0ZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBnZXRTb3J0ZWRSb3V0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX3NvcnRlZHJvdXRlcy5nZXRTb3J0ZWRSb3V0ZXM7XG4gICAgfSxcbiAgICBpc0R5bmFtaWNSb3V0ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfaXNkeW5hbWljLmlzRHluYW1pY1JvdXRlO1xuICAgIH1cbn0pO1xuY29uc3QgX3NvcnRlZHJvdXRlcyA9IHJlcXVpcmUoXCIuL3NvcnRlZC1yb3V0ZXNcIik7XG5jb25zdCBfaXNkeW5hbWljID0gcmVxdWlyZShcIi4vaXMtZHluYW1pY1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiZ2V0U29ydGVkUm91dGVzIiwiaXNEeW5hbWljUm91dGUiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJfc29ydGVkcm91dGVzIiwiX2lzZHluYW1pYyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"interpolateAs\", ({\n    enumerable: true,\n    get: function() {\n        return interpolateAs;\n    }\n}));\nconst _routematcher = __webpack_require__(/*! ./route-matcher */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js\");\nconst _routeregex = __webpack_require__(/*! ./route-regex */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js\");\nfunction interpolateAs(route, asPathname, query) {\n    let interpolatedRoute = \"\";\n    const dynamicRegex = (0, _routeregex.getRouteRegex)(route);\n    const dynamicGroups = dynamicRegex.groups;\n    const dynamicMatches = (asPathname !== route ? (0, _routematcher.getRouteMatcher)(dynamicRegex)(asPathname) : \"\") || // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query;\n    interpolatedRoute = route;\n    const params = Object.keys(dynamicGroups);\n    if (!params.every((param)=>{\n        let value = dynamicMatches[param] || \"\";\n        const { repeat, optional } = dynamicGroups[param];\n        // support single-level catch-all\n        // TODO: more robust handling for user-error (passing `/`)\n        let replaced = \"[\" + (repeat ? \"...\" : \"\") + param + \"]\";\n        if (optional) {\n            replaced = (!value ? \"/\" : \"\") + \"[\" + replaced + \"]\";\n        }\n        if (repeat && !Array.isArray(value)) value = [\n            value\n        ];\n        return (optional || param in dynamicMatches) && // Interpolate group into data URL if present\n        (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(// path delimiter escaped since they are being inserted\n        // into the URL and we expect URL encoded segments\n        // when parsing dynamic route params\n        (segment)=>encodeURIComponent(segment)).join(\"/\") : encodeURIComponent(value)) || \"/\");\n    })) {\n        interpolatedRoute = \"\" // did not satisfy all requirements\n        ;\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n    }\n    return {\n        params,\n        result: interpolatedRoute\n    };\n} //# sourceMappingURL=interpolate-as.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaW50ZXJwb2xhdGUtYXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGlEQUFnRDtJQUM1Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsOEdBQWlCO0FBQy9DLE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBHQUFlO0FBQzNDLFNBQVNGLGNBQWNJLEtBQUssRUFBRUMsVUFBVSxFQUFFQyxLQUFLO0lBQzNDLElBQUlDLG9CQUFvQjtJQUN4QixNQUFNQyxlQUFlLENBQUMsR0FBR0wsWUFBWU0sYUFBYSxFQUFFTDtJQUNwRCxNQUFNTSxnQkFBZ0JGLGFBQWFHLE1BQU07SUFDekMsTUFBTUMsaUJBQ04sQ0FBQ1AsZUFBZUQsUUFBUSxDQUFDLEdBQUdILGNBQWNZLGVBQWUsRUFBRUwsY0FBY0gsY0FBYyxFQUFDLEtBQU0sZ0RBQWdEO0lBQzlJLHNFQUFzRTtJQUN0RUM7SUFDQUMsb0JBQW9CSDtJQUNwQixNQUFNVSxTQUFTcEIsT0FBT3FCLElBQUksQ0FBQ0w7SUFDM0IsSUFBSSxDQUFDSSxPQUFPRSxLQUFLLENBQUMsQ0FBQ0M7UUFDZixJQUFJcEIsUUFBUWUsY0FBYyxDQUFDSyxNQUFNLElBQUk7UUFDckMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHVCxhQUFhLENBQUNPLE1BQU07UUFDakQsaUNBQWlDO1FBQ2pDLDBEQUEwRDtRQUMxRCxJQUFJRyxXQUFXLE1BQU9GLENBQUFBLFNBQVMsUUFBUSxFQUFDLElBQUtELFFBQVE7UUFDckQsSUFBSUUsVUFBVTtZQUNWQyxXQUFXLENBQUMsQ0FBQ3ZCLFFBQVEsTUFBTSxFQUFDLElBQUssTUFBTXVCLFdBQVc7UUFDdEQ7UUFDQSxJQUFJRixVQUFVLENBQUNHLE1BQU1DLE9BQU8sQ0FBQ3pCLFFBQVFBLFFBQVE7WUFDekNBO1NBQ0g7UUFDRCxPQUFPLENBQUNzQixZQUFZRixTQUFTTCxjQUFhLEtBQU0sNkNBQTZDO1FBQzVGTCxDQUFBQSxvQkFBb0JBLGtCQUFrQmdCLE9BQU8sQ0FBQ0gsVUFBVUYsU0FBU3JCLE1BQU0yQixHQUFHLENBQzNFLHVEQUF1RDtRQUN2RCxrREFBa0Q7UUFDbEQsb0NBQW9DO1FBQ3BDLENBQUNDLFVBQVVDLG1CQUFtQkQsVUFBVUUsSUFBSSxDQUFDLE9BQU9ELG1CQUFtQjdCLFdBQVcsR0FBRTtJQUN4RixJQUFJO1FBQ0FVLG9CQUFvQixHQUFHLG1DQUFtQzs7SUFFOUQsdUVBQXVFO0lBQ3ZFLGtEQUFrRDtJQUNsRDtJQUNBLE9BQU87UUFDSE87UUFDQWMsUUFBUXJCO0lBQ1o7QUFDSixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2ludGVycG9sYXRlLWFzLmpzP2QwZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpbnRlcnBvbGF0ZUFzXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcnBvbGF0ZUFzO1xuICAgIH1cbn0pO1xuY29uc3QgX3JvdXRlbWF0Y2hlciA9IHJlcXVpcmUoXCIuL3JvdXRlLW1hdGNoZXJcIik7XG5jb25zdCBfcm91dGVyZWdleCA9IHJlcXVpcmUoXCIuL3JvdXRlLXJlZ2V4XCIpO1xuZnVuY3Rpb24gaW50ZXJwb2xhdGVBcyhyb3V0ZSwgYXNQYXRobmFtZSwgcXVlcnkpIHtcbiAgICBsZXQgaW50ZXJwb2xhdGVkUm91dGUgPSBcIlwiO1xuICAgIGNvbnN0IGR5bmFtaWNSZWdleCA9ICgwLCBfcm91dGVyZWdleC5nZXRSb3V0ZVJlZ2V4KShyb3V0ZSk7XG4gICAgY29uc3QgZHluYW1pY0dyb3VwcyA9IGR5bmFtaWNSZWdleC5ncm91cHM7XG4gICAgY29uc3QgZHluYW1pY01hdGNoZXMgPSAvLyBUcnkgdG8gbWF0Y2ggdGhlIGR5bmFtaWMgcm91dGUgYWdhaW5zdCB0aGUgYXNQYXRoXG4gICAgKGFzUGF0aG5hbWUgIT09IHJvdXRlID8gKDAsIF9yb3V0ZW1hdGNoZXIuZ2V0Um91dGVNYXRjaGVyKShkeW5hbWljUmVnZXgpKGFzUGF0aG5hbWUpIDogXCJcIikgfHwgLy8gRmFsbCBiYWNrIHRvIHJlYWRpbmcgdGhlIHZhbHVlcyBmcm9tIHRoZSBocmVmXG4gICAgLy8gVE9ETzogc2hvdWxkIHRoaXMgdGFrZSBwcmlvcml0eTsgYWxzbyBuZWVkIHRvIGNoYW5nZSBpbiB0aGUgcm91dGVyLlxuICAgIHF1ZXJ5O1xuICAgIGludGVycG9sYXRlZFJvdXRlID0gcm91dGU7XG4gICAgY29uc3QgcGFyYW1zID0gT2JqZWN0LmtleXMoZHluYW1pY0dyb3Vwcyk7XG4gICAgaWYgKCFwYXJhbXMuZXZlcnkoKHBhcmFtKT0+e1xuICAgICAgICBsZXQgdmFsdWUgPSBkeW5hbWljTWF0Y2hlc1twYXJhbV0gfHwgXCJcIjtcbiAgICAgICAgY29uc3QgeyByZXBlYXQsIG9wdGlvbmFsIH0gPSBkeW5hbWljR3JvdXBzW3BhcmFtXTtcbiAgICAgICAgLy8gc3VwcG9ydCBzaW5nbGUtbGV2ZWwgY2F0Y2gtYWxsXG4gICAgICAgIC8vIFRPRE86IG1vcmUgcm9idXN0IGhhbmRsaW5nIGZvciB1c2VyLWVycm9yIChwYXNzaW5nIGAvYClcbiAgICAgICAgbGV0IHJlcGxhY2VkID0gXCJbXCIgKyAocmVwZWF0ID8gXCIuLi5cIiA6IFwiXCIpICsgcGFyYW0gKyBcIl1cIjtcbiAgICAgICAgaWYgKG9wdGlvbmFsKSB7XG4gICAgICAgICAgICByZXBsYWNlZCA9ICghdmFsdWUgPyBcIi9cIiA6IFwiXCIpICsgXCJbXCIgKyByZXBsYWNlZCArIFwiXVwiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyZXBlYXQgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpKSB2YWx1ZSA9IFtcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgIF07XG4gICAgICAgIHJldHVybiAob3B0aW9uYWwgfHwgcGFyYW0gaW4gZHluYW1pY01hdGNoZXMpICYmIC8vIEludGVycG9sYXRlIGdyb3VwIGludG8gZGF0YSBVUkwgaWYgcHJlc2VudFxuICAgICAgICAoaW50ZXJwb2xhdGVkUm91dGUgPSBpbnRlcnBvbGF0ZWRSb3V0ZS5yZXBsYWNlKHJlcGxhY2VkLCByZXBlYXQgPyB2YWx1ZS5tYXAoLy8gdGhlc2UgdmFsdWVzIHNob3VsZCBiZSBmdWxseSBlbmNvZGVkIGluc3RlYWQgb2YganVzdFxuICAgICAgICAvLyBwYXRoIGRlbGltaXRlciBlc2NhcGVkIHNpbmNlIHRoZXkgYXJlIGJlaW5nIGluc2VydGVkXG4gICAgICAgIC8vIGludG8gdGhlIFVSTCBhbmQgd2UgZXhwZWN0IFVSTCBlbmNvZGVkIHNlZ21lbnRzXG4gICAgICAgIC8vIHdoZW4gcGFyc2luZyBkeW5hbWljIHJvdXRlIHBhcmFtc1xuICAgICAgICAoc2VnbWVudCk9PmVuY29kZVVSSUNvbXBvbmVudChzZWdtZW50KSkuam9pbihcIi9cIikgOiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKSB8fCBcIi9cIik7XG4gICAgfSkpIHtcbiAgICAgICAgaW50ZXJwb2xhdGVkUm91dGUgPSBcIlwiIC8vIGRpZCBub3Qgc2F0aXNmeSBhbGwgcmVxdWlyZW1lbnRzXG4gICAgICAgIDtcbiAgICAvLyBuLmIuIFdlIGlnbm9yZSB0aGlzIGVycm9yIGJlY2F1c2Ugd2UgaGFuZGxlIHdhcm5pbmcgZm9yIHRoaXMgY2FzZSBpblxuICAgIC8vIGRldmVsb3BtZW50IGluIHRoZSBgPExpbms+YCBjb21wb25lbnQgZGlyZWN0bHkuXG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtcyxcbiAgICAgICAgcmVzdWx0OiBpbnRlcnBvbGF0ZWRSb3V0ZVxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVycG9sYXRlLWFzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJpbnRlcnBvbGF0ZUFzIiwiX3JvdXRlbWF0Y2hlciIsInJlcXVpcmUiLCJfcm91dGVyZWdleCIsInJvdXRlIiwiYXNQYXRobmFtZSIsInF1ZXJ5IiwiaW50ZXJwb2xhdGVkUm91dGUiLCJkeW5hbWljUmVnZXgiLCJnZXRSb3V0ZVJlZ2V4IiwiZHluYW1pY0dyb3VwcyIsImdyb3VwcyIsImR5bmFtaWNNYXRjaGVzIiwiZ2V0Um91dGVNYXRjaGVyIiwicGFyYW1zIiwia2V5cyIsImV2ZXJ5IiwicGFyYW0iLCJyZXBlYXQiLCJvcHRpb25hbCIsInJlcGxhY2VkIiwiQXJyYXkiLCJpc0FycmF5IiwicmVwbGFjZSIsIm1hcCIsInNlZ21lbnQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJqb2luIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/interpolate-as.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js ***!
  \**********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isDynamicRoute\", ({\n    enumerable: true,\n    get: function() {\n        return isDynamicRoute;\n    }\n}));\nconst _interceptionroutes = __webpack_require__(/*! ../../../../server/future/helpers/interception-routes */ \"(app-pages-browser)/./node_modules/next/dist/server/future/helpers/interception-routes.js\");\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    if ((0, _interceptionroutes.isInterceptionRouteAppPath)(route)) {\n        route = (0, _interceptionroutes.extractInterceptionRouteInformation)(route).interceptedRoute;\n    }\n    return TEST_ROUTE.test(route);\n} //# sourceMappingURL=is-dynamic.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtZHluYW1pYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsa0RBQWlEO0lBQzdDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsc0JBQXNCQyxtQkFBT0EsQ0FBQyx3SkFBdUQ7QUFDM0YscUNBQXFDO0FBQ3JDLE1BQU1DLGFBQWE7QUFDbkIsU0FBU0gsZUFBZUksS0FBSztJQUN6QixJQUFJLENBQUMsR0FBR0gsb0JBQW9CSSwwQkFBMEIsRUFBRUQsUUFBUTtRQUM1REEsUUFBUSxDQUFDLEdBQUdILG9CQUFvQkssbUNBQW1DLEVBQUVGLE9BQU9HLGdCQUFnQjtJQUNoRztJQUNBLE9BQU9KLFdBQVdLLElBQUksQ0FBQ0o7QUFDM0IsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9pcy1keW5hbWljLmpzPzQ2ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0R5bmFtaWNSb3V0ZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNEeW5hbWljUm91dGU7XG4gICAgfVxufSk7XG5jb25zdCBfaW50ZXJjZXB0aW9ucm91dGVzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3NlcnZlci9mdXR1cmUvaGVscGVycy9pbnRlcmNlcHRpb24tcm91dGVzXCIpO1xuLy8gSWRlbnRpZnkgL1twYXJhbV0vIGluIHJvdXRlIHN0cmluZ1xuY29uc3QgVEVTVF9ST1VURSA9IC9cXC9cXFtbXi9dKz9cXF0oPz1cXC98JCkvO1xuZnVuY3Rpb24gaXNEeW5hbWljUm91dGUocm91dGUpIHtcbiAgICBpZiAoKDAsIF9pbnRlcmNlcHRpb25yb3V0ZXMuaXNJbnRlcmNlcHRpb25Sb3V0ZUFwcFBhdGgpKHJvdXRlKSkge1xuICAgICAgICByb3V0ZSA9ICgwLCBfaW50ZXJjZXB0aW9ucm91dGVzLmV4dHJhY3RJbnRlcmNlcHRpb25Sb3V0ZUluZm9ybWF0aW9uKShyb3V0ZSkuaW50ZXJjZXB0ZWRSb3V0ZTtcbiAgICB9XG4gICAgcmV0dXJuIFRFU1RfUk9VVEUudGVzdChyb3V0ZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWR5bmFtaWMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImlzRHluYW1pY1JvdXRlIiwiX2ludGVyY2VwdGlvbnJvdXRlcyIsInJlcXVpcmUiLCJURVNUX1JPVVRFIiwicm91dGUiLCJpc0ludGVyY2VwdGlvblJvdXRlQXBwUGF0aCIsImV4dHJhY3RJbnRlcmNlcHRpb25Sb3V0ZUluZm9ybWF0aW9uIiwiaW50ZXJjZXB0ZWRSb3V0ZSIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-dynamic.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/is-local-url.js ***!
  \************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"isLocalURL\", ({\n    enumerable: true,\n    get: function() {\n        return isLocalURL;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nconst _hasbasepath = __webpack_require__(/*! ../../../../client/has-base-path */ \"(app-pages-browser)/./node_modules/next/dist/client/has-base-path.js\");\nfunction isLocalURL(url) {\n    // prevent a hydration mismatch on href for url with anchor refs\n    if (!(0, _utils.isAbsoluteUrl)(url)) return true;\n    try {\n        // absolute urls can be local if they are on the same origin\n        const locationOrigin = (0, _utils.getLocationOrigin)();\n        const resolved = new URL(url, locationOrigin);\n        return resolved.origin === locationOrigin && (0, _hasbasepath.hasBasePath)(resolved.pathname);\n    } catch (_) {\n        return false;\n    }\n} //# sourceMappingURL=is-local-url.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvaXMtbG9jYWwtdXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw4Q0FBNkM7SUFDekNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxxRkFBYTtBQUNwQyxNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQyw4R0FBa0M7QUFDL0QsU0FBU0YsV0FBV0ksR0FBRztJQUNuQixnRUFBZ0U7SUFDaEUsSUFBSSxDQUFDLENBQUMsR0FBR0gsT0FBT0ksYUFBYSxFQUFFRCxNQUFNLE9BQU87SUFDNUMsSUFBSTtRQUNBLDREQUE0RDtRQUM1RCxNQUFNRSxpQkFBaUIsQ0FBQyxHQUFHTCxPQUFPTSxpQkFBaUI7UUFDbkQsTUFBTUMsV0FBVyxJQUFJQyxJQUFJTCxLQUFLRTtRQUM5QixPQUFPRSxTQUFTRSxNQUFNLEtBQUtKLGtCQUFrQixDQUFDLEdBQUdILGFBQWFRLFdBQVcsRUFBRUgsU0FBU0ksUUFBUTtJQUNoRyxFQUFFLE9BQU9DLEdBQUc7UUFDUixPQUFPO0lBQ1g7QUFDSixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2lzLWxvY2FsLXVybC5qcz81ZDI4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNMb2NhbFVSTFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNMb2NhbFVSTDtcbiAgICB9XG59KTtcbmNvbnN0IF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcbmNvbnN0IF9oYXNiYXNlcGF0aCA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi9jbGllbnQvaGFzLWJhc2UtcGF0aFwiKTtcbmZ1bmN0aW9uIGlzTG9jYWxVUkwodXJsKSB7XG4gICAgLy8gcHJldmVudCBhIGh5ZHJhdGlvbiBtaXNtYXRjaCBvbiBocmVmIGZvciB1cmwgd2l0aCBhbmNob3IgcmVmc1xuICAgIGlmICghKDAsIF91dGlscy5pc0Fic29sdXRlVXJsKSh1cmwpKSByZXR1cm4gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICAvLyBhYnNvbHV0ZSB1cmxzIGNhbiBiZSBsb2NhbCBpZiB0aGV5IGFyZSBvbiB0aGUgc2FtZSBvcmlnaW5cbiAgICAgICAgY29uc3QgbG9jYXRpb25PcmlnaW4gPSAoMCwgX3V0aWxzLmdldExvY2F0aW9uT3JpZ2luKSgpO1xuICAgICAgICBjb25zdCByZXNvbHZlZCA9IG5ldyBVUkwodXJsLCBsb2NhdGlvbk9yaWdpbik7XG4gICAgICAgIHJldHVybiByZXNvbHZlZC5vcmlnaW4gPT09IGxvY2F0aW9uT3JpZ2luICYmICgwLCBfaGFzYmFzZXBhdGguaGFzQmFzZVBhdGgpKHJlc29sdmVkLnBhdGhuYW1lKTtcbiAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWxvY2FsLXVybC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiaXNMb2NhbFVSTCIsIl91dGlscyIsInJlcXVpcmUiLCJfaGFzYmFzZXBhdGgiLCJ1cmwiLCJpc0Fic29sdXRlVXJsIiwibG9jYXRpb25PcmlnaW4iLCJnZXRMb2NhdGlvbk9yaWdpbiIsInJlc29sdmVkIiwiVVJMIiwib3JpZ2luIiwiaGFzQmFzZVBhdGgiLCJwYXRobmFtZSIsIl8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/omit.js ***!
  \****************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"omit\", ({\n    enumerable: true,\n    get: function() {\n        return omit;\n    }\n}));\nfunction omit(object, keys) {\n    const omitted = {};\n    Object.keys(object).forEach((key)=>{\n        if (!keys.includes(key)) {\n            omitted[key] = object[key];\n        }\n    });\n    return omitted;\n} //# sourceMappingURL=omit.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvb21pdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsd0NBQXVDO0lBQ25DSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsS0FBS0MsTUFBTSxFQUFFQyxJQUFJO0lBQ3RCLE1BQU1DLFVBQVUsQ0FBQztJQUNqQlQsT0FBT1EsSUFBSSxDQUFDRCxRQUFRRyxPQUFPLENBQUMsQ0FBQ0M7UUFDekIsSUFBSSxDQUFDSCxLQUFLSSxRQUFRLENBQUNELE1BQU07WUFDckJGLE9BQU8sQ0FBQ0UsSUFBSSxHQUFHSixNQUFNLENBQUNJLElBQUk7UUFDOUI7SUFDSjtJQUNBLE9BQU9GO0FBQ1gsRUFFQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9vbWl0LmpzP2ZiNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJvbWl0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBvbWl0O1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gb21pdChvYmplY3QsIGtleXMpIHtcbiAgICBjb25zdCBvbWl0dGVkID0ge307XG4gICAgT2JqZWN0LmtleXMob2JqZWN0KS5mb3JFYWNoKChrZXkpPT57XG4gICAgICAgIGlmICgha2V5cy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBvbWl0dGVkW2tleV0gPSBvYmplY3Rba2V5XTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBvbWl0dGVkO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbWl0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJvbWl0Iiwib2JqZWN0Iiwia2V5cyIsIm9taXR0ZWQiLCJmb3JFYWNoIiwia2V5IiwiaW5jbHVkZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/omit.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/querystring.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    searchParamsToUrlQuery: function() {\n        return searchParamsToUrlQuery;\n    },\n    urlQueryToSearchParams: function() {\n        return urlQueryToSearchParams;\n    },\n    assign: function() {\n        return assign;\n    }\n});\nfunction searchParamsToUrlQuery(searchParams) {\n    const query = {};\n    searchParams.forEach((value, key)=>{\n        if (typeof query[key] === \"undefined\") {\n            query[key] = value;\n        } else if (Array.isArray(query[key])) {\n            query[key].push(value);\n        } else {\n            query[key] = [\n                query[key],\n                value\n            ];\n        }\n    });\n    return query;\n}\nfunction stringifyUrlQueryParam(param) {\n    if (typeof param === \"string\" || typeof param === \"number\" && !isNaN(param) || typeof param === \"boolean\") {\n        return String(param);\n    } else {\n        return \"\";\n    }\n}\nfunction urlQueryToSearchParams(urlQuery) {\n    const result = new URLSearchParams();\n    Object.entries(urlQuery).forEach((param)=>{\n        let [key, value] = param;\n        if (Array.isArray(value)) {\n            value.forEach((item)=>result.append(key, stringifyUrlQueryParam(item)));\n        } else {\n            result.set(key, stringifyUrlQueryParam(value));\n        }\n    });\n    return result;\n}\nfunction assign(target) {\n    for(var _len = arguments.length, searchParamsList = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        searchParamsList[_key - 1] = arguments[_key];\n    }\n    searchParamsList.forEach((searchParams)=>{\n        Array.from(searchParams.keys()).forEach((key)=>target.delete(key));\n        searchParams.forEach((value, key)=>target.append(key, value));\n    });\n    return target;\n} //# sourceMappingURL=querystring.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FJTjtBQUNBLFNBQVNJLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlWLE9BQU9DLGNBQWMsQ0FBQ1EsUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTixTQUFTO0lBQ2JHLHdCQUF3QjtRQUNwQixPQUFPQTtJQUNYO0lBQ0FDLHdCQUF3QjtRQUNwQixPQUFPQTtJQUNYO0lBQ0FDLFFBQVE7UUFDSixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxTQUFTRix1QkFBdUJTLFlBQVk7SUFDeEMsTUFBTUMsUUFBUSxDQUFDO0lBQ2ZELGFBQWFFLE9BQU8sQ0FBQyxDQUFDYixPQUFPYztRQUN6QixJQUFJLE9BQU9GLEtBQUssQ0FBQ0UsSUFBSSxLQUFLLGFBQWE7WUFDbkNGLEtBQUssQ0FBQ0UsSUFBSSxHQUFHZDtRQUNqQixPQUFPLElBQUllLE1BQU1DLE9BQU8sQ0FBQ0osS0FBSyxDQUFDRSxJQUFJLEdBQUc7WUFDbENGLEtBQUssQ0FBQ0UsSUFBSSxDQUFDRyxJQUFJLENBQUNqQjtRQUNwQixPQUFPO1lBQ0hZLEtBQUssQ0FBQ0UsSUFBSSxHQUFHO2dCQUNURixLQUFLLENBQUNFLElBQUk7Z0JBQ1ZkO2FBQ0g7UUFDTDtJQUNKO0lBQ0EsT0FBT1k7QUFDWDtBQUNBLFNBQVNNLHVCQUF1QkMsS0FBSztJQUNqQyxJQUFJLE9BQU9BLFVBQVUsWUFBWSxPQUFPQSxVQUFVLFlBQVksQ0FBQ0MsTUFBTUQsVUFBVSxPQUFPQSxVQUFVLFdBQVc7UUFDdkcsT0FBT0UsT0FBT0Y7SUFDbEIsT0FBTztRQUNILE9BQU87SUFDWDtBQUNKO0FBQ0EsU0FBU2hCLHVCQUF1Qm1CLFFBQVE7SUFDcEMsTUFBTUMsU0FBUyxJQUFJQztJQUNuQjNCLE9BQU80QixPQUFPLENBQUNILFVBQVVULE9BQU8sQ0FBQyxDQUFDTTtRQUM5QixJQUFJLENBQUNMLEtBQUtkLE1BQU0sR0FBR21CO1FBQ25CLElBQUlKLE1BQU1DLE9BQU8sQ0FBQ2hCLFFBQVE7WUFDdEJBLE1BQU1hLE9BQU8sQ0FBQyxDQUFDYSxPQUFPSCxPQUFPSSxNQUFNLENBQUNiLEtBQUtJLHVCQUF1QlE7UUFDcEUsT0FBTztZQUNISCxPQUFPSyxHQUFHLENBQUNkLEtBQUtJLHVCQUF1QmxCO1FBQzNDO0lBQ0o7SUFDQSxPQUFPdUI7QUFDWDtBQUNBLFNBQVNuQixPQUFPRSxNQUFNO0lBQ2xCLElBQUksSUFBSXVCLE9BQU9DLFVBQVVDLE1BQU0sRUFBRUMsbUJBQW1CLElBQUlqQixNQUFNYyxPQUFPLElBQUlBLE9BQU8sSUFBSSxJQUFJSSxPQUFPLEdBQUdBLE9BQU9KLE1BQU1JLE9BQU87UUFDbEhELGdCQUFnQixDQUFDQyxPQUFPLEVBQUUsR0FBR0gsU0FBUyxDQUFDRyxLQUFLO0lBQ2hEO0lBQ0FELGlCQUFpQm5CLE9BQU8sQ0FBQyxDQUFDRjtRQUN0QkksTUFBTW1CLElBQUksQ0FBQ3ZCLGFBQWF3QixJQUFJLElBQUl0QixPQUFPLENBQUMsQ0FBQ0MsTUFBTVIsT0FBTzhCLE1BQU0sQ0FBQ3RCO1FBQzdESCxhQUFhRSxPQUFPLENBQUMsQ0FBQ2IsT0FBT2MsTUFBTVIsT0FBT3FCLE1BQU0sQ0FBQ2IsS0FBS2Q7SUFDMUQ7SUFDQSxPQUFPTTtBQUNYLEVBRUEsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcXVlcnlzdHJpbmcuanM/MDE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnk6IG51bGwsXG4gICAgdXJsUXVlcnlUb1NlYXJjaFBhcmFtczogbnVsbCxcbiAgICBhc3NpZ246IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgc2VhcmNoUGFyYW1zVG9VcmxRdWVyeTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBzZWFyY2hQYXJhbXNUb1VybFF1ZXJ5O1xuICAgIH0sXG4gICAgdXJsUXVlcnlUb1NlYXJjaFBhcmFtczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB1cmxRdWVyeVRvU2VhcmNoUGFyYW1zO1xuICAgIH0sXG4gICAgYXNzaWduOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFzc2lnbjtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIHNlYXJjaFBhcmFtc1RvVXJsUXVlcnkoc2VhcmNoUGFyYW1zKSB7XG4gICAgY29uc3QgcXVlcnkgPSB7fTtcbiAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSk9PntcbiAgICAgICAgaWYgKHR5cGVvZiBxdWVyeVtrZXldID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICBxdWVyeVtrZXldID0gdmFsdWU7XG4gICAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShxdWVyeVtrZXldKSkge1xuICAgICAgICAgICAgcXVlcnlba2V5XS5wdXNoKHZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHF1ZXJ5W2tleV0gPSBbXG4gICAgICAgICAgICAgICAgcXVlcnlba2V5XSxcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBxdWVyeTtcbn1cbmZ1bmN0aW9uIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0ocGFyYW0pIHtcbiAgICBpZiAodHlwZW9mIHBhcmFtID09PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBwYXJhbSA9PT0gXCJudW1iZXJcIiAmJiAhaXNOYU4ocGFyYW0pIHx8IHR5cGVvZiBwYXJhbSA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZyhwYXJhbSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgfVxufVxuZnVuY3Rpb24gdXJsUXVlcnlUb1NlYXJjaFBhcmFtcyh1cmxRdWVyeSkge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoKTtcbiAgICBPYmplY3QuZW50cmllcyh1cmxRdWVyeSkuZm9yRWFjaCgocGFyYW0pPT57XG4gICAgICAgIGxldCBba2V5LCB2YWx1ZV0gPSBwYXJhbTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChpdGVtKT0+cmVzdWx0LmFwcGVuZChrZXksIHN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0oaXRlbSkpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdC5zZXQoa2V5LCBzdHJpbmdpZnlVcmxRdWVyeVBhcmFtKHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gYXNzaWduKHRhcmdldCkge1xuICAgIGZvcih2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNlYXJjaFBhcmFtc0xpc3QgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKyl7XG4gICAgICAgIHNlYXJjaFBhcmFtc0xpc3RbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cbiAgICBzZWFyY2hQYXJhbXNMaXN0LmZvckVhY2goKHNlYXJjaFBhcmFtcyk9PntcbiAgICAgICAgQXJyYXkuZnJvbShzZWFyY2hQYXJhbXMua2V5cygpKS5mb3JFYWNoKChrZXkpPT50YXJnZXQuZGVsZXRlKGtleSkpO1xuICAgICAgICBzZWFyY2hQYXJhbXMuZm9yRWFjaCgodmFsdWUsIGtleSk9PnRhcmdldC5hcHBlbmQoa2V5LCB2YWx1ZSkpO1xuICAgIH0pO1xuICAgIHJldHVybiB0YXJnZXQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5c3RyaW5nLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsInNlYXJjaFBhcmFtc1RvVXJsUXVlcnkiLCJ1cmxRdWVyeVRvU2VhcmNoUGFyYW1zIiwiYXNzaWduIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwic2VhcmNoUGFyYW1zIiwicXVlcnkiLCJmb3JFYWNoIiwia2V5IiwiQXJyYXkiLCJpc0FycmF5IiwicHVzaCIsInN0cmluZ2lmeVVybFF1ZXJ5UGFyYW0iLCJwYXJhbSIsImlzTmFOIiwiU3RyaW5nIiwidXJsUXVlcnkiLCJyZXN1bHQiLCJVUkxTZWFyY2hQYXJhbXMiLCJlbnRyaWVzIiwiaXRlbSIsImFwcGVuZCIsInNldCIsIl9sZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzZWFyY2hQYXJhbXNMaXN0IiwiX2tleSIsImZyb20iLCJrZXlzIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/querystring.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/route-matcher.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getRouteMatcher\", ({\n    enumerable: true,\n    get: function() {\n        return getRouteMatcher;\n    }\n}));\nconst _utils = __webpack_require__(/*! ../../utils */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\");\nfunction getRouteMatcher(param) {\n    let { re, groups } = param;\n    return (pathname)=>{\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const decode = (param)=>{\n            try {\n                return decodeURIComponent(param);\n            } catch (_) {\n                throw new _utils.DecodeError(\"failed to decode param\");\n            }\n        };\n        const params = {};\n        Object.keys(groups).forEach((slugName)=>{\n            const g = groups[slugName];\n            const m = routeMatch[g.pos];\n            if (m !== undefined) {\n                params[slugName] = ~m.indexOf(\"/\") ? m.split(\"/\").map((entry)=>decode(entry)) : g.repeat ? [\n                    decode(m)\n                ] : decode(m);\n            }\n        });\n        return params;\n    };\n} //# sourceMappingURL=route-matcher.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcm91dGUtbWF0Y2hlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsbURBQWtEO0lBQzlDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMscUZBQWE7QUFDcEMsU0FBU0YsZ0JBQWdCRyxLQUFLO0lBQzFCLElBQUksRUFBRUMsRUFBRSxFQUFFQyxNQUFNLEVBQUUsR0FBR0Y7SUFDckIsT0FBTyxDQUFDRztRQUNKLE1BQU1DLGFBQWFILEdBQUdJLElBQUksQ0FBQ0Y7UUFDM0IsSUFBSSxDQUFDQyxZQUFZO1lBQ2IsT0FBTztRQUNYO1FBQ0EsTUFBTUUsU0FBUyxDQUFDTjtZQUNaLElBQUk7Z0JBQ0EsT0FBT08sbUJBQW1CUDtZQUM5QixFQUFFLE9BQU9RLEdBQUc7Z0JBQ1IsTUFBTSxJQUFJVixPQUFPVyxXQUFXLENBQUM7WUFDakM7UUFDSjtRQUNBLE1BQU1DLFNBQVMsQ0FBQztRQUNoQm5CLE9BQU9vQixJQUFJLENBQUNULFFBQVFVLE9BQU8sQ0FBQyxDQUFDQztZQUN6QixNQUFNQyxJQUFJWixNQUFNLENBQUNXLFNBQVM7WUFDMUIsTUFBTUUsSUFBSVgsVUFBVSxDQUFDVSxFQUFFRSxHQUFHLENBQUM7WUFDM0IsSUFBSUQsTUFBTUUsV0FBVztnQkFDakJQLE1BQU0sQ0FBQ0csU0FBUyxHQUFHLENBQUNFLEVBQUVHLE9BQU8sQ0FBQyxPQUFPSCxFQUFFSSxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDLENBQUNDLFFBQVFmLE9BQU9lLFVBQVVQLEVBQUVRLE1BQU0sR0FBRztvQkFDdkZoQixPQUFPUztpQkFDVixHQUFHVCxPQUFPUztZQUNmO1FBQ0o7UUFDQSxPQUFPTDtJQUNYO0FBQ0osRUFFQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yb3V0ZS1tYXRjaGVyLmpzP2M4NmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRSb3V0ZU1hdGNoZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldFJvdXRlTWF0Y2hlcjtcbiAgICB9XG59KTtcbmNvbnN0IF91dGlscyA9IHJlcXVpcmUoXCIuLi8uLi91dGlsc1wiKTtcbmZ1bmN0aW9uIGdldFJvdXRlTWF0Y2hlcihwYXJhbSkge1xuICAgIGxldCB7IHJlLCBncm91cHMgfSA9IHBhcmFtO1xuICAgIHJldHVybiAocGF0aG5hbWUpPT57XG4gICAgICAgIGNvbnN0IHJvdXRlTWF0Y2ggPSByZS5leGVjKHBhdGhuYW1lKTtcbiAgICAgICAgaWYgKCFyb3V0ZU1hdGNoKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGVjb2RlID0gKHBhcmFtKT0+e1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHBhcmFtKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgX3V0aWxzLkRlY29kZUVycm9yKFwiZmFpbGVkIHRvIGRlY29kZSBwYXJhbVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgcGFyYW1zID0ge307XG4gICAgICAgIE9iamVjdC5rZXlzKGdyb3VwcykuZm9yRWFjaCgoc2x1Z05hbWUpPT57XG4gICAgICAgICAgICBjb25zdCBnID0gZ3JvdXBzW3NsdWdOYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IG0gPSByb3V0ZU1hdGNoW2cucG9zXTtcbiAgICAgICAgICAgIGlmIChtICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBwYXJhbXNbc2x1Z05hbWVdID0gfm0uaW5kZXhPZihcIi9cIikgPyBtLnNwbGl0KFwiL1wiKS5tYXAoKGVudHJ5KT0+ZGVjb2RlKGVudHJ5KSkgOiBnLnJlcGVhdCA/IFtcbiAgICAgICAgICAgICAgICAgICAgZGVjb2RlKG0pXG4gICAgICAgICAgICAgICAgXSA6IGRlY29kZShtKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBwYXJhbXM7XG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGUtbWF0Y2hlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0Um91dGVNYXRjaGVyIiwiX3V0aWxzIiwicmVxdWlyZSIsInBhcmFtIiwicmUiLCJncm91cHMiLCJwYXRobmFtZSIsInJvdXRlTWF0Y2giLCJleGVjIiwiZGVjb2RlIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiXyIsIkRlY29kZUVycm9yIiwicGFyYW1zIiwia2V5cyIsImZvckVhY2giLCJzbHVnTmFtZSIsImciLCJtIiwicG9zIiwidW5kZWZpbmVkIiwiaW5kZXhPZiIsInNwbGl0IiwibWFwIiwiZW50cnkiLCJyZXBlYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-matcher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/route-regex.js ***!
  \***********************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getRouteRegex: function() {\n        return getRouteRegex;\n    },\n    getNamedRouteRegex: function() {\n        return getNamedRouteRegex;\n    },\n    getNamedMiddlewareRegex: function() {\n        return getNamedMiddlewareRegex;\n    }\n});\nconst _interceptionroutes = __webpack_require__(/*! ../../../../server/future/helpers/interception-routes */ \"(app-pages-browser)/./node_modules/next/dist/server/future/helpers/interception-routes.js\");\nconst _escaperegexp = __webpack_require__(/*! ../../escape-regexp */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/escape-regexp.js\");\nconst _removetrailingslash = __webpack_require__(/*! ./remove-trailing-slash */ \"(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\");\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst NEXT_INTERCEPTION_MARKER_PREFIX = \"nxtI\";\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route. Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n */ function parseParameter(param) {\n    const optional = param.startsWith(\"[\") && param.endsWith(\"]\");\n    if (optional) {\n        param = param.slice(1, -1);\n    }\n    const repeat = param.startsWith(\"...\");\n    if (repeat) {\n        param = param.slice(3);\n    }\n    return {\n        key: param,\n        repeat,\n        optional\n    };\n}\nfunction getParametrizedRoute(route) {\n    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split(\"/\");\n    const groups = {};\n    let groupIndex = 1;\n    return {\n        parameterizedRoute: segments.map((segment)=>{\n            const markerMatch = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.find((m)=>segment.startsWith(m));\n            const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n            ;\n            if (markerMatch && paramMatches) {\n                const { key, optional, repeat } = parseParameter(paramMatches[1]);\n                groups[key] = {\n                    pos: groupIndex++,\n                    repeat,\n                    optional\n                };\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(markerMatch) + \"([^/]+?)\";\n            } else if (paramMatches) {\n                const { key, repeat, optional } = parseParameter(paramMatches[1]);\n                groups[key] = {\n                    pos: groupIndex++,\n                    repeat,\n                    optional\n                };\n                return repeat ? optional ? \"(?:/(.+?))?\" : \"/(.+?)\" : \"/([^/]+?)\";\n            } else {\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(segment);\n            }\n        }).join(\"\"),\n        groups\n    };\n}\nfunction getRouteRegex(normalizedRoute) {\n    const { parameterizedRoute, groups } = getParametrizedRoute(normalizedRoute);\n    return {\n        re: new RegExp(\"^\" + parameterizedRoute + \"(?:/)?$\"),\n        groups: groups\n    };\n}\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */ function buildGetSafeRouteKey() {\n    let i = 0;\n    return ()=>{\n        let routeKey = \"\";\n        let j = ++i;\n        while(j > 0){\n            routeKey += String.fromCharCode(97 + (j - 1) % 26);\n            j = Math.floor((j - 1) / 26);\n        }\n        return routeKey;\n    };\n}\nfunction getSafeKeyFromSegment(param) {\n    let { interceptionMarker, getSafeRouteKey, segment, routeKeys, keyPrefix } = param;\n    const { key, optional, repeat } = parseParameter(segment);\n    // replace any non-word characters since they can break\n    // the named regex\n    let cleanedKey = key.replace(/\\W/g, \"\");\n    if (keyPrefix) {\n        cleanedKey = \"\" + keyPrefix + cleanedKey;\n    }\n    let invalidKey = false;\n    // check if the key is still invalid and fallback to using a known\n    // safe key\n    if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n        invalidKey = true;\n    }\n    if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n        invalidKey = true;\n    }\n    if (invalidKey) {\n        cleanedKey = getSafeRouteKey();\n    }\n    if (keyPrefix) {\n        routeKeys[cleanedKey] = \"\" + keyPrefix + key;\n    } else {\n        routeKeys[cleanedKey] = key;\n    }\n    // if the segment has an interception marker, make sure that's part of the regex pattern\n    // this is to ensure that the route with the interception marker doesn't incorrectly match\n    // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n    const interceptionPrefix = interceptionMarker ? (0, _escaperegexp.escapeStringRegexp)(interceptionMarker) : \"\";\n    return repeat ? optional ? \"(?:/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">.+?))?\" : \"/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">.+?)\" : \"/\" + interceptionPrefix + \"(?<\" + cleanedKey + \">[^/]+?)\";\n}\nfunction getNamedParametrizedRoute(route, prefixRouteKeys) {\n    const segments = (0, _removetrailingslash.removeTrailingSlash)(route).slice(1).split(\"/\");\n    const getSafeRouteKey = buildGetSafeRouteKey();\n    const routeKeys = {};\n    return {\n        namedParameterizedRoute: segments.map((segment)=>{\n            const hasInterceptionMarker = _interceptionroutes.INTERCEPTION_ROUTE_MARKERS.some((m)=>segment.startsWith(m));\n            const paramMatches = segment.match(/\\[((?:\\[.*\\])|.+)\\]/) // Check for parameters\n            ;\n            if (hasInterceptionMarker && paramMatches) {\n                const [usedMarker] = segment.split(paramMatches[0]);\n                return getSafeKeyFromSegment({\n                    getSafeRouteKey,\n                    interceptionMarker: usedMarker,\n                    segment: paramMatches[1],\n                    routeKeys,\n                    keyPrefix: prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n                });\n            } else if (paramMatches) {\n                return getSafeKeyFromSegment({\n                    getSafeRouteKey,\n                    segment: paramMatches[1],\n                    routeKeys,\n                    keyPrefix: prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined\n                });\n            } else {\n                return \"/\" + (0, _escaperegexp.escapeStringRegexp)(segment);\n            }\n        }).join(\"\"),\n        routeKeys\n    };\n}\nfunction getNamedRouteRegex(normalizedRoute, prefixRouteKey) {\n    const result = getNamedParametrizedRoute(normalizedRoute, prefixRouteKey);\n    return {\n        ...getRouteRegex(normalizedRoute),\n        namedRegex: \"^\" + result.namedParameterizedRoute + \"(?:/)?$\",\n        routeKeys: result.routeKeys\n    };\n}\nfunction getNamedMiddlewareRegex(normalizedRoute, options) {\n    const { parameterizedRoute } = getParametrizedRoute(normalizedRoute);\n    const { catchAll = true } = options;\n    if (parameterizedRoute === \"/\") {\n        let catchAllRegex = catchAll ? \".*\" : \"\";\n        return {\n            namedRegex: \"^/\" + catchAllRegex + \"$\"\n        };\n    }\n    const { namedParameterizedRoute } = getNamedParametrizedRoute(normalizedRoute, false);\n    let catchAllGroupedRegex = catchAll ? \"(?:(/.*)?)\" : \"\";\n    return {\n        namedRegex: \"^\" + namedParameterizedRoute + catchAllGroupedRegex + \"$\"\n    };\n} //# sourceMappingURL=route-regex.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/route-regex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js ***!
  \*************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getSortedRoutes\", ({\n    enumerable: true,\n    get: function() {\n        return getSortedRoutes;\n    }\n}));\nclass UrlNode {\n    insert(urlPath) {\n        this._insert(urlPath.split(\"/\").filter(Boolean), [], false);\n    }\n    smoosh() {\n        return this._smoosh();\n    }\n    _smoosh(prefix) {\n        if (prefix === void 0) prefix = \"/\";\n        const childrenPaths = [\n            ...this.children.keys()\n        ].sort();\n        if (this.slugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[]\"), 1);\n        }\n        if (this.restSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[...]\"), 1);\n        }\n        if (this.optionalRestSlugName !== null) {\n            childrenPaths.splice(childrenPaths.indexOf(\"[[...]]\"), 1);\n        }\n        const routes = childrenPaths.map((c)=>this.children.get(c)._smoosh(\"\" + prefix + c + \"/\")).reduce((prev, curr)=>[\n                ...prev,\n                ...curr\n            ], []);\n        if (this.slugName !== null) {\n            routes.push(...this.children.get(\"[]\")._smoosh(prefix + \"[\" + this.slugName + \"]/\"));\n        }\n        if (!this.placeholder) {\n            const r = prefix === \"/\" ? \"/\" : prefix.slice(0, -1);\n            if (this.optionalRestSlugName != null) {\n                throw new Error('You cannot define a route with the same specificity as a optional catch-all route (\"' + r + '\" and \"' + r + \"[[...\" + this.optionalRestSlugName + ']]\").');\n            }\n            routes.unshift(r);\n        }\n        if (this.restSlugName !== null) {\n            routes.push(...this.children.get(\"[...]\")._smoosh(prefix + \"[...\" + this.restSlugName + \"]/\"));\n        }\n        if (this.optionalRestSlugName !== null) {\n            routes.push(...this.children.get(\"[[...]]\")._smoosh(prefix + \"[[...\" + this.optionalRestSlugName + \"]]/\"));\n        }\n        return routes;\n    }\n    _insert(urlPaths, slugNames, isCatchAll) {\n        if (urlPaths.length === 0) {\n            this.placeholder = false;\n            return;\n        }\n        if (isCatchAll) {\n            throw new Error(\"Catch-all must be the last part of the URL.\");\n        }\n        // The next segment in the urlPaths list\n        let nextSegment = urlPaths[0];\n        // Check if the segment matches `[something]`\n        if (nextSegment.startsWith(\"[\") && nextSegment.endsWith(\"]\")) {\n            // Strip `[` and `]`, leaving only `something`\n            let segmentName = nextSegment.slice(1, -1);\n            let isOptional = false;\n            if (segmentName.startsWith(\"[\") && segmentName.endsWith(\"]\")) {\n                // Strip optional `[` and `]`, leaving only `something`\n                segmentName = segmentName.slice(1, -1);\n                isOptional = true;\n            }\n            if (segmentName.startsWith(\"...\")) {\n                // Strip `...`, leaving only `something`\n                segmentName = segmentName.substring(3);\n                isCatchAll = true;\n            }\n            if (segmentName.startsWith(\"[\") || segmentName.endsWith(\"]\")) {\n                throw new Error(\"Segment names may not start or end with extra brackets ('\" + segmentName + \"').\");\n            }\n            if (segmentName.startsWith(\".\")) {\n                throw new Error(\"Segment names may not start with erroneous periods ('\" + segmentName + \"').\");\n            }\n            function handleSlug(previousSlug, nextSlug) {\n                if (previousSlug !== null) {\n                    // If the specific segment already has a slug but the slug is not `something`\n                    // This prevents collisions like:\n                    // pages/[post]/index.js\n                    // pages/[id]/index.js\n                    // Because currently multiple dynamic params on the same segment level are not supported\n                    if (previousSlug !== nextSlug) {\n                        // TODO: This error seems to be confusing for users, needs an error link, the description can be based on above comment.\n                        throw new Error(\"You cannot use different slug names for the same dynamic path ('\" + previousSlug + \"' !== '\" + nextSlug + \"').\");\n                    }\n                }\n                slugNames.forEach((slug)=>{\n                    if (slug === nextSlug) {\n                        throw new Error('You cannot have the same slug name \"' + nextSlug + '\" repeat within a single dynamic path');\n                    }\n                    if (slug.replace(/\\W/g, \"\") === nextSegment.replace(/\\W/g, \"\")) {\n                        throw new Error('You cannot have the slug names \"' + slug + '\" and \"' + nextSlug + '\" differ only by non-word symbols within a single dynamic path');\n                    }\n                });\n                slugNames.push(nextSlug);\n            }\n            if (isCatchAll) {\n                if (isOptional) {\n                    if (this.restSlugName != null) {\n                        throw new Error('You cannot use both an required and optional catch-all route at the same level (\"[...' + this.restSlugName + ']\" and \"' + urlPaths[0] + '\" ).');\n                    }\n                    handleSlug(this.optionalRestSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.optionalRestSlugName = segmentName;\n                    // nextSegment is overwritten to [[...]] so that it can later be sorted specifically\n                    nextSegment = \"[[...]]\";\n                } else {\n                    if (this.optionalRestSlugName != null) {\n                        throw new Error('You cannot use both an optional and required catch-all route at the same level (\"[[...' + this.optionalRestSlugName + ']]\" and \"' + urlPaths[0] + '\").');\n                    }\n                    handleSlug(this.restSlugName, segmentName);\n                    // slugName is kept as it can only be one particular slugName\n                    this.restSlugName = segmentName;\n                    // nextSegment is overwritten to [...] so that it can later be sorted specifically\n                    nextSegment = \"[...]\";\n                }\n            } else {\n                if (isOptional) {\n                    throw new Error('Optional route parameters are not yet supported (\"' + urlPaths[0] + '\").');\n                }\n                handleSlug(this.slugName, segmentName);\n                // slugName is kept as it can only be one particular slugName\n                this.slugName = segmentName;\n                // nextSegment is overwritten to [] so that it can later be sorted specifically\n                nextSegment = \"[]\";\n            }\n        }\n        // If this UrlNode doesn't have the nextSegment yet we create a new child UrlNode\n        if (!this.children.has(nextSegment)) {\n            this.children.set(nextSegment, new UrlNode());\n        }\n        this.children.get(nextSegment)._insert(urlPaths.slice(1), slugNames, isCatchAll);\n    }\n    constructor(){\n        this.placeholder = true;\n        this.children = new Map();\n        this.slugName = null;\n        this.restSlugName = null;\n        this.optionalRestSlugName = null;\n    }\n}\nfunction getSortedRoutes(normalizedPages) {\n    // First the UrlNode is created, and every UrlNode can have only 1 dynamic segment\n    // Eg you can't have pages/[post]/abc.js and pages/[hello]/something-else.js\n    // Only 1 dynamic segment per nesting level\n    // So in the case that is test/integration/dynamic-routing it'll be this:\n    // pages/[post]/comments.js\n    // pages/blog/[post]/comment/[id].js\n    // Both are fine because `pages/[post]` and `pages/blog` are on the same level\n    // So in this case `UrlNode` created here has `this.slugName === 'post'`\n    // And since your PR passed through `slugName` as an array basically it'd including it in too many possibilities\n    // Instead what has to be passed through is the upwards path's dynamic names\n    const root = new UrlNode();\n    // Here the `root` gets injected multiple paths, and insert will break them up into sublevels\n    normalizedPages.forEach((pagePath)=>root.insert(pagePath));\n    // Smoosh will then sort those sublevels up to the point where you get the correct route definition priority\n    return root.smoosh();\n} //# sourceMappingURL=sorted-routes.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/router/utils/sorted-routes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/utils.js ***!
  \****************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    WEB_VITALS: function() {\n        return WEB_VITALS;\n    },\n    execOnce: function() {\n        return execOnce;\n    },\n    isAbsoluteUrl: function() {\n        return isAbsoluteUrl;\n    },\n    getLocationOrigin: function() {\n        return getLocationOrigin;\n    },\n    getURL: function() {\n        return getURL;\n    },\n    getDisplayName: function() {\n        return getDisplayName;\n    },\n    isResSent: function() {\n        return isResSent;\n    },\n    normalizeRepeatedSlashes: function() {\n        return normalizeRepeatedSlashes;\n    },\n    loadGetInitialProps: function() {\n        return loadGetInitialProps;\n    },\n    SP: function() {\n        return SP;\n    },\n    ST: function() {\n        return ST;\n    },\n    DecodeError: function() {\n        return DecodeError;\n    },\n    NormalizeError: function() {\n        return NormalizeError;\n    },\n    PageNotFoundError: function() {\n        return PageNotFoundError;\n    },\n    MissingStaticPage: function() {\n        return MissingStaticPage;\n    },\n    MiddlewareNotFoundError: function() {\n        return MiddlewareNotFoundError;\n    },\n    stringifyError: function() {\n        return stringifyError;\n    }\n});\nconst WEB_VITALS = [\n    \"CLS\",\n    \"FCP\",\n    \"FID\",\n    \"INP\",\n    \"LCP\",\n    \"TTFB\"\n];\nfunction execOnce(fn) {\n    let used = false;\n    let result;\n    return function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (!used) {\n            used = true;\n            result = fn(...args);\n        }\n        return result;\n    };\n}\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\nconst isAbsoluteUrl = (url)=>ABSOLUTE_URL_REGEX.test(url);\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return protocol + \"//\" + hostname + (port ? \":\" + port : \"\");\n}\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nfunction getDisplayName(Component) {\n    return typeof Component === \"string\" ? Component : Component.displayName || Component.name || \"Unknown\";\n}\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nfunction normalizeRepeatedSlashes(url) {\n    const urlParts = url.split(\"?\");\n    const urlNoQuery = urlParts[0];\n    return urlNoQuery // first we replace any non-encoded backslashes with forward\n    // then normalize repeated forward slashes\n    .replace(/\\\\/g, \"/\").replace(/\\/\\/+/g, \"/\") + (urlParts[1] ? \"?\" + urlParts.slice(1).join(\"?\") : \"\");\n}\nasync function loadGetInitialProps(App, ctx) {\n    if (true) {\n        var _App_prototype;\n        if ((_App_prototype = App.prototype) == null ? void 0 : _App_prototype.getInitialProps) {\n            const message = '\"' + getDisplayName(App) + '.getInitialProps()\" is defined as an instance method - visit https://nextjs.org/docs/messages/get-initial-props-as-an-instance-method for more information.';\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || ctx.ctx && ctx.ctx.res;\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = '\"' + getDisplayName(App) + '.getInitialProps()\" should resolve to an object. But found \"' + props + '\" instead.';\n        throw new Error(message);\n    }\n    if (true) {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(\"\" + getDisplayName(App) + \" returned an empty object from `getInitialProps`. This de-optimizes and prevents automatic static optimization. https://nextjs.org/docs/messages/empty-object-getInitialProps\");\n        }\n    }\n    return props;\n}\nconst SP = typeof performance !== \"undefined\";\nconst ST = SP && [\n    \"mark\",\n    \"measure\",\n    \"getEntriesByName\"\n].every((method)=>typeof performance[method] === \"function\");\nclass DecodeError extends Error {\n}\nclass NormalizeError extends Error {\n}\nclass PageNotFoundError extends Error {\n    constructor(page){\n        super();\n        this.code = \"ENOENT\";\n        this.name = \"PageNotFoundError\";\n        this.message = \"Cannot find module for page: \" + page;\n    }\n}\nclass MissingStaticPage extends Error {\n    constructor(page, message){\n        super();\n        this.message = \"Failed to load static file for page: \" + page + \" \" + message;\n    }\n}\nclass MiddlewareNotFoundError extends Error {\n    constructor(){\n        super();\n        this.code = \"ENOENT\";\n        this.message = \"Cannot find the middleware module\";\n    }\n}\nfunction stringifyError(error) {\n    return JSON.stringify({\n        message: error.message,\n        stack: error.stack\n    });\n} //# sourceMappingURL=utils.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/shared/lib/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/admin/dashboard/page.tsx":
/*!******************************************!*\
  !*** ./src/app/admin/dashboard/page.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ AdminDashboard; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_pages_admin_Dashboard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/pages/admin/Dashboard */ \"(app-pages-browser)/./src/components/pages/admin/Dashboard.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nfunction AdminDashboard() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_pages_admin_Dashboard__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\app\\\\admin\\\\dashboard\\\\page.tsx\",\n        lineNumber: 6,\n        columnNumber: 10\n    }, this);\n}\n_c = AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3BhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFFMEQ7QUFFM0MsU0FBU0M7SUFDdEIscUJBQU8sOERBQUNELHlFQUFTQTs7Ozs7QUFDbkI7S0FGd0JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvYWRtaW4vZGFzaGJvYXJkL3BhZ2UudHN4PzRlNmEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnXHJcblxyXG5pbXBvcnQgRGFzaGJvYXJkIGZyb20gJ0AvY29tcG9uZW50cy9wYWdlcy9hZG1pbi9EYXNoYm9hcmQnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBZG1pbkRhc2hib2FyZCgpIHtcclxuICByZXR1cm4gPERhc2hib2FyZCAvPlxyXG59Il0sIm5hbWVzIjpbIkRhc2hib2FyZCIsIkFkbWluRGFzaGJvYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/admin/dashboard/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/Layout.tsx":
/*!***********************************!*\
  !*** ./src/components/Layout.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _NotificationBell__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./NotificationBell */ \"(app-pages-browser)/./src/components/NotificationBell.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst Layout = (param)=>{\n    let { children } = param;\n    _s();\n    const [isNavOpen, setIsNavOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isDark, setIsDark] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(()=>{\n        if (true) {\n            const savedTheme = localStorage.getItem(\"theme\");\n            return savedTheme === \"dark\" || !savedTheme && window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n        }\n        return false;\n    });\n    const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname)();\n    const toggleNav = ()=>{\n        setIsNavOpen(!isNavOpen);\n    };\n    const closeNav = ()=>{\n        setIsNavOpen(false);\n    };\n    const toggleTheme = ()=>{\n        setIsDark(!isDark);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isDark) {\n            document.documentElement.classList.add(\"dark\");\n            localStorage.setItem(\"theme\", \"dark\");\n        } else {\n            document.documentElement.classList.remove(\"dark\");\n            localStorage.setItem(\"theme\", \"light\");\n        }\n    }, [\n        isDark\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        closeNav();\n    }, [\n        pathname\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleClickOutside = (event)=>{\n            const target = event.target;\n            if (isNavOpen && !target.closest(\".nav\") && !target.closest(\".nav-toggle\")) {\n                closeNav();\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return ()=>document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, [\n        isNavOpen\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex flex-col transition-colors duration-200 \".concat(isDark ? \"bg-black text-white\" : \"bg-gray-100 text-gray-900\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                className: \"header \".concat(isDark ? \"bg-black text-white\" : \"bg-white text-gray-900\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"header-left\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"header-title-large \".concat(isDark ? \"text-white\" : \"text-gray-900\"),\n                                children: \"The Balance Code Alliance\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 70,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"header-subtitle-small \".concat(isDark ? \"text-white\" : \"text-gray-700\"),\n                                children: \"Restoring Order. Unlocking Peace. Empowering Lives\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 73,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"header-right flex items-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            className: \"nav-toggle \".concat(isDark ? \"text-white hover:text-emerald-300\" : \"text-gray-800 hover:text-indigo-600\"),\n                            onClick: toggleNav,\n                            \"aria-label\": isNavOpen ? \"Close menu\" : \"Open menu\",\n                            \"aria-expanded\": isNavOpen,\n                            children: isNavOpen ? \"✕\" : \"☰\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                            lineNumber: 79,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 78,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, undefined),\n            isNavOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"nav\", {\n                        className: \"nav \".concat(isNavOpen ? \"open\" : \"\", \" \").concat(isDark ? \"bg-black\" : \"bg-white\"),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                href: \"/\",\n                                className: \"nav-link \".concat(isDark ? \"text-white hover:text-emerald-300\" : \"text-gray-900 hover:text-indigo-600\"),\n                                children: \"Home\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 93,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                href: \"/about\",\n                                className: \"nav-link \".concat(isDark ? \"text-white hover:text-emerald-300\" : \"text-gray-900 hover:text-indigo-600\"),\n                                children: \"About\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 94,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                href: \"/contact\",\n                                className: \"nav-link \".concat(isDark ? \"text-white hover:text-emerald-300\" : \"text-gray-900 hover:text-indigo-600\"),\n                                children: \"Contact\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 95,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                href: \"/gallery\",\n                                className: \"nav-link \".concat(isDark ? \"text-white hover:text-emerald-300\" : \"text-gray-900 hover:text-indigo-600\"),\n                                children: \"Gallery\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                                lineNumber: 96,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 92,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"nav-overlay \".concat(isNavOpen ? \"open\" : \"\"),\n                        onClick: closeNav,\n                        \"aria-hidden\": \"true\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                        lineNumber: 98,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n                className: \"flex-1 pt-24 pb-8 px-4 container mx-auto w-full \".concat(isDark ? \"text-white\" : \"text-gray-900\"),\n                children: children\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 102,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_NotificationBell__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                isDark: isDark,\n                toggleTheme: toggleTheme\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 106,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: \"footer \".concat(isDark ? \"bg-black text-white\" : \"bg-gray-100 text-gray-700\"),\n                children: [\n                    \"\\xa9 \",\n                    new Date().getFullYear(),\n                    \" Onyxe Nnaemeka's Blog. All rights reserved.\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n                lineNumber: 108,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\Layout.tsx\",\n        lineNumber: 67,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Layout, \"inJXKhC/fxoV986KsvLOPDAy+Uw=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_3__.usePathname\n    ];\n});\n_c = Layout;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Layout);\nvar _c;\n$RefreshReg$(_c, \"Layout\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBRW1EO0FBQ3RCO0FBQ2lCO0FBQ0k7QUFNbEQsTUFBTU0sU0FBZ0M7UUFBQyxFQUFFQyxRQUFRLEVBQUU7O0lBQ2pELE1BQU0sQ0FBQ0MsV0FBV0MsYUFBYSxHQUFHUiwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLENBQUNTLFFBQVFDLFVBQVUsR0FBR1YsK0NBQVFBLENBQUM7UUFDbkMsSUFBSSxJQUFrQixFQUFhO1lBQ2pDLE1BQU1XLGFBQWFDLGFBQWFDLE9BQU8sQ0FBQztZQUN4QyxPQUFPRixlQUFlLFVBQVcsQ0FBQ0EsY0FBY0csT0FBT0MsVUFBVSxDQUFDLGdDQUFnQ0MsT0FBTztRQUMzRztRQUNBLE9BQU87SUFDVDtJQUVBLE1BQU1DLFdBQVdkLDREQUFXQTtJQUU1QixNQUFNZSxZQUFZO1FBQ2hCVixhQUFhLENBQUNEO0lBQ2hCO0lBRUEsTUFBTVksV0FBVztRQUNmWCxhQUFhO0lBQ2Y7SUFFQSxNQUFNWSxjQUFjO1FBQ2xCVixVQUFVLENBQUNEO0lBQ2I7SUFFQVIsZ0RBQVNBLENBQUM7UUFDUixJQUFJUSxRQUFRO1lBQ1ZZLFNBQVNDLGVBQWUsQ0FBQ0MsU0FBUyxDQUFDQyxHQUFHLENBQUM7WUFDdkNaLGFBQWFhLE9BQU8sQ0FBQyxTQUFTO1FBQ2hDLE9BQU87WUFDTEosU0FBU0MsZUFBZSxDQUFDQyxTQUFTLENBQUNHLE1BQU0sQ0FBQztZQUMxQ2QsYUFBYWEsT0FBTyxDQUFDLFNBQVM7UUFDaEM7SUFDRixHQUFHO1FBQUNoQjtLQUFPO0lBRVhSLGdEQUFTQSxDQUFDO1FBQ1JrQjtJQUNGLEdBQUc7UUFBQ0Y7S0FBUztJQUViaEIsZ0RBQVNBLENBQUM7UUFDUixNQUFNMEIscUJBQXFCLENBQUNDO1lBQzFCLE1BQU1DLFNBQVNELE1BQU1DLE1BQU07WUFDM0IsSUFDRXRCLGFBQ0EsQ0FBQ3NCLE9BQU9DLE9BQU8sQ0FBQyxXQUNoQixDQUFDRCxPQUFPQyxPQUFPLENBQUMsZ0JBQ2hCO2dCQUNBWDtZQUNGO1FBQ0Y7UUFFQUUsU0FBU1UsZ0JBQWdCLENBQUMsYUFBYUo7UUFDdkMsT0FBTyxJQUFNTixTQUFTVyxtQkFBbUIsQ0FBQyxhQUFhTDtJQUN6RCxHQUFHO1FBQUNwQjtLQUFVO0lBRWQscUJBQ0UsOERBQUMwQjtRQUFJQyxXQUFXLDZEQUEwSCxPQUE3RHpCLFNBQVMsd0JBQXdCOzswQkFDNUcsOERBQUMwQjtnQkFBT0QsV0FBVyxVQUFvRSxPQUExRHpCLFNBQVMsd0JBQXdCOztrQ0FDNUQsOERBQUN3Qjt3QkFBSUMsV0FBVTs7MENBQ2IsOERBQUNFO2dDQUFLRixXQUFXLHNCQUE4RCxPQUF4Q3pCLFNBQVMsZUFBZTswQ0FBbUI7Ozs7OzswQ0FHbEYsOERBQUMyQjtnQ0FBS0YsV0FBVyx5QkFBaUUsT0FBeEN6QixTQUFTLGVBQWU7MENBQW1COzs7Ozs7Ozs7Ozs7a0NBS3ZGLDhEQUFDd0I7d0JBQUlDLFdBQVU7a0NBQ2IsNEVBQUNHOzRCQUNDSCxXQUFXLGNBQW1HLE9BQXJGekIsU0FBUyxzQ0FBc0M7NEJBQ3hFNkIsU0FBU3BCOzRCQUNUcUIsY0FBWWhDLFlBQVksZUFBZTs0QkFDdkNpQyxpQkFBZWpDO3NDQUVkQSxZQUFZLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7O1lBS3hCQSwyQkFDQzs7a0NBQ0UsOERBQUNrQzt3QkFBSVAsV0FBVyxPQUFrQ3pCLE9BQTNCRixZQUFZLFNBQVMsSUFBRyxLQUFvQyxPQUFqQ0UsU0FBUyxhQUFhOzswQ0FDdEUsOERBQUNQLGlEQUFJQTtnQ0FBQ3dDLE1BQUs7Z0NBQUlSLFdBQVcsWUFBaUcsT0FBckZ6QixTQUFTLHNDQUFzQzswQ0FBeUM7Ozs7OzswQ0FDOUgsOERBQUNQLGlEQUFJQTtnQ0FBQ3dDLE1BQUs7Z0NBQVNSLFdBQVcsWUFBaUcsT0FBckZ6QixTQUFTLHNDQUFzQzswQ0FBeUM7Ozs7OzswQ0FDbkksOERBQUNQLGlEQUFJQTtnQ0FBQ3dDLE1BQUs7Z0NBQVdSLFdBQVcsWUFBaUcsT0FBckZ6QixTQUFTLHNDQUFzQzswQ0FBeUM7Ozs7OzswQ0FDckksOERBQUNQLGlEQUFJQTtnQ0FBQ3dDLE1BQUs7Z0NBQVdSLFdBQVcsWUFBaUcsT0FBckZ6QixTQUFTLHNDQUFzQzswQ0FBeUM7Ozs7Ozs7Ozs7OztrQ0FFdkksOERBQUN3Qjt3QkFBSUMsV0FBVyxlQUF1QyxPQUF4QjNCLFlBQVksU0FBUzt3QkFBTStCLFNBQVNuQjt3QkFBVXdCLGVBQVk7Ozs7Ozs7OzBCQUk3Riw4REFBQ0M7Z0JBQUtWLFdBQVcsbURBQTJGLE9BQXhDekIsU0FBUyxlQUFlOzBCQUN6Rkg7Ozs7OzswQkFHSCw4REFBQ0YseURBQWdCQTtnQkFBQ0ssUUFBUUE7Z0JBQVFXLGFBQWFBOzs7Ozs7MEJBRS9DLDhEQUFDeUI7Z0JBQU9YLFdBQVcsVUFBdUUsT0FBN0R6QixTQUFTLHdCQUF3Qjs7b0JBQStCO29CQUN4RixJQUFJcUMsT0FBT0MsV0FBVztvQkFBRzs7Ozs7Ozs7Ozs7OztBQUlwQztHQXJHTTFDOztRQVVhRix3REFBV0E7OztLQVZ4QkU7QUF1R04sK0RBQWVBLE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvTGF5b3V0LnRzeD9kZThiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xyXG5cclxuaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCB7IHVzZVBhdGhuYW1lIH0gZnJvbSAnbmV4dC9uYXZpZ2F0aW9uJztcclxuaW1wb3J0IE5vdGlmaWNhdGlvbkJlbGwgZnJvbSAnLi9Ob3RpZmljYXRpb25CZWxsJztcclxuXHJcbmludGVyZmFjZSBMYXlvdXRQcm9wcyB7XHJcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcclxufVxyXG5cclxuY29uc3QgTGF5b3V0OiBSZWFjdC5GQzxMYXlvdXRQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgY29uc3QgW2lzTmF2T3Blbiwgc2V0SXNOYXZPcGVuXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBbaXNEYXJrLCBzZXRJc0RhcmtdID0gdXNlU3RhdGUoKCkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIGNvbnN0IHNhdmVkVGhlbWUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGhlbWUnKTtcclxuICAgICAgcmV0dXJuIHNhdmVkVGhlbWUgPT09ICdkYXJrJyB8fCAoIXNhdmVkVGhlbWUgJiYgd2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKS5tYXRjaGVzKTtcclxuICAgIH1cclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9KTtcclxuXHJcbiAgY29uc3QgcGF0aG5hbWUgPSB1c2VQYXRobmFtZSgpO1xyXG5cclxuICBjb25zdCB0b2dnbGVOYXYgPSAoKSA9PiB7XHJcbiAgICBzZXRJc05hdk9wZW4oIWlzTmF2T3Blbik7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgY2xvc2VOYXYgPSAoKSA9PiB7XHJcbiAgICBzZXRJc05hdk9wZW4oZmFsc2UpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHRvZ2dsZVRoZW1lID0gKCkgPT4ge1xyXG4gICAgc2V0SXNEYXJrKCFpc0RhcmspO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoaXNEYXJrKSB7XHJcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKCdkYXJrJyk7XHJcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd0aGVtZScsICdkYXJrJyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnZGFyaycpO1xyXG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndGhlbWUnLCAnbGlnaHQnKTtcclxuICAgIH1cclxuICB9LCBbaXNEYXJrXSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBjbG9zZU5hdigpO1xyXG4gIH0sIFtwYXRobmFtZV0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgaGFuZGxlQ2xpY2tPdXRzaWRlID0gKGV2ZW50OiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBFbGVtZW50O1xyXG4gICAgICBpZiAoXHJcbiAgICAgICAgaXNOYXZPcGVuICYmXHJcbiAgICAgICAgIXRhcmdldC5jbG9zZXN0KCcubmF2JykgJiZcclxuICAgICAgICAhdGFyZ2V0LmNsb3Nlc3QoJy5uYXYtdG9nZ2xlJylcclxuICAgICAgKSB7XHJcbiAgICAgICAgY2xvc2VOYXYoKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBoYW5kbGVDbGlja091dHNpZGUpO1xyXG4gICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGhhbmRsZUNsaWNrT3V0c2lkZSk7XHJcbiAgfSwgW2lzTmF2T3Blbl0pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e2BtaW4taC1zY3JlZW4gZmxleCBmbGV4LWNvbCB0cmFuc2l0aW9uLWNvbG9ycyBkdXJhdGlvbi0yMDAgJHtpc0RhcmsgPyAnYmctYmxhY2sgdGV4dC13aGl0ZScgOiAnYmctZ3JheS0xMDAgdGV4dC1ncmF5LTkwMCd9YH0+XHJcbiAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPXtgaGVhZGVyICR7aXNEYXJrID8gJ2JnLWJsYWNrIHRleHQtd2hpdGUnIDogJ2JnLXdoaXRlIHRleHQtZ3JheS05MDAnfWB9PlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaGVhZGVyLWxlZnRcIj5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YGhlYWRlci10aXRsZS1sYXJnZSAke2lzRGFyayA/ICd0ZXh0LXdoaXRlJyA6ICd0ZXh0LWdyYXktOTAwJ31gfT5cclxuICAgICAgICAgICAgVGhlIEJhbGFuY2UgQ29kZSBBbGxpYW5jZVxyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgaGVhZGVyLXN1YnRpdGxlLXNtYWxsICR7aXNEYXJrID8gJ3RleHQtd2hpdGUnIDogJ3RleHQtZ3JheS03MDAnfWB9PlxyXG4gICAgICAgICAgICBSZXN0b3JpbmcgT3JkZXIuIFVubG9ja2luZyBQZWFjZS4gRW1wb3dlcmluZyBMaXZlc1xyXG4gICAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRlci1yaWdodCBmbGV4IGl0ZW1zLWNlbnRlclwiPlxyXG4gICAgICAgICAgPGJ1dHRvbiBcclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgbmF2LXRvZ2dsZSAke2lzRGFyayA/ICd0ZXh0LXdoaXRlIGhvdmVyOnRleHQtZW1lcmFsZC0zMDAnIDogJ3RleHQtZ3JheS04MDAgaG92ZXI6dGV4dC1pbmRpZ28tNjAwJ31gfVxyXG4gICAgICAgICAgICBvbkNsaWNrPXt0b2dnbGVOYXZ9XHJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2lzTmF2T3BlbiA/IFwiQ2xvc2UgbWVudVwiIDogXCJPcGVuIG1lbnVcIn1cclxuICAgICAgICAgICAgYXJpYS1leHBhbmRlZD17aXNOYXZPcGVufVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7aXNOYXZPcGVuID8gJ+KclScgOiAn4piwJ31cclxuICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2hlYWRlcj5cclxuXHJcbiAgICAgIHtpc05hdk9wZW4gJiYgKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICA8bmF2IGNsYXNzTmFtZT17YG5hdiAke2lzTmF2T3BlbiA/ICdvcGVuJyA6ICcnfSAke2lzRGFyayA/ICdiZy1ibGFjaycgOiAnYmctd2hpdGUnfWB9PlxyXG4gICAgICAgICAgICA8TGluayBocmVmPVwiL1wiIGNsYXNzTmFtZT17YG5hdi1saW5rICR7aXNEYXJrID8gJ3RleHQtd2hpdGUgaG92ZXI6dGV4dC1lbWVyYWxkLTMwMCcgOiAndGV4dC1ncmF5LTkwMCBob3Zlcjp0ZXh0LWluZGlnby02MDAnfWB9PkhvbWU8L0xpbms+XHJcbiAgICAgICAgICAgIDxMaW5rIGhyZWY9XCIvYWJvdXRcIiBjbGFzc05hbWU9e2BuYXYtbGluayAke2lzRGFyayA/ICd0ZXh0LXdoaXRlIGhvdmVyOnRleHQtZW1lcmFsZC0zMDAnIDogJ3RleHQtZ3JheS05MDAgaG92ZXI6dGV4dC1pbmRpZ28tNjAwJ31gfT5BYm91dDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9jb250YWN0XCIgY2xhc3NOYW1lPXtgbmF2LWxpbmsgJHtpc0RhcmsgPyAndGV4dC13aGl0ZSBob3Zlcjp0ZXh0LWVtZXJhbGQtMzAwJyA6ICd0ZXh0LWdyYXktOTAwIGhvdmVyOnRleHQtaW5kaWdvLTYwMCd9YH0+Q29udGFjdDwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9nYWxsZXJ5XCIgY2xhc3NOYW1lPXtgbmF2LWxpbmsgJHtpc0RhcmsgPyAndGV4dC13aGl0ZSBob3Zlcjp0ZXh0LWVtZXJhbGQtMzAwJyA6ICd0ZXh0LWdyYXktOTAwIGhvdmVyOnRleHQtaW5kaWdvLTYwMCd9YH0+R2FsbGVyeTwvTGluaz5cclxuICAgICAgICAgIDwvbmF2PlxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BuYXYtb3ZlcmxheSAke2lzTmF2T3BlbiA/ICdvcGVuJyA6ICcnfWB9IG9uQ2xpY2s9e2Nsb3NlTmF2fSBhcmlhLWhpZGRlbj1cInRydWVcIiAvPlxyXG4gICAgICAgIDwvPlxyXG4gICAgICApfVxyXG5cclxuICAgICAgPG1haW4gY2xhc3NOYW1lPXtgZmxleC0xIHB0LTI0IHBiLTggcHgtNCBjb250YWluZXIgbXgtYXV0byB3LWZ1bGwgJHtpc0RhcmsgPyAndGV4dC13aGl0ZScgOiAndGV4dC1ncmF5LTkwMCd9YH0+XHJcbiAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICA8L21haW4+XHJcblxyXG4gICAgICA8Tm90aWZpY2F0aW9uQmVsbCBpc0Rhcms9e2lzRGFya30gdG9nZ2xlVGhlbWU9e3RvZ2dsZVRoZW1lfSAvPlxyXG5cclxuICAgICAgPGZvb3RlciBjbGFzc05hbWU9e2Bmb290ZXIgJHtpc0RhcmsgPyAnYmctYmxhY2sgdGV4dC13aGl0ZScgOiAnYmctZ3JheS0xMDAgdGV4dC1ncmF5LTcwMCd9YH0+XHJcbiAgICAgICAgwqkge25ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKX0gT255eGUgTm5hZW1la2EncyBCbG9nLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gICAgICA8L2Zvb3Rlcj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMYXlvdXQ7Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJMaW5rIiwidXNlUGF0aG5hbWUiLCJOb3RpZmljYXRpb25CZWxsIiwiTGF5b3V0IiwiY2hpbGRyZW4iLCJpc05hdk9wZW4iLCJzZXRJc05hdk9wZW4iLCJpc0RhcmsiLCJzZXRJc0RhcmsiLCJzYXZlZFRoZW1lIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwicGF0aG5hbWUiLCJ0b2dnbGVOYXYiLCJjbG9zZU5hdiIsInRvZ2dsZVRoZW1lIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRJdGVtIiwicmVtb3ZlIiwiaGFuZGxlQ2xpY2tPdXRzaWRlIiwiZXZlbnQiLCJ0YXJnZXQiLCJjbG9zZXN0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkaXYiLCJjbGFzc05hbWUiLCJoZWFkZXIiLCJzcGFuIiwiYnV0dG9uIiwib25DbGljayIsImFyaWEtbGFiZWwiLCJhcmlhLWV4cGFuZGVkIiwibmF2IiwiaHJlZiIsImFyaWEtaGlkZGVuIiwibWFpbiIsImZvb3RlciIsIkRhdGUiLCJnZXRGdWxsWWVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Layout.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/NotificationBell.tsx":
/*!*********************************************!*\
  !*** ./src/components/NotificationBell.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Bell_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Bell,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bell.js\");\n/* harmony import */ var _barrel_optimize_names_Bell_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Bell,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _ThemeToggle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ThemeToggle */ \"(app-pages-browser)/./src/components/ThemeToggle.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst NotificationBell = (param)=>{\n    let { isDark, toggleTheme } = param;\n    _s();\n    const [showNotificationBell, setShowNotificationBell] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [showModal, setShowModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [subscriberName, setSubscriberName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [subscriberEmail, setSubscriberEmail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isSubmitting, setIsSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        setIsSubmitting(true);\n        try {\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_2__.supabase.from(\"subscribers\").upsert([\n                {\n                    name: subscriberName,\n                    email: subscriberEmail\n                }\n            ], {\n                onConflict: \"email\"\n            });\n            if (error) {\n                throw error;\n            }\n            alert(\"You're now subscribed!\");\n            setShowModal(false);\n            setSubscriberEmail(\"\");\n            setSubscriberName(\"\");\n        } catch (error) {\n            console.error(\"Supabase error:\", error);\n            alert(\"Error: \" + error.message);\n        } finally{\n            setIsSubmitting(false);\n        }\n    };\n    if (!showNotificationBell) return null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed bottom-6 right-6 flex items-center gap-4 z-50\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ThemeToggle__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                isDark: isDark,\n                toggleTheme: toggleTheme\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                lineNumber: 50,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>setShowModal(true),\n                        \"aria-label\": \"Subscribe to Notifications\",\n                        className: \"p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-colors\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Bell_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            size: 24\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                            lineNumber: 58,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                        lineNumber: 53,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: \"absolute -top-2 -right-2 w-5 h-5 bg-red-500 text-white rounded-full flex items-center justify-center\",\n                        onClick: ()=>setShowNotificationBell(false),\n                        \"aria-label\": \"Close notification bell\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Bell_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            size: 12\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                            lineNumber: 65,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                        lineNumber: 60,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                lineNumber: 52,\n                columnNumber: 7\n            }, undefined),\n            showModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"modal-overlay\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"modal\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"modal-title\",\n                            children: \"Get Notified of New Posts\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                            lineNumber: 72,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                            onSubmit: handleSubmit,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"Your Name\",\n                                    value: subscriberName,\n                                    onChange: (e)=>setSubscriberName(e.target.value),\n                                    required: true,\n                                    className: \"modal-input\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                                    lineNumber: 74,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                    type: \"email\",\n                                    placeholder: \"Your Email\",\n                                    value: subscriberEmail,\n                                    onChange: (e)=>setSubscriberEmail(e.target.value),\n                                    required: true,\n                                    className: \"modal-input\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                                    lineNumber: 82,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"submit\",\n                                    className: \"modal-button\",\n                                    disabled: isSubmitting,\n                                    children: isSubmitting ? \"Submitting...\" : \"Notify Me\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                                    lineNumber: 90,\n                                    columnNumber: 15\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    type: \"button\",\n                                    className: \"modal-close\",\n                                    onClick: ()=>setShowModal(false),\n                                    children: \"Cancel\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                                    lineNumber: 93,\n                                    columnNumber: 15\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                            lineNumber: 73,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                    lineNumber: 71,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n                lineNumber: 70,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\NotificationBell.tsx\",\n        lineNumber: 49,\n        columnNumber: 5\n    }, undefined);\n};\n_s(NotificationBell, \"U8Mk4/wowOFrG5lomgbRlPslQuM=\");\n_c = NotificationBell;\n/* harmony default export */ __webpack_exports__[\"default\"] = (NotificationBell);\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL05vdGlmaWNhdGlvbkJlbGwudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0M7QUFDRDtBQUNJO0FBQ0g7QUFPeEMsTUFBTU0sbUJBQW9EO1FBQUMsRUFBRUMsTUFBTSxFQUFFQyxXQUFXLEVBQUU7O0lBQ2hGLE1BQU0sQ0FBQ0Msc0JBQXNCQyx3QkFBd0IsR0FBR1QsK0NBQVFBLENBQUM7SUFDakUsTUFBTSxDQUFDVSxXQUFXQyxhQUFhLEdBQUdYLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ1ksZ0JBQWdCQyxrQkFBa0IsR0FBR2IsK0NBQVFBLENBQUM7SUFDckQsTUFBTSxDQUFDYyxpQkFBaUJDLG1CQUFtQixHQUFHZiwrQ0FBUUEsQ0FBQztJQUN2RCxNQUFNLENBQUNnQixjQUFjQyxnQkFBZ0IsR0FBR2pCLCtDQUFRQSxDQUFDO0lBRWpELE1BQU1rQixlQUFlLE9BQU9DO1FBQzFCQSxFQUFFQyxjQUFjO1FBQ2hCSCxnQkFBZ0I7UUFFaEIsSUFBSTtZQUNGLE1BQU0sRUFBRUksS0FBSyxFQUFFLEdBQUcsTUFBTWxCLG1EQUFRQSxDQUM3Qm1CLElBQUksQ0FBQyxlQUNMQyxNQUFNLENBQ0w7Z0JBQUM7b0JBQUVDLE1BQU1aO29CQUFnQmEsT0FBT1g7Z0JBQWdCO2FBQUUsRUFDbEQ7Z0JBQUVZLFlBQVk7WUFBUTtZQUcxQixJQUFJTCxPQUFPO2dCQUNULE1BQU1BO1lBQ1I7WUFFQU0sTUFBTTtZQUNOaEIsYUFBYTtZQUNiSSxtQkFBbUI7WUFDbkJGLGtCQUFrQjtRQUNwQixFQUFFLE9BQU9RLE9BQU87WUFDZE8sUUFBUVAsS0FBSyxDQUFDLG1CQUFtQkE7WUFDakNNLE1BQU0sWUFBWSxNQUFpQkUsT0FBTztRQUM1QyxTQUFVO1lBQ1JaLGdCQUFnQjtRQUNsQjtJQUNGO0lBRUEsSUFBSSxDQUFDVCxzQkFBc0IsT0FBTztJQUVsQyxxQkFDRSw4REFBQ3NCO1FBQUlDLFdBQVU7OzBCQUNiLDhEQUFDM0Isb0RBQVdBO2dCQUFDRSxRQUFRQTtnQkFBUUMsYUFBYUE7Ozs7OzswQkFFMUMsOERBQUN1QjtnQkFBSUMsV0FBVTs7a0NBQ2IsOERBQUNDO3dCQUNDQyxTQUFTLElBQU10QixhQUFhO3dCQUM1QnVCLGNBQVc7d0JBQ1hILFdBQVU7a0NBRVYsNEVBQUM5QixrRkFBSUE7NEJBQUNrQyxNQUFNOzs7Ozs7Ozs7OztrQ0FFZCw4REFBQ0g7d0JBQ0NELFdBQVU7d0JBQ1ZFLFNBQVMsSUFBTXhCLHdCQUF3Qjt3QkFDdkN5QixjQUFXO2tDQUVYLDRFQUFDaEMsa0ZBQUNBOzRCQUFDaUMsTUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFJWnpCLDJCQUNDLDhEQUFDb0I7Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNEO29CQUFJQyxXQUFVOztzQ0FDYiw4REFBQ0s7NEJBQUdMLFdBQVU7c0NBQWM7Ozs7OztzQ0FDNUIsOERBQUNNOzRCQUFLQyxVQUFVcEI7OzhDQUNkLDhEQUFDcUI7b0NBQ0NDLE1BQUs7b0NBQ0xDLGFBQVk7b0NBQ1pDLE9BQU85QjtvQ0FDUCtCLFVBQVUsQ0FBQ3hCLElBQU1OLGtCQUFrQk0sRUFBRXlCLE1BQU0sQ0FBQ0YsS0FBSztvQ0FDakRHLFFBQVE7b0NBQ1JkLFdBQVU7Ozs7Ozs4Q0FFWiw4REFBQ1E7b0NBQ0NDLE1BQUs7b0NBQ0xDLGFBQVk7b0NBQ1pDLE9BQU81QjtvQ0FDUDZCLFVBQVUsQ0FBQ3hCLElBQU1KLG1CQUFtQkksRUFBRXlCLE1BQU0sQ0FBQ0YsS0FBSztvQ0FDbERHLFFBQVE7b0NBQ1JkLFdBQVU7Ozs7Ozs4Q0FFWiw4REFBQ0M7b0NBQU9RLE1BQUs7b0NBQVNULFdBQVU7b0NBQWVlLFVBQVU5Qjs4Q0FDdERBLGVBQWUsa0JBQWtCOzs7Ozs7OENBRXBDLDhEQUFDZ0I7b0NBQU9RLE1BQUs7b0NBQVNULFdBQVU7b0NBQWNFLFNBQVMsSUFBTXRCLGFBQWE7OENBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU2hHO0dBM0ZNTjtLQUFBQTtBQTZGTiwrREFBZUEsZ0JBQWdCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9jb21wb25lbnRzL05vdGlmaWNhdGlvbkJlbGwudHN4Pzg1NTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQmVsbCwgWCB9IGZyb20gJ2x1Y2lkZS1yZWFjdCc7XG5pbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4uL2xpYi9zdXBhYmFzZSc7XG5pbXBvcnQgVGhlbWVUb2dnbGUgZnJvbSAnLi9UaGVtZVRvZ2dsZSc7XG5cbmludGVyZmFjZSBOb3RpZmljYXRpb25CZWxsUHJvcHMge1xuICBpc0Rhcms6IGJvb2xlYW47XG4gIHRvZ2dsZVRoZW1lOiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBOb3RpZmljYXRpb25CZWxsOiBSZWFjdC5GQzxOb3RpZmljYXRpb25CZWxsUHJvcHM+ID0gKHsgaXNEYXJrLCB0b2dnbGVUaGVtZSB9KSA9PiB7XG4gIGNvbnN0IFtzaG93Tm90aWZpY2F0aW9uQmVsbCwgc2V0U2hvd05vdGlmaWNhdGlvbkJlbGxdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtzaG93TW9kYWwsIHNldFNob3dNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzdWJzY3JpYmVyTmFtZSwgc2V0U3Vic2NyaWJlck5hbWVdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbc3Vic2NyaWJlckVtYWlsLCBzZXRTdWJzY3JpYmVyRW1haWxdID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbaXNTdWJtaXR0aW5nLCBzZXRJc1N1Ym1pdHRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IGFzeW5jIChlOiBSZWFjdC5Gb3JtRXZlbnQpID0+IHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgc2V0SXNTdWJtaXR0aW5nKHRydWUpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAgIC5mcm9tKFwic3Vic2NyaWJlcnNcIilcbiAgICAgICAgLnVwc2VydChcbiAgICAgICAgICBbeyBuYW1lOiBzdWJzY3JpYmVyTmFtZSwgZW1haWw6IHN1YnNjcmliZXJFbWFpbCB9XSxcbiAgICAgICAgICB7IG9uQ29uZmxpY3Q6ICdlbWFpbCcgfVxuICAgICAgICApO1xuXG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9XG5cbiAgICAgIGFsZXJ0KFwiWW91J3JlIG5vdyBzdWJzY3JpYmVkIVwiKTtcbiAgICAgIHNldFNob3dNb2RhbChmYWxzZSk7XG4gICAgICBzZXRTdWJzY3JpYmVyRW1haWwoXCJcIik7XG4gICAgICBzZXRTdWJzY3JpYmVyTmFtZShcIlwiKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIlN1cGFiYXNlIGVycm9yOlwiLCBlcnJvcik7XG4gICAgICBhbGVydChcIkVycm9yOiBcIiArIChlcnJvciBhcyBFcnJvcikubWVzc2FnZSk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldElzU3VibWl0dGluZyhmYWxzZSk7XG4gICAgfVxuICB9O1xuXG4gIGlmICghc2hvd05vdGlmaWNhdGlvbkJlbGwpIHJldHVybiBudWxsO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJmaXhlZCBib3R0b20tNiByaWdodC02IGZsZXggaXRlbXMtY2VudGVyIGdhcC00IHotNTBcIj5cbiAgICAgIDxUaGVtZVRvZ2dsZSBpc0Rhcms9e2lzRGFya30gdG9nZ2xlVGhlbWU9e3RvZ2dsZVRoZW1lfSAvPlxuICAgICAgXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlXCI+XG4gICAgICAgIDxidXR0b24gXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2hvd01vZGFsKHRydWUpfSBcbiAgICAgICAgICBhcmlhLWxhYmVsPVwiU3Vic2NyaWJlIHRvIE5vdGlmaWNhdGlvbnNcIiBcbiAgICAgICAgICBjbGFzc05hbWU9XCJwLTMgYmctYmx1ZS02MDAgdGV4dC13aGl0ZSByb3VuZGVkLWZ1bGwgc2hhZG93LWxnIGhvdmVyOmJnLWJsdWUtNzAwIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgPlxuICAgICAgICAgIDxCZWxsIHNpemU9ezI0fSAvPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBcbiAgICAgICAgICBjbGFzc05hbWU9XCJhYnNvbHV0ZSAtdG9wLTIgLXJpZ2h0LTIgdy01IGgtNSBiZy1yZWQtNTAwIHRleHQtd2hpdGUgcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCIgXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2hvd05vdGlmaWNhdGlvbkJlbGwoZmFsc2UpfSBcbiAgICAgICAgICBhcmlhLWxhYmVsPVwiQ2xvc2Ugbm90aWZpY2F0aW9uIGJlbGxcIlxuICAgICAgICA+XG4gICAgICAgICAgPFggc2l6ZT17MTJ9IC8+XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHtzaG93TW9kYWwgJiYgKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsLW92ZXJsYXlcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1vZGFsXCI+XG4gICAgICAgICAgICA8aDIgY2xhc3NOYW1lPVwibW9kYWwtdGl0bGVcIj5HZXQgTm90aWZpZWQgb2YgTmV3IFBvc3RzPC9oMj5cbiAgICAgICAgICAgIDxmb3JtIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9PlxuICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJZb3VyIE5hbWVcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXtzdWJzY3JpYmVyTmFtZX1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFN1YnNjcmliZXJOYW1lKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICAgICAgICByZXF1aXJlZFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1vZGFsLWlucHV0XCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgdHlwZT1cImVtYWlsXCJcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cIllvdXIgRW1haWxcIlxuICAgICAgICAgICAgICAgIHZhbHVlPXtzdWJzY3JpYmVyRW1haWx9XG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRTdWJzY3JpYmVyRW1haWwoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwibW9kYWwtaW5wdXRcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJtb2RhbC1idXR0b25cIiBkaXNhYmxlZD17aXNTdWJtaXR0aW5nfT5cbiAgICAgICAgICAgICAgICB7aXNTdWJtaXR0aW5nID8gJ1N1Ym1pdHRpbmcuLi4nIDogJ05vdGlmeSBNZSd9XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9XCJtb2RhbC1jbG9zZVwiIG9uQ2xpY2s9eygpID0+IHNldFNob3dNb2RhbChmYWxzZSl9PlxuICAgICAgICAgICAgICAgIENhbmNlbFxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZm9ybT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uQmVsbDsiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsIkJlbGwiLCJYIiwic3VwYWJhc2UiLCJUaGVtZVRvZ2dsZSIsIk5vdGlmaWNhdGlvbkJlbGwiLCJpc0RhcmsiLCJ0b2dnbGVUaGVtZSIsInNob3dOb3RpZmljYXRpb25CZWxsIiwic2V0U2hvd05vdGlmaWNhdGlvbkJlbGwiLCJzaG93TW9kYWwiLCJzZXRTaG93TW9kYWwiLCJzdWJzY3JpYmVyTmFtZSIsInNldFN1YnNjcmliZXJOYW1lIiwic3Vic2NyaWJlckVtYWlsIiwic2V0U3Vic2NyaWJlckVtYWlsIiwiaXNTdWJtaXR0aW5nIiwic2V0SXNTdWJtaXR0aW5nIiwiaGFuZGxlU3VibWl0IiwiZSIsInByZXZlbnREZWZhdWx0IiwiZXJyb3IiLCJmcm9tIiwidXBzZXJ0IiwibmFtZSIsImVtYWlsIiwib25Db25mbGljdCIsImFsZXJ0IiwiY29uc29sZSIsIm1lc3NhZ2UiLCJkaXYiLCJjbGFzc05hbWUiLCJidXR0b24iLCJvbkNsaWNrIiwiYXJpYS1sYWJlbCIsInNpemUiLCJoMiIsImZvcm0iLCJvblN1Ym1pdCIsImlucHV0IiwidHlwZSIsInBsYWNlaG9sZGVyIiwidmFsdWUiLCJvbkNoYW5nZSIsInRhcmdldCIsInJlcXVpcmVkIiwiZGlzYWJsZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/NotificationBell.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/ThemeToggle.tsx":
/*!****************************************!*\
  !*** ./src/components/ThemeToggle.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Moon_Sun_lucide_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Moon,Sun!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/sun.js\");\n/* harmony import */ var _barrel_optimize_names_Moon_Sun_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Moon,Sun!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/moon.js\");\n\n\n\nconst ThemeToggle = (param)=>{\n    let { isDark, toggleTheme } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n        onClick: toggleTheme,\n        className: \"p-3 bg-blue-600 text-white rounded-full shadow-lg hover:bg-blue-700 transition-colors\",\n        \"aria-label\": isDark ? \"Switch to light mode\" : \"Switch to dark mode\",\n        children: isDark ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Moon_Sun_lucide_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            className: \"w-6 h-6\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\ThemeToggle.tsx\",\n            lineNumber: 17,\n            columnNumber: 9\n        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Moon_Sun_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            className: \"w-6 h-6\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\ThemeToggle.tsx\",\n            lineNumber: 19,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\ThemeToggle.tsx\",\n        lineNumber: 11,\n        columnNumber: 5\n    }, undefined);\n};\n_c = ThemeToggle;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ThemeToggle);\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL1RoZW1lVG9nZ2xlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBCO0FBQ2U7QUFPekMsTUFBTUcsY0FBMEM7UUFBQyxFQUFFQyxNQUFNLEVBQUVDLFdBQVcsRUFBRTtJQUN0RSxxQkFDRSw4REFBQ0M7UUFDQ0MsU0FBU0Y7UUFDVEcsV0FBVTtRQUNWQyxjQUFZTCxTQUFTLHlCQUF5QjtrQkFFN0NBLHVCQUNDLDhEQUFDRixvRkFBR0E7WUFBQ00sV0FBVTs7Ozs7c0NBRWYsOERBQUNQLG9GQUFJQTtZQUFDTyxXQUFVOzs7Ozs7Ozs7OztBQUl4QjtLQWRNTDtBQWdCTiwrREFBZUEsV0FBV0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvY29tcG9uZW50cy9UaGVtZVRvZ2dsZS50c3g/NTQwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTW9vbiwgU3VuIH0gZnJvbSAnbHVjaWRlLXJlYWN0JztcblxuaW50ZXJmYWNlIFRoZW1lVG9nZ2xlUHJvcHMge1xuICBpc0Rhcms6IGJvb2xlYW47XG4gIHRvZ2dsZVRoZW1lOiAoKSA9PiB2b2lkO1xufVxuXG5jb25zdCBUaGVtZVRvZ2dsZTogUmVhY3QuRkM8VGhlbWVUb2dnbGVQcm9wcz4gPSAoeyBpc0RhcmssIHRvZ2dsZVRoZW1lIH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICBvbkNsaWNrPXt0b2dnbGVUaGVtZX1cbiAgICAgIGNsYXNzTmFtZT1cInAtMyBiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtZnVsbCBzaGFkb3ctbGcgaG92ZXI6YmctYmx1ZS03MDAgdHJhbnNpdGlvbi1jb2xvcnNcIlxuICAgICAgYXJpYS1sYWJlbD17aXNEYXJrID8gJ1N3aXRjaCB0byBsaWdodCBtb2RlJyA6ICdTd2l0Y2ggdG8gZGFyayBtb2RlJ31cbiAgICA+XG4gICAgICB7aXNEYXJrID8gKFxuICAgICAgICA8U3VuIGNsYXNzTmFtZT1cInctNiBoLTZcIiAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPE1vb24gY2xhc3NOYW1lPVwidy02IGgtNlwiIC8+XG4gICAgICApfVxuICAgIDwvYnV0dG9uPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgVGhlbWVUb2dnbGU7Il0sIm5hbWVzIjpbIlJlYWN0IiwiTW9vbiIsIlN1biIsIlRoZW1lVG9nZ2xlIiwiaXNEYXJrIiwidG9nZ2xlVGhlbWUiLCJidXR0b24iLCJvbkNsaWNrIiwiY2xhc3NOYW1lIiwiYXJpYS1sYWJlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ThemeToggle.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/pages/admin/Dashboard.tsx":
/*!**************************************************!*\
  !*** ./src/components/pages/admin/Dashboard.tsx ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _components_Layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/Layout */ \"(app-pages-browser)/./src/components/Layout.tsx\");\n/* harmony import */ var react_quill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-quill */ \"(app-pages-browser)/./node_modules/react-quill/lib/index.js\");\n/* harmony import */ var react_quill__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_quill__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_quill_dist_quill_snow_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-quill/dist/quill.snow.css */ \"(app-pages-browser)/./node_modules/react-quill/dist/quill.snow.css\");\n/* harmony import */ var _barrel_optimize_names_Pencil_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Pencil,Trash2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/pencil.js\");\n/* harmony import */ var _barrel_optimize_names_Pencil_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Pencil,Trash2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/trash-2.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/link */ \"(app-pages-browser)/./node_modules/next/dist/api/link.js\");\n/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/styles/styles.css */ \"(app-pages-browser)/./src/styles/styles.css\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction Dashboard() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [content, setContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [image, setImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [uploading, setUploading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [imagePreview, setImagePreview] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [posts, setPosts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [isLoadingPosts, setIsLoadingPosts] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [editModalOpen, setEditModalOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [editPostId, setEditPostId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [editTitle, setEditTitle] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [editContent, setEditContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [editImage, setEditImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [editImagePreview, setEditImagePreview] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkAuth();\n        fetchPosts();\n    }, []);\n    const checkAuth = async ()=>{\n        const { data: { session }, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.getSession();\n        if (!session || error) {\n            router.push(\"/admin/login\");\n        }\n    };\n    const fetchPosts = async ()=>{\n        setIsLoadingPosts(true);\n        try {\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"posts\").select(\"*\").order(\"created_at\", {\n                ascending: false\n            });\n            if (error) throw error;\n            setPosts(data || []);\n        } catch (error) {\n            console.error(\"Error fetching posts:\", error);\n        } finally{\n            setIsLoadingPosts(false);\n        }\n    };\n    const handleImageChange = function(e) {\n        let isEdit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n        var _e_target_files;\n        const file = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n        if (file) {\n            if (!file.type.startsWith(\"image/\")) {\n                alert(\"Please upload an image file\");\n                return;\n            }\n            if (file.size > 5 * 1024 * 1024) {\n                alert(\"Image must be smaller than 5MB\");\n                return;\n            }\n            if (isEdit) {\n                setEditImage(file);\n                setEditImagePreview(URL.createObjectURL(file));\n            } else {\n                setImage(file);\n                setImagePreview(URL.createObjectURL(file));\n            }\n        }\n    };\n    const uploadImage = async (file)=>{\n        const fileExt = file.name.split(\".\").pop();\n        const fileName = \"\".concat(Date.now(), \".\").concat(fileExt);\n        const { data, error: uploadError } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.storage.from(\"blog-images\").upload(fileName, file);\n        if (uploadError) throw uploadError;\n        const { data: { publicUrl } } = _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.storage.from(\"blog-images\").getPublicUrl(data.path);\n        return publicUrl;\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (!title || !content) {\n            alert(\"Title and content are required!\");\n            return;\n        }\n        setUploading(true);\n        try {\n            let imageUrl = null;\n            if (image) {\n                imageUrl = await uploadImage(image);\n            }\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"posts\").insert([\n                {\n                    title,\n                    content,\n                    image_url: imageUrl,\n                    likes: 0\n                }\n            ]);\n            if (error) throw error;\n            alert(\"Post created successfully!\");\n            setTitle(\"\");\n            setContent(\"\");\n            setImage(null);\n            setImagePreview(null);\n            fetchPosts();\n        } catch (error) {\n            console.error(\"Error:\", error);\n            alert(\"Failed to create post\");\n        } finally{\n            setUploading(false);\n        }\n    };\n    const deletePost = async (postId)=>{\n        if (!confirm(\"Are you sure you want to delete this post?\")) return;\n        try {\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"posts\").delete().eq(\"id\", postId);\n            if (error) throw error;\n            alert(\"Post deleted successfully\");\n            fetchPosts();\n        } catch (error) {\n            console.error(\"Error deleting post:\", error);\n            alert(\"Failed to delete post\");\n        }\n    };\n    const handleLogout = async ()=>{\n        await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.auth.signOut();\n        router.push(\"/admin/login\");\n    };\n    const quillModules = {\n        toolbar: [\n            [\n                {\n                    header: [\n                        1,\n                        2,\n                        3,\n                        false\n                    ]\n                }\n            ],\n            [\n                \"bold\",\n                \"italic\",\n                \"underline\"\n            ],\n            [\n                {\n                    size: []\n                }\n            ],\n            [\n                {\n                    align: []\n                }\n            ],\n            [\n                \"link\"\n            ],\n            [\n                \"clean\"\n            ]\n        ]\n    };\n    const quillFormats = [\n        \"header\",\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"size\",\n        \"align\",\n        \"link\"\n    ];\n    const openEditModal = (post)=>{\n        setEditPostId(post.id);\n        setEditTitle(post.title);\n        setEditContent(post.content);\n        setEditImagePreview(post.image_url || null);\n        setEditImage(null);\n        setEditModalOpen(true);\n    };\n    const handleEditSubmit = async (e)=>{\n        e.preventDefault();\n        if (!editTitle || !editContent) {\n            alert(\"Title and content are required!\");\n            return;\n        }\n        try {\n            let imageUrl = editImagePreview;\n            if (editImage) {\n                imageUrl = await uploadImage(editImage);\n            }\n            const { error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_3__.supabase.from(\"posts\").update({\n                title: editTitle,\n                content: editContent,\n                image_url: imageUrl\n            }).eq(\"id\", editPostId);\n            if (error) throw error;\n            alert(\"Post updated successfully!\");\n            setEditModalOpen(false);\n            fetchPosts();\n        } catch (error) {\n            console.error(\"Error updating post:\", error);\n            alert(\"Failed to update post\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Layout__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-4xl mx-auto px-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex justify-between items-center mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: \"text-2xl font-bold\",\n                                children: \"Admin Dashboard\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 217,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"space-x-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                        href: \"/admin/ads\",\n                                        className: \"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\",\n                                        children: \"Manage Ads\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 219,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_link__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                        href: \"/admin/upload-gallery\",\n                                        className: \"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\",\n                                        children: \"Manage Gallery\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 222,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: handleLogout,\n                                        className: \"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700\",\n                                        children: \"Logout\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 225,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 218,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                        lineNumber: 216,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-lg shadow-md p-6 mb-8\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-xl font-semibold mb-4\",\n                                children: \"Create New Post\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 235,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                                onSubmit: handleSubmit,\n                                className: \"space-y-4\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                                                children: \"Title\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 238,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_quill__WEBPACK_IMPORTED_MODULE_5___default()), {\n                                                value: title,\n                                                onChange: setTitle,\n                                                modules: quillModules,\n                                                formats: quillFormats,\n                                                placeholder: \"Enter post title...\",\n                                                className: \"bg-white\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 241,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 237,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                                                children: \"Content\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 252,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_quill__WEBPACK_IMPORTED_MODULE_5___default()), {\n                                                value: content,\n                                                onChange: setContent,\n                                                modules: quillModules,\n                                                formats: quillFormats,\n                                                placeholder: \"Write your post content...\",\n                                                className: \"bg-white min-h-[200px]\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 255,\n                                                columnNumber: 15\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 251,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                                                children: \"Featured Image\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 266,\n                                                columnNumber: 15\n                                            }, this),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                type: \"file\",\n                                                onChange: (e)=>handleImageChange(e),\n                                                accept: \"image/*\",\n                                                className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 269,\n                                                columnNumber: 15\n                                            }, this),\n                                            imagePreview && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                                src: imagePreview,\n                                                alt: \"Preview\",\n                                                className: \"mt-4 max-h-48 rounded\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 276,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 265,\n                                        columnNumber: 13\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        type: \"submit\",\n                                        disabled: uploading,\n                                        className: \"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 disabled:opacity-50\",\n                                        children: uploading ? \"Publishing...\" : \"Publish Post\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                        lineNumber: 280,\n                                        columnNumber: 13\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                        lineNumber: 234,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"bg-white rounded-lg shadow-md p-6\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                className: \"text-xl font-semibold mb-4\",\n                                children: \"Manage Posts\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 291,\n                                columnNumber: 11\n                            }, this),\n                            isLoadingPosts ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"Loading posts...\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 293,\n                                columnNumber: 13\n                            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"overflow-x-auto\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                                    className: \"min-w-full divide-y divide-gray-200\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                            className: \"bg-gray-50\",\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                                        children: \"Title\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                        lineNumber: 299,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                                        children: \"Created At\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                        lineNumber: 302,\n                                                        columnNumber: 21\n                                                    }, this),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                                        children: \"Actions\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                        lineNumber: 305,\n                                                        columnNumber: 21\n                                                    }, this)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                lineNumber: 298,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 297,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                            className: \"bg-white divide-y divide-gray-200\",\n                                            children: posts.map((post)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"px-6 py-4 whitespace-nowrap\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"text-sm text-gray-900\",\n                                                                children: post.title.length > 20 ? post.title.slice(0, 20) + \"...\" : post.title\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                lineNumber: 314,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                            lineNumber: 313,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"px-6 py-4 whitespace-nowrap\",\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                className: \"text-sm text-gray-500\",\n                                                                children: new Date(post.created_at).toLocaleDateString()\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                lineNumber: 319,\n                                                                columnNumber: 25\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                            lineNumber: 318,\n                                                            columnNumber: 23\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                            className: \"px-6 py-4 whitespace-nowrap text-sm font-medium flex gap-4\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                    onClick: ()=>openEditModal(post),\n                                                                    className: \"text-blue-600 hover:text-blue-900\",\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pencil_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                                                        size: 18\n                                                                    }, void 0, false, {\n                                                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                        lineNumber: 325,\n                                                                        columnNumber: 27\n                                                                    }, this)\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                    lineNumber: 324,\n                                                                    columnNumber: 25\n                                                                }, this),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                    onClick: ()=>deletePost(post.id),\n                                                                    className: \"text-red-600 hover:text-red-900\",\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Pencil_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                                                        size: 18\n                                                                    }, void 0, false, {\n                                                                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                        lineNumber: 328,\n                                                                        columnNumber: 27\n                                                                    }, this)\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                                    lineNumber: 327,\n                                                                    columnNumber: 25\n                                                                }, this)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                            lineNumber: 323,\n                                                            columnNumber: 23\n                                                        }, this)\n                                                    ]\n                                                }, post.id, true, {\n                                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                                    lineNumber: 312,\n                                                    columnNumber: 21\n                                                }, this))\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 310,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                    lineNumber: 296,\n                                    columnNumber: 15\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                lineNumber: 295,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                        lineNumber: 290,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                lineNumber: 215,\n                columnNumber: 7\n            }, this),\n            editModalOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 overflow-y-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative bg-white rounded-lg shadow-xl w-full max-w-2xl mx-auto my-8 p-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setEditModalOpen(false),\n                            className: \"absolute top-2 right-2 text-gray-600 hover:text-red-600 text-xl font-bold\",\n                            children: \"\\xd7\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                            lineNumber: 343,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-xl font-semibold mb-4\",\n                            children: \"Edit Post\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                            lineNumber: 350,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"space-y-4 max-h-[75vh] overflow-y-auto pr-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                            children: \"Title\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 354,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_quill__WEBPACK_IMPORTED_MODULE_5___default()), {\n                                            value: editTitle,\n                                            onChange: setEditTitle,\n                                            modules: quillModules,\n                                            formats: quillFormats,\n                                            placeholder: \"Edit post title...\",\n                                            className: \"bg-white\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 355,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                    lineNumber: 353,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                            children: \"Content\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 366,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((react_quill__WEBPACK_IMPORTED_MODULE_5___default()), {\n                                            value: editContent,\n                                            onChange: setEditContent,\n                                            modules: quillModules,\n                                            formats: quillFormats,\n                                            placeholder: \"Edit post content...\",\n                                            className: \"bg-white min-h-[200px]\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 367,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                    lineNumber: 365,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                            children: \"Image\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 378,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: \"file\",\n                                            onChange: (e)=>handleImageChange(e, true),\n                                            accept: \"image/*\",\n                                            className: \"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 379,\n                                            columnNumber: 17\n                                        }, this),\n                                        editImagePreview && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                                            src: editImagePreview,\n                                            alt: \"Preview\",\n                                            className: \"mt-4 max-h-48 rounded\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                            lineNumber: 386,\n                                            columnNumber: 19\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                    lineNumber: 377,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: handleEditSubmit,\n                                    className: \"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\",\n                                    children: \"Save Changes\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                                    lineNumber: 390,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                            lineNumber: 352,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                    lineNumber: 342,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n                lineNumber: 341,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\DELL\\\\Downloads\\\\blog next router\\\\src\\\\components\\\\pages\\\\admin\\\\Dashboard.tsx\",\n        lineNumber: 214,\n        columnNumber: 5\n    }, this);\n}\n_s(Dashboard, \"xArUO1AxS160B8wdC8vOuDV4q5E=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter\n    ];\n});\n_c = Dashboard;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/pages/admin/Dashboard.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://sarkknednewghvkyrpig.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNhcmtrbmVkbmV3Z2h2a3lycGlnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI5MTUzMjYsImV4cCI6MjA1ODQ5MTMyNn0.4es8oRtYHXonivE6h-GRV9ZDSmQYMugzHzFXCax_3BU\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvc3VwYWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFFckQsTUFBTUMsY0FBY0MsMENBQW9DO0FBQ3hELE1BQU1HLGtCQUFrQkgsa05BQXlDO0FBRTFELE1BQU1LLFdBQVdQLG1FQUFZQSxDQUFDQyxhQUFhSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9zdXBhYmFzZS50cz8wNmUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUNsaWVudCB9IGZyb20gJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcyc7XHJcblxyXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCE7XHJcbmNvbnN0IHN1cGFiYXNlQW5vbktleSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZITtcclxuXHJcbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KTsiXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/supabase.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs ***!
  \******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PostgrestBuilder: function() { return /* binding */ PostgrestBuilder; },\n/* harmony export */   PostgrestClient: function() { return /* binding */ PostgrestClient; },\n/* harmony export */   PostgrestError: function() { return /* binding */ PostgrestError; },\n/* harmony export */   PostgrestFilterBuilder: function() { return /* binding */ PostgrestFilterBuilder; },\n/* harmony export */   PostgrestQueryBuilder: function() { return /* binding */ PostgrestQueryBuilder; },\n/* harmony export */   PostgrestTransformBuilder: function() { return /* binding */ PostgrestTransformBuilder; }\n/* harmony export */ });\n/* harmony import */ var _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cjs/index.js */ \"(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/cjs/index.js\");\n\nconst { PostgrestClient, PostgrestQueryBuilder, PostgrestFilterBuilder, PostgrestTransformBuilder, PostgrestBuilder, PostgrestError } = _cjs_index_js__WEBPACK_IMPORTED_MODULE_0__;\n\n// compatibility with CJS output\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    PostgrestClient,\n    PostgrestQueryBuilder,\n    PostgrestFilterBuilder,\n    PostgrestTransformBuilder,\n    PostgrestBuilder,\n    PostgrestError\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3VwYWJhc2UvcG9zdGdyZXN0LWpzL2Rpc3QvZXNtL3dyYXBwZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUM7QUFDbkMsTUFBTSxFQUNKQyxlQUFlLEVBQ2ZDLHFCQUFxQixFQUNyQkMsc0JBQXNCLEVBQ3RCQyx5QkFBeUIsRUFDekJDLGdCQUFnQixFQUNoQkMsY0FBYyxFQUNmLEdBQUdOLDBDQUFLQTtBQVNSO0FBRUQsZ0NBQWdDO0FBQ2hDLCtEQUFlO0lBQ2JDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0lBQ0FDO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN1cGFiYXNlL3Bvc3RncmVzdC1qcy9kaXN0L2VzbS93cmFwcGVyLm1qcz9mOWQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBpbmRleCBmcm9tICcuLi9janMvaW5kZXguanMnXG5jb25zdCB7XG4gIFBvc3RncmVzdENsaWVudCxcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxuICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyLFxuICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyLFxuICBQb3N0Z3Jlc3RCdWlsZGVyLFxuICBQb3N0Z3Jlc3RFcnJvcixcbn0gPSBpbmRleFxuXG5leHBvcnQge1xuICBQb3N0Z3Jlc3RCdWlsZGVyLFxuICBQb3N0Z3Jlc3RDbGllbnQsXG4gIFBvc3RncmVzdEZpbHRlckJ1aWxkZXIsXG4gIFBvc3RncmVzdFF1ZXJ5QnVpbGRlcixcbiAgUG9zdGdyZXN0VHJhbnNmb3JtQnVpbGRlcixcbiAgUG9zdGdyZXN0RXJyb3IsXG59XG5cbi8vIGNvbXBhdGliaWxpdHkgd2l0aCBDSlMgb3V0cHV0XG5leHBvcnQgZGVmYXVsdCB7XG4gIFBvc3RncmVzdENsaWVudCxcbiAgUG9zdGdyZXN0UXVlcnlCdWlsZGVyLFxuICBQb3N0Z3Jlc3RGaWx0ZXJCdWlsZGVyLFxuICBQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyLFxuICBQb3N0Z3Jlc3RCdWlsZGVyLFxuICBQb3N0Z3Jlc3RFcnJvcixcbn1cbiJdLCJuYW1lcyI6WyJpbmRleCIsIlBvc3RncmVzdENsaWVudCIsIlBvc3RncmVzdFF1ZXJ5QnVpbGRlciIsIlBvc3RncmVzdEZpbHRlckJ1aWxkZXIiLCJQb3N0Z3Jlc3RUcmFuc2Zvcm1CdWlsZGVyIiwiUG9zdGdyZXN0QnVpbGRlciIsIlBvc3RncmVzdEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDELL%5CDownloads%5Cblog%20next%20router%5Csrc%5Capp%5Cadmin%5Cdashboard%5Cpage.tsx&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);